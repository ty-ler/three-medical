{
  "version": 3,
  "sources": ["../../../../../node_modules/promise-file-reader/PromiseFileReader.js", "../../../../../node_modules/webworker-promise/src/tiny-emitter.js", "../../../../../node_modules/webworker-promise/src/index.js"],
  "sourcesContent": ["function readAs (file, as) {\r\n  if (!(file instanceof Blob)) {\r\n    throw new TypeError('Must be a File or Blob')\r\n  }\r\n  return new Promise(function(resolve, reject) {\r\n    var reader = new FileReader()\r\n    reader.onload = function(e) { resolve(e.target.result) }\r\n    reader.onerror = function(e) { reject(new Error('Error reading' + file.name + ': ' + e.target.result)) }\r\n    reader['readAs' + as](file)\r\n  })\r\n}\r\n\r\nfunction readAsDataURL (file) {\r\n  return readAs(file, 'DataURL')\r\n}\r\n\r\nfunction readAsText (file) {\r\n  return readAs(file, 'Text')\r\n}\r\n\r\nfunction readAsArrayBuffer (file) {\r\n  return readAs(file, 'ArrayBuffer')\r\n}\r\n\r\nmodule.exports = {\r\n  readAsDataURL: readAsDataURL,\r\n  readAsText: readAsText,\r\n  readAsArrayBuffer: readAsArrayBuffer,\r\n}\r\n", "class TinyEmitter {\n  constructor() {\n    Object.defineProperty(this, '__listeners', {\n      value: {},\n      enumerable: false,\n      writable: false\n    });\n  }\n\n  emit(eventName, ...args) {\n    if(!this.__listeners[eventName])\n      return this;\n\n    for(const handler of this.__listeners[eventName]) {\n      handler(...args);\n    }\n\n    return this;\n  }\n\n  once(eventName, handler) {\n    const once = (...args) => {\n      this.off(eventName, once);\n      handler(...args);\n    };\n\n    return this.on(eventName, once);\n  }\n\n  on(eventName, handler) {\n    if(!this.__listeners[eventName])\n      this.__listeners[eventName] = [];\n\n    this.__listeners[eventName].push(handler);\n\n    return this;\n  }\n\n  off(eventName, handler) {\n    if(handler)\n      this.__listeners[eventName] = this.__listeners[eventName].filter(h => h !== handler);\n    else\n      this.__listeners[eventName] = [];\n\n    return this;\n  }\n}\n\nmodule.exports = TinyEmitter;\n", "const TinyEmitter = require('./tiny-emitter');\n\nconst MESSAGE_RESULT = 0;\nconst MESSAGE_EVENT = 1;\n\nconst RESULT_ERROR = 0;\nconst RESULT_SUCCESS = 1;\n\nclass Worker extends TinyEmitter {\n  /**\n   *\n   * @param worker {Worker}\n   */\n  constructor(worker) {\n    super();\n\n    this._messageId = 1;\n    this._messages = new Map();\n\n    this._worker = worker;\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._id = Math.ceil(Math.random() * 10000000);\n  }\n\n  terminate() {\n    this._worker.terminate();\n  }\n\n  /**\n   * return true if there is no unresolved jobs\n   * @returns {boolean}\n   */\n  isFree() {\n    return this._messages.size === 0;\n  }\n\n  jobsLength() {\n    return this._messages.size;\n  }\n\n  /**\n   * @param operationName string\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  exec(operationName, data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data, operationName], transferable || []);\n    });\n  }\n\n  /**\n   *\n   * @param data any\n   * @param transferable array\n   * @param onEvent function\n   * @returns {Promise}\n   */\n  postMessage(data = null, transferable = [], onEvent) {\n    return new Promise((res, rej) => {\n      const messageId = this._messageId++;\n      this._messages.set(messageId, [res, rej, onEvent]);\n      this._worker.postMessage([messageId, data], transferable || []);\n    });\n  }\n\n  emit(eventName, ...args) {\n    this._worker.postMessage({eventName, args});\n  }\n\n  _onMessage(e) {\n    //if we got usual event, just emit it locally\n    if(!Array.isArray(e.data) && e.data.eventName) {\n      return super.emit(e.data.eventName, ...e.data.args);\n    }\n\n    const [type, ...args] = e.data;\n\n    if(type === MESSAGE_EVENT)\n      this._onEvent(...args);\n    else if(type === MESSAGE_RESULT)\n      this._onResult(...args);\n    else\n      throw new Error(`Wrong message type '${type}'`);\n  }\n\n  _onResult(messageId, success, payload) {\n    const [res, rej] = this._messages.get(messageId);\n    this._messages.delete(messageId);\n\n    return success === RESULT_SUCCESS ? res(payload) : rej(payload);\n  }\n\n  _onEvent(messageId, eventName, data) {\n    const [,,onEvent] = this._messages.get(messageId);\n\n    if(onEvent) {\n      onEvent(eventName, data);\n    }\n  }\n\n}\n\nmodule.exports = Worker;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,oBAAiB,MAAM,IAAI;AACzB,UAAI,CAAE,iBAAgB,OAAO;AAC3B,cAAM,IAAI,UAAU,wBAAwB;AAAA,MAC9C;AACA,aAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AAC3C,YAAI,SAAS,IAAI,WAAW;AAC5B,eAAO,SAAS,SAAS,GAAG;AAAE,kBAAQ,EAAE,OAAO,MAAM;AAAA,QAAE;AACvD,eAAO,UAAU,SAAS,GAAG;AAAE,iBAAO,IAAI,MAAM,kBAAkB,KAAK,OAAO,OAAO,EAAE,OAAO,MAAM,CAAC;AAAA,QAAE;AACvG,eAAO,WAAW,IAAI,IAAI;AAAA,MAC5B,CAAC;AAAA,IACH;AAEA,2BAAwB,MAAM;AAC5B,aAAO,OAAO,MAAM,SAAS;AAAA,IAC/B;AAEA,wBAAqB,MAAM;AACzB,aAAO,OAAO,MAAM,MAAM;AAAA,IAC5B;AAEA,+BAA4B,MAAM;AAChC,aAAO,OAAO,MAAM,aAAa;AAAA,IACnC;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC5BA;AAAA;AAAA,QAAM,cAAN,MAAkB;AAAA,MAChB,cAAc;AACZ,eAAO,eAAe,MAAM,eAAe;AAAA,UACzC,OAAO,CAAC;AAAA,UACR,YAAY;AAAA,UACZ,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,MAEA,KAAK,cAAc,MAAM;AACvB,YAAG,CAAC,KAAK,YAAY;AACnB,iBAAO;AAET,mBAAU,WAAW,KAAK,YAAY,YAAY;AAChD,kBAAQ,GAAG,IAAI;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,KAAK,WAAW,SAAS;AACvB,cAAM,OAAO,IAAI,SAAS;AACxB,eAAK,IAAI,WAAW,IAAI;AACxB,kBAAQ,GAAG,IAAI;AAAA,QACjB;AAEA,eAAO,KAAK,GAAG,WAAW,IAAI;AAAA,MAChC;AAAA,MAEA,GAAG,WAAW,SAAS;AACrB,YAAG,CAAC,KAAK,YAAY;AACnB,eAAK,YAAY,aAAa,CAAC;AAEjC,aAAK,YAAY,WAAW,KAAK,OAAO;AAExC,eAAO;AAAA,MACT;AAAA,MAEA,IAAI,WAAW,SAAS;AACtB,YAAG;AACD,eAAK,YAAY,aAAa,KAAK,YAAY,WAAW,OAAO,OAAK,MAAM,OAAO;AAAA;AAEnF,eAAK,YAAY,aAAa,CAAC;AAEjC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChDjB;AAAA;AAAA,QAAM,cAAc;AAEpB,QAAM,iBAAiB;AACvB,QAAM,gBAAgB;AAGtB,QAAM,iBAAiB;AAEvB,QAAM,SAAN,cAAqB,YAAY;AAAA,MAK/B,YAAY,QAAQ;AAClB,cAAM;AAEN,aAAK,aAAa;AAClB,aAAK,YAAY,oBAAI,IAAI;AAEzB,aAAK,UAAU;AACf,aAAK,QAAQ,YAAY,KAAK,WAAW,KAAK,IAAI;AAClD,aAAK,MAAM,KAAK,KAAK,KAAK,OAAO,IAAI,GAAQ;AAAA,MAC/C;AAAA,MAEA,YAAY;AACV,aAAK,QAAQ,UAAU;AAAA,MACzB;AAAA,MAMA,SAAS;AACP,eAAO,KAAK,UAAU,SAAS;AAAA,MACjC;AAAA,MAEA,aAAa;AACX,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA,MASA,KAAK,eAAe,OAAO,MAAM,eAAe,CAAC,GAAG,SAAS;AAC3D,eAAO,IAAI,QAAQ,CAAC,KAAK,QAAQ;AAC/B,gBAAM,YAAY,KAAK;AACvB,eAAK,UAAU,IAAI,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC;AACjD,eAAK,QAAQ,YAAY,CAAC,WAAW,MAAM,aAAa,GAAG,gBAAgB,CAAC,CAAC;AAAA,QAC/E,CAAC;AAAA,MACH;AAAA,MASA,YAAY,OAAO,MAAM,eAAe,CAAC,GAAG,SAAS;AACnD,eAAO,IAAI,QAAQ,CAAC,KAAK,QAAQ;AAC/B,gBAAM,YAAY,KAAK;AACvB,eAAK,UAAU,IAAI,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC;AACjD,eAAK,QAAQ,YAAY,CAAC,WAAW,IAAI,GAAG,gBAAgB,CAAC,CAAC;AAAA,QAChE,CAAC;AAAA,MACH;AAAA,MAEA,KAAK,cAAc,MAAM;AACvB,aAAK,QAAQ,YAAY,EAAC,WAAW,KAAI,CAAC;AAAA,MAC5C;AAAA,MAEA,WAAW,GAAG;AAEZ,YAAG,CAAC,MAAM,QAAQ,EAAE,IAAI,KAAK,EAAE,KAAK,WAAW;AAC7C,iBAAO,MAAM,KAAK,EAAE,KAAK,WAAW,GAAG,EAAE,KAAK,IAAI;AAAA,QACpD;AAEA,cAAM,CAAC,SAAS,QAAQ,EAAE;AAE1B,YAAG,SAAS;AACV,eAAK,SAAS,GAAG,IAAI;AAAA,iBACf,SAAS;AACf,eAAK,UAAU,GAAG,IAAI;AAAA;AAEtB,gBAAM,IAAI,MAAM,uBAAuB,OAAO;AAAA,MAClD;AAAA,MAEA,UAAU,WAAW,SAAS,SAAS;AACrC,cAAM,CAAC,KAAK,OAAO,KAAK,UAAU,IAAI,SAAS;AAC/C,aAAK,UAAU,OAAO,SAAS;AAE/B,eAAO,YAAY,iBAAiB,IAAI,OAAO,IAAI,IAAI,OAAO;AAAA,MAChE;AAAA,MAEA,SAAS,WAAW,WAAW,MAAM;AACnC,cAAM,CAAC,EAAC,EAAC,WAAW,KAAK,UAAU,IAAI,SAAS;AAEhD,YAAG,SAAS;AACV,kBAAQ,WAAW,IAAI;AAAA,QACzB;AAAA,MACF;AAAA,IAEF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
