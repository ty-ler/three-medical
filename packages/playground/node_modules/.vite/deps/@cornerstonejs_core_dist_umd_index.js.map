{
  "version": 3,
  "sources": ["../../../../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/slicedToArray.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/construct.js", "../../../../../node_modules/object-keys/isArguments.js", "../../../../../node_modules/object-keys/implementation.js", "../../../../../node_modules/object-keys/index.js", "../../../../../node_modules/define-properties/index.js", "../../../../../node_modules/globalthis/implementation.browser.js", "../../../../../node_modules/globalthis/polyfill.js", "../../../../../node_modules/globalthis/shim.js", "../../../../../node_modules/globalthis/index.js", "../../../../../node_modules/@kitware/vtk.js/vtk.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/createClass.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/superPropBase.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/get.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/inherits.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js", "../../../../../node_modules/@kitware/vtk.js/macros.js", "../../../../../node_modules/seedrandom/lib/alea.js", "../../../../../node_modules/seedrandom/lib/xor128.js", "../../../../../node_modules/seedrandom/lib/xorwow.js", "../../../../../node_modules/seedrandom/lib/xorshift7.js", "../../../../../node_modules/seedrandom/lib/xor4096.js", "../../../../../node_modules/seedrandom/lib/tychei.js", "browser-external:crypto", "../../../../../node_modules/seedrandom/seedrandom.js", "../../../../../node_modules/seedrandom/index.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/Math/index.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/Math.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Prop.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/DataArray.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageProperty/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ImageSlice.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Volume.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeVS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkVolumeFS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/VolumeMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/VertexInput.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/MapperHelper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Property.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Renderer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ImageMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/ImageSlice.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/Volume.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/WebGPU/PixelSpaceCallbackMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Profiles/Volume.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Light.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/Points.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/CellArray.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/Cell.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/Line.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Actor.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js", "../../../../../node_modules/@kitware/vtk.js/Common/Core/LookupTable.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js", "../../../../../node_modules/regenerator-runtime/runtime.js", "../../../../../node_modules/@kitware/vtk.js/node_modules/@babel/runtime/regenerator/index.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js", "../../../../../node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js", "../../../../../node_modules/spark-md5/spark-md5.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkSphereMapperVS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/SphereMapper.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkStickMapperVS.glsl.js", "../../../../../node_modules/@kitware/vtk.js/Rendering/OpenGL/StickMapper.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/universalModuleDefinition", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/regenerator/index.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/lodash.clonedeep/index.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/regenerator-runtime/runtime.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/DataArray\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/DataArray/Constants\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/Math\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/MatrixBuilder\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/Points\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/ImageData\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/PolyData\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Actor\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Camera\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Mapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Property/Constants\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/RenderWindow\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Renderer\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Volume\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/VolumeMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Actor\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Camera\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Renderer\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Skybox\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Texture\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Volume\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Profiles/Volume\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd \"@kitware/vtk.js/macros\"", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/external umd {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/bootstrap", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/compat get default export", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/define property getters", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/global", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/hasOwnProperty shorthand", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/make namespace object", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/webpack/runtime/node module decorator", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/enums/Events.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/enums/RequestType.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/enums/ViewportType.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/enums/InterpolationType.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/enums/BlendModes.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/constants/orientation.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/createClass.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkStreamingOpenGLTexture.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/cache/classes/ImageVolume.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/eventTarget.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/triggerEvent.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/imageIdToURI.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/cache/cache.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/uuidv4.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/volumeLoader.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkSharedVolumeMapper.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/createVolumeMapper.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/createVolumeActor.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/getOrCreateCanvas.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/renderingEngineCache.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkStreamingOpenGLVolumeMapper.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkStreamingOpenGLViewNodeFactory.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkStreamingOpenGLRenderWindow.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkOffscreenMultiRenderWindow.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/superPropBase.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/get.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/inherits.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/cache/index.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/planar.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/Viewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/vtkClasses/vtkSlabCamera.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/node_modules/detect-gpu/dist/detect-gpu.esm.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/init.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/VolumeViewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/metaData.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/invertRgbTransferFunction.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/windowLevel.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/isEqual.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/now.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getVOILut.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/transform.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/setToPixelCoordinateSystem.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/doesImageNeedToBeRendered.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/initializeRenderCanvas.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/saveLastRendered.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/renderColorImage.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/generateColorLut.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedRGBAPixelDataToCanvasImageData.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedColorPixelDataToCanvasImageData.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageData.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPET.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataRGBA.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/lutMatches.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getLut.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/computeAutoVoi.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/generateLut.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getModalityLut.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/renderGrayscaleImage.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/colors/lookupTable.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/colors/colormaps.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/renderPseudoColorImage.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUTPET.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUT.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/requestPool/requestPoolManager.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/requestPool/imageLoadPoolManager.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/imageLoader.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getTransform.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/canvasToPixel.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/pixelToCanvas.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/setDefaultViewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/validator.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getImageSize.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getImageFitScale.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/fitToWindow.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/StackViewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/drawImageSync.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/createViewport.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/cpuFallback/rendering/resetCamera.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/viewportTypeToViewportClass.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/viewportTypeUsesCustomRenderingPipeline.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/RenderingEngine.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/getRenderingEngine.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/renderToCanvas.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/index.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/requestPool/imageRetrievalPoolManager.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/requestPool/getMaxSimultaneousRequests.js", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/getEnabledElement.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/Settings.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/scaleRgbTransferFunction.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getMinMax.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getRuntimeId.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/calibratedPixelSpacingMetadataProvider.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/isOpposite.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/createUint8SharedArray.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/createFloat32SharedArray.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getSpacingInNormalDirection.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getClosestImageId.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getTargetVolumeAndSpacingInNormalDir.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getVolumeActorCorners.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/indexWithinDimensions.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getVolumeViewportsContainingSameVolumes.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/utilities/getVolumeViewportsContainingVolumeId.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/setVolumesForViewports.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/RenderingEngine/helpers/addVolumesToViewports.ts", "../../../../../node_modules/@cornerstonejs/core/dist/umd/webpack:/cornerstone3D/src/index.ts", "dep:@cornerstonejs_core_dist_umd_index"],
  "sourcesContent": ["var BlendMode = {\n  COMPOSITE_BLEND: 0,\n  MAXIMUM_INTENSITY_BLEND: 1,\n  MINIMUM_INTENSITY_BLEND: 2,\n  AVERAGE_INTENSITY_BLEND: 3,\n  ADDITIVE_INTENSITY_BLEND: 4\n};\nvar FilterMode = {\n  OFF: 0,\n  NORMALIZED: 1,\n  RAW: 2\n};\nvar Constants = {\n  BlendMode: BlendMode,\n  FilterMode: FilterMode\n};\n\nexport { BlendMode, FilterMode, Constants as default };\n", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}", "export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}", "'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "/* eslint no-negated-condition: 0, no-new-func: 0 */\n\n'use strict';\n\nif (typeof self !== 'undefined') {\n\tmodule.exports = self;\n} else if (typeof window !== 'undefined') {\n\tmodule.exports = window;\n} else {\n\tmodule.exports = Function('return this')();\n}\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n\t\treturn implementation;\n\t}\n\treturn global;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimGlobal() {\n\tvar polyfill = getPolyfill();\n\tif (define.supportsDescriptors) {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');\n\t\tif (!descriptor || (descriptor.configurable && (descriptor.enumerable || descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len\n\t\t\tObject.defineProperty(polyfill, 'globalThis', {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: polyfill,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t}\n\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\n\t\tpolyfill.globalThis = polyfill;\n\t}\n\treturn polyfill;\n};\n", "'use strict';\n\nvar defineProperties = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\nvar getGlobal = function () { return polyfill; };\n\ndefineProperties(getGlobal, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = getGlobal;\n", "import _typeof from '@babel/runtime/helpers/typeof';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport globalThisShim from 'globalthis';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkGlobal = globalThisShim(); // returns native globalThis if compliant\n\nvar factoryMapping = {\n  vtkObject: function vtkObject() {\n    return null;\n  }\n};\nfunction vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  if (obj.isA) {\n    return obj;\n  }\n\n  if (!obj.vtkClass) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error('Invalid VTK object');\n    }\n\n    return null;\n  }\n\n  var constructor = factoryMapping[obj.vtkClass];\n\n  if (!constructor) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error(\"No vtk class found for Object of type \".concat(obj.vtkClass));\n    }\n\n    return null;\n  } // Shallow copy object\n\n\n  var model = _objectSpread({}, obj); // Convert into vtkObject any nested key\n\n\n  Object.keys(model).forEach(function (keyName) {\n    if (model[keyName] && _typeof(model[keyName]) === 'object' && model[keyName].vtkClass) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  }); // Return the root\n\n  var newInst = constructor(model);\n\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n} // Nest register method under the vtk function\n\n\nvtk.register = register;\n\nexport { vtk as default, vtkGlobal };\n", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}", "import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}", "export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}", "import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ClassHierarchy = /*#__PURE__*/function (_Array) {\n  _inherits(ClassHierarchy, _Array);\n\n  var _super = _createSuper(ClassHierarchy);\n\n  function ClassHierarchy() {\n    _classCallCheck(this, ClassHierarchy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClassHierarchy, [{\n    key: \"push\",\n    value: function push() {\n      var _this = this,\n          _get2;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // no perf issue since args.length should be small\n      var newArgs = args.filter(function (arg) {\n        return !_this.includes(arg);\n      });\n      return (_get2 = _get(_getPrototypeOf(ClassHierarchy.prototype), \"push\", this)).call.apply(_get2, [this].concat(_toConsumableArray(newArgs)));\n    }\n  }]);\n\n  return ClassHierarchy;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\nexport { ClassHierarchy as default };\n", "import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _construct from '@babel/runtime/helpers/construct';\nimport vtk, { vtkGlobal } from './vtk.js';\nimport ClassHierarchy from './Common/Core/ClassHierarchy.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar globalMTime = 0;\nvar VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n} // ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-prototype-builtins                                      */\n\n\nvar fakeConsole = {};\n\nfunction noOp() {}\n\nvar consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(function (methodName) {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nvar loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nfunction setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nfunction vtkLogMacro() {\n  loggerFunctions.log.apply(loggerFunctions, arguments);\n}\nfunction vtkInfoMacro() {\n  loggerFunctions.info.apply(loggerFunctions, arguments);\n}\nfunction vtkDebugMacro() {\n  loggerFunctions.debug.apply(loggerFunctions, arguments);\n}\nfunction vtkErrorMacro() {\n  loggerFunctions.error.apply(loggerFunctions, arguments);\n}\nfunction vtkWarningMacro() {\n  loggerFunctions.warn.apply(loggerFunctions, arguments);\n}\nvar ERROR_ONCE_MAP = {};\nfunction vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n} // ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nvar TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray; // TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n// TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n\nfunction newTypedArray(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return _construct(TYPED_ARRAYS[type] || Float64Array, args);\n}\nfunction newTypedArrayFrom(type) {\n  var _ref;\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return (_ref = TYPED_ARRAYS[type] || Float64Array).from.apply(_ref, args);\n} // ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nfunction uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n} // ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nfunction formatBytesToProperUnit(size) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  var units = ['TB', 'GB', 'MB', 'KB'];\n  var value = Number(size);\n  var currentUnit = 'B';\n\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n\n  return \"\".concat(value.toFixed(precision), \" \").concat(currentUnit);\n} // ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nfunction formatNumbersWithThousandSeparator(n) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var sections = [];\n  var size = n;\n\n  while (size > 1000) {\n    sections.push(\"000\".concat(size % 1000).slice(-3));\n    size = Math.floor(size / 1000);\n  }\n\n  if (size > 0) {\n    sections.push(size);\n  }\n\n  sections.reverse();\n  return sections.join(separator);\n} // ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(function (key) {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n} // ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n} // ----------------------------------------------------------------------------\n\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(function (key) {\n    return e[key] === value;\n  });\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n\n  return item;\n} // ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\n\nfunction setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n} // ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nfunction obj() {\n  var publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  var callbacks = [];\n\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    model.classHierarchy = ClassHierarchy.from(model.classHierarchy);\n  }\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n\n    return Object.freeze({\n      unsubscribe: unsubscribe\n    });\n  }\n\n  publicAPI.isDeleted = function () {\n    return !!model.deleted;\n  };\n\n  publicAPI.modified = function (otherMTime) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach(function (callback) {\n      return callback && callback(publicAPI);\n    });\n  };\n\n  publicAPI.onModified = function (callback) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    var index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = function () {\n    return model.mtime;\n  };\n\n  publicAPI.isA = function (className) {\n    var count = model.classHierarchy.length; // we go backwards as that is more likely for\n    // early termination\n\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  publicAPI.getClassName = function () {\n    var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  };\n\n  publicAPI.set = function () {\n    var map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var ret = false;\n    Object.keys(map).forEach(function (name) {\n      var fn = noFunction ? null : publicAPI[\"set\".concat(capitalize(name))];\n\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn.apply(void 0, _toConsumableArray(map[name])) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\"Warning: Set value to model directly \".concat(name, \", \").concat(map[name]));\n        }\n\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = function () {\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      list[_key3] = arguments[_key3];\n    }\n\n    if (!list.length) {\n      return model;\n    }\n\n    var subset = {};\n    list.forEach(function (name) {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = function (val) {\n    return model[val];\n  };\n\n  publicAPI.delete = function () {\n    Object.keys(model).forEach(function (field) {\n      return delete model[field];\n    });\n    callbacks.forEach(function (el, index) {\n      return off(index);\n    }); // Flag the instance being deleted\n\n    model.deleted = true;\n  }; // Add serialization support\n\n\n  publicAPI.getState = function () {\n    if (model.deleted) {\n      return null;\n    }\n\n    var jsonArchive = _objectSpread(_objectSpread({}, model), {}, {\n      vtkClass: publicAPI.getClassName()\n    }); // Convert every vtkObject to its serializable form\n\n\n    Object.keys(jsonArchive).forEach(function (keyName) {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    }); // Sort resulting object by key name\n\n    var sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(function (name) {\n      sortedObj[name] = jsonArchive[name];\n    }); // Remove mtime\n\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  }; // Add shallowCopy(otherInstance) support\n\n\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\"Cannot ShallowCopy \".concat(other.getClassName(), \" into \").concat(publicAPI.getClassName()));\n    }\n\n    var otherModel = other.get();\n    var keyList = Object.keys(model).sort();\n    var otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(function (key) {\n      var keyIdx = keyList.indexOf(key);\n\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(\"add \".concat(key, \" in shallowCopy\"));\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n\n      model[key] = otherModel[key];\n    });\n\n    if (keyList.length && debug) {\n      vtkDebugMacro(\"Untouched keys: \".concat(keyList.join(', ')));\n    }\n\n    publicAPI.modified();\n  }; // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n\n\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  }; // Allow usage as decorator\n\n\n  return publicAPI;\n} // ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nfunction get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(function (field) {\n    if (_typeof(field) === 'object') {\n      publicAPI[\"get\".concat(_capitalize(field.name))] = function () {\n        return model[field.name];\n      };\n    } else {\n      publicAPI[\"get\".concat(_capitalize(field))] = function () {\n        return model[field];\n      };\n    }\n  });\n} // ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nvar objectSetterMap = {\n  enum: function _enum(publicAPI, model, field) {\n    return function (value) {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n\n          return false;\n        }\n\n        vtkErrorMacro(\"Set Enum with invalid argument \".concat(field, \", \").concat(value));\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(function (key) {\n            return field.enum[key];\n          }).indexOf(value) !== -1) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n\n          vtkErrorMacro(\"Set Enum outside numeric range \".concat(field, \", \").concat(value));\n          throw new RangeError('Set Enum outside numeric range');\n        }\n\n        return false;\n      }\n\n      vtkErrorMacro(\"Set Enum with invalid argument (String/Number) \".concat(field, \", \").concat(value));\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  }\n};\n\nfunction findSetter(field) {\n  if (_typeof(field) === 'object') {\n    var fn = objectSetterMap[field.type];\n\n    if (fn) {\n      return function (publicAPI, model) {\n        return fn(publicAPI, model, field);\n      };\n    }\n\n    vtkErrorMacro(\"No setter for field \".concat(field));\n    throw new TypeError('No setter for field');\n  }\n\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n\n      return false;\n    };\n  };\n}\n\nfunction set(publicAPI, model, fields) {\n  fields.forEach(function (field) {\n    if (_typeof(field) === 'object') {\n      publicAPI[\"set\".concat(_capitalize(field.name))] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[\"set\".concat(_capitalize(field))] = findSetter(field)(publicAPI, model);\n    }\n  });\n} // ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nfunction setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n} // ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nfunction getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(function (field) {\n    publicAPI[\"get\".concat(_capitalize(field))] = function () {\n      return model[field] ? [].concat(model[field]) : model[field];\n    };\n\n    publicAPI[\"get\".concat(_capitalize(field), \"ByReference\")] = function () {\n      return model[field];\n    };\n  });\n} // ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nfunction setArray(publicAPI, model, fieldNames, size) {\n  var defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  fieldNames.forEach(function (field) {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(\"Invalid initial number of values for array (\".concat(field, \")\"));\n    }\n\n    publicAPI[\"set\".concat(_capitalize(field))] = function () {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var array = args;\n      var changeDetected;\n      var needCopy = false; // allow null or an array to be passed as a single arg.\n\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n\n        needCopy = true;\n      }\n\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n\n            while (array.length < size) {\n              array.push(defaultVal);\n            }\n          } else {\n            throw new RangeError(\"Invalid number of values for array setter (\".concat(field, \")\"));\n          }\n        }\n\n        changeDetected = model[field] == null || model[field].some(function (item, index) {\n          return item !== array[index];\n        }) || model[field].length !== array.length;\n\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n\n      if (changeDetected) {\n        model[field] = array;\n        publicAPI.modified();\n      }\n\n      return changeDetected;\n    };\n\n    publicAPI[\"set\".concat(_capitalize(field), \"From\")] = function (otherArray) {\n      var target = model[field];\n      otherArray.forEach(function (v, i) {\n        target[i] = v;\n      });\n    };\n  });\n} // ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nfunction setGetArray(publicAPI, model, fieldNames, size) {\n  var defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nfunction moveToProtected(publicAPI, model, fieldNames) {\n  for (var i = 0; i < fieldNames.length; i++) {\n    var fieldName = fieldNames[i];\n\n    if (model[fieldName] !== undefined) {\n      model[\"_\".concat(fieldName)] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n} // ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nfunction algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  } // Cache the argument for later manipulation\n\n\n  model.numberOfInputs = numberOfInputs; // Methods\n\n  function setInputData(dataset) {\n    var port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\"algorithm \".concat(publicAPI.getClassName(), \" only has \").concat(model.numberOfInputs, \" input ports. To add more input ports, use addInputData()\"));\n      return;\n    }\n\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData() {\n    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort) {\n    var port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (port >= model.numberOfInputs) {\n      var msg = \"algorithm \".concat(publicAPI.getClassName(), \" only has \");\n      msg += \"\".concat(model.numberOfInputs);\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection() {\n    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.inputConnection[port];\n  }\n\n  function getPortToFill() {\n    var portToFill = model.numberOfInputs;\n\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n\n    return portToFill;\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    setInputConnection(outputPort, getPortToFill());\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    setInputData(dataset, getPortToFill());\n  }\n\n  function getOutputData() {\n    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = function () {\n    var localMTime = publicAPI.getMTime();\n    var minOutputMTime = Infinity;\n    var count = numberOfOutputs;\n\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n\n      var mt = model.output[count].getMTime();\n\n      if (mt < localMTime) {\n        return true;\n      }\n\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n\n    while (count--) {\n      var _model$inputConnectio, _publicAPI$getInputDa;\n\n      if ((_model$inputConnectio = model.inputConnection[count]) !== null && _model$inputConnectio !== void 0 && _model$inputConnectio.filter.shouldUpdate() || ((_publicAPI$getInputDa = publicAPI.getInputData(count)) === null || _publicAPI$getInputDa === void 0 ? void 0 : _publicAPI$getInputDa.getMTime()) > minOutputMTime) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function getOutputPort() {\n    var port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var outputPortAccess = function outputPortAccess() {\n      return getOutputData(port);\n    }; // Add reference to filter\n\n\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  } // Handle input if needed\n\n\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    var count = model.numberOfInputs;\n\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    } // Expose public methods\n\n\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = function () {\n    var ins = [];\n\n    if (model.numberOfInputs) {\n      var _count = 0;\n\n      while (_count < model.numberOfInputs) {\n        ins[_count] = publicAPI.getInputData(_count);\n        _count++;\n      }\n    }\n\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = function () {\n    return model.numberOfInputs;\n  };\n\n  publicAPI.getNumberOfOutputPorts = function () {\n    return numberOfOutputs || model.output.length;\n  };\n\n  publicAPI.getInputArrayToProcess = function (inputPort) {\n    var arrayDesc = model.inputArrayToProcess[inputPort];\n    var ds = model.inputData[inputPort];\n\n    if (arrayDesc && ds) {\n      return ds[\"get\".concat(arrayDesc.fieldAssociation)]().getArray(arrayDesc.arrayName);\n    }\n\n    return null;\n  };\n\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\n    var attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\n\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n\n    model.inputArrayToProcess[inputPort] = {\n      arrayName: arrayName,\n      fieldAssociation: fieldAssociation,\n      attributeType: attributeType\n    };\n  };\n} // ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nvar EVENT_ABORT = Symbol('Event abort');\nfunction event(publicAPI, model, eventName) {\n  var callbacks = [];\n  var previousDelete = publicAPI.delete;\n  var curCallbackID = 1;\n\n  function off(callbackID) {\n    for (var i = 0; i < callbacks.length; ++i) {\n      var _callbacks$i = _slicedToArray(callbacks[i], 1),\n          cbID = _callbacks$i[0];\n\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n\n    return Object.freeze({\n      unsubscribe: unsubscribe\n    });\n  }\n\n  function invoke() {\n    var _arguments = arguments;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n\n\n    var currentCallbacks = callbacks.slice();\n\n    var _loop = function _loop(index) {\n      var _currentCallbacks$ind = _slicedToArray(currentCallbacks[index], 3),\n          cb = _currentCallbacks$ind[1],\n          priority = _currentCallbacks$ind[2];\n\n      if (!cb) {\n        return \"continue\"; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(function () {\n          return cb.apply(publicAPI, _arguments);\n        }, 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        var continueNext = cb.apply(publicAPI, _arguments);\n\n        if (continueNext === EVENT_ABORT) {\n          return \"break\";\n        }\n      }\n    };\n\n    for (var index = 0; index < currentCallbacks.length; ++index) {\n      var _ret = _loop(index);\n\n      if (_ret === \"continue\") continue;\n      if (_ret === \"break\") break;\n    }\n    /* eslint-enable prefer-rest-params */\n\n  }\n\n  publicAPI[\"invoke\".concat(_capitalize(eventName))] = invoke;\n\n  publicAPI[\"on\".concat(_capitalize(eventName))] = function (callback) {\n    var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n\n    if (!callback.apply) {\n      console.error(\"Invalid callback for event \".concat(eventName));\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    var callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort(function (cb1, cb2) {\n      return cb2[2] - cb1[2];\n    });\n    return on(callbackID);\n  };\n\n  publicAPI.delete = function () {\n    previousDelete();\n    callbacks.forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          cbID = _ref3[0];\n\n      return off(cbID);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend, className) {\n  var constructor = function constructor() {\n    var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var model = {};\n    var publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  }; // Register constructor to factory\n\n\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n} // ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain() {\n  for (var _len5 = arguments.length, fn = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    fn[_key5] = arguments[_key5];\n  }\n\n  return function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return fn.filter(function (i) {\n      return !!i;\n    }).map(function (i) {\n      return i.apply(void 0, args);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nfunction isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nfunction traverseInstanceTree(instance, extractFunction) {\n  var accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    var result = extractFunction(instance);\n\n    if (result !== undefined) {\n      accumulator.push(result);\n    } // Now go through this instance's model\n\n\n    var model = instance.get();\n    Object.keys(model).forEach(function (key) {\n      var modelObj = model[key];\n\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(function (subObj) {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n\n  return accumulator;\n} // ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nfunction debounce(func, wait, immediate) {\n  var _this = this;\n\n  var timeout;\n\n  var debounced = function debounced() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    var context = _this;\n\n    var later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = function () {\n    return clearTimeout(timeout);\n  };\n\n  return debounced;\n} // ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nfunction throttle(callback, delay) {\n  var isThrottled = false;\n  var argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n\n    if (argsToUse !== null) {\n      wrapper.apply(void 0, _toConsumableArray(argsToUse)); // eslint-disable-line\n\n      argsToUse = null;\n    }\n  }\n\n  function wrapper() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n\n    isThrottled = true;\n    callback.apply(void 0, args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n} // ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nfunction keystore(publicAPI, model) {\n  var initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = function (key, value) {\n    model.keystore[key] = value;\n  };\n\n  publicAPI.getKey = function (key) {\n    return model.keystore[key];\n  };\n\n  publicAPI.getAllKeys = function () {\n    return Object.keys(model.keystore);\n  };\n\n  publicAPI.deleteKey = function (key) {\n    return delete model.keystore[key];\n  };\n\n  publicAPI.clearKeystore = function () {\n    return publicAPI.getAllKeys().forEach(function (key) {\n      return delete model.keystore[key];\n    });\n  };\n} // ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\n\nvar nextProxyId = 1;\nvar ROOT_GROUP_NAME = '__root__';\nfunction proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  var parentDelete = publicAPI.delete; // getProxyId\n\n  model.proxyId = \"\".concat(nextProxyId++); // ui handling\n\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']); // group properties\n\n  var propertyMap = {};\n  var groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n\n    var childrenNames = groupChildrenNames[currentGroupName];\n\n    for (var i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = function (ui) {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n\n    Object.keys(propertyMap).forEach(function (k) {\n      return delete propertyMap[k];\n    });\n    Object.keys(groupChildrenNames).forEach(function (k) {\n      return delete groupChildrenNames[k];\n    });\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties() {\n    var gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = function (propertyName, propUI) {\n    var prop = propertyMap[propertyName];\n\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = _objectSpread({}, propUI);\n    }\n  };\n\n  publicAPI.activate = function () {\n    if (model.proxyManager) {\n      var setActiveMethod = \"setActive\".concat(_capitalize(publicAPI.getProxyGroup().slice(0, -1)));\n\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  }; // property link\n\n\n  model.propertyLinkSubscribers = {};\n\n  publicAPI.registerPropertyLinkForGC = function (otherLink, type) {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = function (type) {\n    var subscribers = model.propertyLinkSubscribers[type] || [];\n\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n\n  publicAPI.getPropertyLink = function (id) {\n    var persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n\n    var value = null;\n    var links = [];\n    var count = 0;\n    var updateInProgress = false;\n\n    function update(source) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (updateInProgress) {\n        return null;\n      }\n\n      var needUpdate = [];\n      var sourceLink = null;\n      count = links.length;\n\n      while (count--) {\n        var link = links[count];\n\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      var newValue = sourceLink.instance[\"get\".concat(_capitalize(sourceLink.propertyName))]();\n\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n\n        while (needUpdate.length) {\n          var linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set(_defineProperty({}, linkToUpdate.propertyName, value));\n        }\n\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      var indexToDelete = [];\n      count = links.length;\n\n      while (count--) {\n        var link = links[count];\n\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName) {\n      var updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var subscription = instance.onModified(update);\n      var other = links[0];\n      links.push({\n        instance: instance,\n        propertyName: propertyName,\n        subscription: subscription\n      });\n\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set(_defineProperty({}, propertyName, model.propertyLinkMap[id].value));\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n\n      return {\n        unsubscribe: function unsubscribe() {\n          return unbind(instance, propertyName);\n        }\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    var linkHandler = {\n      bind: bind,\n      unbind: unbind,\n      unsubscribe: unsubscribe,\n      persistent: persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  }; // extract values\n\n\n  function getProperties() {\n    var groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    var values = [];\n    var id = model.proxyId;\n    var propertyNames = listProxyProperties(groupName) || [];\n\n    for (var i = 0; i < propertyNames.length; i++) {\n      var name = propertyNames[i];\n      var method = publicAPI[\"get\".concat(_capitalize(name))];\n      var value = method ? method() : undefined;\n      var prop = {\n        id: id,\n        name: name,\n        value: value\n      };\n      var children = getProperties(name);\n\n      if (children.length) {\n        prop.children = children;\n      }\n\n      values.push(prop);\n    }\n\n    return values;\n  }\n\n  publicAPI.listPropertyNames = function () {\n    return getProperties().map(function (p) {\n      return p.name;\n    });\n  };\n\n  publicAPI.getPropertyByName = function (name) {\n    return getProperties().find(function (p) {\n      return p.name === name;\n    });\n  };\n\n  publicAPI.getPropertyDomainByName = function (name) {\n    return (propertyMap[name] || {}).domain;\n  }; // ui section\n\n\n  publicAPI.getProxySection = function () {\n    return {\n      id: model.proxyId,\n      name: model.proxyGroup,\n      ui: model.ui,\n      properties: getProperties()\n    };\n  }; // free resources\n\n\n  publicAPI.delete = function () {\n    var list = Object.keys(model.propertyLinkMap);\n    var count = list.length;\n\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  }; // @todo fix infinite recursion due to active source\n\n\n  publicAPI.getState = function () {\n    return null;\n  };\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (var i = 0; i < model.links.length; i++) {\n        var _model$links$i = model.links[i],\n            link = _model$links$i.link,\n            property = _model$links$i.property,\n            persistent = _model$links$i.persistent,\n            updateOnBind = _model$links$i.updateOnBind,\n            type = _model$links$i.type;\n\n        if (type === 'application') {\n          var sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n\n  setImmediateVTK(registerLinks);\n} // ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyMapping(publicAPI, model, map) {\n  var parentDelete = publicAPI.delete;\n  var subscriptions = [];\n  var propertyNames = Object.keys(map);\n  var count = propertyNames.length;\n\n  while (count--) {\n    var propertyName = propertyNames[count];\n    var _map$propertyName = map[propertyName],\n        modelKey = _map$propertyName.modelKey,\n        property = _map$propertyName.property,\n        _map$propertyName$mod = _map$propertyName.modified,\n        modified = _map$propertyName$mod === void 0 ? true : _map$propertyName$mod;\n\n    var methodSrc = _capitalize(property);\n\n    var methodDst = _capitalize(propertyName);\n\n    publicAPI[\"get\".concat(methodDst)] = model[modelKey][\"get\".concat(methodSrc)];\n    publicAPI[\"set\".concat(methodDst)] = model[modelKey][\"set\".concat(methodSrc)];\n\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = function () {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n\n    parentDelete();\n  };\n} // ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyState(publicAPI, model) {\n  var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  model.this = publicAPI;\n\n  function applyState(map) {\n    var modelKeys = Object.keys(map);\n    var count = modelKeys.length;\n\n    while (count--) {\n      var modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  var modelKeys = Object.keys(defaults);\n  var count = modelKeys.length;\n\n  var _loop2 = function _loop2() {\n    // Add default\n    var key = modelKeys[count];\n    model[key] = defaults[key]; // Add set method\n\n    var mapping = state[key];\n\n    publicAPI[\"set\".concat(_capitalize(key))] = function (value) {\n      if (value !== model[key]) {\n        model[key] = value;\n        var propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  };\n\n  while (count--) {\n    _loop2();\n  } // Add getter\n\n\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n} // ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n// Reasonable defaults\n\nvar PIXEL_STEP = 10;\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\nfunction normalizeWheel(wheelEvent) {\n  var sX = 0; // spinX\n\n  var sY = 0; // spinY\n\n  var pX = 0; // pixelX\n\n  var pY = 0; // pixelY\n  // Legacy\n\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  } // side scrolling on FF with DOMMouseScroll\n\n\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  } // Fall-back if spin cannot be determined\n\n\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n} // ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nvar macro = {\n  algo: algo,\n  capitalize: capitalize,\n  chain: chain,\n  debounce: debounce,\n  enumToString: enumToString,\n  event: event,\n  EVENT_ABORT: EVENT_ABORT,\n  formatBytesToProperUnit: formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,\n  get: get,\n  getArray: getArray,\n  getCurrentGlobalMTime: getCurrentGlobalMTime,\n  getStateArrayMapFunc: getStateArrayMapFunc,\n  isVtkObject: isVtkObject,\n  keystore: keystore,\n  moveToProtected: moveToProtected,\n  newInstance: newInstance,\n  newTypedArray: newTypedArray,\n  newTypedArrayFrom: newTypedArrayFrom,\n  normalizeWheel: normalizeWheel,\n  obj: obj,\n  proxy: proxy,\n  proxyPropertyMapping: proxyPropertyMapping,\n  proxyPropertyState: proxyPropertyState,\n  safeArrays: safeArrays,\n  set: set,\n  setArray: setArray,\n  setGet: setGet,\n  setGetArray: setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction: setLoggerFunction,\n  throttle: throttle,\n  traverseInstanceTree: traverseInstanceTree,\n  TYPED_ARRAYS: TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize: uncapitalize,\n  VOID: VOID,\n  vtkDebugMacro: vtkDebugMacro,\n  vtkErrorMacro: vtkErrorMacro,\n  vtkInfoMacro: vtkInfoMacro,\n  vtkLogMacro: vtkLogMacro,\n  vtkOnceErrorMacro: vtkOnceErrorMacro,\n  vtkWarningMacro: vtkWarningMacro\n};\n\nexport { EVENT_ABORT, TYPED_ARRAYS, VOID, _capitalize, algo, capitalize, chain, debounce, macro as default, event, formatBytesToProperUnit, formatNumbersWithThousandSeparator, get, getArray, isVtkObject, keystore, moveToProtected, newInstance, newTypedArray, newTypedArrayFrom, normalizeWheel, obj, proxy, proxyPropertyMapping, proxyPropertyState, set, setArray, setGet, setGetArray, setImmediateVTK, setLoggerFunction, throttle, traverseInstanceTree, uncapitalize, vtkDebugMacro, vtkErrorMacro, vtkInfoMacro, vtkLogMacro, vtkOnceErrorMacro, vtkWarningMacro };\n", "// A port of an algorithm by Johannes Baag\u00F8e <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baag\u00F8e <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorshift7\" algorithm by\n// Fran\u00E7ois Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n", "// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n", "// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"crypto\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n", "// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baag\u00F8e.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by Fran\u00E7ois Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n", "import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport seedrandom from 'seedrandom';\nimport macro from '../../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n\n/* eslint-disable camelcase                                                  */\n\n/* eslint-disable no-cond-assign                                             */\n\n/* eslint-disable no-bitwise                                                 */\n\n/* eslint-disable no-multi-assign                                            */\n// ----------------------------------------------------------------------------\n\nvar randomSeedValue = 0;\nvar VTK_MAX_ROTATIONS = 20;\nvar VTK_SMALL_NUMBER = 1.0e-12;\n\nfunction notImplemented(method) {\n  return function () {\n    return vtkErrorMacro(\"vtkMath::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n}\n\nfunction vtkSwapVectors3(v1, v2) {\n  for (var i = 0; i < 3; i++) {\n    var tmp = v1[i];\n    v1[i] = v2[i];\n    v2[i] = tmp;\n  }\n}\n\nfunction createArray() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  var array = [];\n\n  while (array.length < size) {\n    array.push(0);\n  }\n\n  return array;\n} // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n\nvar Pi = function Pi() {\n  return Math.PI;\n};\nfunction radiansFromDegrees(deg) {\n  return deg / 180 * Math.PI;\n}\nfunction degreesFromRadians(rad) {\n  return rad * 180 / Math.PI;\n}\nvar round = Math.round,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    min = Math.min,\n    max = Math.max;\nfunction arrayMin(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var minValue = Infinity;\n\n  for (var i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n  }\n\n  return minValue;\n}\nfunction arrayMax(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var maxValue = -Infinity;\n\n  for (var i = offset, len = arr.length; i < len; i += stride) {\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return maxValue;\n}\nfunction arrayRange(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var minValue = Infinity;\n  var maxValue = -Infinity;\n\n  for (var i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return [minValue, maxValue];\n}\nvar ceilLog2 = notImplemented('ceilLog2');\nvar factorial = notImplemented('factorial');\nfunction nearestPowerOfTwo(xi) {\n  var v = 1;\n\n  while (v < xi) {\n    v *= 2;\n  }\n\n  return v;\n}\nfunction isPowerOfTwo(x) {\n  return x === nearestPowerOfTwo(x);\n}\nfunction binomial(m, n) {\n  var r = 1;\n\n  for (var i = 1; i <= n; ++i) {\n    r *= (m - i + 1) / i;\n  }\n\n  return Math.floor(r);\n}\nfunction beginCombination(m, n) {\n  if (m < n) {\n    return 0;\n  }\n\n  var r = createArray(n);\n\n  for (var i = 0; i < n; ++i) {\n    r[i] = i;\n  }\n\n  return r;\n}\nfunction nextCombination(m, n, r) {\n  var status = 0;\n\n  for (var i = n - 1; i >= 0; --i) {\n    if (r[i] < m - n + i) {\n      var j = r[i] + 1;\n\n      while (i < n) {\n        r[i++] = j++;\n      }\n\n      status = 1;\n      break;\n    }\n  }\n\n  return status;\n}\nfunction randomSeed(seed) {\n  seedrandom(\"\".concat(seed), {\n    global: true\n  });\n  randomSeedValue = seed;\n}\nfunction getSeed() {\n  return randomSeedValue;\n}\nfunction random() {\n  var minValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var maxValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var delta = maxValue - minValue;\n  return minValue + delta * Math.random();\n}\nvar gaussian = notImplemented('gaussian'); // Vect3 operations\n\nfunction add(a, b, out) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\nfunction subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\nfunction multiplyScalar(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  vec[2] *= scalar;\n  return vec;\n}\nfunction multiplyScalar2D(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  return vec;\n}\nfunction multiplyAccumulate(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  out[2] = a[2] + b[2] * scalar;\n  return out;\n}\nfunction multiplyAccumulate2D(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  return out;\n}\nfunction dot(x, y) {\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\n}\nfunction outer(x, y, out_3x3) {\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      out_3x3[i][j] = x[i] * y[j];\n    }\n  }\n}\nfunction cross(x, y, out) {\n  var Zx = x[1] * y[2] - x[2] * y[1];\n  var Zy = x[2] * y[0] - x[0] * y[2];\n  var Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n  return out;\n}\nfunction norm(x) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n\n    default:\n      {\n        var sum = 0;\n\n        for (var i = 0; i < n; i++) {\n          sum += x[i] * x[i];\n        }\n\n        return Math.sqrt(sum);\n      }\n  }\n}\nfunction normalize(x) {\n  var den = norm(x);\n\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n\n  return den;\n}\nfunction perpendiculars(x, y, z, theta) {\n  var x2 = x[0] * x[0];\n  var y2 = x[1] * x[1];\n  var z2 = x[2] * x[2];\n  var r = Math.sqrt(x2 + y2 + z2);\n  var dx;\n  var dy;\n  var dz; // transpose the vector to avoid divide-by-zero error\n\n  if (x2 > y2 && x2 > z2) {\n    dx = 0;\n    dy = 1;\n    dz = 2;\n  } else if (y2 > z2) {\n    dx = 1;\n    dy = 2;\n    dz = 0;\n  } else {\n    dx = 2;\n    dy = 0;\n    dz = 1;\n  }\n\n  var a = x[dx] / r;\n  var b = x[dy] / r;\n  var c = x[dz] / r;\n  var tmp = Math.sqrt(a * a + c * c);\n\n  if (theta !== 0) {\n    var sintheta = Math.sin(theta);\n    var costheta = Math.cos(theta);\n\n    if (y) {\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\n      y[dy] = sintheta * tmp;\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\n      z[dy] = costheta * tmp;\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\n    }\n  } else {\n    if (y) {\n      y[dx] = c / tmp;\n      y[dy] = 0;\n      y[dz] = -a / tmp;\n    }\n\n    if (z) {\n      z[dx] = -a * b / tmp;\n      z[dy] = tmp;\n      z[dz] = -b * c / tmp;\n    }\n  }\n}\nfunction projectVector(a, b, projection) {\n  var bSquared = dot(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    projection[2] = 0;\n    return false;\n  }\n\n  var scale = dot(a, b) / bSquared;\n\n  for (var i = 0; i < 3; i++) {\n    projection[i] = b[i];\n  }\n\n  multiplyScalar(projection, scale);\n  return true;\n}\nfunction dot2D(x, y) {\n  return x[0] * y[0] + x[1] * y[1];\n}\nfunction projectVector2D(a, b, projection) {\n  var bSquared = dot2D(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    return false;\n  }\n\n  var scale = dot2D(a, b) / bSquared;\n\n  for (var i = 0; i < 2; i++) {\n    projection[i] = b[i];\n  }\n\n  multiplyScalar2D(projection, scale);\n  return true;\n}\nfunction distance2BetweenPoints(x, y) {\n  return (x[0] - y[0]) * (x[0] - y[0]) + (x[1] - y[1]) * (x[1] - y[1]) + (x[2] - y[2]) * (x[2] - y[2]);\n}\nfunction angleBetweenVectors(v1, v2) {\n  var crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  return Math.atan2(norm(crossVect), dot(v1, v2));\n}\nfunction signedAngleBetweenVectors(v1, v2, vN) {\n  var crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  var angle = Math.atan2(norm(crossVect), dot(v1, v2));\n  return dot(crossVect, vN) >= 0 ? angle : -angle;\n}\nfunction gaussianAmplitude(mean, variance, position) {\n  var distanceFromMean = Math.abs(mean - position);\n  return 1 / Math.sqrt(2 * Math.PI * variance) * Math.exp(-Math.pow(distanceFromMean, 2) / (2 * variance));\n}\nfunction gaussianWeight(mean, variance, position) {\n  var distanceFromMean = Math.abs(mean - position);\n  return Math.exp(-Math.pow(distanceFromMean, 2) / (2 * variance));\n}\nfunction outer2D(x, y, out_2x2) {\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 2; j++) {\n      out_2x2[i][j] = x[i] * y[j];\n    }\n  }\n}\nfunction norm2D(x2D) {\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\n}\nfunction normalize2D(x) {\n  var den = norm2D(x);\n\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n  }\n\n  return den;\n}\nfunction determinant2x2() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 2) {\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\n  }\n\n  if (args.length === 4) {\n    return args[0] * args[3] - args[1] * args[2];\n  }\n\n  return Number.NaN;\n}\nfunction LUFactor3x3(mat_3x3, index_3) {\n  var maxI;\n  var tmp;\n  var largest;\n  var scale = [0, 0, 0]; // Loop over rows to get implicit scaling information\n\n  for (var i = 0; i < 3; i++) {\n    largest = Math.abs(mat_3x3[i][0]);\n\n    if ((tmp = Math.abs(mat_3x3[i][1])) > largest) {\n      largest = tmp;\n    }\n\n    if ((tmp = Math.abs(mat_3x3[i][2])) > largest) {\n      largest = tmp;\n    }\n\n    scale[i] = 1 / largest;\n  } // Loop over all columns using Crout's method\n  // first column\n\n\n  largest = scale[0] * Math.abs(mat_3x3[0][0]);\n  maxI = 0;\n\n  if ((tmp = scale[1] * Math.abs(mat_3x3[1][0])) >= largest) {\n    largest = tmp;\n    maxI = 1;\n  }\n\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][0])) >= largest) {\n    maxI = 2;\n  }\n\n  if (maxI !== 0) {\n    vtkSwapVectors3(mat_3x3[maxI], mat_3x3[0]);\n    scale[maxI] = scale[0];\n  }\n\n  index_3[0] = maxI;\n  mat_3x3[1][0] /= mat_3x3[0][0];\n  mat_3x3[2][0] /= mat_3x3[0][0]; // second column\n\n  mat_3x3[1][1] -= mat_3x3[1][0] * mat_3x3[0][1];\n  mat_3x3[2][1] -= mat_3x3[2][0] * mat_3x3[0][1];\n  largest = scale[1] * Math.abs(mat_3x3[1][1]);\n  maxI = 1;\n\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][1])) >= largest) {\n    maxI = 2;\n    vtkSwapVectors3(mat_3x3[2], mat_3x3[1]);\n    scale[2] = scale[1];\n  }\n\n  index_3[1] = maxI;\n  mat_3x3[2][1] /= mat_3x3[1][1]; // third column\n\n  mat_3x3[1][2] -= mat_3x3[1][0] * mat_3x3[0][2];\n  mat_3x3[2][2] -= mat_3x3[2][0] * mat_3x3[0][2] + mat_3x3[2][1] * mat_3x3[1][2];\n  index_3[2] = 2;\n}\nfunction LUSolve3x3(mat_3x3, index_3, x_3) {\n  // forward substitution\n  var sum = x_3[index_3[0]];\n  x_3[index_3[0]] = x_3[0];\n  x_3[0] = sum;\n  sum = x_3[index_3[1]];\n  x_3[index_3[1]] = x_3[1];\n  x_3[1] = sum - mat_3x3[1][0] * x_3[0];\n  sum = x_3[index_3[2]];\n  x_3[index_3[2]] = x_3[2];\n  x_3[2] = sum - mat_3x3[2][0] * x_3[0] - mat_3x3[2][1] * x_3[1]; // back substitution\n\n  x_3[2] /= mat_3x3[2][2];\n  x_3[1] = (x_3[1] - mat_3x3[1][2] * x_3[2]) / mat_3x3[1][1];\n  x_3[0] = (x_3[0] - mat_3x3[0][1] * x_3[1] - mat_3x3[0][2] * x_3[2]) / mat_3x3[0][0];\n}\nfunction linearSolve3x3(mat_3x3, x_3, y_3) {\n  var a1 = mat_3x3[0][0];\n  var b1 = mat_3x3[0][1];\n  var c1 = mat_3x3[0][2];\n  var a2 = mat_3x3[1][0];\n  var b2 = mat_3x3[1][1];\n  var c2 = mat_3x3[1][2];\n  var a3 = mat_3x3[2][0];\n  var b3 = mat_3x3[2][1];\n  var c3 = mat_3x3[2][2]; // Compute the adjoint\n\n  var d1 = +determinant2x2(b2, b3, c2, c3);\n  var d2 = -determinant2x2(a2, a3, c2, c3);\n  var d3 = +determinant2x2(a2, a3, b2, b3);\n  var e1 = -determinant2x2(b1, b3, c1, c3);\n  var e2 = +determinant2x2(a1, a3, c1, c3);\n  var e3 = -determinant2x2(a1, a3, b1, b3);\n  var f1 = +determinant2x2(b1, b2, c1, c2);\n  var f2 = -determinant2x2(a1, a2, c1, c2);\n  var f3 = +determinant2x2(a1, a2, b1, b2); // Compute the determinant\n\n  var det = a1 * d1 + b1 * d2 + c1 * d3; // Multiply by the adjoint\n\n  var v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\n  var v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\n  var v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2]; // Divide by the determinant\n\n  y_3[0] = v1 / det;\n  y_3[1] = v2 / det;\n  y_3[2] = v3 / det;\n}\nfunction multiply3x3_vect3(mat_3x3, in_3, out_3) {\n  var x = mat_3x3[0][0] * in_3[0] + mat_3x3[0][1] * in_3[1] + mat_3x3[0][2] * in_3[2];\n  var y = mat_3x3[1][0] * in_3[0] + mat_3x3[1][1] * in_3[1] + mat_3x3[1][2] * in_3[2];\n  var z = mat_3x3[2][0] * in_3[0] + mat_3x3[2][1] * in_3[1] + mat_3x3[2][2] * in_3[2];\n  out_3[0] = x;\n  out_3[1] = y;\n  out_3[2] = z;\n}\nfunction multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\n  var tmp = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n  for (var i = 0; i < 3; i++) {\n    tmp[0][i] = a_3x3[0][0] * b_3x3[0][i] + a_3x3[0][1] * b_3x3[1][i] + a_3x3[0][2] * b_3x3[2][i];\n    tmp[1][i] = a_3x3[1][0] * b_3x3[0][i] + a_3x3[1][1] * b_3x3[1][i] + a_3x3[1][2] * b_3x3[2][i];\n    tmp[2][i] = a_3x3[2][0] * b_3x3[0][i] + a_3x3[2][1] * b_3x3[1][i] + a_3x3[2][2] * b_3x3[2][i];\n  }\n\n  for (var j = 0; j < 3; j++) {\n    out_3x3[j][0] = tmp[j][0];\n    out_3x3[j][1] = tmp[j][1];\n    out_3x3[j][2] = tmp[j][2];\n  }\n}\nfunction multiplyMatrix(a, b, rowA, colA, rowB, colB, out_rowXcol) {\n  // we need colA == rowB\n  if (colA !== rowB) {\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\n  } // output matrix is rowA*colB\n  // output row\n\n\n  for (var i = 0; i < rowA; i++) {\n    // output col\n    for (var j = 0; j < colB; j++) {\n      out_rowXcol[i][j] = 0; // sum for this point\n\n      for (var k = 0; k < colA; k++) {\n        out_rowXcol[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n}\nfunction transpose3x3(in_3x3, outT_3x3) {\n  var tmp;\n  tmp = in_3x3[1][0];\n  outT_3x3[1][0] = in_3x3[0][1];\n  outT_3x3[0][1] = tmp;\n  tmp = in_3x3[2][0];\n  outT_3x3[2][0] = in_3x3[0][2];\n  outT_3x3[0][2] = tmp;\n  tmp = in_3x3[2][1];\n  outT_3x3[2][1] = in_3x3[1][2];\n  outT_3x3[1][2] = tmp;\n  outT_3x3[0][0] = in_3x3[0][0];\n  outT_3x3[1][1] = in_3x3[1][1];\n  outT_3x3[2][2] = in_3x3[2][2];\n}\nfunction invert3x3(in_3x3, outI_3x3) {\n  var a1 = in_3x3[0][0];\n  var b1 = in_3x3[0][1];\n  var c1 = in_3x3[0][2];\n  var a2 = in_3x3[1][0];\n  var b2 = in_3x3[1][1];\n  var c2 = in_3x3[1][2];\n  var a3 = in_3x3[2][0];\n  var b3 = in_3x3[2][1];\n  var c3 = in_3x3[2][2]; // Compute the adjoint\n\n  var d1 = +determinant2x2(b2, b3, c2, c3);\n  var d2 = -determinant2x2(a2, a3, c2, c3);\n  var d3 = +determinant2x2(a2, a3, b2, b3);\n  var e1 = -determinant2x2(b1, b3, c1, c3);\n  var e2 = +determinant2x2(a1, a3, c1, c3);\n  var e3 = -determinant2x2(a1, a3, b1, b3);\n  var f1 = +determinant2x2(b1, b2, c1, c2);\n  var f2 = -determinant2x2(a1, a2, c1, c2);\n  var f3 = +determinant2x2(a1, a2, b1, b2); // Divide by the determinant\n\n  var det = a1 * d1 + b1 * d2 + c1 * d3;\n  outI_3x3[0][0] = d1 / det;\n  outI_3x3[1][0] = d2 / det;\n  outI_3x3[2][0] = d3 / det;\n  outI_3x3[0][1] = e1 / det;\n  outI_3x3[1][1] = e2 / det;\n  outI_3x3[2][1] = e3 / det;\n  outI_3x3[0][2] = f1 / det;\n  outI_3x3[1][2] = f2 / det;\n  outI_3x3[2][2] = f3 / det;\n}\nfunction identity3x3(mat_3x3) {\n  for (var i = 0; i < 3; i++) {\n    mat_3x3[i][0] = mat_3x3[i][1] = mat_3x3[i][2] = 0;\n    mat_3x3[i][i] = 1;\n  }\n}\nfunction determinant3x3(mat_3x3) {\n  return mat_3x3[0][0] * mat_3x3[1][1] * mat_3x3[2][2] + mat_3x3[1][0] * mat_3x3[2][1] * mat_3x3[0][2] + mat_3x3[2][0] * mat_3x3[0][1] * mat_3x3[1][2] - mat_3x3[0][0] * mat_3x3[2][1] * mat_3x3[1][2] - mat_3x3[1][0] * mat_3x3[0][1] * mat_3x3[2][2] - mat_3x3[2][0] * mat_3x3[1][1] * mat_3x3[0][2];\n}\nfunction quaternionToMatrix3x3(quat_4, mat_3x3) {\n  var ww = quat_4[0] * quat_4[0];\n  var wx = quat_4[0] * quat_4[1];\n  var wy = quat_4[0] * quat_4[2];\n  var wz = quat_4[0] * quat_4[3];\n  var xx = quat_4[1] * quat_4[1];\n  var yy = quat_4[2] * quat_4[2];\n  var zz = quat_4[3] * quat_4[3];\n  var xy = quat_4[1] * quat_4[2];\n  var xz = quat_4[1] * quat_4[3];\n  var yz = quat_4[2] * quat_4[3];\n  var rr = xx + yy + zz; // normalization factor, just in case quaternion was not normalized\n\n  var f = 1 / (ww + rr);\n  var s = (ww - rr) * f;\n  f *= 2;\n  mat_3x3[0][0] = xx * f + s;\n  mat_3x3[1][0] = (xy + wz) * f;\n  mat_3x3[2][0] = (xz - wy) * f;\n  mat_3x3[0][1] = (xy - wz) * f;\n  mat_3x3[1][1] = yy * f + s;\n  mat_3x3[2][1] = (yz + wx) * f;\n  mat_3x3[0][2] = (xz + wy) * f;\n  mat_3x3[1][2] = (yz - wx) * f;\n  mat_3x3[2][2] = zz * f + s;\n}\n/**\n * Returns true if elements of both arrays are equals.\n * @param {Array} a an array of numbers (vector, point, matrix...)\n * @param {Array} b an array of numbers (vector, point, matrix...)\n * @param {Number} eps tolerance\n */\n\nfunction areEquals(a, b) {\n  var eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e-6;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  function isEqual(element, index) {\n    return Math.abs(element - b[index]) <= eps;\n  }\n\n  return a.every(isEqual);\n}\nvar areMatricesEqual = areEquals;\nfunction roundNumber(num) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (!\"\".concat(num).includes('e')) {\n    return +\"\".concat(Math.round(\"\".concat(num, \"e+\").concat(digits)), \"e-\").concat(digits);\n  }\n\n  var arr = \"\".concat(num).split('e');\n  var sig = '';\n\n  if (+arr[1] + digits > 0) {\n    sig = '+';\n  }\n\n  return +\"\".concat(Math.round(\"\".concat(+arr[0], \"e\").concat(sig).concat(+arr[1] + digits)), \"e-\").concat(digits);\n}\nfunction roundVector(vector) {\n  var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\n  var digits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  out[0] = roundNumber(vector[0], digits);\n  out[1] = roundNumber(vector[1], digits);\n  out[2] = roundNumber(vector[2], digits);\n  return out;\n}\nfunction jacobiN(a, n, w, v) {\n  var i;\n  var j;\n  var k;\n  var iq;\n  var ip;\n  var numPos;\n  var tresh;\n  var theta;\n  var t;\n  var tau;\n  var sm;\n  var s;\n  var h;\n  var g;\n  var c;\n  var tmp;\n  var b = createArray(n);\n  var z = createArray(n);\n\n  var vtkROTATE = function vtkROTATE(aa, ii, jj, kk, ll) {\n    g = aa[ii][jj];\n    h = aa[kk][ll];\n    aa[ii][jj] = g - s * (h + g * tau);\n    aa[kk][ll] = h + s * (g - h * tau);\n  }; // initialize\n\n\n  for (ip = 0; ip < n; ip++) {\n    for (iq = 0; iq < n; iq++) {\n      v[ip][iq] = 0.0;\n    }\n\n    v[ip][ip] = 1.0;\n  }\n\n  for (ip = 0; ip < n; ip++) {\n    b[ip] = w[ip] = a[ip][ip];\n    z[ip] = 0.0;\n  } // begin rotation sequence\n\n\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\n    sm = 0.0;\n\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        sm += Math.abs(a[ip][iq]);\n      }\n    }\n\n    if (sm === 0.0) {\n      break;\n    } // first 3 sweeps\n\n\n    if (i < 3) {\n      tresh = 0.2 * sm / (n * n);\n    } else {\n      tresh = 0.0;\n    }\n\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        g = 100.0 * Math.abs(a[ip][iq]); // after 4 sweeps\n\n        if (i > 3 && Math.abs(w[ip]) + g === Math.abs(w[ip]) && Math.abs(w[iq]) + g === Math.abs(w[iq])) {\n          a[ip][iq] = 0.0;\n        } else if (Math.abs(a[ip][iq]) > tresh) {\n          h = w[iq] - w[ip];\n\n          if (Math.abs(h) + g === Math.abs(h)) {\n            t = a[ip][iq] / h;\n          } else {\n            theta = 0.5 * h / a[ip][iq];\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\n\n            if (theta < 0.0) {\n              t = -t;\n            }\n          }\n\n          c = 1.0 / Math.sqrt(1 + t * t);\n          s = t * c;\n          tau = s / (1.0 + c);\n          h = t * a[ip][iq];\n          z[ip] -= h;\n          z[iq] += h;\n          w[ip] -= h;\n          w[iq] += h;\n          a[ip][iq] = 0.0; // ip already shifted left by 1 unit\n\n          for (j = 0; j <= ip - 1; j++) {\n            vtkROTATE(a, j, ip, j, iq);\n          } // ip and iq already shifted left by 1 unit\n\n\n          for (j = ip + 1; j <= iq - 1; j++) {\n            vtkROTATE(a, ip, j, j, iq);\n          } // iq already shifted left by 1 unit\n\n\n          for (j = iq + 1; j < n; j++) {\n            vtkROTATE(a, ip, j, iq, j);\n          }\n\n          for (j = 0; j < n; j++) {\n            vtkROTATE(v, j, ip, j, iq);\n          }\n        }\n      }\n    }\n\n    for (ip = 0; ip < n; ip++) {\n      b[ip] += z[ip];\n      w[ip] = b[ip];\n      z[ip] = 0.0;\n    }\n  } // this is NEVER called\n\n\n  if (i >= VTK_MAX_ROTATIONS) {\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\n    return 0;\n  } // sort eigenfunctions: these changes do not affect accuracy\n\n\n  for (j = 0; j < n - 1; j++) {\n    // boundary incorrect\n    k = j;\n    tmp = w[k];\n\n    for (i = j + 1; i < n; i++) {\n      // boundary incorrect, shifted already\n      if (w[i] >= tmp || Math.abs(w[i] - tmp) < VTK_SMALL_NUMBER) {\n        // why exchange if same?\n        k = i;\n        tmp = w[k];\n      }\n    }\n\n    if (k !== j) {\n      w[k] = w[j];\n      w[j] = tmp;\n\n      for (i = 0; i < n; i++) {\n        tmp = v[i][j];\n        v[i][j] = v[i][k];\n        v[i][k] = tmp;\n      }\n    }\n  } // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\n  // reek havoc in hyperstreamline/other stuff. We will select the most\n  // positive eigenvector.\n\n\n  var ceil_half_n = (n >> 1) + (n & 1);\n\n  for (j = 0; j < n; j++) {\n    for (numPos = 0, i = 0; i < n; i++) {\n      if (v[i][j] >= 0.0) {\n        numPos++;\n      }\n    } //    if ( numPos < ceil(double(n)/double(2.0)) )\n\n\n    if (numPos < ceil_half_n) {\n      for (i = 0; i < n; i++) {\n        v[i][j] *= -1.0;\n      }\n    }\n  }\n\n  return 1;\n}\nfunction matrix3x3ToQuaternion(mat_3x3, quat_4) {\n  var tmp = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]; // on-diagonal elements\n\n  tmp[0][0] = mat_3x3[0][0] + mat_3x3[1][1] + mat_3x3[2][2];\n  tmp[1][1] = mat_3x3[0][0] - mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[2][2] = -mat_3x3[0][0] + mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[3][3] = -mat_3x3[0][0] - mat_3x3[1][1] + mat_3x3[2][2]; // off-diagonal elements\n\n  tmp[0][1] = tmp[1][0] = mat_3x3[2][1] - mat_3x3[1][2];\n  tmp[0][2] = tmp[2][0] = mat_3x3[0][2] - mat_3x3[2][0];\n  tmp[0][3] = tmp[3][0] = mat_3x3[1][0] - mat_3x3[0][1];\n  tmp[1][2] = tmp[2][1] = mat_3x3[1][0] + mat_3x3[0][1];\n  tmp[1][3] = tmp[3][1] = mat_3x3[0][2] + mat_3x3[2][0];\n  tmp[2][3] = tmp[3][2] = mat_3x3[2][1] + mat_3x3[1][2];\n  var eigenvectors = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  var eigenvalues = [0, 0, 0, 0]; // convert into format that JacobiN can use,\n  // then use Jacobi to find eigenvalues and eigenvectors\n\n  var NTemp = [0, 0, 0, 0];\n  var eigenvectorsTemp = [0, 0, 0, 0];\n\n  for (var i = 0; i < 4; i++) {\n    NTemp[i] = tmp[i];\n    eigenvectorsTemp[i] = eigenvectors[i];\n  }\n\n  jacobiN(NTemp, 4, eigenvalues, eigenvectorsTemp); // the first eigenvector is the one we want\n\n  quat_4[0] = eigenvectors[0][0];\n  quat_4[1] = eigenvectors[1][0];\n  quat_4[2] = eigenvectors[2][0];\n  quat_4[3] = eigenvectors[3][0];\n}\nfunction multiplyQuaternion(quat_1, quat_2, quat_out) {\n  var ww = quat_1[0] * quat_2[0];\n  var wx = quat_1[0] * quat_2[1];\n  var wy = quat_1[0] * quat_2[2];\n  var wz = quat_1[0] * quat_2[3];\n  var xw = quat_1[1] * quat_2[0];\n  var xx = quat_1[1] * quat_2[1];\n  var xy = quat_1[1] * quat_2[2];\n  var xz = quat_1[1] * quat_2[3];\n  var yw = quat_1[2] * quat_2[0];\n  var yx = quat_1[2] * quat_2[1];\n  var yy = quat_1[2] * quat_2[2];\n  var yz = quat_1[2] * quat_2[3];\n  var zw = quat_1[3] * quat_2[0];\n  var zx = quat_1[3] * quat_2[1];\n  var zy = quat_1[3] * quat_2[2];\n  var zz = quat_1[3] * quat_2[3];\n  quat_out[0] = ww - xx - yy - zz;\n  quat_out[1] = wx + xw + yz - zy;\n  quat_out[2] = wy - xz + yw + zx;\n  quat_out[3] = wz + xy - yx + zw;\n}\nfunction orthogonalize3x3(a_3x3, out_3x3) {\n  // copy the matrix\n  for (var i = 0; i < 3; i++) {\n    out_3x3[0][i] = a_3x3[0][i];\n    out_3x3[1][i] = a_3x3[1][i];\n    out_3x3[2][i] = a_3x3[2][i];\n  } // Pivot the matrix to improve accuracy\n\n\n  var scale = createArray(3);\n  var index = createArray(3);\n  var largest; // Loop over rows to get implicit scaling information\n\n  for (var _i = 0; _i < 3; _i++) {\n    var _x = Math.abs(out_3x3[_i][0]);\n\n    var _x2 = Math.abs(out_3x3[_i][1]);\n\n    var _x3 = Math.abs(out_3x3[_i][2]);\n\n    largest = _x2 > _x ? _x2 : _x;\n    largest = _x3 > largest ? _x3 : largest;\n    scale[_i] = 1;\n\n    if (largest !== 0) {\n      scale[_i] /= largest;\n    }\n  } // first column\n\n\n  var x1 = Math.abs(out_3x3[0][0]) * scale[0];\n  var x2 = Math.abs(out_3x3[1][0]) * scale[1];\n  var x3 = Math.abs(out_3x3[2][0]) * scale[2];\n  index[0] = 0;\n  largest = x1;\n\n  if (x2 >= largest) {\n    largest = x2;\n    index[0] = 1;\n  }\n\n  if (x3 >= largest) {\n    index[0] = 2;\n  }\n\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n    scale[index[0]] = scale[0];\n  } // second column\n\n\n  var y2 = Math.abs(out_3x3[1][1]) * scale[1];\n  var y3 = Math.abs(out_3x3[2][1]) * scale[2];\n  index[1] = 1;\n  largest = y2;\n\n  if (y3 >= largest) {\n    index[1] = 2;\n    vtkSwapVectors3(out_3x3[2], out_3x3[1]);\n  } // third column\n\n\n  index[2] = 2; // A quaternion can only describe a pure rotation, not\n  // a rotation with a flip, therefore the flip must be\n  // removed before the matrix is converted to a quaternion.\n\n  var flip = 0;\n\n  if (determinant3x3(out_3x3) < 0) {\n    flip = 1;\n\n    for (var _i2 = 0; _i2 < 3; _i2++) {\n      out_3x3[0][_i2] = -out_3x3[0][_i2];\n      out_3x3[1][_i2] = -out_3x3[1][_i2];\n      out_3x3[2][_i2] = -out_3x3[2][_i2];\n    }\n  } // Do orthogonalization using a quaternion intermediate\n  // (this, essentially, does the orthogonalization via\n  // diagonalization of an appropriately constructed symmetric\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\n\n\n  var quat = createArray(4);\n  matrix3x3ToQuaternion(out_3x3, quat);\n  quaternionToMatrix3x3(quat, out_3x3); // Put the flip back into the orthogonalized matrix.\n\n  if (flip) {\n    for (var _i3 = 0; _i3 < 3; _i3++) {\n      out_3x3[0][_i3] = -out_3x3[0][_i3];\n      out_3x3[1][_i3] = -out_3x3[1][_i3];\n      out_3x3[2][_i3] = -out_3x3[2][_i3];\n    }\n  } // Undo the pivoting\n\n\n  if (index[1] !== 1) {\n    vtkSwapVectors3(out_3x3[index[1]], out_3x3[1]);\n  }\n\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n  }\n}\nfunction diagonalize3x3(a_3x3, w_3, v_3x3) {\n  var i;\n  var j;\n  var k;\n  var maxI;\n  var tmp;\n  var maxVal; // do the matrix[3][3] to **matrix conversion for Jacobi\n\n  var C = [createArray(3), createArray(3), createArray(3)];\n  var ATemp = createArray(3);\n  var VTemp = createArray(3);\n\n  for (i = 0; i < 3; i++) {\n    C[i][0] = a_3x3[i][0];\n    C[i][1] = a_3x3[i][1];\n    C[i][2] = a_3x3[i][2];\n    ATemp[i] = C[i];\n    VTemp[i] = v_3x3[i];\n  } // diagonalize using Jacobi\n\n\n  jacobiN(ATemp, 3, w_3, VTemp); // if all the eigenvalues are the same, return identity matrix\n\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\n    identity3x3(v_3x3);\n    return;\n  } // transpose temporarily, it makes it easier to sort the eigenvectors\n\n\n  transpose3x3(v_3x3, v_3x3); // if two eigenvalues are the same, re-orthogonalize to optimally line\n  // up the eigenvectors with the x, y, and z axes\n\n  for (i = 0; i < 3; i++) {\n    // two eigenvalues are the same\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\n      // find maximum element of the independent eigenvector\n      maxVal = Math.abs(v_3x3[i][0]);\n      maxI = 0;\n\n      for (j = 1; j < 3; j++) {\n        if (maxVal < (tmp = Math.abs(v_3x3[i][j]))) {\n          maxVal = tmp;\n          maxI = j;\n        }\n      } // swap the eigenvector into its proper position\n\n\n      if (maxI !== i) {\n        tmp = w_3[maxI];\n        w_3[maxI] = w_3[i];\n        w_3[i] = tmp;\n        vtkSwapVectors3(v_3x3[i], v_3x3[maxI]);\n      } // maximum element of eigenvector should be positive\n\n\n      if (v_3x3[maxI][maxI] < 0) {\n        v_3x3[maxI][0] = -v_3x3[maxI][0];\n        v_3x3[maxI][1] = -v_3x3[maxI][1];\n        v_3x3[maxI][2] = -v_3x3[maxI][2];\n      } // re-orthogonalize the other two eigenvectors\n\n\n      j = (maxI + 1) % 3;\n      k = (maxI + 2) % 3;\n      v_3x3[j][0] = 0.0;\n      v_3x3[j][1] = 0.0;\n      v_3x3[j][2] = 0.0;\n      v_3x3[j][j] = 1.0;\n      cross(v_3x3[maxI], v_3x3[j], v_3x3[k]);\n      normalize(v_3x3[k]);\n      cross(v_3x3[k], v_3x3[maxI], v_3x3[j]); // transpose vectors back to columns\n\n      transpose3x3(v_3x3, v_3x3);\n      return;\n    }\n  } // the three eigenvalues are different, just sort the eigenvectors\n  // to align them with the x, y, and z axes\n  // find the vector with the largest x element, make that vector\n  // the first vector\n\n\n  maxVal = Math.abs(v_3x3[0][0]);\n  maxI = 0;\n\n  for (i = 1; i < 3; i++) {\n    if (maxVal < (tmp = Math.abs(v_3x3[i][0]))) {\n      maxVal = tmp;\n      maxI = i;\n    }\n  } // swap eigenvalue and eigenvector\n\n\n  if (maxI !== 0) {\n    tmp = w_3[maxI];\n    w_3[maxI] = w_3[0];\n    w_3[0] = tmp;\n    vtkSwapVectors3(v_3x3[maxI], v_3x3[0]);\n  } // do the same for the y element\n\n\n  if (Math.abs(v_3x3[1][1]) < Math.abs(v_3x3[2][1])) {\n    tmp = w_3[2];\n    w_3[2] = w_3[1];\n    w_3[1] = tmp;\n    vtkSwapVectors3(v_3x3[2], v_3x3[1]);\n  } // ensure that the sign of the eigenvectors is correct\n\n\n  for (i = 0; i < 2; i++) {\n    if (v_3x3[i][i] < 0) {\n      v_3x3[i][0] = -v_3x3[i][0];\n      v_3x3[i][1] = -v_3x3[i][1];\n      v_3x3[i][2] = -v_3x3[i][2];\n    }\n  } // set sign of final eigenvector to ensure that determinant is positive\n\n\n  if (determinant3x3(v_3x3) < 0) {\n    v_3x3[2][0] = -v_3x3[2][0];\n    v_3x3[2][1] = -v_3x3[2][1];\n    v_3x3[2][2] = -v_3x3[2][2];\n  } // transpose the eigenvectors back again\n\n\n  transpose3x3(v_3x3, v_3x3);\n}\nfunction singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\n  var i;\n  var B = [createArray(3), createArray(3), createArray(3)]; // copy so that A can be used for U or VT without risk\n\n  for (i = 0; i < 3; i++) {\n    B[0][i] = a_3x3[0][i];\n    B[1][i] = a_3x3[1][i];\n    B[2][i] = a_3x3[2][i];\n  } // temporarily flip if determinant is negative\n\n\n  var d = determinant3x3(B);\n\n  if (d < 0) {\n    for (i = 0; i < 3; i++) {\n      B[0][i] = -B[0][i];\n      B[1][i] = -B[1][i];\n      B[2][i] = -B[2][i];\n    }\n  } // orthogonalize, diagonalize, etc.\n\n\n  orthogonalize3x3(B, u_3x3);\n  transpose3x3(B, B);\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\n  transpose3x3(vT_3x3, vT_3x3); // re-create the flip\n\n  if (d < 0) {\n    w_3[0] = -w_3[0];\n    w_3[1] = -w_3[1];\n    w_3[2] = -w_3[2];\n  }\n}\nfunction luFactorLinearSystem(A, index, size) {\n  var i;\n  var j;\n  var k;\n  var largest;\n  var maxI = 0;\n  var sum;\n  var temp1;\n  var temp2;\n  var scale = createArray(size); //\n  // Loop over rows to get implicit scaling information\n  //\n\n  for (i = 0; i < size; i++) {\n    for (largest = 0.0, j = 0; j < size; j++) {\n      if ((temp2 = Math.abs(A[i][j])) > largest) {\n        largest = temp2;\n      }\n    }\n\n    if (largest === 0.0) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n\n    scale[i] = 1.0 / largest;\n  } //\n  // Loop over all columns using Crout's method\n  //\n\n\n  for (j = 0; j < size; j++) {\n    for (i = 0; i < j; i++) {\n      sum = A[i][j];\n\n      for (k = 0; k < i; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n\n      A[i][j] = sum;\n    } //\n    // Begin search for largest pivot element\n    //\n\n\n    for (largest = 0.0, i = j; i < size; i++) {\n      sum = A[i][j];\n\n      for (k = 0; k < j; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n\n      A[i][j] = sum;\n\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\n        largest = temp1;\n        maxI = i;\n      }\n    } //\n    // Check for row interchange\n    //\n\n\n    if (j !== maxI) {\n      for (k = 0; k < size; k++) {\n        temp1 = A[maxI][k];\n        A[maxI][k] = A[j][k];\n        A[j][k] = temp1;\n      }\n\n      scale[maxI] = scale[j];\n    } //\n    // Divide by pivot element and perform elimination\n    //\n\n\n    index[j] = maxI;\n\n    if (Math.abs(A[j][j]) <= VTK_SMALL_NUMBER) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n\n    if (j !== size - 1) {\n      temp1 = 1.0 / A[j][j];\n\n      for (i = j + 1; i < size; i++) {\n        A[i][j] *= temp1;\n      }\n    }\n  }\n\n  return 1;\n}\nfunction luSolveLinearSystem(A, index, x, size) {\n  var i;\n  var j;\n  var ii;\n  var idx;\n  var sum; //\n  // Proceed with forward and backsubstitution for L and U\n  // matrices.  First, forward substitution.\n  //\n\n  for (ii = -1, i = 0; i < size; i++) {\n    idx = index[i];\n    sum = x[idx];\n    x[idx] = x[i];\n\n    if (ii >= 0) {\n      for (j = ii; j <= i - 1; j++) {\n        sum -= A[i][j] * x[j];\n      }\n    } else if (sum !== 0.0) {\n      ii = i;\n    }\n\n    x[i] = sum;\n  } //\n  // Now, back substitution\n  //\n\n\n  for (i = size - 1; i >= 0; i--) {\n    sum = x[i];\n\n    for (j = i + 1; j < size; j++) {\n      sum -= A[i][j] * x[j];\n    }\n\n    x[i] = sum / A[i][i];\n  }\n}\nfunction solveLinearSystem(A, x, size) {\n  // if we solving something simple, just solve it\n  if (size === 2) {\n    var y = createArray(2);\n    var det = determinant2x2(A[0][0], A[0][1], A[1][0], A[1][1]);\n\n    if (det === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    y[0] = (A[1][1] * x[0] - A[0][1] * x[1]) / det;\n    y[1] = (-(A[1][0] * x[0]) + A[0][0] * x[1]) / det;\n    x[0] = y[0];\n    x[1] = y[1];\n    return 1;\n  }\n\n  if (size === 1) {\n    if (A[0][0] === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    x[0] /= A[0][0];\n    return 1;\n  } //\n  // System of equations is not trivial, use Crout's method\n  //\n  // Check on allocation of working vectors\n\n\n  var index = createArray(size); // Factor and solve matrix\n\n  if (luFactorLinearSystem(A, index, size) === 0) {\n    return 0;\n  }\n\n  luSolveLinearSystem(A, index, x, size);\n  return 1;\n}\nfunction invertMatrix(A, AI, size) {\n  var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var column = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var tmp1Size = index || createArray(size);\n  var tmp2Size = column || createArray(size); // Factor matrix; then begin solving for inverse one column at a time.\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\n  // memory whose values are not used in LUSolveLinearSystem\n\n  if (luFactorLinearSystem(A, tmp1Size, size) === 0) {\n    return 0;\n  }\n\n  for (var j = 0; j < size; j++) {\n    for (var i = 0; i < size; i++) {\n      tmp2Size[i] = 0.0;\n    }\n\n    tmp2Size[j] = 1.0;\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\n\n    for (var _i4 = 0; _i4 < size; _i4++) {\n      AI[_i4][j] = tmp2Size[_i4];\n    }\n  }\n\n  return 1;\n}\nfunction estimateMatrixCondition(A, size) {\n  var minValue = +Number.MAX_VALUE;\n  var maxValue = -Number.MAX_VALUE; // find the maximum value\n\n  for (var i = 0; i < size; i++) {\n    for (var j = i; j < size; j++) {\n      if (Math.abs(A[i][j]) > max) {\n        maxValue = Math.abs(A[i][j]);\n      }\n    }\n  } // find the minimum diagonal value\n\n\n  for (var _i5 = 0; _i5 < size; _i5++) {\n    if (Math.abs(A[_i5][_i5]) < min) {\n      minValue = Math.abs(A[_i5][_i5]);\n    }\n  }\n\n  if (minValue === 0.0) {\n    return Number.MAX_VALUE;\n  }\n\n  return maxValue / minValue;\n}\nfunction jacobi(a_3x3, w, v) {\n  return jacobiN(a_3x3, 3, w, v);\n}\nfunction solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  var i;\n  var j;\n  var k; // set up intermediate variables\n  // Allocate matrix to hold X times transpose of X\n\n  var XXt = createArray(xOrder); // size x by x\n  // Allocate the array of eigenvalues and eigenvectors\n\n  var eigenvals = createArray(xOrder);\n  var eigenvecs = createArray(xOrder); // Clear the upper triangular region (and btw, allocate the eigenvecs as well)\n\n  for (i = 0; i < xOrder; i++) {\n    eigenvecs[i] = createArray(xOrder);\n    XXt[i] = createArray(xOrder);\n\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n    }\n  } // Calculate XXt upper half only, due to symmetry\n\n\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      }\n    }\n  } // now fill in the lower half of the XXt matrix\n\n\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  } // Compute the eigenvectors and eigenvalues\n\n\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs); // Smallest eigenval is at the end of the list (xOrder-1), and solution is\n  // corresponding eigenvec.\n\n  for (i = 0; i < xOrder; i++) {\n    mt[i][0] = eigenvecs[i][xOrder - 1];\n  }\n\n  return 1;\n}\nfunction solveLeastSquares(numberOfSamples, xt, xOrder, yt, yOrder, mt) {\n  var checkHomogeneous = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n\n  // check dimensional consistency\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  var homogenFlags = createArray(yOrder);\n  var allHomogeneous = 1;\n  var hmt;\n  var homogRC = 0;\n  var i;\n  var j;\n  var k;\n  var someHomogeneous = 0; // Ok, first init some flags check and see if all the systems are homogeneous\n\n  if (checkHomogeneous) {\n    // If Y' is zero, it's a homogeneous system and can't be solved via\n    // the pseudoinverse method. Detect this case, warn the user, and\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\n    // really make much sense for yOrder to be greater than one in this case,\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\n    // we allow it anyway. N\n    // Initialize homogeneous flags on a per-right-hand-side basis\n    for (j = 0; j < yOrder; j++) {\n      homogenFlags[j] = 1;\n    }\n\n    for (i = 0; i < numberOfSamples; i++) {\n      for (j = 0; j < yOrder; j++) {\n        if (Math.abs(yt[i][j]) > VTK_SMALL_NUMBER) {\n          allHomogeneous = 0;\n          homogenFlags[j] = 0;\n        }\n      }\n    } // If we've got one system, and it's homogeneous, do it and bail out quickly.\n\n\n    if (allHomogeneous && yOrder === 1) {\n      vtkWarningMacro('Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()');\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\n    } // Ok, we've got more than one system of equations.\n    // Figure out if we need to calculate the homogeneous equation solution for\n    // any of them.\n\n\n    if (allHomogeneous) {\n      someHomogeneous = 1;\n    } else {\n      for (j = 0; j < yOrder; j++) {\n        if (homogenFlags[j]) {\n          someHomogeneous = 1;\n        }\n      }\n    }\n  } // If necessary, solve the homogeneous problem\n\n\n  if (someHomogeneous) {\n    // hmt is the homogeneous equation version of mt, the general solution.\n    hmt = createArray(xOrder);\n\n    for (j = 0; j < xOrder; j++) {\n      // Only allocate 1 here, not yOrder, because here we're going to solve\n      // just the one homogeneous equation subset of the entire problem\n      hmt[j] = [0];\n    } // Ok, solve the homogeneous problem\n\n\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\n  } // set up intermediate variables\n\n\n  var XXt = createArray(xOrder); // size x by x\n\n  var XXtI = createArray(xOrder); // size x by x\n\n  var XYt = createArray(xOrder); // size x by y\n\n  for (i = 0; i < xOrder; i++) {\n    XXt[i] = createArray(xOrder);\n    XXtI[i] = createArray(xOrder);\n\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n      XXtI[i][j] = 0.0;\n    }\n\n    XYt[i] = createArray(yOrder);\n\n    for (j = 0; j < yOrder; j++) {\n      XYt[i][j] = 0.0;\n    }\n  } // first find the pseudoinverse matrix\n\n\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      } // now calculate the XYt matrix\n\n\n      for (j = 0; j < yOrder; j++) {\n        XYt[i][j] += xt[k][i] * yt[k][j];\n      }\n    }\n  } // now fill in the lower half of the XXt matrix\n\n\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  }\n\n  var successFlag = invertMatrix(XXt, XXtI, xOrder); // next get the inverse of XXt\n\n  if (successFlag) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = 0; j < yOrder; j++) {\n        mt[i][j] = 0.0;\n\n        for (k = 0; k < xOrder; k++) {\n          mt[i][j] += XXtI[i][k] * XYt[k][j];\n        }\n      }\n    }\n  } // Fix up any of the solutions that correspond to the homogeneous equation\n  // problem.\n\n\n  if (someHomogeneous) {\n    for (j = 0; j < yOrder; j++) {\n      if (homogenFlags[j]) {\n        // Fix this one\n        for (i = 0; i < xOrder; i++) {\n          mt[i][j] = hmt[i][0];\n        }\n      }\n    }\n  }\n\n  if (someHomogeneous) {\n    return homogRC && successFlag;\n  }\n\n  return successFlag;\n}\nfunction hex2float(hexStr) {\n  var outFloatArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0.5, 1];\n\n  switch (hexStr.length) {\n    case 3:\n      // abc => #aabbcc\n      outFloatArray[0] = parseInt(hexStr[0], 16) * 17 / 255;\n      outFloatArray[1] = parseInt(hexStr[1], 16) * 17 / 255;\n      outFloatArray[2] = parseInt(hexStr[2], 16) * 17 / 255;\n      return outFloatArray;\n\n    case 4:\n      // #abc => #aabbcc\n      outFloatArray[0] = parseInt(hexStr[1], 16) * 17 / 255;\n      outFloatArray[1] = parseInt(hexStr[2], 16) * 17 / 255;\n      outFloatArray[2] = parseInt(hexStr[3], 16) * 17 / 255;\n      return outFloatArray;\n\n    case 6:\n      // ab01df => #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\n      return outFloatArray;\n\n    case 7:\n      // #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      return outFloatArray;\n\n    case 9:\n      // #ab01df00\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\n      return outFloatArray;\n\n    default:\n      return outFloatArray;\n  }\n}\nfunction rgb2hsv(rgb, hsv) {\n  var h;\n  var s;\n\n  var _rgb = _slicedToArray(rgb, 3),\n      r = _rgb[0],\n      g = _rgb[1],\n      b = _rgb[2];\n\n  var onethird = 1.0 / 3.0;\n  var onesixth = 1.0 / 6.0;\n  var twothird = 2.0 / 3.0;\n  var cmax = r;\n  var cmin = r;\n\n  if (g > cmax) {\n    cmax = g;\n  } else if (g < cmin) {\n    cmin = g;\n  }\n\n  if (b > cmax) {\n    cmax = b;\n  } else if (b < cmin) {\n    cmin = b;\n  }\n\n  var v = cmax;\n\n  if (v > 0.0) {\n    s = (cmax - cmin) / cmax;\n  } else {\n    s = 0.0;\n  }\n\n  if (s > 0) {\n    if (r === cmax) {\n      h = onesixth * (g - b) / (cmax - cmin);\n    } else if (g === cmax) {\n      h = onethird + onesixth * (b - r) / (cmax - cmin);\n    } else {\n      h = twothird + onesixth * (r - g) / (cmax - cmin);\n    }\n\n    if (h < 0.0) {\n      h += 1.0;\n    }\n  } else {\n    h = 0.0;\n  } // Set the values back to the array\n\n\n  hsv[0] = h;\n  hsv[1] = s;\n  hsv[2] = v;\n}\nfunction hsv2rgb(hsv, rgb) {\n  var _hsv = _slicedToArray(hsv, 3),\n      h = _hsv[0],\n      s = _hsv[1],\n      v = _hsv[2];\n\n  var onethird = 1.0 / 3.0;\n  var onesixth = 1.0 / 6.0;\n  var twothird = 2.0 / 3.0;\n  var fivesixth = 5.0 / 6.0;\n  var r;\n  var g;\n  var b; // compute RGB from HSV\n\n  if (h > onesixth && h <= onethird) {\n    // green/red\n    g = 1.0;\n    r = (onethird - h) / onesixth;\n    b = 0.0;\n  } else if (h > onethird && h <= 0.5) {\n    // green/blue\n    g = 1.0;\n    b = (h - onethird) / onesixth;\n    r = 0.0;\n  } else if (h > 0.5 && h <= twothird) {\n    // blue/green\n    b = 1.0;\n    g = (twothird - h) / onesixth;\n    r = 0.0;\n  } else if (h > twothird && h <= fivesixth) {\n    // blue/red\n    b = 1.0;\n    r = (h - twothird) / onesixth;\n    g = 0.0;\n  } else if (h > fivesixth && h <= 1.0) {\n    // red/blue\n    r = 1.0;\n    b = (1.0 - h) / onesixth;\n    g = 0.0;\n  } else {\n    // red/green\n    r = 1.0;\n    g = h / onesixth;\n    b = 0.0;\n  } // add Saturation to the equation.\n\n\n  r = s * r + (1.0 - s);\n  g = s * g + (1.0 - s);\n  b = s * b + (1.0 - s);\n  r *= v;\n  g *= v;\n  b *= v; // Assign back to the array\n\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\nfunction lab2xyz(lab, xyz) {\n  // LAB to XYZ\n  var _lab = _slicedToArray(lab, 3),\n      L = _lab[0],\n      a = _lab[1],\n      b = _lab[2];\n\n  var var_Y = (L + 16) / 116;\n  var var_X = a / 500 + var_Y;\n  var var_Z = var_Y - b / 200;\n\n  if (Math.pow(var_Y, 3) > 0.008856) {\n    var_Y = Math.pow(var_Y, 3);\n  } else {\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\n  }\n\n  if (Math.pow(var_X, 3) > 0.008856) {\n    var_X = Math.pow(var_X, 3);\n  } else {\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\n  }\n\n  if (Math.pow(var_Z, 3) > 0.008856) {\n    var_Z = Math.pow(var_Z, 3);\n  } else {\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\n  }\n\n  var ref_X = 0.9505;\n  var ref_Y = 1.0;\n  var ref_Z = 1.089;\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\n\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\n\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\n}\nfunction xyz2lab(xyz, lab) {\n  var _xyz = _slicedToArray(xyz, 3),\n      x = _xyz[0],\n      y = _xyz[1],\n      z = _xyz[2];\n\n  var ref_X = 0.9505;\n  var ref_Y = 1.0;\n  var ref_Z = 1.089;\n  var var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\n\n  var var_Y = y / ref_Y; // ref_Y = 1.000\n\n  var var_Z = z / ref_Z; // ref_Z = 1.089\n\n  if (var_X > 0.008856) var_X = Math.pow(var_X, 1.0 / 3.0);else var_X = 7.787 * var_X + 16.0 / 116.0;\n  if (var_Y > 0.008856) var_Y = Math.pow(var_Y, 1.0 / 3.0);else var_Y = 7.787 * var_Y + 16.0 / 116.0;\n  if (var_Z > 0.008856) var_Z = Math.pow(var_Z, 1.0 / 3.0);else var_Z = 7.787 * var_Z + 16.0 / 116.0;\n  lab[0] = 116 * var_Y - 16;\n  lab[1] = 500 * (var_X - var_Y);\n  lab[2] = 200 * (var_Y - var_Z);\n}\nfunction xyz2rgb(xyz, rgb) {\n  var _xyz2 = _slicedToArray(xyz, 3),\n      x = _xyz2[0],\n      y = _xyz2[1],\n      z = _xyz2[2];\n\n  var r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  var g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  var b = x * 0.0557 + y * -0.204 + z * 1.057; // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n\n  if (r > 0.0031308) r = 1.055 * Math.pow(r, 1 / 2.4) - 0.055;else r *= 12.92;\n  if (g > 0.0031308) g = 1.055 * Math.pow(g, 1 / 2.4) - 0.055;else g *= 12.92;\n  if (b > 0.0031308) b = 1.055 * Math.pow(b, 1 / 2.4) - 0.055;else b *= 12.92; // Clip colors. ideally we would do something that is perceptually closest\n  // (since we can see colors outside of the display gamut), but this seems to\n  // work well enough.\n\n  var maxVal = r;\n  if (maxVal < g) maxVal = g;\n  if (maxVal < b) maxVal = b;\n\n  if (maxVal > 1.0) {\n    r /= maxVal;\n    g /= maxVal;\n    b /= maxVal;\n  }\n\n  if (r < 0) r = 0;\n  if (g < 0) g = 0;\n  if (b < 0) b = 0; // Push values back to array\n\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\nfunction rgb2xyz(rgb, xyz) {\n  var _rgb2 = _slicedToArray(rgb, 3),\n      r = _rgb2[0],\n      g = _rgb2[1],\n      b = _rgb2[2]; // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n\n\n  if (r > 0.04045) r = Math.pow((r + 0.055) / 1.055, 2.4);else r /= 12.92;\n  if (g > 0.04045) g = Math.pow((g + 0.055) / 1.055, 2.4);else g /= 12.92;\n  if (b > 0.04045) b = Math.pow((b + 0.055) / 1.055, 2.4);else b /= 12.92; // Observer. = 2 deg, Illuminant = D65\n\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\n}\nfunction rgb2lab(rgb, lab) {\n  var xyz = [0, 0, 0];\n  rgb2xyz(rgb, xyz);\n  xyz2lab(xyz, lab);\n}\nfunction lab2rgb(lab, rgb) {\n  var xyz = [0, 0, 0];\n  lab2xyz(lab, xyz);\n  xyz2rgb(xyz, rgb);\n}\nfunction uninitializeBounds(bounds) {\n  bounds[0] = 1.0;\n  bounds[1] = -1.0;\n  bounds[2] = 1.0;\n  bounds[3] = -1.0;\n  bounds[4] = 1.0;\n  bounds[5] = -1.0;\n  return bounds;\n}\nfunction areBoundsInitialized(bounds) {\n  return !(bounds[1] - bounds[0] < 0.0);\n}\nfunction computeBoundsFromPoints(point1, point2, bounds) {\n  bounds[0] = Math.min(point1[0], point2[0]);\n  bounds[1] = Math.max(point1[0], point2[0]);\n  bounds[2] = Math.min(point1[1], point2[1]);\n  bounds[3] = Math.max(point1[1], point2[1]);\n  bounds[4] = Math.min(point1[2], point2[2]);\n  bounds[5] = Math.max(point1[2], point2[2]);\n  return bounds;\n}\nfunction clampValue(value, minValue, maxValue) {\n  if (value < minValue) {\n    return minValue;\n  }\n\n  if (value > maxValue) {\n    return maxValue;\n  }\n\n  return value;\n}\nfunction clampVector(vector, minVector, maxVector) {\n  var out = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 0, 0];\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\n  return out;\n}\nfunction clampAndNormalizeValue(value, range) {\n  var result = 0;\n\n  if (range[0] !== range[1]) {\n    // clamp\n    if (value < range[0]) {\n      result = range[0];\n    } else if (value > range[1]) {\n      result = range[1];\n    } else {\n      result = value;\n    } // normalize\n\n\n    result = (result - range[0]) / (range[1] - range[0]);\n  }\n\n  return result;\n}\nvar getScalarTypeFittingRange = notImplemented('GetScalarTypeFittingRange');\nvar getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\nfunction extentIsWithinOtherExtent(extent1, extent2) {\n  if (!extent1 || !extent2) {\n    return 0;\n  }\n\n  for (var i = 0; i < 6; i += 2) {\n    if (extent1[i] < extent2[i] || extent1[i] > extent2[i + 1] || extent1[i + 1] < extent2[i] || extent1[i + 1] > extent2[i + 1]) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\nfunction boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\n  if (!bounds1_6 || !bounds2_6) {\n    return 0;\n  }\n\n  for (var i = 0; i < 6; i += 2) {\n    if (bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] || bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\nfunction pointIsWithinBounds(point_3, bounds_6, delta_3) {\n  if (!point_3 || !bounds_6 || !delta_3) {\n    return 0;\n  }\n\n  for (var i = 0; i < 3; i++) {\n    if (point_3[i] + delta_3[i] < bounds_6[2 * i] || point_3[i] - delta_3[i] > bounds_6[2 * i + 1]) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\nfunction solve3PointCircle(p1, p2, p3, center) {\n  var v21 = createArray(3);\n  var v32 = createArray(3);\n  var v13 = createArray(3);\n  var v12 = createArray(3);\n  var v23 = createArray(3);\n  var v31 = createArray(3);\n\n  for (var i = 0; i < 3; ++i) {\n    v21[i] = p1[i] - p2[i];\n    v32[i] = p2[i] - p3[i];\n    v13[i] = p3[i] - p1[i];\n    v12[i] = -v21[i];\n    v23[i] = -v32[i];\n    v31[i] = -v13[i];\n  }\n\n  var norm12 = norm(v12);\n  var norm23 = norm(v23);\n  var norm13 = norm(v13);\n  var crossv21v32 = createArray(3);\n  cross(v21, v32, crossv21v32);\n  var normCross = norm(crossv21v32);\n  var radius = norm12 * norm23 * norm13 / (2 * normCross);\n  var normCross22 = 2 * normCross * normCross;\n  var alpha = norm23 * norm23 * dot(v21, v31) / normCross22;\n  var beta = norm13 * norm13 * dot(v12, v32) / normCross22;\n  var gamma = norm12 * norm12 * dot(v13, v23) / normCross22;\n\n  for (var _i6 = 0; _i6 < 3; ++_i6) {\n    center[_i6] = alpha * p1[_i6] + beta * p2[_i6] + gamma * p3[_i6];\n  }\n\n  return radius;\n}\nvar inf = Infinity;\nvar negInf = -Infinity;\nvar isInf = function isInf(value) {\n  return !Number.isFinite(value);\n};\nvar isFinite = Number.isFinite,\n    isNaN = Number.isNaN;\nvar isNan = isNaN; // JavaScript - add-on ----------------------\n\nfunction createUninitializedBounds() {\n  return [].concat([Number.MAX_VALUE, -Number.MAX_VALUE, // X\n  Number.MAX_VALUE, -Number.MAX_VALUE, // Y\n  Number.MAX_VALUE, -Number.MAX_VALUE // Z\n  ]);\n}\nfunction getMajorAxisIndex(vector) {\n  var maxValue = -1;\n  var axisIndex = -1;\n\n  for (var i = 0; i < vector.length; i++) {\n    var value = Math.abs(vector[i]);\n\n    if (value > maxValue) {\n      axisIndex = i;\n      maxValue = value;\n    }\n  }\n\n  return axisIndex;\n}\nfunction floatToHex2(value) {\n  var integer = Math.floor(value * 255);\n\n  if (integer > 15) {\n    return integer.toString(16);\n  }\n\n  return \"0\".concat(integer.toString(16));\n}\nfunction floatRGB2HexCode(rgbArray) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#';\n  return \"\".concat(prefix).concat(rgbArray.map(floatToHex2).join(''));\n}\n\nfunction floatToChar(f) {\n  return Math.round(f * 255);\n}\n\nfunction float2CssRGBA(rgbArray) {\n  if (rgbArray.length === 3) {\n    return \"rgb(\".concat(rgbArray.map(floatToChar).join(', '), \")\");\n  }\n\n  return \"rgba(\".concat(floatToChar(rgbArray[0] || 0), \", \").concat(floatToChar(rgbArray[1] || 0), \", \").concat(floatToChar(rgbArray[2] || 0), \", \").concat(rgbArray[3] || 0, \")\");\n} // ----------------------------------------------------------------------------\n// Only Static API\n// ----------------------------------------------------------------------------\n\nvar vtkMath = {\n  Pi: Pi,\n  radiansFromDegrees: radiansFromDegrees,\n  degreesFromRadians: degreesFromRadians,\n  round: round,\n  floor: floor,\n  ceil: ceil,\n  ceilLog2: ceilLog2,\n  min: min,\n  max: max,\n  arrayMin: arrayMin,\n  arrayMax: arrayMax,\n  arrayRange: arrayRange,\n  isPowerOfTwo: isPowerOfTwo,\n  nearestPowerOfTwo: nearestPowerOfTwo,\n  factorial: factorial,\n  binomial: binomial,\n  beginCombination: beginCombination,\n  nextCombination: nextCombination,\n  randomSeed: randomSeed,\n  getSeed: getSeed,\n  random: random,\n  gaussian: gaussian,\n  add: add,\n  subtract: subtract,\n  multiplyScalar: multiplyScalar,\n  multiplyScalar2D: multiplyScalar2D,\n  multiplyAccumulate: multiplyAccumulate,\n  multiplyAccumulate2D: multiplyAccumulate2D,\n  dot: dot,\n  outer: outer,\n  cross: cross,\n  norm: norm,\n  normalize: normalize,\n  perpendiculars: perpendiculars,\n  projectVector: projectVector,\n  projectVector2D: projectVector2D,\n  distance2BetweenPoints: distance2BetweenPoints,\n  angleBetweenVectors: angleBetweenVectors,\n  gaussianAmplitude: gaussianAmplitude,\n  gaussianWeight: gaussianWeight,\n  dot2D: dot2D,\n  outer2D: outer2D,\n  norm2D: norm2D,\n  normalize2D: normalize2D,\n  determinant2x2: determinant2x2,\n  LUFactor3x3: LUFactor3x3,\n  LUSolve3x3: LUSolve3x3,\n  linearSolve3x3: linearSolve3x3,\n  multiply3x3_vect3: multiply3x3_vect3,\n  multiply3x3_mat3: multiply3x3_mat3,\n  multiplyMatrix: multiplyMatrix,\n  transpose3x3: transpose3x3,\n  invert3x3: invert3x3,\n  identity3x3: identity3x3,\n  determinant3x3: determinant3x3,\n  quaternionToMatrix3x3: quaternionToMatrix3x3,\n  areEquals: areEquals,\n  areMatricesEqual: areMatricesEqual,\n  roundNumber: roundNumber,\n  roundVector: roundVector,\n  matrix3x3ToQuaternion: matrix3x3ToQuaternion,\n  multiplyQuaternion: multiplyQuaternion,\n  orthogonalize3x3: orthogonalize3x3,\n  diagonalize3x3: diagonalize3x3,\n  singularValueDecomposition3x3: singularValueDecomposition3x3,\n  solveLinearSystem: solveLinearSystem,\n  invertMatrix: invertMatrix,\n  luFactorLinearSystem: luFactorLinearSystem,\n  luSolveLinearSystem: luSolveLinearSystem,\n  estimateMatrixCondition: estimateMatrixCondition,\n  jacobi: jacobi,\n  jacobiN: jacobiN,\n  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,\n  solveLeastSquares: solveLeastSquares,\n  hex2float: hex2float,\n  rgb2hsv: rgb2hsv,\n  hsv2rgb: hsv2rgb,\n  lab2xyz: lab2xyz,\n  xyz2lab: xyz2lab,\n  xyz2rgb: xyz2rgb,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  lab2rgb: lab2rgb,\n  uninitializeBounds: uninitializeBounds,\n  areBoundsInitialized: areBoundsInitialized,\n  computeBoundsFromPoints: computeBoundsFromPoints,\n  clampValue: clampValue,\n  clampVector: clampVector,\n  clampAndNormalizeValue: clampAndNormalizeValue,\n  getScalarTypeFittingRange: getScalarTypeFittingRange,\n  getAdjustedScalarRange: getAdjustedScalarRange,\n  extentIsWithinOtherExtent: extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,\n  pointIsWithinBounds: pointIsWithinBounds,\n  solve3PointCircle: solve3PointCircle,\n  inf: inf,\n  negInf: negInf,\n  isInf: isInf,\n  isNan: isNaN,\n  isNaN: isNaN,\n  isFinite: isFinite,\n  // JS add-on\n  createUninitializedBounds: createUninitializedBounds,\n  getMajorAxisIndex: getMajorAxisIndex,\n  floatToHex2: floatToHex2,\n  floatRGB2HexCode: floatRGB2HexCode,\n  float2CssRGBA: float2CssRGBA\n};\n\nvar vtkMath$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Pi: Pi,\n  radiansFromDegrees: radiansFromDegrees,\n  degreesFromRadians: degreesFromRadians,\n  round: round,\n  floor: floor,\n  ceil: ceil,\n  min: min,\n  max: max,\n  arrayMin: arrayMin,\n  arrayMax: arrayMax,\n  arrayRange: arrayRange,\n  ceilLog2: ceilLog2,\n  factorial: factorial,\n  nearestPowerOfTwo: nearestPowerOfTwo,\n  isPowerOfTwo: isPowerOfTwo,\n  binomial: binomial,\n  beginCombination: beginCombination,\n  nextCombination: nextCombination,\n  randomSeed: randomSeed,\n  getSeed: getSeed,\n  random: random,\n  gaussian: gaussian,\n  add: add,\n  subtract: subtract,\n  multiplyScalar: multiplyScalar,\n  multiplyScalar2D: multiplyScalar2D,\n  multiplyAccumulate: multiplyAccumulate,\n  multiplyAccumulate2D: multiplyAccumulate2D,\n  dot: dot,\n  outer: outer,\n  cross: cross,\n  norm: norm,\n  normalize: normalize,\n  perpendiculars: perpendiculars,\n  projectVector: projectVector,\n  dot2D: dot2D,\n  projectVector2D: projectVector2D,\n  distance2BetweenPoints: distance2BetweenPoints,\n  angleBetweenVectors: angleBetweenVectors,\n  signedAngleBetweenVectors: signedAngleBetweenVectors,\n  gaussianAmplitude: gaussianAmplitude,\n  gaussianWeight: gaussianWeight,\n  outer2D: outer2D,\n  norm2D: norm2D,\n  normalize2D: normalize2D,\n  determinant2x2: determinant2x2,\n  LUFactor3x3: LUFactor3x3,\n  LUSolve3x3: LUSolve3x3,\n  linearSolve3x3: linearSolve3x3,\n  multiply3x3_vect3: multiply3x3_vect3,\n  multiply3x3_mat3: multiply3x3_mat3,\n  multiplyMatrix: multiplyMatrix,\n  transpose3x3: transpose3x3,\n  invert3x3: invert3x3,\n  identity3x3: identity3x3,\n  determinant3x3: determinant3x3,\n  quaternionToMatrix3x3: quaternionToMatrix3x3,\n  areEquals: areEquals,\n  areMatricesEqual: areMatricesEqual,\n  roundNumber: roundNumber,\n  roundVector: roundVector,\n  jacobiN: jacobiN,\n  matrix3x3ToQuaternion: matrix3x3ToQuaternion,\n  multiplyQuaternion: multiplyQuaternion,\n  orthogonalize3x3: orthogonalize3x3,\n  diagonalize3x3: diagonalize3x3,\n  singularValueDecomposition3x3: singularValueDecomposition3x3,\n  luFactorLinearSystem: luFactorLinearSystem,\n  luSolveLinearSystem: luSolveLinearSystem,\n  solveLinearSystem: solveLinearSystem,\n  invertMatrix: invertMatrix,\n  estimateMatrixCondition: estimateMatrixCondition,\n  jacobi: jacobi,\n  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,\n  solveLeastSquares: solveLeastSquares,\n  hex2float: hex2float,\n  rgb2hsv: rgb2hsv,\n  hsv2rgb: hsv2rgb,\n  lab2xyz: lab2xyz,\n  xyz2lab: xyz2lab,\n  xyz2rgb: xyz2rgb,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  lab2rgb: lab2rgb,\n  uninitializeBounds: uninitializeBounds,\n  areBoundsInitialized: areBoundsInitialized,\n  computeBoundsFromPoints: computeBoundsFromPoints,\n  clampValue: clampValue,\n  clampVector: clampVector,\n  clampAndNormalizeValue: clampAndNormalizeValue,\n  getScalarTypeFittingRange: getScalarTypeFittingRange,\n  getAdjustedScalarRange: getAdjustedScalarRange,\n  extentIsWithinOtherExtent: extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,\n  pointIsWithinBounds: pointIsWithinBounds,\n  solve3PointCircle: solve3PointCircle,\n  inf: inf,\n  negInf: negInf,\n  isInf: isInf,\n  isFinite: isFinite,\n  isNaN: isNaN,\n  isNan: isNan,\n  createUninitializedBounds: createUninitializedBounds,\n  getMajorAxisIndex: getMajorAxisIndex,\n  floatToHex2: floatToHex2,\n  floatRGB2HexCode: floatRGB2HexCode,\n  float2CssRGBA: float2CssRGBA,\n  'default': vtkMath\n});\n\nexport { binomial as $, degreesFromRadians as A, areEquals as B, clampValue as C, arrayRange as D, getMajorAxisIndex as E, isInf as F, rgb2hsv as G, rgb2lab as H, lab2rgb as I, floor as J, round as K, normalize2D as L, nearestPowerOfTwo as M, createUninitializedBounds as N, multiply3x3_vect3 as O, areBoundsInitialized as P, isPowerOfTwo as Q, angleBetweenVectors as R, signedAngleBetweenVectors as S, Pi as T, ceil as U, min as V, max as W, arrayMin as X, arrayMax as Y, ceilLog2 as Z, factorial as _, areMatricesEqual as a, beginCombination as a0, nextCombination as a1, randomSeed as a2, getSeed as a3, gaussian as a4, multiplyScalar2D as a5, multiplyAccumulate2D as a6, outer as a7, projectVector as a8, dot2D as a9, hex2float as aA, lab2xyz as aB, xyz2lab as aC, xyz2rgb as aD, rgb2xyz as aE, clampAndNormalizeValue as aF, getScalarTypeFittingRange as aG, getAdjustedScalarRange as aH, extentIsWithinOtherExtent as aI, boundsIsWithinOtherBounds as aJ, pointIsWithinBounds as aK, solve3PointCircle as aL, inf as aM, negInf as aN, isFinite as aO, isNaN as aP, floatToHex2 as aQ, floatRGB2HexCode as aR, float2CssRGBA as aS, projectVector2D as aa, gaussianAmplitude as ab, gaussianWeight as ac, outer2D as ad, norm2D as ae, LUFactor3x3 as af, LUSolve3x3 as ag, linearSolve3x3 as ah, multiply3x3_mat3 as ai, multiplyMatrix as aj, transpose3x3 as ak, invert3x3 as al, identity3x3 as am, quaternionToMatrix3x3 as an, roundNumber as ao, matrix3x3ToQuaternion as ap, multiplyQuaternion as aq, orthogonalize3x3 as ar, diagonalize3x3 as as, singularValueDecomposition3x3 as at, luFactorLinearSystem as au, luSolveLinearSystem as av, invertMatrix as aw, estimateMatrixCondition as ax, solveHomogeneousLeastSquares as ay, solveLeastSquares as az, roundVector as b, computeBoundsFromPoints as c, dot as d, clampVector as e, distance2BetweenPoints as f, subtract as g, hsv2rgb as h, isNan as i, cross as j, add as k, normalize as l, multiplyAccumulate as m, norm as n, determinant2x2 as o, jacobiN as p, perpendiculars as q, radiansFromDegrees as r, solveLinearSystem as s, jacobi as t, uninitializeBounds as u, vtkMath$1 as v, vtkMath as w, multiplyScalar as x, random as y, determinant3x3 as z };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport { r as radiansFromDegrees, k as add, j as cross } from '../../Common/Core/Math/index.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro;\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera'); // Set up private variables and methods\n\n  var origin = new Float64Array(3);\n  var dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  var upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  var tmpMatrix = mat4.identity(new Float64Array(16));\n  var tmpvec1 = new Float64Array(3);\n  var tmpvec2 = new Float64Array(3);\n  var tmpvec3 = new Float64Array(3);\n  var rotateMatrix = mat4.identity(new Float64Array(16));\n  var trans = mat4.identity(new Float64Array(16));\n  var newPosition = new Float64Array(3);\n  var newFocalPoint = new Float64Array(3); // Internal Functions that don't need to be public\n\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n\n  publicAPI.orthogonalizeViewUp = function () {\n    var vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n\n  publicAPI.setPosition = function (x, y, z) {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z; // recompute the focal distance\n\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.setFocalPoint = function (x, y, z) {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z; // recompute the focal distance\n\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.setDistance = function (d) {\n    if (model.distance === d) {\n      return;\n    }\n\n    model.distance = d;\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    } // we want to keep the camera pointing in the same direction\n\n\n    var vec = model.directionOfProjection; // recalculate FocalPoint\n\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n\n\n  publicAPI.computeDistance = function () {\n    var dx = model.focalPoint[0] - model.position[0];\n    var dy = model.focalPoint[1] - model.position[1];\n    var dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      var vec = model.directionOfProjection; // recalculate FocalPoint\n\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  }; //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n\n\n  publicAPI.dolly = function (amount) {\n    if (amount <= 0.0) {\n      return;\n    } // dolly moves the camera towards the focus\n\n\n    var d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n\n  publicAPI.roll = function (angle) {\n    var eye = model.position;\n    var at = model.focalPoint;\n    var up = model.viewUp;\n    var viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    var viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n\n  publicAPI.azimuth = function (angle) {\n    var fp = model.focalPoint;\n    mat4.identity(trans); // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.yaw = function (angle) {\n    var position = model.position;\n    mat4.identity(trans); // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n\n  publicAPI.elevation = function (angle) {\n    var fp = model.focalPoint; // get the eye / camera position from the viewMatrix\n\n    var vt = publicAPI.getViewMatrix();\n    var axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans); // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.pitch = function (angle) {\n    var position = model.position;\n    var vt = publicAPI.getViewMatrix();\n    var axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans); // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the focal point\n\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint.apply(publicAPI, _toConsumableArray(newFocalPoint));\n  };\n\n  publicAPI.zoom = function (factor) {\n    if (factor <= 0) {\n      return;\n    }\n\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.translate = function (x, y, z) {\n    var offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.applyTransform = function (transformMat4) {\n    var vuOld = [].concat(_toConsumableArray(model.viewUp), [1.0]);\n    var posNew = [];\n    var fpNew = [];\n    var vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [].concat(_toConsumableArray(model.position), [1.0]), transformMat4);\n    vec4.transformMat4(fpNew, [].concat(_toConsumableArray(model.focalPoint), [1.0]), transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition.apply(publicAPI, _toConsumableArray(posNew.slice(0, 3)));\n    publicAPI.setFocalPoint.apply(publicAPI, _toConsumableArray(fpNew.slice(0, 3)));\n    publicAPI.setViewUp.apply(publicAPI, _toConsumableArray(vuNew.slice(0, 3)));\n  };\n\n  publicAPI.getThickness = function () {\n    return model.clippingRange[1] - model.clippingRange[0];\n  };\n\n  publicAPI.setThickness = function (thickness) {\n    var t = thickness;\n\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n\n  publicAPI.setThicknessFromFocalPoint = function (thickness) {\n    var t = thickness;\n\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  }; // Unimplemented functions\n\n\n  publicAPI.setRoll = function (angle) {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n\n\n  publicAPI.getRoll = function () {};\n\n  publicAPI.setObliqueAngles = function (alpha, beta) {};\n\n  publicAPI.getOrientation = function () {};\n\n  publicAPI.getOrientationWXYZ = function () {};\n\n  publicAPI.getFrustumPlanes = function (aspect) {// Return array of 24 params (4 params for each of 6 plane equations)\n  };\n\n  publicAPI.getCameraLightTransformMatrix = function () {};\n\n  publicAPI.deepCopy = function (sourceCamera) {};\n\n  publicAPI.physicalOrientationToWorldDirection = function (ori) {\n    // push the x axis through the orientation quat\n    var oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    var coriq = quat.create();\n    var qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq); // rotate the z axis by the quat\n\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq); // return the z axis in world coords\n\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n\n  publicAPI.getPhysicalToWorldMatrix = function (result) {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n\n  publicAPI.getWorldToPhysicalMatrix = function (result) {\n    mat4.identity(result); // now the physical to vtk world rotation tform\n\n    var physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n\n  publicAPI.computeViewParametersFromViewMatrix = function (vmat) {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat); // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    var oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]); // push basis vectors to get orientation\n\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  }; // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n\n\n  publicAPI.computeViewParametersFromPhysicalMatrix = function (mat) {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix); // first convert the physical -> view matrix to be\n    // world -> view\n\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n\n  publicAPI.setViewMatrix = function (mat) {\n    model.viewMatrix = mat;\n\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n\n  publicAPI.getViewMatrix = function () {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n\n    mat4.lookAt(tmpMatrix, model.position, // eye\n    model.focalPoint, // at\n    model.viewUp // up\n    );\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    var result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n\n  publicAPI.setProjectionMatrix = function (mat) {\n    model.projectionMatrix = mat;\n  };\n\n  publicAPI.getProjectionMatrix = function (aspect, nearz, farz) {\n    var result = new Float64Array(16);\n    mat4.identity(result);\n\n    if (model.projectionMatrix) {\n      var scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n\n    mat4.identity(tmpMatrix); // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n\n    var cWidth = model.clippingRange[1] - model.clippingRange[0];\n    var cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      var width = model.parallelScale * aspect;\n      var height = model.parallelScale;\n      var xmin = (model.windowCenter[0] - 1.0) * width;\n      var xmax = (model.windowCenter[0] + 1.0) * width;\n      var ymin = (model.windowCenter[1] - 1.0) * height;\n      var ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      var tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n\n      var _width;\n\n      var _height;\n\n      if (model.useHorizontalViewAngle === true) {\n        _width = model.clippingRange[0] * tmp;\n        _height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        _width = model.clippingRange[0] * tmp * aspect;\n        _height = model.clippingRange[0] * tmp;\n      }\n\n      var _xmin = (model.windowCenter[0] - 1.0) * _width;\n\n      var _xmax = (model.windowCenter[0] + 1.0) * _width;\n\n      var _ymin = (model.windowCenter[1] - 1.0) * _height;\n\n      var _ymax = (model.windowCenter[1] + 1.0) * _height;\n\n      var znear = cRange[0];\n      var zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (_xmax - _xmin);\n      tmpMatrix[5] = 2.0 * znear / (_ymax - _ymin);\n      tmpMatrix[2] = (_xmin + _xmax) / (_xmax - _xmin);\n      tmpMatrix[6] = (_ymin + _ymax) / (_ymax - _ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n\n  publicAPI.getCompositeProjectionMatrix = function (aspect, nearz, farz) {\n    var vMat = publicAPI.getViewMatrix();\n    var pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz); // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n\n  publicAPI.setDirectionOfProjection = function (x, y, z) {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    var vec = model.directionOfProjection; // recalculate FocalPoint\n\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  }; // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n\n\n  publicAPI.setDeviceAngles = function (alpha, beta, gamma, screen) {\n    var physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight); // phone to physical coordinates\n\n    var rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    var dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    var vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n\n  publicAPI.setOrientationWXYZ = function (degrees, x, y, z) {\n    var quatMat = mat4.identity(new Float64Array(16));\n\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      var angle = radiansFromDegrees(degrees);\n      var q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n\n    var newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    var newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection.apply(publicAPI, _toConsumableArray(newdop));\n    publicAPI.setViewUp.apply(publicAPI, _toConsumableArray(newvup));\n    publicAPI.modified();\n  };\n\n  publicAPI.computeClippingRange = function (bounds) {\n    var vn = null;\n    var position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    var a = -vn[0];\n    var b = -vn[1];\n    var c = -vn[2];\n    var d = -(a * position[0] + b * position[1] + c * position[2]); // Set the max near clipping plane and the min far clipping plane\n\n    var range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18]; // Find the closest / farthest bounding box vertex\n\n    for (var k = 0; k < 2; k++) {\n      for (var j = 0; j < 2; j++) {\n        for (var i = 0; i < 2; i++) {\n          var dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n\n    return range;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3); // Object methods\n\n  vtkCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCamera'); // ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n", "import '@babel/runtime/helpers/slicedToArray';\nimport 'seedrandom';\nimport '../../macros.js';\nexport { af as LUFactor3x3, ag as LUSolve3x3, T as Pi, k as add, R as angleBetweenVectors, P as areBoundsInitialized, B as areEquals, a as areMatricesEqual, Y as arrayMax, X as arrayMin, D as arrayRange, a0 as beginCombination, $ as binomial, aJ as boundsIsWithinOtherBounds, U as ceil, Z as ceilLog2, aF as clampAndNormalizeValue, C as clampValue, e as clampVector, c as computeBoundsFromPoints, N as createUninitializedBounds, j as cross, w as default, A as degreesFromRadians, o as determinant2x2, z as determinant3x3, as as diagonalize3x3, f as distance2BetweenPoints, d as dot, a9 as dot2D, ax as estimateMatrixCondition, aI as extentIsWithinOtherExtent, _ as factorial, aS as float2CssRGBA, aR as floatRGB2HexCode, aQ as floatToHex2, J as floor, a4 as gaussian, ab as gaussianAmplitude, ac as gaussianWeight, aH as getAdjustedScalarRange, E as getMajorAxisIndex, aG as getScalarTypeFittingRange, a3 as getSeed, aA as hex2float, h as hsv2rgb, am as identity3x3, aM as inf, al as invert3x3, aw as invertMatrix, aO as isFinite, F as isInf, aP as isNaN, i as isNan, Q as isPowerOfTwo, t as jacobi, p as jacobiN, I as lab2rgb, aB as lab2xyz, ah as linearSolve3x3, au as luFactorLinearSystem, av as luSolveLinearSystem, ap as matrix3x3ToQuaternion, W as max, V as min, ai as multiply3x3_mat3, O as multiply3x3_vect3, m as multiplyAccumulate, a6 as multiplyAccumulate2D, aj as multiplyMatrix, aq as multiplyQuaternion, x as multiplyScalar, a5 as multiplyScalar2D, M as nearestPowerOfTwo, aN as negInf, a1 as nextCombination, n as norm, ae as norm2D, l as normalize, L as normalize2D, ar as orthogonalize3x3, a7 as outer, ad as outer2D, q as perpendiculars, aK as pointIsWithinBounds, a8 as projectVector, aa as projectVector2D, an as quaternionToMatrix3x3, r as radiansFromDegrees, y as random, a2 as randomSeed, G as rgb2hsv, H as rgb2lab, aE as rgb2xyz, K as round, ao as roundNumber, b as roundVector, S as signedAngleBetweenVectors, at as singularValueDecomposition3x3, aL as solve3PointCircle, ay as solveHomogeneousLeastSquares, az as solveLeastSquares, s as solveLinearSystem, g as subtract, ak as transpose3x3, u as uninitializeBounds, aC as xyz2lab, aD as xyz2rgb } from './Math/index.js';\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { g as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport macro from '../../macros.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar PLANE_TOLERANCE = 1.0e-6;\nvar COINCIDE = 'coincide';\nvar DISJOINT = 'disjoint'; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\n\nfunction distanceToPlane(x, origin, normal) {\n  var distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\n\nfunction projectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\n\nfunction projectVector(v, normal, vproj) {\n  var t = dot(v, normal);\n  var n2 = dot(normal, normal);\n\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\n\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  var xo = [];\n  subtract(x, origin, xo);\n  var t = dot(normal, xo);\n  var n2 = dot(normal, normal);\n\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\n\nfunction intersectWithLine(p1, p2, origin, normal) {\n  var outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  var p21 = [];\n  var p1Origin = []; // Compute line vector\n\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin); // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n\n  var num = dot(normal, p1Origin);\n  var den = dot(normal, p21); // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n\n  var fabsden;\n  var fabstolerance; // Trying to avoid an expensive call to fabs()\n\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  } // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n\n\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\n\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  var outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  var cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  var absCross = cross$1.map(function (n) {\n    return Math.abs(n);\n  }); // test if the two planes are parallel\n\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    var v = [];\n    subtract(plane1Origin, plane2Origin, v);\n\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n\n    return outObj;\n  } // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n\n\n  var maxc;\n\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  } // To get a point on the intersect line, zero the max coord, and solve for the other two\n\n\n  var iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n\n  var d1 = -dot(plane1Normal, plane1Origin);\n  var d2 = -dot(plane2Normal, plane2Origin); // eslint-disable-next-line default-case\n\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  evaluate: evaluate,\n  distanceToPlane: distanceToPlane,\n  projectPoint: projectPoint,\n  projectVector: projectVector,\n  generalizedProjectPoint: generalizedProjectPoint,\n  intersectWithLine: intersectWithLine,\n  intersectWithPlane: intersectWithPlane,\n  DISJOINT: DISJOINT,\n  COINCIDE: COINCIDE\n}; // ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n\n  publicAPI.distanceToPlane = function (x) {\n    return distanceToPlane(x, model.origin, model.normal);\n  };\n\n  publicAPI.projectPoint = function (x, xproj) {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.projectVector = function (v, vproj) {\n    return projectVector(v, model.normal, vproj);\n  };\n\n  publicAPI.push = function (distance) {\n    if (distance === 0.0) {\n      return;\n    }\n\n    for (var i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n\n  publicAPI.generalizedProjectPoint = function (x, xproj) {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.evaluateFunction = function (x, y, z) {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n\n  publicAPI.evaluateGradient = function (xyz) {\n    var retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n\n  publicAPI.intersectWithLine = function (p1, p2) {\n    return intersectWithLine(p1, p2, model.origin, model.normal);\n  };\n\n  publicAPI.intersectWithPlane = function (planeOrigin, planeNormal) {\n    return intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nvar DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPlane'); // ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { d as dot } from '../Core/Math/index.js';\nimport vtkPlane from './Plane.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE, // X\nNumber.MAX_VALUE, -Number.MAX_VALUE, // Y\nNumber.MAX_VALUE, -Number.MAX_VALUE // Z\n]; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction _equals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\nfunction _isValid(bounds) {\n  return bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];\n}\n\nfunction _setBounds(bounds, otherBounds) {\n  bounds[0] = otherBounds[0];\n  bounds[1] = otherBounds[1];\n  bounds[2] = otherBounds[2];\n  bounds[3] = otherBounds[3];\n  bounds[4] = otherBounds[4];\n  bounds[5] = otherBounds[5];\n  return bounds;\n}\n\nfunction _reset(bounds) {\n  return _setBounds(bounds, INIT_BOUNDS);\n}\n\nfunction _addPoint(bounds) {\n  var _bounds = _slicedToArray(bounds, 6),\n      xMin = _bounds[0],\n      xMax = _bounds[1],\n      yMin = _bounds[2],\n      yMax = _bounds[3],\n      zMin = _bounds[4],\n      zMax = _bounds[5];\n\n  bounds[0] = xMin < (arguments.length <= 1 ? undefined : arguments[1]) ? xMin : arguments.length <= 1 ? undefined : arguments[1];\n  bounds[1] = xMax > (arguments.length <= 1 ? undefined : arguments[1]) ? xMax : arguments.length <= 1 ? undefined : arguments[1];\n  bounds[2] = yMin < (arguments.length <= 2 ? undefined : arguments[2]) ? yMin : arguments.length <= 2 ? undefined : arguments[2];\n  bounds[3] = yMax > (arguments.length <= 2 ? undefined : arguments[2]) ? yMax : arguments.length <= 2 ? undefined : arguments[2];\n  bounds[4] = zMin < (arguments.length <= 3 ? undefined : arguments[3]) ? zMin : arguments.length <= 3 ? undefined : arguments[3];\n  bounds[5] = zMax > (arguments.length <= 3 ? undefined : arguments[3]) ? zMax : arguments.length <= 3 ? undefined : arguments[3];\n  return bounds;\n}\n\nfunction _addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\n  var _bounds2 = _slicedToArray(bounds, 6),\n      _xMin = _bounds2[0],\n      _xMax = _bounds2[1],\n      _yMin = _bounds2[2],\n      _yMax = _bounds2[3],\n      _zMin = _bounds2[4],\n      _zMax = _bounds2[5];\n\n  if (zMax === undefined) {\n    bounds[0] = Math.min(xMin[0], _xMin);\n    bounds[1] = Math.max(xMin[1], _xMax);\n    bounds[2] = Math.min(xMin[2], _yMin);\n    bounds[3] = Math.max(xMin[3], _yMax);\n    bounds[4] = Math.min(xMin[4], _zMin);\n    bounds[5] = Math.max(xMin[5], _zMax);\n  } else {\n    bounds[0] = Math.min(xMin, _xMin);\n    bounds[1] = Math.max(xMax, _xMax);\n    bounds[2] = Math.min(yMin, _yMin);\n    bounds[3] = Math.max(yMax, _yMax);\n    bounds[4] = Math.min(zMin, _zMin);\n    bounds[5] = Math.max(zMax, _zMax);\n  }\n\n  return bounds;\n}\n\nfunction _setMinPoint(bounds, x, y, z) {\n  var _bounds3 = _slicedToArray(bounds, 6),\n      xMin = _bounds3[0],\n      xMax = _bounds3[1],\n      yMin = _bounds3[2],\n      yMax = _bounds3[3],\n      zMin = _bounds3[4],\n      zMax = _bounds3[5];\n\n  bounds[0] = x;\n  bounds[1] = x > xMax ? x : xMax;\n  bounds[2] = y;\n  bounds[3] = y > yMax ? y : yMax;\n  bounds[4] = z;\n  bounds[5] = z > zMax ? z : zMax;\n  return xMin !== x || yMin !== y || zMin !== z;\n}\n\nfunction _setMaxPoint(bounds, x, y, z) {\n  var _bounds4 = _slicedToArray(bounds, 6),\n      xMin = _bounds4[0],\n      xMax = _bounds4[1],\n      yMin = _bounds4[2],\n      yMax = _bounds4[3],\n      zMin = _bounds4[4],\n      zMax = _bounds4[5];\n\n  bounds[0] = x < xMin ? x : xMin;\n  bounds[1] = x;\n  bounds[2] = y < yMin ? y : yMin;\n  bounds[3] = y;\n  bounds[4] = z < zMin ? z : zMin;\n  bounds[5] = z;\n  return xMax !== x || yMax !== y || zMax !== z;\n}\n\nfunction _inflate(bounds, delta) {\n  bounds[0] -= delta;\n  bounds[1] += delta;\n  bounds[2] -= delta;\n  bounds[3] += delta;\n  bounds[4] -= delta;\n  bounds[5] += delta;\n  return bounds;\n}\n\nfunction _scale(bounds, sx, sy, sz) {\n  if (!_isValid(bounds)) {\n    return false;\n  }\n\n  if (sx >= 0.0) {\n    bounds[0] *= sx;\n    bounds[1] *= sx;\n  } else {\n    bounds[0] = sx * bounds[1];\n    bounds[1] = sx * bounds[0];\n  }\n\n  if (sy >= 0.0) {\n    bounds[2] *= sy;\n    bounds[3] *= sy;\n  } else {\n    bounds[2] = sy * bounds[3];\n    bounds[3] = sy * bounds[2];\n  }\n\n  if (sz >= 0.0) {\n    bounds[4] *= sz;\n    bounds[5] *= sz;\n  } else {\n    bounds[4] = sz * bounds[5];\n    bounds[5] = sz * bounds[4];\n  }\n\n  return true;\n}\n\nfunction _getCenter(bounds) {\n  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];\n}\n\nfunction _getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\n\nfunction _getLengths(bounds) {\n  return [_getLength(bounds, 0), _getLength(bounds, 1), _getLength(bounds, 2)];\n}\n\nfunction _getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\n\nfunction _getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\n\nfunction _getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\n\nfunction _getMaxLength(bounds) {\n  var l = _getLengths(bounds);\n\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n\n    return l[2];\n  }\n\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n\n  return l[2];\n}\n\nfunction _getDiagonalLength(bounds) {\n  if (_isValid(bounds)) {\n    var l = _getLengths(bounds);\n\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n\n  return null;\n}\n\nfunction _getMinPoint(bounds) {\n  return [bounds[0], bounds[2], bounds[4]];\n}\n\nfunction _getMaxPoint(bounds) {\n  return [bounds[1], bounds[3], bounds[5]];\n}\n\nfunction oppositeSign(a, b) {\n  return a <= 0 && b >= 0 || a >= 0 && b <= 0;\n}\n\nfunction _getCorners(bounds, corners) {\n  var count = 0;\n\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        corners[count] = [bounds[ix], bounds[iy], bounds[iz]];\n        count++;\n      }\n    }\n  }\n\n  return corners;\n} // Computes the two corners with minimal and miximal coordinates\n\nfunction _computeCornerPoints(bounds, point1, point2) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n  return point1;\n}\n\nfunction _computeScale(bounds) {\n  var scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var center = _getCenter(bounds);\n\n  scale3[0] = bounds[1] - center[0];\n  scale3[1] = bounds[3] - center[1];\n  scale3[2] = bounds[5] - center[2];\n  return scale3;\n}\n\nfunction _computeLocalBounds(points, u, v, w) {\n  var bounds = [].concat(INIT_BOUNDS);\n  var pointsData = points.getData();\n\n  for (var i = 0; i < pointsData.length; i += 3) {\n    var point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\n    var du = dot(point, u);\n    bounds[0] = Math.min(du, bounds[0]);\n    bounds[1] = Math.max(du, bounds[1]);\n    var dv = dot(point, v);\n    bounds[2] = Math.min(dv, bounds[2]);\n    bounds[3] = Math.max(dv, bounds[3]);\n    var dw = dot(point, w);\n    bounds[4] = Math.min(dw, bounds[4]);\n    bounds[5] = Math.max(dw, bounds[5]);\n  }\n\n  return bounds;\n} // The method returns a non-zero value if the bounding box is hit.\n\nfunction _intersectBox(bounds, origin, dir, coord, tolerance) {\n  var inside = true;\n  var quadrant = [];\n  var whichPlane = 0;\n  var maxT = [];\n  var candidatePlane = [0.0, 0.0, 0.0];\n  var RIGHT = 0;\n  var LEFT = 1;\n  var MIDDLE = 2; // First find closest planes\n\n  for (var i = 0; i < 3; i++) {\n    if (origin[i] < bounds[2 * i]) {\n      quadrant[i] = LEFT;\n      candidatePlane[i] = bounds[2 * i];\n      inside = false;\n    } else if (origin[i] > bounds[2 * i + 1]) {\n      quadrant[i] = RIGHT;\n      candidatePlane[i] = bounds[2 * i + 1];\n      inside = false;\n    } else {\n      quadrant[i] = MIDDLE;\n    }\n  } // Check whether origin of ray is inside bbox\n\n\n  if (inside) {\n    coord[0] = origin[0];\n    coord[1] = origin[1];\n    coord[2] = origin[2];\n    tolerance[0] = 0;\n    return 1;\n  } // Calculate parametric distance to plane\n\n\n  for (var _i = 0; _i < 3; _i++) {\n    if (quadrant[_i] !== MIDDLE && dir[_i] !== 0.0) {\n      maxT[_i] = (candidatePlane[_i] - origin[_i]) / dir[_i];\n    } else {\n      maxT[_i] = -1.0;\n    }\n  } // Find the largest parametric value of intersection\n\n\n  for (var _i2 = 0; _i2 < 3; _i2++) {\n    if (maxT[whichPlane] < maxT[_i2]) {\n      whichPlane = _i2;\n    }\n  } // Check for valie intersection along line\n\n\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\n    return 0;\n  }\n\n  tolerance[0] = maxT[whichPlane]; // Intersection point along line is okay. Check bbox.\n\n  for (var _i3 = 0; _i3 < 3; _i3++) {\n    if (whichPlane !== _i3) {\n      coord[_i3] = origin[_i3] + maxT[whichPlane] * dir[_i3];\n\n      if (coord[_i3] < bounds[2 * _i3] || coord[_i3] > bounds[2 * _i3 + 1]) {\n        return 0;\n      }\n    } else {\n      coord[_i3] = candidatePlane[_i3];\n    }\n  }\n\n  return 1;\n} // Plane intersection with box\n\nfunction _intersectPlane(bounds, origin, normal) {\n  var p = [];\n  var d = 0;\n  var sign = 1;\n  var firstOne = 1; // Evaluate the eight points. If there is a sign change, there is an intersection\n\n  for (var z = 4; z <= 5; ++z) {\n    p[2] = bounds[z];\n\n    for (var y = 2; y <= 3; ++y) {\n      p[1] = bounds[y];\n\n      for (var x = 0; x <= 1; ++x) {\n        p[0] = bounds[x];\n        d = vtkPlane.evaluate(normal, origin, p);\n\n        if (firstOne) {\n          sign = d >= 0 ? 1 : -1;\n          firstOne = 0;\n        }\n\n        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {\n          return 1;\n        }\n      }\n    }\n  }\n\n  return 0; // no intersection\n}\n\nfunction _intersect(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n\n  var newBounds = [0, 0, 0, 0, 0, 0];\n  var intersection;\n\n  for (var i = 0; i < 3; i++) {\n    intersection = false;\n\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bBounds[i * 2];\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2] = bounds[i * 2];\n    }\n\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\n    }\n\n    if (!intersection) {\n      return false;\n    }\n  } // OK they did intersect - set the box to be the result\n\n\n  bounds[0] = newBounds[0];\n  bounds[1] = newBounds[1];\n  bounds[2] = newBounds[2];\n  bounds[3] = newBounds[3];\n  bounds[4] = newBounds[4];\n  bounds[5] = newBounds[5];\n  return true;\n}\n\nfunction _intersects(bounds, bBounds) {\n  if (!(_isValid(bounds) && _isValid(bBounds))) {\n    return false;\n  }\n  /* eslint-disable no-continue */\n\n\n  for (var i = 0; i < 3; i++) {\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\n      continue;\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\n      continue;\n    }\n\n    return false;\n  }\n  /* eslint-enable no-continue */\n\n\n  return true;\n}\n\nfunction _containsPoint(bounds, x, y, z) {\n  if (x < bounds[0] || x > bounds[1]) {\n    return false;\n  }\n\n  if (y < bounds[2] || y > bounds[3]) {\n    return false;\n  }\n\n  if (z < bounds[4] || z > bounds[5]) {\n    return false;\n  }\n\n  return true;\n}\nfunction contains(bounds, otherBounds) {\n  // if either box is not valid or they don't intersect\n  if (!_intersects(bounds, otherBounds)) {\n    return false;\n  }\n\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMinPoint(otherBounds))))) {\n    return false;\n  }\n\n  if (!_containsPoint.apply(void 0, [bounds].concat(_toConsumableArray(_getMaxPoint(otherBounds))))) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns true if plane intersects bounding box.\n * If so, the box is cut by the plane\n * @param {array} origin\n * @param {array} normal\n */\n\nfunction _cutWithPlane(bounds, origin, normal) {\n  // Index[0..2] represents the order of traversing the corners of a cube\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n  var index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]]; // stores the signed distance to a plane\n\n  var d = [0, 0, 0, 0, 0, 0, 0, 0];\n  var idx = 0;\n\n  for (var ix = 0; ix < 2; ix++) {\n    for (var iy = 2; iy < 4; iy++) {\n      for (var iz = 4; iz < 6; iz++) {\n        var x = [bounds[ix], bounds[iy], bounds[iz]];\n        d[idx++] = vtkPlane.evaluate(normal, origin, x);\n      }\n    }\n  }\n\n  var dir = 2;\n\n  while (dir--) {\n    // in each direction, we test if the vertices of two orthogonal faces\n    // are on either side of the plane\n    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {\n      break;\n    }\n  }\n\n  if (dir < 0) {\n    return false;\n  }\n\n  var sign = Math.sign(normal[dir]);\n  var size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\n  var t = sign > 0 ? 1 : 0;\n  /* eslint-disable no-continue */\n\n  for (var i = 0; i < 4; i++) {\n    if (size === 0) {\n      continue; // shouldn't happen\n    }\n\n    var ti = Math.abs(d[index[dir][i]]) / size;\n\n    if (sign > 0 && ti < t) {\n      t = ti;\n    }\n\n    if (sign < 0 && ti > t) {\n      t = ti;\n    }\n  }\n  /* eslint-enable no-continue */\n\n\n  var bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\n\n  if (sign > 0) {\n    bounds[dir * 2] = bound;\n  } else {\n    bounds[dir * 2 + 1] = bound;\n  }\n\n  return true;\n} // ----------------------------------------------------------------------------\n\nvar BoundingBox = /*#__PURE__*/function () {\n  function BoundingBox(refBounds) {\n    _classCallCheck(this, BoundingBox);\n\n    this.bounds = refBounds;\n\n    if (!this.bounds) {\n      this.bounds = new Float64Array(INIT_BOUNDS);\n    }\n  }\n\n  _createClass(BoundingBox, [{\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.bounds;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(otherBounds) {\n      return _equals(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _isValid(this.bounds);\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(otherBounds) {\n      return _setBounds(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return _reset(this.bounds);\n    }\n  }, {\n    key: \"addPoint\",\n    value: function addPoint() {\n      for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {\n        xyz[_key] = arguments[_key];\n      }\n\n      return _addPoint(this.bounds, xyz);\n    }\n  }, {\n    key: \"addBounds\",\n    value: function addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\n      return _addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\n    }\n  }, {\n    key: \"setMinPoint\",\n    value: function setMinPoint(x, y, z) {\n      return _setMinPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"setMaxPoint\",\n    value: function setMaxPoint(x, y, z) {\n      return _setMaxPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"inflate\",\n    value: function inflate(delta) {\n      return _inflate(this.bounds, delta);\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy, sz) {\n      return _scale(this.bounds, sx, sy, sz);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return _getCenter(this.bounds);\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength(index) {\n      return _getLength(this.bounds, index);\n    }\n  }, {\n    key: \"getLengths\",\n    value: function getLengths() {\n      return _getLengths(this.bounds);\n    }\n  }, {\n    key: \"getMaxLength\",\n    value: function getMaxLength() {\n      return _getMaxLength(this.bounds);\n    }\n  }, {\n    key: \"getDiagonalLength\",\n    value: function getDiagonalLength() {\n      return _getDiagonalLength(this.bounds);\n    }\n  }, {\n    key: \"getMinPoint\",\n    value: function getMinPoint() {\n      return _getMinPoint(this.bounds);\n    }\n  }, {\n    key: \"getMaxPoint\",\n    value: function getMaxPoint() {\n      return _getMaxPoint(this.bounds);\n    }\n  }, {\n    key: \"getXRange\",\n    value: function getXRange() {\n      return _getXRange(this.bounds);\n    }\n  }, {\n    key: \"getYRange\",\n    value: function getYRange() {\n      return _getYRange(this.bounds);\n    }\n  }, {\n    key: \"getZRange\",\n    value: function getZRange() {\n      return _getZRange(this.bounds);\n    }\n  }, {\n    key: \"getCorners\",\n    value: function getCorners(corners) {\n      return _getCorners(this.bounds, corners);\n    }\n  }, {\n    key: \"computeCornerPoints\",\n    value: function computeCornerPoints(point1, point2) {\n      return _computeCornerPoints(this.bounds, point1, point2);\n    }\n  }, {\n    key: \"computeLocalBounds\",\n    value: function computeLocalBounds(u, v, w) {\n      return _computeLocalBounds(this.bounds, u, v, w);\n    }\n  }, {\n    key: \"computeScale3\",\n    value: function computeScale3(scale3) {\n      return _computeScale(this.bounds, scale3);\n    }\n  }, {\n    key: \"cutWithPlane\",\n    value: function cutWithPlane(origin, normal) {\n      return _cutWithPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersectBox\",\n    value: function intersectBox(origin, dir, coord, tolerance) {\n      return _intersectBox(this.bounds, origin, dir, coord, tolerance);\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(origin, normal) {\n      return _intersectPlane(this.bounds, origin, normal);\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(otherBounds) {\n      return _intersect(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(x, y, z) {\n      return _containsPoint(this.bounds, x, y, z);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(otherBounds) {\n      return _intersects(this.bounds, otherBounds);\n    }\n  }]);\n\n  return BoundingBox;\n}();\n\nfunction newInstance(initialValues) {\n  var bounds = initialValues && initialValues.bounds;\n  return new BoundingBox(bounds);\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  equals: _equals,\n  isValid: _isValid,\n  setBounds: _setBounds,\n  reset: _reset,\n  addPoint: _addPoint,\n  addBounds: _addBounds,\n  setMinPoint: _setMinPoint,\n  setMaxPoint: _setMaxPoint,\n  inflate: _inflate,\n  scale: _scale,\n  getCenter: _getCenter,\n  getLength: _getLength,\n  getLengths: _getLengths,\n  getMaxLength: _getMaxLength,\n  getDiagonalLength: _getDiagonalLength,\n  getMinPoint: _getMinPoint,\n  getMaxPoint: _getMaxPoint,\n  getXRange: _getXRange,\n  getYRange: _getYRange,\n  getZRange: _getZRange,\n  getCorners: _getCorners,\n  computeCornerPoints: _computeCornerPoints,\n  computeLocalBounds: _computeLocalBounds,\n  computeScale3: _computeScale,\n  cutWithPlane: _cutWithPlane,\n  intersectBox: _intersectBox,\n  intersectPlane: _intersectPlane,\n  intersect: _intersect,\n  intersects: _intersects,\n  containsPoint: _containsPoint,\n  contains: contains,\n  INIT_BOUNDS: INIT_BOUNDS\n};\nvar vtkBoundingBox = _objectSpread({\n  newInstance: newInstance\n}, STATIC);\n\nexport { STATIC, _addBounds as addBounds, _addPoint as addPoint, _computeCornerPoints as computeCornerPoints, _computeLocalBounds as computeLocalBounds, _computeScale as computeScale3, contains, _containsPoint as containsPoint, _cutWithPlane as cutWithPlane, vtkBoundingBox as default, _equals as equals, _getCenter as getCenter, _getCorners as getCorners, _getDiagonalLength as getDiagonalLength, _getLength as getLength, _getLengths as getLengths, _getMaxLength as getMaxLength, _getMaxPoint as getMaxPoint, _getMinPoint as getMinPoint, _getXRange as getXRange, _getYRange as getYRange, _getZRange as getZRange, _inflate as inflate, _intersect as intersect, _intersectBox as intersectBox, _intersectPlane as intersectPlane, _intersects as intersects, _isValid as isValid, _reset as reset, _scale as scale, _setBounds as setBounds, _setMaxPoint as setMaxPoint, _setMinPoint as setMinPoint };\n", "import macro from '../../macros.js';\n\nfunction notImplemented(method) {\n  return function () {\n    return macro.vtkErrorMacro(\"vtkProp::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkProp methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkProp(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp');\n\n  publicAPI.getMTime = function () {\n    var m1 = model.mtime;\n\n    for (var index = 0; index < model.textures.length; ++index) {\n      var m2 = model.textures[index].getMTime();\n\n      if (m2 > m1) {\n        m1 = m2;\n      }\n    }\n\n    return m1;\n  };\n\n  publicAPI.getNestedProps = function () {\n    return null;\n  };\n\n  publicAPI.getActors = function () {\n    return [];\n  };\n\n  publicAPI.getActors2D = function () {\n    return [];\n  };\n\n  publicAPI.getVolumes = function () {\n    return [];\n  };\n\n  publicAPI.pick = notImplemented('pick');\n  publicAPI.hasKey = notImplemented('hasKey');\n\n  publicAPI.getNestedVisibility = function () {\n    return model.visibility && (!model._parentProp || model._parentProp.getNestedVisibility());\n  };\n\n  publicAPI.getNestedPickable = function () {\n    return model.pickable && (!model._parentProp || model._parentProp.getNestedPickable());\n  };\n\n  publicAPI.getNestedDragable = function () {\n    return model.dragable && (!model._parentProp || model._parentProp.getNestedDragable());\n  };\n\n  publicAPI.getRedrawMTime = function () {\n    return model.mtime;\n  };\n\n  publicAPI.setEstimatedRenderTime = function (t) {\n    model.estimatedRenderTime = t;\n    model.savedEstimatedRenderTime = t;\n  };\n\n  publicAPI.restoreEstimatedRenderTime = function () {\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\n  };\n\n  publicAPI.addEstimatedRenderTime = function (t) {\n    model.estimatedRenderTime += t;\n  };\n\n  publicAPI.setAllocatedRenderTime = function (t) {\n    model.allocatedRenderTime = t;\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\n    model.estimatedRenderTime = 0;\n  };\n\n  publicAPI.getSupportsSelection = function () {\n    return false;\n  };\n\n  publicAPI.getTextures = function () {\n    return model.textures;\n  };\n\n  publicAPI.hasTexture = function (texture) {\n    return model.textures.indexOf(texture) !== -1;\n  };\n\n  publicAPI.addTexture = function (texture) {\n    if (texture && !publicAPI.hasTexture(texture)) {\n      model.textures = model.textures.concat(texture);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeTexture = function (texture) {\n    var newTextureList = model.textures.filter(function (item) {\n      return item !== texture;\n    });\n\n    if (model.textures.length !== newTextureList.length) {\n      model.textures = newTextureList;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeAllTextures = function () {\n    model.textures = [];\n    publicAPI.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _parentProp: null,\n  visibility: true,\n  pickable: true,\n  dragable: true,\n  useBounds: true,\n  allocatedRenderTime: 10,\n  estimatedRenderTime: 0,\n  savedEstimatedRenderTime: 0,\n  renderTimeMultiplier: 1,\n  paths: null,\n  textures: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\n  macro.setGet(publicAPI, model, ['visibility', 'pickable', 'dragable', 'useBounds', 'renderTimeMultiplier', '_parentProp']);\n  macro.moveToProtected(publicAPI, model, ['parentProp']); // Object methods\n\n  vtkProp(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkProp'); // ----------------------------------------------------------------------------\n\nvar vtkProp$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkProp$1 as default, extend, newInstance };\n", "import { mat4, quat } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { A as degreesFromRadians, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkProp from './Prop.js';\n\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n\n  publicAPI.addPosition = function (deltaXYZ) {\n    model.position = model.position.map(function (value, index) {\n      return value + deltaXYZ[index];\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.getOrientationWXYZ = function () {\n    var q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    var oaxis = new Float64Array(3);\n    var w = quat.getAxisAngle(oaxis, q);\n    return [degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n\n  publicAPI.rotateX = function (val) {\n    if (val === 0.0) {\n      return;\n    }\n\n    mat4.rotateX(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateY = function (val) {\n    if (val === 0.0) {\n      return;\n    }\n\n    mat4.rotateY(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateZ = function (val) {\n    if (val === 0.0) {\n      return;\n    }\n\n    mat4.rotateZ(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateWXYZ = function (degrees, x, y, z) {\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\n      return;\n    } // convert to radians\n\n\n    var angle = radiansFromDegrees(degrees);\n    var q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n    var quatMat = new Float64Array(16);\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n\n  publicAPI.setOrientation = function (x, y, z) {\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\n      return false;\n    }\n\n    model.orientation = [x, y, z];\n    mat4.identity(model.rotation);\n    publicAPI.rotateZ(z);\n    publicAPI.rotateX(x);\n    publicAPI.rotateY(y);\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.setUserMatrix = function (matrix) {\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n  };\n\n  publicAPI.getMatrix = function () {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n\n  publicAPI.computeMatrix = function () {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\n      mat4.transpose(model.matrix, model.matrix); // check for identity\n\n      model.isIdentity = true;\n\n      for (var i = 0; i < 4; ++i) {\n        for (var j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n\n      model.matrixMTime.modified();\n    }\n  };\n\n  publicAPI.getCenter = function () {\n    return vtkBoundingBox.getCenter(model.bounds);\n  };\n\n  publicAPI.getLength = function () {\n    return vtkBoundingBox.getLength(model.bounds);\n  };\n\n  publicAPI.getXRange = function () {\n    return vtkBoundingBox.getXRange(model.bounds);\n  };\n\n  publicAPI.getYRange = function () {\n    return vtkBoundingBox.getYRange(model.bounds);\n  };\n\n  publicAPI.getZRange = function () {\n    return vtkBoundingBox.getZRange(model.bounds);\n  };\n\n  publicAPI.getUserMatrix = function () {\n    return model.userMatrix;\n  };\n\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n\n  publicAPI.onModified(updateIdentityFlag);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  orientation: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n  userMatrix: null,\n  userMatrixMTime: null,\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime); // Build VTK API\n\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.getArray(publicAPI, model, ['orientation']);\n  macro.setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3); // Object internal instance\n\n  model.matrix = mat4.identity(new Float64Array(16));\n  model.rotation = mat4.identity(new Float64Array(16));\n  model.userMatrix = mat4.identity(new Float64Array(16));\n  model.transform = null; // FIXME\n  // Object methods\n\n  vtkProp3D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkProp3D'); // ----------------------------------------------------------------------------\n\nvar vtkProp3D$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkProp3D$1 as default, extend, newInstance };\n", "var DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\nvar VtkDataTypes = {\n  VOID: '',\n  // not sure to know what that should be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array'\n};\nvar DefaultDataType = VtkDataTypes.FLOAT;\nvar Constants = {\n  DefaultDataType: DefaultDataType,\n  DataTypeByteSize: DataTypeByteSize,\n  VtkDataTypes: VtkDataTypes\n};\n\nexport { DataTypeByteSize, DefaultDataType, VtkDataTypes, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Constants from './DataArray/Constants.js';\nimport { newInstance as newInstance$1, newTypedArray, newTypedArrayFrom, obj, set } from '../../macros.js';\nimport { n as norm } from './Math/index.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar DefaultDataType = Constants.DefaultDataType;\nvar TUPLE_HOLDER = []; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// Original source from https://www.npmjs.com/package/compute-range\n// Modified to accept type arrays\n\nfunction fastComputeRange(arr, offset, numberOfComponents) {\n  var len = arr.length;\n  var min;\n  var max;\n  var x;\n  var i;\n\n  if (len === 0) {\n    return {\n      min: Number.MAX_VALUE,\n      max: -Number.MAX_VALUE\n    };\n  }\n\n  min = arr[offset];\n  max = min;\n\n  for (i = offset; i < len; i += numberOfComponents) {\n    x = arr[i];\n\n    if (x < min) {\n      min = x;\n    } else if (x > max) {\n      max = x;\n    }\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n/**\n * @deprecated please use fastComputeRange instead\n */\n\n\nfunction createRangeHelper() {\n  var min = Number.MAX_VALUE;\n  var max = -Number.MAX_VALUE;\n  var count = 0;\n  var sum = 0;\n  return {\n    add: function add(value) {\n      if (min > value) {\n        min = value;\n      }\n\n      if (max < value) {\n        max = value;\n      }\n\n      count++;\n      sum += value;\n    },\n    get: function get() {\n      return {\n        min: min,\n        max: max,\n        count: count,\n        sum: sum,\n        mean: sum / count\n      };\n    },\n    getRange: function getRange() {\n      return {\n        min: min,\n        max: max\n      };\n    }\n  };\n}\n\nfunction computeRange(values) {\n  var component = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var numberOfComponents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (component < 0 && numberOfComponents > 1) {\n    // Compute magnitude\n    var size = values.length;\n    var numberOfValues = size / numberOfComponents;\n    var data = new Float64Array(numberOfValues);\n\n    for (var i = 0, j = 0; i < numberOfValues; ++i) {\n      var _i;\n\n      for (var nextJ = j + numberOfComponents; j < nextJ; ++j) {\n        data[i] += values[j] * values[j];\n      }\n\n      _i = i, data[_i] = Math.pow(data[_i], 0.5);\n    }\n\n    return fastComputeRange(data, 0, 1);\n  }\n\n  return fastComputeRange(values, component < 0 ? 0 : component, numberOfComponents);\n}\n\nfunction ensureRangeSize(rangeArray) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ranges = rangeArray || []; // Pad ranges with null value to get the\n\n  while (ranges.length <= size) {\n    ranges.push(null);\n  }\n\n  return ranges;\n}\n\nfunction getDataType(typedArray) {\n  // Expects toString() to return \"[object ...Array]\"\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\n}\n\nfunction getMaxNorm(normArray) {\n  var numComps = normArray.getNumberOfComponents();\n  var maxNorm = 0.0;\n\n  for (var i = 0; i < normArray.getNumberOfTuples(); ++i) {\n    var norm$1 = norm(normArray.getTuple(i), numComps);\n\n    if (norm$1 > maxNorm) {\n      maxNorm = norm$1;\n    }\n  }\n\n  return maxNorm;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  computeRange: computeRange,\n  createRangeHelper: createRangeHelper,\n  fastComputeRange: fastComputeRange,\n  getDataType: getDataType,\n  getMaxNorm: getMaxNorm\n}; // ----------------------------------------------------------------------------\n// vtkDataArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataArray');\n\n  function dataChange() {\n    model.ranges = null;\n    publicAPI.modified();\n  }\n\n  publicAPI.getElementComponentSize = function () {\n    return model.values.BYTES_PER_ELEMENT;\n  }; // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n\n\n  publicAPI.getComponent = function (tupleIdx) {\n    var compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return model.values[tupleIdx * model.numberOfComponents + compIdx];\n  }; // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n\n\n  publicAPI.setComponent = function (tupleIdx, compIdx, value) {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      dataChange();\n    }\n  };\n\n  publicAPI.getData = function () {\n    return model.values;\n  };\n\n  publicAPI.getRange = function () {\n    var componentIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    var rangeIdx = componentIndex < 0 ? model.numberOfComponents : componentIndex;\n    var range = null;\n\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n\n    range = model.ranges[rangeIdx];\n\n    if (range) {\n      model.rangeTuple[0] = range.min;\n      model.rangeTuple[1] = range.max;\n      return model.rangeTuple;\n    } // Need to compute ranges...\n\n\n    range = computeRange(model.values, componentIndex, model.numberOfComponents);\n    model.ranges[rangeIdx] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n\n  publicAPI.setRange = function (rangeValue, componentIndex) {\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n\n    var range = {\n      min: rangeValue.min,\n      max: rangeValue.max\n    };\n    model.ranges[componentIndex] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n\n  publicAPI.setTuple = function (idx, tuple) {\n    var offset = idx * model.numberOfComponents;\n\n    for (var i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = tuple[i];\n    }\n  };\n\n  publicAPI.getTuple = function (idx) {\n    var tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TUPLE_HOLDER;\n    var numberOfComponents = model.numberOfComponents || 1;\n\n    if (tupleToFill.length !== numberOfComponents) {\n      tupleToFill.length = numberOfComponents;\n    }\n\n    var offset = idx * numberOfComponents; // Check most common component sizes first\n    // to avoid doing a for loop if possible\n\n    if (numberOfComponents === 1) {\n      tupleToFill[0] = model.values[offset];\n    } else if (numberOfComponents === 2) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n    } else if (numberOfComponents === 3) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n    } else if (numberOfComponents === 4) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n      tupleToFill[3] = model.values[offset + 3];\n    } else {\n      for (var i = 0; i < numberOfComponents; i++) {\n        tupleToFill[i] = model.values[offset + i];\n      }\n    }\n\n    return tupleToFill;\n  };\n\n  publicAPI.getTupleLocation = function () {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return idx * model.numberOfComponents;\n  };\n\n  publicAPI.getNumberOfComponents = function () {\n    return model.numberOfComponents;\n  };\n\n  publicAPI.getNumberOfValues = function () {\n    return model.values.length;\n  };\n\n  publicAPI.getNumberOfTuples = function () {\n    return model.values.length / model.numberOfComponents;\n  };\n\n  publicAPI.getDataType = function () {\n    return model.dataType;\n  };\n  /* eslint-disable no-use-before-define */\n\n\n  publicAPI.newClone = function () {\n    return newInstance({\n      empty: true,\n      name: model.name,\n      dataType: model.dataType,\n      numberOfComponents: model.numberOfComponents\n    });\n  };\n  /* eslint-enable no-use-before-define */\n\n\n  publicAPI.getName = function () {\n    if (!model.name) {\n      publicAPI.modified();\n      model.name = \"vtkDataArray\".concat(publicAPI.getMTime());\n    }\n\n    return model.name;\n  };\n\n  publicAPI.setData = function (typedArray, numberOfComponents) {\n    model.values = typedArray;\n    model.size = typedArray.length;\n    model.dataType = getDataType(typedArray);\n\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n\n    dataChange();\n  }; // Override serialization support\n\n\n  publicAPI.getState = function () {\n    if (model.deleted) {\n      return null;\n    }\n\n    var jsonArchive = _objectSpread(_objectSpread({}, model), {}, {\n      vtkClass: publicAPI.getClassName()\n    }); // Convert typed array to regular array\n\n\n    jsonArchive.values = Array.from(jsonArchive.values);\n    delete jsonArchive.buffer; // Clean any empty data\n\n    Object.keys(jsonArchive).forEach(function (keyName) {\n      if (!jsonArchive[keyName]) {\n        delete jsonArchive[keyName];\n      }\n    }); // Sort resulting object by key name\n\n    var sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(function (name) {\n      sortedObj[name] = jsonArchive[name];\n    }); // Remove mtime\n\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  size: 0,\n  dataType: DefaultDataType,\n  rangeTuple: [0, 0] // values: null,\n  // ranges: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError('Cannot create vtkDataArray object without: size > 0, values');\n  }\n\n  if (!model.values) {\n    model.values = newTypedArray(model.dataType, model.size);\n  } else if (Array.isArray(model.values)) {\n    model.values = newTypedArrayFrom(model.dataType, model.values);\n  }\n\n  if (model.values) {\n    model.size = model.values.length;\n    model.dataType = getDataType(model.values);\n  } // Object methods\n\n\n  obj(publicAPI, model);\n  set(publicAPI, model, ['name', 'numberOfComponents']); // Object specific methods\n\n  vtkDataArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkDataArray'); // ----------------------------------------------------------------------------\n\nvar vtkDataArray$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkDataArray$1 as default, extend, newInstance };\n", "var VectorMode = {\n  MAGNITUDE: 0,\n  COMPONENT: 1,\n  RGBCOLORS: 2\n};\nvar ScalarMappingTarget = {\n  LUMINANCE: 1,\n  LUMINANCE_ALPHA: 2,\n  RGB: 3,\n  RGBA: 4\n};\nvar vtkScalarsToColors = {\n  VectorMode: VectorMode,\n  ScalarMappingTarget: ScalarMappingTarget\n};\n\nexport { ScalarMappingTarget, VectorMode, vtkScalarsToColors as default };\n", "var ColorMode = {\n  DEFAULT: 0,\n  MAP_SCALARS: 1,\n  DIRECT_SCALARS: 2\n};\nvar ScalarMode = {\n  DEFAULT: 0,\n  USE_POINT_DATA: 1,\n  USE_CELL_DATA: 2,\n  USE_POINT_FIELD_DATA: 3,\n  USE_CELL_FIELD_DATA: 4,\n  USE_FIELD_DATA: 5\n};\nvar GetArray = {\n  BY_ID: 0,\n  BY_NAME: 1\n};\nvar Constants = {\n  ColorMode: ColorMode,\n  GetArray: GetArray,\n  ScalarMode: ScalarMode\n};\n\nexport { ColorMode, GetArray, ScalarMode, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport vtkScalarsToColors$2 from './ScalarsToColors/Constants.js';\nimport Constants from '../../Rendering/Core/Mapper/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar ScalarMappingTarget = vtkScalarsToColors$2.ScalarMappingTarget,\n    VectorMode = vtkScalarsToColors$2.VectorMode;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes;\nvar ColorMode = Constants.ColorMode;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nfunction intColorToUChar(c) {\n  return c;\n}\n\nfunction floatColorToUChar(c) {\n  return Math.floor(c * 255.0 + 0.5);\n} // ----------------------------------------------------------------------------\n// vtkScalarsToColors methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkScalarsToColors(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarsToColors');\n\n  publicAPI.setVectorModeToMagnitude = function () {\n    return publicAPI.setVectorMode(VectorMode.MAGNITUDE);\n  };\n\n  publicAPI.setVectorModeToComponent = function () {\n    return publicAPI.setVectorMode(VectorMode.COMPONENT);\n  };\n\n  publicAPI.setVectorModeToRGBColors = function () {\n    return publicAPI.setVectorMode(VectorMode.RGBCOLORS);\n  };\n\n  publicAPI.build = function () {};\n\n  publicAPI.isOpaque = function () {\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setAnnotations = function (values, annotations) {\n    if (values && !annotations || !values && annotations) {\n      return;\n    }\n\n    if (values && annotations && values.length !== annotations.length) {\n      vtkErrorMacro('Values and annotations do not have the same number of tuples so ignoring');\n      return;\n    }\n\n    model.annotationArray = [];\n\n    if (annotations && values) {\n      var num = annotations.length;\n\n      for (var i = 0; i < num; i++) {\n        model.annotationArray.push({\n          value: values[i],\n          annotation: String(annotations[i])\n        });\n      }\n    }\n\n    publicAPI.updateAnnotatedValueMap();\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setAnnotation = function (value, annotation) {\n    var i = publicAPI.checkForAnnotatedValue(value);\n    var modified = false;\n\n    if (i >= 0) {\n      if (model.annotationArray[i].annotation !== annotation) {\n        model.annotationArray[i].annotation = annotation;\n        modified = true;\n      }\n    } else {\n      model.annotationArray.push({\n        value: value,\n        annotation: annotation\n      });\n      i = model.annotationArray.length - 1;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n\n    return i;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getNumberOfAnnotatedValues = function () {\n    return model.annotationArray.length;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getAnnotatedValue = function (idx) {\n    if (idx < 0 || idx >= model.annotationArray.length) {\n      return null;\n    }\n\n    return model.annotationArray[idx].value;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getAnnotation = function (idx) {\n    if (model.annotationArray[idx] === undefined) {\n      return null;\n    }\n\n    return model.annotationArray[idx].annotation;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getAnnotatedValueIndex = function (val) {\n    return model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.removeAnnotation = function (value) {\n    var i = publicAPI.checkForAnnotatedValue(value);\n    var needToRemove = i >= 0;\n\n    if (needToRemove) {\n      model.annotationArray.splice(i, 1);\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n\n    return needToRemove;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.resetAnnotations = function () {\n    model.annotationArray = [];\n    model.annotatedValueMap = [];\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getAnnotationColor = function (val, rgba) {\n    if (model.indexedLookup) {\n      var i = publicAPI.getAnnotatedValueIndex(val);\n      publicAPI.getIndexedColor(i, rgba);\n    } else {\n      publicAPI.getColor(parseFloat(val), rgba);\n      rgba[3] = 1.0;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.checkForAnnotatedValue = function (value) {\n    return publicAPI.getAnnotatedValueIndexInternal(value);\n  }; //----------------------------------------------------------------------------\n  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for\n  // internal use (no pointer checks performed)\n\n\n  publicAPI.getAnnotatedValueIndexInternal = function (value) {\n    if (model.annotatedValueMap[value] !== undefined) {\n      var na = model.annotationArray.length;\n      return model.annotatedValueMap[value] % na;\n    } // Treat as a NaN\n\n\n    return -1;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getIndexedColor = function (val, rgba) {\n    rgba[0] = 0.0;\n    rgba[1] = 0.0;\n    rgba[2] = 0.0;\n    rgba[3] = 0.0;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.updateAnnotatedValueMap = function () {\n    model.annotatedValueMap = [];\n    var na = model.annotationArray.length;\n\n    for (var i = 0; i < na; i++) {\n      model.annotatedValueMap[model.annotationArray[i].value] = i;\n    }\n  }; // Description:\n  // Internal methods that map a data array into a 4-component,\n  // unsigned char RGBA array. The color mode determines the behavior\n  // of mapping. If ColorMode.DEFAULT is set, then unsigned char\n  // data arrays are treated as colors (and converted to RGBA if\n  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays\n  // are treated as colors (integer types are clamped in the range 0-255,\n  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does\n  // not have enough values to represent a color so mapping this type is\n  // considered an error);\n  // otherwise, the data is mapped through this instance\n  // of ScalarsToColors. The component argument is used for data\n  // arrays with more than one component; it indicates which component\n  // to use to do the blending.  When the component argument is -1,\n  // then the this object uses its own selected technique to change a\n  // vector into a scalar to map.\n\n\n  publicAPI.mapScalars = function (scalars, colorMode, componentIn) {\n    var numberOfComponents = scalars.getNumberOfComponents();\n    var newColors = null; // map scalars through lookup table only if needed\n\n    if (colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || colorMode === ColorMode.DIRECT_SCALARS && scalars) {\n      newColors = publicAPI.convertToRGBA(scalars, numberOfComponents, scalars.getNumberOfTuples());\n    } else {\n      var newscalars = {\n        type: 'vtkDataArray',\n        name: 'temp',\n        numberOfComponents: 4,\n        dataType: VtkDataTypes.UNSIGNED_CHAR\n      };\n      var s = macro.newTypedArray(newscalars.dataType, 4 * scalars.getNumberOfTuples());\n      newscalars.values = s;\n      newscalars.size = s.length;\n      newColors = vtkDataArray.newInstance(newscalars);\n      var component = componentIn; // If mapper did not specify a component, use the VectorMode\n\n      if (component < 0 && numberOfComponents > 1) {\n        publicAPI.mapVectorsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, -1, -1);\n      } else {\n        if (component < 0) {\n          component = 0;\n        }\n\n        if (component >= numberOfComponents) {\n          component = numberOfComponents - 1;\n        } // Map the scalars to colors\n\n\n        publicAPI.mapScalarsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, component);\n      }\n    }\n\n    return newColors;\n  };\n\n  publicAPI.mapVectorsToMagnitude = function (input, output, compsToUse) {\n    var length = input.getNumberOfTuples();\n    var inIncr = input.getNumberOfComponents();\n    var outputV = output.getData();\n    var inputV = input.getData();\n\n    for (var i = 0; i < length; i++) {\n      var sum = 0.0;\n\n      for (var j = 0; j < compsToUse; j++) {\n        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];\n      }\n\n      outputV[i] = Math.sqrt(sum);\n    }\n  }; //----------------------------------------------------------------------------\n  // Map a set of vector values through the table\n\n\n  publicAPI.mapVectorsThroughTable = function (input, output, outputFormat, vectorComponentIn, vectorSizeIn) {\n    var vectorMode = publicAPI.getVectorMode();\n    var vectorSize = vectorSizeIn;\n    var vectorComponent = vectorComponentIn;\n    var inComponents = input.getNumberOfComponents();\n\n    if (vectorMode === VectorMode.COMPONENT) {\n      // make sure vectorComponent is within allowed range\n      if (vectorComponent === -1) {\n        // if set to -1, use default value provided by table\n        vectorComponent = publicAPI.getVectorComponent();\n      }\n\n      if (vectorComponent < 0) {\n        vectorComponent = 0;\n      }\n\n      if (vectorComponent >= inComponents) {\n        vectorComponent = inComponents - 1;\n      }\n    } else {\n      // make sure vectorSize is within allowed range\n      if (vectorSize === -1) {\n        // if set to -1, use default value provided by table\n        vectorSize = publicAPI.getVectorSize();\n      }\n\n      if (vectorSize <= 0) {\n        vectorComponent = 0;\n        vectorSize = inComponents;\n      } else {\n        if (vectorComponent < 0) {\n          vectorComponent = 0;\n        }\n\n        if (vectorComponent >= inComponents) {\n          vectorComponent = inComponents - 1;\n        }\n\n        if (vectorComponent + vectorSize > inComponents) {\n          vectorSize = inComponents - vectorComponent;\n        }\n      }\n\n      if (vectorMode === VectorMode.MAGNITUDE && (inComponents === 1 || vectorSize === 1)) {\n        vectorMode = VectorMode.COMPONENT;\n      }\n    } // increment input pointer to the first component to map\n\n\n    var inputOffset = 0;\n\n    if (vectorComponent > 0) {\n      inputOffset = vectorComponent;\n    } // map according to the current vector mode\n\n\n    switch (vectorMode) {\n      case VectorMode.COMPONENT:\n        {\n          publicAPI.mapScalarsThroughTable(input, output, outputFormat, inputOffset);\n          break;\n        }\n\n      case VectorMode.RGBCOLORS:\n        {\n          // publicAPI.mapColorsToColors(\n          //   input, output, inComponents, vectorSize,\n          //   outputFormat);\n          break;\n        }\n      // MAGNITUDE is considered default\n\n      case VectorMode.MAGNITUDE:\n      default:\n        {\n          var magValues = vtkDataArray.newInstance({\n            numberOfComponents: 1,\n            values: new Float32Array(input.getNumberOfTuples())\n          });\n          publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);\n          publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);\n          break;\n        }\n    }\n  };\n\n  publicAPI.luminanceToRGBA = function (newColors, colors, alpha, convtFun) {\n    var a = convtFun(alpha);\n    var values = colors.getData();\n    var newValues = newColors.getData();\n    var size = values.length;\n    var component = 0;\n    var tuple = 1;\n    var count = 0;\n\n    for (var i = component; i < size; i += tuple) {\n      var l = convtFun(values[i]);\n      newValues[count * 4] = l;\n      newValues[count * 4 + 1] = l;\n      newValues[count * 4 + 2] = l;\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.luminanceAlphaToRGBA = function (newColors, colors, alpha, convtFun) {\n    var values = colors.getData();\n    var newValues = newColors.getData();\n    var size = values.length;\n    var component = 0;\n    var tuple = 2;\n    var count = 0;\n\n    for (var i = component; i < size; i += tuple) {\n      var l = convtFun(values[i]);\n      newValues[count] = l;\n      newValues[count + 1] = l;\n      newValues[count + 2] = l;\n      newValues[count + 3] = convtFun(values[i + 1]) * alpha;\n      count += 4;\n    }\n  };\n\n  publicAPI.rGBToRGBA = function (newColors, colors, alpha, convtFun) {\n    var a = floatColorToUChar(alpha);\n    var values = colors.getData();\n    var newValues = newColors.getData();\n    var size = values.length;\n    var component = 0;\n    var tuple = 3;\n    var count = 0;\n\n    for (var i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.rGBAToRGBA = function (newColors, colors, alpha, convtFun) {\n    var values = colors.getData();\n    var newValues = newColors.getData();\n    var size = values.length;\n    var component = 0;\n    var tuple = 4;\n    var count = 0;\n\n    for (var i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;\n      count++;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.convertToRGBA = function (colors, numComp, numTuples) {\n    var alpha = model.alpha;\n\n    if (numComp === 4 && alpha >= 1.0 && colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR) {\n      return colors;\n    }\n\n    var newColors = vtkDataArray.newInstance({\n      numberOfComponents: 4,\n      empty: true,\n      size: 4 * numTuples,\n      dataType: VtkDataTypes.UNSIGNED_CHAR\n    });\n\n    if (numTuples <= 0) {\n      return newColors;\n    }\n\n    alpha = alpha > 0 ? alpha : 0;\n    alpha = alpha < 1 ? alpha : 1;\n    var convtFun = intColorToUChar;\n\n    if (colors.getDataType() === VtkDataTypes.FLOAT || colors.getDataType() === VtkDataTypes.DOUBLE) {\n      convtFun = floatColorToUChar;\n    }\n\n    switch (numComp) {\n      case 1:\n        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 2:\n        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);\n        break;\n\n      case 3:\n        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 4:\n        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      default:\n        vtkErrorMacro('Cannot convert colors');\n        return null;\n    }\n\n    return newColors;\n  };\n\n  publicAPI.usingLogScale = function () {\n    return false;\n  };\n\n  publicAPI.getNumberOfAvailableColors = function () {\n    return 256 * 256 * 256;\n  };\n\n  publicAPI.setRange = function (min, max) {\n    return publicAPI.setMappingRange(min, max);\n  };\n\n  publicAPI.getRange = function (min, max) {\n    return publicAPI.getMappingRange();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  alpha: 1.0,\n  vectorComponent: 0,\n  vectorSize: -1,\n  vectorMode: VectorMode.COMPONENT,\n  mappingRange: null,\n  annotationArray: null,\n  annotatedValueMap: null,\n  indexedLookup: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  model.mappingRange = [0, 255];\n  model.annotationArray = [];\n  model.annotatedValueMap = []; // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['vectorSize', 'vectorComponent', 'vectorMode', 'alpha', 'indexedLookup']); // Create set macros for array (needs to know size)\n\n  macro.setArray(publicAPI, model, ['mappingRange'], 2); // Create get macros for array\n\n  macro.getArray(publicAPI, model, ['mappingRange']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkScalarsToColors(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkScalarsToColors'); // ----------------------------------------------------------------------------\n\nvar vtkScalarsToColors$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, vtkScalarsToColors$2);\n\nexport { vtkScalarsToColors$1 as default, extend, newInstance };\n", "var ColorSpace = {\n  RGB: 0,\n  HSV: 1,\n  LAB: 2,\n  DIVERGING: 3\n};\nvar Scale = {\n  LINEAR: 0,\n  LOG10: 1\n};\nvar Constants = {\n  ColorSpace: ColorSpace,\n  Scale: Scale\n};\n\nexport { ColorSpace, Scale, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { h as hsv2rgb, i as isNan, F as isInf, G as rgb2hsv, H as rgb2lab, I as lab2rgb, J as floor } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport Constants from './ColorTransferFunction/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ColorSpace = Constants.ColorSpace,\n    Scale = Constants.Scale;\nvar ScalarMappingTarget = vtkScalarsToColors.ScalarMappingTarget;\nvar vtkDebugMacro = macro.vtkDebugMacro,\n    vtkErrorMacro = macro.vtkErrorMacro,\n    vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-continue                                                */\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\n\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  var L = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var M = Math.sqrt(L * L + a * a + b * b);\n  var s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  var h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\n\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  var M = msh[0];\n  var s = msh[1];\n  var h = msh[2];\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n} // For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\n\n\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  } // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n\n\n  var hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1])); // Spin hue away from 0 except in purple hues.\n\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n\n  return msh[2] - hueSpin;\n}\n\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  var adiff = a1 - a2;\n\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n\n  return adiff;\n} // Interpolate a diverging color map.\n\n\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  var lab1 = [];\n  var lab2 = [];\n  rgb2lab(rgb1, lab1);\n  rgb2lab(rgb2, lab2);\n  var msh1 = [];\n  var msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2); // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n\n  var localS = s;\n\n  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    var Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  } // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n\n\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n\n  var mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2]; // Now convert back to RGB\n\n  var labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  lab2rgb(labTmp, result);\n} // ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction'); // Return the number of points which specify this function\n\n  publicAPI.getSize = function () {\n    return model.nodes.length;\n  }; //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n\n\n  publicAPI.addRGBPoint = function (x, r, g, b) {\n    return publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n  }; //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n\n\n  publicAPI.addRGBPointLong = function (x, r, g, b) {\n    var midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    var sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    } // remove any node already at this X location\n\n\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    } // Create the new node\n\n\n    var node = {\n      x: x,\n      r: r,\n      g: g,\n      b: b,\n      midpoint: midpoint,\n      sharpness: sharpness\n    }; // Add it, then sort to get everything in order\n\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange(); // We need to find the index of the node we just added in order\n    // to return this value\n\n    var i = 0;\n\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    } // If we didn't find it, something went horribly wrong so\n    // return -1\n\n\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  }; //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n\n\n  publicAPI.addHSVPoint = function (x, h, s, v) {\n    return publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n  }; //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n\n\n  publicAPI.addHSVPointLong = function (x, h, s, v) {\n    var midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    var sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    var rgb = [];\n    var hsv = [h, s, v];\n    hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);\n  }; //----------------------------------------------------------------------------\n  // Set nodes directly\n\n\n  publicAPI.setNodes = function (nodes) {\n    if (model.nodes !== nodes) {\n      var before = JSON.stringify(model.nodes);\n      model.nodes = nodes;\n      var after = JSON.stringify(model.nodes);\n\n      if (publicAPI.sortAndUpdateRange() || before !== after) {\n        publicAPI.modified();\n        return true;\n      }\n    }\n\n    return false;\n  }; //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n\n\n  publicAPI.sortAndUpdateRange = function () {\n    var before = JSON.stringify(model.nodes);\n    model.nodes.sort(function (a, b) {\n      return a.x - b.x;\n    });\n    var after = JSON.stringify(model.nodes);\n    var modifiedInvoked = publicAPI.updateRange(); // If range is updated, Modified() has been called, don't call it again.\n\n    if (!modifiedInvoked && before !== after) {\n      publicAPI.modified();\n      return true;\n    }\n\n    return modifiedInvoked;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.updateRange = function () {\n    var oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n    var size = model.nodes.length;\n\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    } // If the range is the same, then no need to call Modified()\n\n\n    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  }; //----------------------------------------------------------------------------\n  // Remove a point\n\n\n  publicAPI.removePoint = function (x) {\n    // First find the node since we need to know its\n    // index as our return value\n    var i = 0;\n\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    var retVal = i; // If the node doesn't exist, we return -1\n\n    if (i >= model.nodes.length) {\n      return -1;\n    } // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n\n\n    var modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.movePoint = function (oldX, newX) {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n\n    publicAPI.removePoint(newX);\n\n    for (var i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  }; //----------------------------------------------------------------------------\n  // Remove all points\n\n\n  publicAPI.removeAllPoints = function () {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  }; //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n\n\n  publicAPI.addRGBSegment = function (x1, r1, g1, b1, x2, r2, g2, b2) {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n\n    for (var i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    } // Now add the points\n\n\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n\n\n  publicAPI.addHSVSegment = function (x1, h1, s1, v1, x2, h2, s2, v2) {\n    var hsv1 = [h1, s1, v1];\n    var hsv2 = [h2, s2, v2];\n    var rgb1 = [];\n    var rgb2 = [];\n    hsv2rgb(hsv1, rgb1);\n    hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);\n  }; //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n\n\n  publicAPI.mapValue = function (x) {\n    var rgb = [];\n    publicAPI.getColor(x, rgb);\n    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];\n  }; //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n\n\n  publicAPI.getColor = function (x, rgb) {\n    if (model.indexedLookup) {\n      var numNodes = publicAPI.getSize(); // todo\n\n      var idx = publicAPI.getAnnotatedValueIndexInternal(x);\n\n      if (idx < 0 || numNodes === 0) {\n        publicAPI.getNanColor(rgb);\n      } else {\n        var nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        rgb[0] = nodeVal.r;\n        rgb[1] = nodeVal.g;\n        rgb[2] = nodeVal.b;\n      }\n\n      return;\n    }\n\n    publicAPI.getTable(x, x, 1, rgb);\n  }; //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n\n\n  publicAPI.getRedValue = function (x) {\n    var rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  }; //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n\n\n  publicAPI.getGreenValue = function (x) {\n    var rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  }; //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n\n\n  publicAPI.getBlueValue = function (x) {\n    var rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  }; //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n\n\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (isNan(xStart) || isNan(xEnd)) {\n      for (var i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n\n      return;\n    }\n\n    var idx = 0;\n    var numNodes = model.nodes.length; // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n\n    var lastR = 0.0;\n    var lastG = 0.0;\n    var lastB = 0.0;\n\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n\n    var x = 0.0;\n    var x1 = 0.0;\n    var x2 = 0.0;\n    var rgb1 = [0.0, 0.0, 0.0];\n    var rgb2 = [0.0, 0.0, 0.0];\n    var midpoint = 0.0;\n    var sharpness = 0.0;\n    var tmpVec = []; // If the scale is logarithmic, make sure the range is valid.\n\n    var usingLogScale = model.scale === Scale.LOG10;\n\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n\n    var logStart = 0.0;\n    var logEnd = 0.0;\n    var logX = 0.0;\n\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    } // For each table entry\n\n\n    for (var _i = 0; _i < size; _i++) {\n      // Find our location in the table\n      var tidx = 3 * _i; // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + _i / (size - 1.0) * (logEnd - logStart);\n          x = Math.pow(10.0, logX);\n        } else {\n          x = xStart + _i / (size - 1.0) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = Math.pow(10.0, logX);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      } // Linearly map x from mappingRange to [0, numberOfValues-1],\n      // discretize (round down to the closest integer),\n      // then map back to mappingRange\n\n\n      if (model.discretize) {\n        var range = model.mappingRange;\n\n        if (x >= range[0] && x <= range[1]) {\n          var numberOfValues = model.numberOfValues;\n          var deltaRange = range[1] - range[0];\n\n          if (numberOfValues <= 1) {\n            x = range[0] + deltaRange / 2.0;\n          } else {\n            // normalize x\n            var xn = (x - range[0]) / deltaRange; // discretize\n\n            var discretizeIndex = floor(numberOfValues * xn); // get discretized x\n\n            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;\n          }\n        }\n      } // Do we need to move to the next node?\n\n\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++; // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b; // We only need the previous midpoint and sharpness\n          // since these control this region\n\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness; // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      } // Are we at or past the end? If so, just use the last value\n\n\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || isInf(x) && x < 0) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        var s = 0.0;\n\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        } // Readjust based on the midpoint - linear adjustment\n\n\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        } // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n\n\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        } // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n\n\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            var hsv1 = [];\n            var hsv2 = [];\n            rgb2hsv(rgb1, hsv1);\n            rgb2hsv(rgb2, hsv2);\n\n            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n\n            var hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2]; // Now convert this back to RGB\n\n            hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            var lab1 = [];\n            var lab2 = [];\n            rgb2lab(rgb1, lab1);\n            rgb2lab(rgb2, lab2);\n            var labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2]; // Now convert back to RGB\n\n            lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n\n          continue;\n        } // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n\n\n        if (s < 0.5) {\n          s = 0.5 * Math.pow(s * 2.0, 1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * Math.pow((1.0 - s) * 2, 1 + 10.0 * sharpness);\n        } // Compute some coefficients we will need for the hermite curve\n\n\n        var ss = s * s;\n        var sss = ss * s;\n        var h1 = 2.0 * sss - 3 * ss + 1;\n        var h2 = -2 * sss + 3 * ss;\n        var h3 = sss - 2 * ss + s;\n        var h4 = sss - ss;\n        var slope = void 0;\n        var t = void 0;\n\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (var j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope; // Compute the value\n\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          var _hsv = [];\n          var _hsv2 = [];\n          rgb2hsv(rgb1, _hsv);\n          rgb2hsv(rgb2, _hsv2);\n\n          if (model.hSVWrap && (_hsv[0] - _hsv2[0] > 0.5 || _hsv2[0] - _hsv[0] > 0.5)) {\n            if (_hsv[0] > _hsv2[0]) {\n              _hsv[0] -= 1.0;\n            } else {\n              _hsv2[0] -= 1.0;\n            }\n          }\n\n          var _hsvTmp = [];\n\n          for (var _j = 0; _j < 3; _j++) {\n            // Use one slope for both end points\n            slope = _hsv2[_j] - _hsv[_j];\n            t = (1.0 - sharpness) * slope; // Compute the value\n\n            _hsvTmp[_j] = h1 * _hsv[_j] + h2 * _hsv2[_j] + h3 * t + h4 * t;\n\n            if (_j === 0 && _hsvTmp[_j] < 0.0) {\n              _hsvTmp[_j] += 1.0;\n            }\n          } // Now convert this back to RGB\n\n\n          hsv2rgb(_hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          var _lab = [];\n          var _lab2 = [];\n          rgb2lab(rgb1, _lab);\n          rgb2lab(rgb2, _lab2);\n          var _labTmp = [];\n\n          for (var _j2 = 0; _j2 < 3; _j2++) {\n            // Use one slope for both end points\n            slope = _lab2[_j2] - _lab[_j2];\n            t = (1.0 - sharpness) * slope; // Compute the value\n\n            _labTmp[_j2] = h1 * _lab[_j2] + h2 * _lab2[_j2] + h3 * t + h4 * t;\n          } // Now convert this back to RGB\n\n\n          lab2rgb(_labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        } // Final error check to make sure we don't go outside [0,1]\n\n\n        for (var _j3 = 0; _j3 < 3; _j3++) {\n          table[tidx + _j3] = table[tidx + _j3] < 0.0 ? 0.0 : table[tidx + _j3];\n          table[tidx + _j3] = table[tidx + _j3] > 1.0 ? 1.0 : table[tidx + _j3];\n        }\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getUint8Table = function (xStart, xEnd, size) {\n    var withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {\n      return model.table;\n    }\n\n    if (model.nodes.length === 0) {\n      vtkErrorMacro('Attempting to lookup a value with no points in the function');\n      return model.table;\n    }\n\n    var nbChannels = withAlpha ? 4 : 3;\n\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n\n    var tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n\n    for (var i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);\n      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);\n      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);\n\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n\n    model.buildTime.modified();\n    return model.table;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.buildFunctionFromTable = function (xStart, xEnd, size, table) {\n    var inc = 0.0;\n    publicAPI.removeAllPoints();\n\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n\n    for (var i = 0; i < size; i++) {\n      var node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5\n      };\n      model.nodes.push(node);\n    }\n\n    publicAPI.sortAndUpdateRange();\n  }; //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n\n\n  publicAPI.getNodeValue = function (index, val) {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n    return 1;\n  }; //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n\n\n  publicAPI.setNodeValue = function (index, val) {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    var oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange(); // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getNumberOfAvailableColors = function () {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n\n    return 16777216; // 2^24\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getIndexedColor = function (idx, rgba) {\n    var n = publicAPI.getSize();\n\n    if (n > 0 && idx >= 0) {\n      var nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n\n      for (var j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n\n      return;\n    }\n\n    publicAPI.getNanColor(rgba);\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.fillFromDataPointer = function (nb, ptr) {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n\n    publicAPI.removeAllPoints();\n\n    for (var i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setMappingRange = function (min, max) {\n    var range = [min, max];\n    var originalRange = publicAPI.getRange();\n\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n\n    var scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    var shift = range[0] - originalRange[0] * scale;\n\n    for (var i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.adjustRange = function (range) {\n    var functionRange = publicAPI.getRange(); // Make sure we have points at each end of the range\n\n    var rgb = [];\n\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } // Remove all points out-of-range\n\n\n    publicAPI.sortAndUpdateRange();\n\n    for (var i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    return 1;\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.estimateMinNumberOfSamples = function (x1, x2) {\n    var d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.findMinimumXDistance = function () {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n\n    var distance = Number.MAX_VALUE;\n\n    for (var i = 0; i < model.nodes.length - 1; i++) {\n      var currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  };\n\n  publicAPI.mapScalarsThroughTable = function (input, output, outFormat, inputOffset) {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.mapData = function (input, output, outFormat, inputOffset) {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    var alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    var length = input.getNumberOfTuples();\n    var inIncr = input.getNumberOfComponents();\n    var outputV = output.getData();\n    var inputV = input.getData();\n    var rgb = [];\n\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (var i = 0; i < length; i++) {\n        var x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (var _i2 = 0; _i2 < length; _i2++) {\n        var _x = inputV[_i2 * inIncr + inputOffset];\n        publicAPI.getColor(_x, rgb);\n        outputV[_i2 * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[_i2 * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[_i2 * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (var _i3 = 0; _i3 < length; _i3++) {\n        var _x2 = inputV[_i3 * inIncr + inputOffset];\n        publicAPI.getColor(_x2, rgb);\n        outputV[_i3] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (var _i4 = 0; _i4 < length; _i4++) {\n        var _x3 = inputV[_i4 * inIncr + inputOffset];\n        publicAPI.getColor(_x3, rgb);\n        outputV[_i4 * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n        outputV[_i4 * 2 + 1] = alpha;\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.applyColorMap = function (colorMap) {\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(\"ColorSpace \".concat(colorMap.ColorSpace, \" not supported, using RGB instead\"));\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n\n    if (colorMap.RGBPoints) {\n      var size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      var midpoint = 0.5;\n      var sharpness = 0.0;\n\n      for (var i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint: midpoint,\n          sharpness: sharpness\n        });\n      }\n    } // FIXME: not supported ?\n    // if (colorMap.IndexedColors) {\n    // }\n    // if (colorMap.Annotations) {\n    // }\n\n\n    publicAPI.sortAndUpdateRange();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  allowDuplicateScalars: false,\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n  nodes: null,\n  discretize: false,\n  numberOfValues: 256\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkScalarsToColors.extend(publicAPI, model, initialValues); // Internal objects initialization\n\n  model.table = [];\n  model.nodes = [];\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n  model.buildTime = {};\n  macro.obj(model.buildTime); // Create get-only macros\n\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'colorSpace', 'discretize', 'numberOfValues']);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4); // Create get macros for array\n\n  macro.getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkColorTransferFunction(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkColorTransferFunction'); // ----------------------------------------------------------------------------\n\nvar vtkColorTransferFunction$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkColorTransferFunction$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction'); // Return the number of points which specify this function\n\n  publicAPI.getSize = function () {\n    return model.nodes.length;\n  }; // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n\n\n  publicAPI.getType = function () {\n    var value;\n    var prevValue = 0.0;\n    var functionType = 0;\n\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n\n    for (var i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y; // Do not change the function type if equal\n\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              functionType = 1; // NonDecreasing\n\n              break;\n\n            case 2:\n            default:\n              functionType = 3; // Varied\n\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              functionType = 2; // NonIncreasing\n\n              break;\n\n            case 1:\n            default:\n              functionType = 3; // Varied\n\n              break;\n          }\n        }\n      }\n\n      prevValue = value; // Exit loop if we find a Varied function\n\n      if (functionType === 3) {\n        break;\n      }\n    }\n\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n\n      case 1:\n        return 'NonDecreasing';\n\n      case 2:\n        return 'NonIncreasing';\n\n      case 3:\n      default:\n        return 'Varied';\n    }\n  }; // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n\n\n  publicAPI.getDataPointer = function () {\n    var size = model.nodes.length;\n    model.function = null;\n\n    if (size > 0) {\n      model.function = [];\n\n      for (var i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n\n    return model.function;\n  }; // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n\n\n  publicAPI.getFirstNonZeroValue = function () {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n\n    var allZero = 1;\n    var x = 0.0;\n    var i = 0;\n\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    } // If every specified point has a zero value then return\n    // a large value\n\n\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n\n    return x;\n  }; // For a specified index value, get the node parameters\n\n\n  publicAPI.getNodeValue = function (index, val) {\n    var size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n    return 1;\n  }; // For a specified index value, get the node parameters\n\n\n  publicAPI.setNodeValue = function (index, val) {\n    var size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    var oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange(); // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  }; // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n\n\n  publicAPI.addPoint = function (x, y) {\n    return publicAPI.addPointLong(x, y, 0.5, 0.0);\n  }; // Adds a point to the function and returns the array index of the point.\n\n\n  publicAPI.addPointLong = function (x, y, midpoint, sharpness) {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    } // remove any node already at this X location\n\n\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    } // Create the new node\n\n\n    var node = {\n      x: x,\n      y: y,\n      midpoint: midpoint,\n      sharpness: sharpness\n    }; // Add it, then sort to get everything in order\n\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange(); // Now find this node so we can return the index\n\n    var i;\n\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    } // If we didn't find it, something went horribly wrong so\n    // return -1\n\n\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  };\n\n  publicAPI.setNodes = function (nodes) {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  }; // Sort the vector in increasing order, then fill in\n  // the Range\n\n\n  publicAPI.sortAndUpdateRange = function () {\n    model.nodes.sort(function (a, b) {\n      return a.x - b.x;\n    });\n    var modifiedInvoked = publicAPI.updateRange(); // If range is updated, Modified() has been called, don't call it again.\n\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.updateRange = function () {\n    var oldRange = model.range.slice();\n    var size = model.nodes.length;\n\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    } // If the rage is the same, then no need to call Modified()\n\n\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  }; // Removes a point from the function. If no point is found then function\n  // remains the same.\n\n\n  publicAPI.removePoint = function (x) {\n    // First find the node since we need to know its\n    // index as our return value\n    var i;\n\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    } // If the node doesn't exist, we return -1\n\n\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    var retVal = i; // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n\n    var modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  }; // Removes all points from the function.\n\n\n  publicAPI.removeAllPoints = function () {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  }; // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n\n\n  publicAPI.addSegment = function (x1, y1, x2, y2) {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n\n    for (var i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    } // Now add the points\n\n\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  }; // Return the value of the function at a position\n\n\n  publicAPI.getValue = function (x) {\n    var table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  }; // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n\n\n  publicAPI.adjustRange = function (range) {\n    if (range.length < 2) {\n      return 0;\n    }\n\n    var functionRange = publicAPI.getRange(); // Make sure we have points at each end of the range\n\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    } // Remove all points out-of-range\n\n\n    publicAPI.sortAndUpdateRange();\n\n    for (var i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  }; //--------------------------------------------------------------------------\n\n\n  publicAPI.estimateMinNumberOfSamples = function (x1, x2) {\n    var d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.findMinimumXDistance = function () {\n    var size = model.nodes.length;\n\n    if (size < 2) {\n      return -1.0;\n    }\n\n    var distance = model.nodes[1].x - model.nodes[0].x;\n\n    for (var i = 0; i < size - 1; i++) {\n      var currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  }; // Returns a table of function values evaluated at regular intervals\n\n  /* eslint-disable prefer-destructuring */\n\n  /* eslint-disable no-continue */\n\n\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    var stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var i;\n    var idx = 0;\n    var numNodes = model.nodes.length; // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n\n    var lastValue = 0.0;\n\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n\n    var x = 0.0;\n    var x1 = 0.0;\n    var x2 = 0.0;\n    var y1 = 0.0;\n    var y2 = 0.0;\n    var midpoint = 0.0;\n    var sharpness = 0.0; // For each table entry\n\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      var tidx = stride * i; // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n\n      if (size > 1) {\n        x = xStart + i / (size - 1.0) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      } // Do we need to move to the next node?\n\n\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++; // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y; // We only need the previous midpoint and sharpness\n          // since these control this region\n\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness; // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      } // Are we at the end? If so, just use the last value\n\n\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        var s = (x - x1) / (x2 - x1); // Readjust based on the midpoint - linear adjustment\n\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        } // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n\n\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        } // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n\n\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        } // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n\n\n        if (s < 0.5) {\n          s = 0.5 * Math.pow(s * 2, 1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * Math.pow((1.0 - s) * 2, 1 + 10 * sharpness);\n        } // Compute some coefficients we will need for the hermite curve\n\n\n        var ss = s * s;\n        var sss = ss * s;\n        var h1 = 2 * sss - 3 * ss + 1;\n        var h2 = -2 * sss + 3 * ss;\n        var h3 = sss - 2 * ss + s;\n        var h4 = sss - ss; // Use one slope for both end points\n\n        var slope = y2 - y1;\n        var t = (1.0 - sharpness) * slope; // Compute the value\n\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t; // Final error check to make sure we don't go outside\n        // the Y range\n\n        var min = y1 < y2 ? y1 : y2;\n        var max = y1 > y2 ? y1 : y2;\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n\n/* eslint-enable no-continue */\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model); // Internal objects initialization\n\n  model.nodes = []; // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n  macro.setArray(publicAPI, model, ['range'], 2); // Create get macros for array\n\n  macro.getArray(publicAPI, model, ['range']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkPiecewiseFunction(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction'); // ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunction$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPiecewiseFunction$1 as default, extend, newInstance };\n", "var InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1,\n  FAST_LINEAR: 2\n};\nvar OpacityMode = {\n  FRACTIONAL: 0,\n  PROPORTIONAL: 1\n};\nvar Constants = {\n  InterpolationType: InterpolationType,\n  OpacityMode: OpacityMode\n};\n\nexport { InterpolationType, OpacityMode, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar InterpolationType = Constants.InterpolationType,\n    OpacityMode = Constants.OpacityMode;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } // Opacity MTimes\n\n\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n\n    return mTime;\n  };\n\n  publicAPI.getColorChannels = function (index) {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n\n    return model.componentData[index].colorChannels;\n  }; // Set the color of a volume to a gray transfer function\n\n\n  publicAPI.setGrayTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set gray transfer function. Create one if none set.\n\n\n  publicAPI.getGrayTransferFunction = function (index) {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].grayTransferFunction;\n  }; // Set the color of a volume to an RGB transfer function\n\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set RGB transfer function. Create one if none set.\n\n\n  publicAPI.getRGBTransferFunction = function (index) {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].rGBTransferFunction;\n  }; // Set the scalar opacity of a volume to a transfer function\n\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  }; // Get the scalar opacity transfer function. Create one if none set.\n\n\n  publicAPI.getScalarOpacity = function (index) {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].scalarOpacity;\n  };\n\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n\n    var val = Math.min(1, Math.max(0, value));\n\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.setInterpolationTypeToFastLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n\n  var sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"set\".concat(cap)] = function (index, value) {\n      if (model.componentData[index][\"\".concat(val)] !== value) {\n        model.componentData[index][\"\".concat(val)] = value;\n        publicAPI.modified();\n        return true;\n      }\n\n      return false;\n    };\n  });\n  var gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"get\".concat(cap)] = function (index) {\n      return model.componentData[index][\"\".concat(val)];\n    };\n  });\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: 0,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n\n    for (var i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineThickness']); // Object methods\n\n  vtkVolumeProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeProperty'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkVolumeProperty$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro; // ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n\n  publicAPI.getVolumes = function () {\n    return publicAPI;\n  };\n\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n\n  publicAPI.getProperty = function () {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n\n    return model.property;\n  };\n\n  publicAPI.getBounds = function () {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n\n    var bds = model.mapper.getBounds();\n\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n\n    var zip = function zip(rows) {\n      return rows[0].map(function (_, c) {\n        return rows.map(function (row) {\n          return row[c];\n        });\n      });\n    };\n\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {\n      return a && b[0] === b[1];\n    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(function (x) {\n        return x;\n      });\n      var bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      var tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(function (pt) {\n        return vec3.transformMat4(pt, pt, tmp4);\n      });\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(function (d, i) {\n        return i % 2 === 0 ? bbox.reduce(function (a, b) {\n          return a > b[i / 2] ? b[i / 2] : a;\n        }, d) : bbox.reduce(function (a, b) {\n          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;\n        }, d);\n      });\n      model.boundsMTime.modified();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = function () {\n    var mt = model.mtime;\n\n    if (model.property !== null) {\n      var time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = function () {\n    var mt = model.mtime;\n\n    if (model.mapper !== null) {\n      var time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n\n    return mt;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6); // Object methods\n\n  vtkVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar PASS_TYPES = ['Build', 'Render']; // ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode'); // Builds myself.\n\n  publicAPI.build = function (prepass) {}; // Renders myself\n\n\n  publicAPI.render = function (prepass) {};\n\n  publicAPI.traverse = function (renderPass) {\n    // we can choose to do special\n    // traversal here based on pass\n    var passTraversal = renderPass.getTraverseOperation();\n    var fn = publicAPI[passTraversal];\n\n    if (fn) {\n      fn(renderPass);\n      return;\n    } // default traversal\n\n\n    publicAPI.apply(renderPass, true);\n\n    for (var index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.apply = function (renderPass, prepass) {\n    var customRenderPass = publicAPI[renderPass.getOperation()];\n\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n\n  publicAPI.getViewNodeFor = function (dataObject) {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var vn = child.getViewNodeFor(dataObject);\n\n      if (vn) {\n        return vn;\n      }\n    }\n\n    return undefined;\n  };\n\n  publicAPI.getFirstAncestorOfType = function (type) {\n    if (!model._parent) {\n      return null;\n    }\n\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n\n    return model._parent.getFirstAncestorOfType(type);\n  };\n\n  publicAPI.addMissingNode = function (dobj) {\n    if (!dobj) {\n      return;\n    }\n\n    var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n    if (result !== undefined) {\n      result.setVisited(true);\n    } else {\n      // otherwise create a node\n      var newNode = publicAPI.createViewNode(dobj);\n\n      if (newNode) {\n        newNode.setParent(publicAPI);\n        newNode.setVisited(true);\n\n        model._renderableChildMap.set(dobj, newNode);\n\n        model.children.push(newNode);\n      }\n    }\n  };\n\n  publicAPI.addMissingNodes = function (dataObjs) {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n\n    for (var index = 0; index < dataObjs.length; ++index) {\n      var dobj = dataObjs[index];\n\n      var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n      if (result !== undefined) {\n        result.setVisited(true);\n      } else {\n        // otherwise create a node\n        var newNode = publicAPI.createViewNode(dobj);\n\n        if (newNode) {\n          newNode.setParent(publicAPI);\n          newNode.setVisited(true);\n\n          model._renderableChildMap.set(dobj, newNode);\n\n          model.children.push(newNode);\n        }\n      }\n    }\n  };\n\n  publicAPI.prepareNodes = function () {\n    for (var index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n\n  publicAPI.setVisited = function (val) {\n    model.visited = val;\n  };\n\n  publicAPI.removeUnusedNodes = function () {\n    var deleted = null;\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var visited = child.getVisited();\n\n      if (!visited) {\n        var renderable = child.getRenderable();\n\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n\n        if (!deleted) {\n          deleted = [];\n        }\n\n        deleted.push(child);\n      } else {\n        child.setVisited(false);\n      }\n    }\n\n    if (deleted) {\n      // slow does alloc but not as common\n      model.children = model.children.filter(function (el) {\n        return !deleted.includes(el);\n      });\n    }\n  };\n\n  publicAPI.createViewNode = function (dataObj) {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n\n    var ret = model.myFactory.createNode(dataObj);\n\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n\n    return ret;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']); // Object methods\n\n  vtkViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  PASS_TYPES: PASS_TYPES\n};\n\nexport { vtkViewNode$1 as default };\n", "import macro from '../../macros.js';\n\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  if (!model.overrides) {\n    model.overrides = {};\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkViewNodeFactory');\n\n  publicAPI.createNode = function (dataObject) {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    var cpt = 0;\n    var className = dataObject.getClassName(cpt++);\n    var isObject = false;\n    var keys = Object.keys(model.overrides);\n\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n\n    var vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  publicAPI.registerOverride = function (className, func) {\n    model.overrides[className] = func;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// overrides: {},\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Object methods\n\n  vtkViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewNodeFactory$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNodeFactory$1 from '../SceneGraph/ViewNodeFactory.js';\n\nvar CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n} // ----------------------------------------------------------------------------\n// vtkOpenGLViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLViewNodeFactory');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Static class mapping shared across instances\n\n  model.overrides = CLASS_MAPPING; // Inheritance\n\n  vtkViewNodeFactory$1.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkOpenGLViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewNodeFactory as default, extend, newInstance, registerOverride };\n", "import { mat4, mat3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  }; // Renders myself\n\n\n  publicAPI.opaquePass = function (prepass) {\n    if (prepass) {\n      var tsize = model.openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n    }\n  };\n\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n\n  publicAPI.getKeyMatrices = function (ren) {\n    // has the camera changed?\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n      var aspectRatio = model.openGLRenderer.getAspectRatio();\n      mat4.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\n      mat4.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\n      mat4.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime); // values always get set by the get method\n\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(9),\n    vcpc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    wcpc: new Float64Array(16)\n  }; // Build VTK API\n\n  setGet(publicAPI, model, ['context', 'keyMatrixTime']); // Object methods\n\n  vtkOpenGLCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkCamera = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkCamera', newInstance);\n\nexport { vtkCamera as default, extend, newInstance };\n", "import { newInstance as newInstance$1, get, setGet, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar vtkDebugMacro = vtkDebugMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.updateLights = function () {\n    var count = 0;\n    var lights = model.renderable.getLightsByReference();\n\n    for (var index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n\n    return count;\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass) {\n    if (prepass) {\n      var clearMask = 0;\n      var gl = model.context;\n\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        model.context.depthMask(true);\n      }\n\n      var ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.colorMask(true, true, true, true);\n      gl.clear(clearMask);\n      gl.enable(gl.DEPTH_TEST);\n    }\n  }; // Renders myself\n\n\n  publicAPI.cameraPass = function (prepass) {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n\n  publicAPI.getAspectRatio = function () {\n    var size = model._parent.getSizeByReference();\n\n    var viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n\n  publicAPI.getTiledSizeAndOrigin = function () {\n    var vport = model.renderable.getViewportByReference(); // if there is no window assume 0 1\n\n    var tileViewPort = [0.0, 0.0, 1.0, 1.0]; // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu = vport[0] - tileViewPort[0];\n    var vpv = vport[1] - tileViewPort[1]; // store the result as a pixel value\n\n    var ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n\n    var lowerLeftU = Math.round(ndvp[0]);\n    var lowerLeftV = Math.round(ndvp[1]); // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu2 = vport[2] - tileViewPort[0];\n    var vpv2 = vport[3] - tileViewPort[1];\n\n    var ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2); // now compute the size of the intersection of the viewport with the\n    // current tile\n\n\n    var usize = Math.round(ndvp2[0]) - lowerLeftU;\n    var vsize = Math.round(ndvp2[1]) - lowerLeftV;\n\n    if (usize < 0) {\n      usize = 0;\n    }\n\n    if (vsize < 0) {\n      vsize = 0;\n    }\n\n    return {\n      usize: usize,\n      vsize: vsize,\n      lowerLeftU: lowerLeftU,\n      lowerLeftV: lowerLeftV\n    };\n  };\n\n  publicAPI.clear = function () {\n    var clearMask = 0;\n    var gl = model.context;\n\n    if (!model.renderable.getTransparent()) {\n      var background = model.renderable.getBackgroundByReference(); // renderable ensures that background has 4 entries.\n\n      model.context.clearColor(background[0], background[1], background[2], background[3]);\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      model.context.depthMask(true);\n    }\n\n    gl.colorMask(true, true, true, true);\n    var ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.clear(clearMask);\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  _openGLRenderWindow: null,\n  selector: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Build VTK API\n\n  get(publicAPI, model, ['shaderCache']);\n  setGet(publicAPI, model, ['selector']); // Object methods\n\n  vtkOpenGLRenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLRenderer'); // ----------------------------------------------------------------------------\n\nvar vtkRenderer = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkRenderer', newInstance);\n\nexport { vtkRenderer as default, extend, newInstance };\n", "var SlicingMode = {\n  NONE: -1,\n  I: 0,\n  J: 1,\n  K: 2,\n  X: 3,\n  Y: 4,\n  Z: 5\n};\nvar Constants = {\n  SlicingMode: SlicingMode\n};\n\nexport { SlicingMode, Constants as default };\n", "var ObjectType = {\n  ARRAY_BUFFER: 0,\n  ELEMENT_ARRAY_BUFFER: 1,\n  TEXTURE_BUFFER: 2\n};\nvar Constants = {\n  ObjectType: ObjectType\n};\n\nexport { ObjectType, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferObject/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ObjectType = Constants.ObjectType; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {}; // ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject'); // Class-specific private functions\n\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n\n      case ObjectType.ARRAY_BUFFER:\n      default:\n        return model.context.ARRAY_BUFFER;\n\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  var internalType = null;\n  var internalHandle = null;\n  var dirty = true;\n  var error = ''; // Public API methods\n\n  publicAPI.getType = function () {\n    return internalType;\n  };\n\n  publicAPI.setType = function (value) {\n    internalType = value;\n  };\n\n  publicAPI.getHandle = function () {\n    return internalHandle;\n  };\n\n  publicAPI.isReady = function () {\n    return dirty === false;\n  };\n\n  publicAPI.generateBuffer = function (type) {\n    var objectTypeGL = convertType(type);\n\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n\n    return convertType(internalType) === objectTypeGL;\n  };\n\n  publicAPI.upload = function (data, type) {\n    // buffer, size, type\n    var alreadyGenerated = publicAPI.generateBuffer(type);\n\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\n    dirty = false;\n    return true;\n  };\n\n  publicAPI.bind = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n\n  publicAPI.release = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.getError = function () {\n    return error;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  // _openGLRenderWindow: null,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['_openGLRenderWindow']);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n  vtkOpenGLBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkBufferObject = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkBufferObject as default, extend, newInstance };\n", "var Shading = {\n  FLAT: 0,\n  GOURAUD: 1,\n  PHONG: 2\n};\nvar Representation = {\n  POINTS: 0,\n  WIREFRAME: 1,\n  SURFACE: 2\n};\nvar Interpolation = Shading;\nvar PropertyConst = {\n  Shading: Shading,\n  Representation: Representation,\n  Interpolation: Interpolation\n};\n\nexport { Interpolation, Representation, Shading, PropertyConst as default };\n", "import { vec3, mat4, quat } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBufferObject from './BufferObject.js';\nimport { ObjectType } from './BufferObject/Constants.js';\nimport { Representation } from '../Core/Property/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Static functions\n// ----------------------------------------------------------------------------\n\nfunction computeInverseShiftAndScaleMatrix(coordShift, coordScale) {\n  var inverseScale = new Float64Array(3);\n  vec3.inverse(inverseScale, coordScale);\n  var matrix = new Float64Array(16);\n  mat4.fromRotationTranslationScale(matrix, quat.create(), coordShift, inverseScale);\n  return matrix;\n}\n\nfunction shouldApplyCoordShiftAndScale(coordShift, coordScale) {\n  if (coordShift === null || coordScale === null) {\n    return false;\n  }\n\n  return !(vec3.exactEquals(coordShift, [0, 0, 0]) && vec3.exactEquals(coordScale, [1, 1, 1]));\n} // ----------------------------------------------------------------------------\n// vtkOpenGLCellArrayBufferObject methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLCellArrayBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');\n  publicAPI.setType(ObjectType.ARRAY_BUFFER);\n\n  publicAPI.createVBO = function (cellArray, inRep, outRep, options) {\n    if (!cellArray.getData() || !cellArray.getData().length) {\n      model.elementCount = 0;\n      return 0;\n    } // Figure out how big each block will be, currently 6 or 7 floats.\n\n\n    model.blockSize = 3;\n    model.vertexOffset = 0;\n    model.normalOffset = 0;\n    model.tCoordOffset = 0;\n    model.tCoordComponents = 0;\n    model.colorComponents = 0;\n    model.colorOffset = 0;\n    model.customData = [];\n    var pointData = options.points.getData();\n    var normalData = null;\n    var tcoordData = null;\n    var colorData = null;\n    var colorComponents = options.colors ? options.colors.getNumberOfComponents() : 0;\n    var textureComponents = options.tcoords ? options.tcoords.getNumberOfComponents() : 0; // the values of 4 below are because floats are 4 bytes\n\n    if (options.normals) {\n      model.normalOffset = 4 * model.blockSize;\n      model.blockSize += 3;\n      normalData = options.normals.getData();\n    }\n\n    if (options.customAttributes) {\n      options.customAttributes.forEach(function (a) {\n        if (a) {\n          model.customData.push({\n            data: a.getData(),\n            offset: 4 * model.blockSize,\n            components: a.getNumberOfComponents(),\n            name: a.getName()\n          });\n          model.blockSize += a.getNumberOfComponents();\n        }\n      });\n    }\n\n    if (options.tcoords) {\n      model.tCoordOffset = 4 * model.blockSize;\n      model.tCoordComponents = textureComponents;\n      model.blockSize += textureComponents;\n      tcoordData = options.tcoords.getData();\n    }\n\n    if (options.colors) {\n      model.colorComponents = options.colors.getNumberOfComponents();\n      model.colorOffset = 0;\n      colorData = options.colors.getData();\n\n      if (!model.colorBO) {\n        model.colorBO = vtkBufferObject.newInstance();\n      }\n\n      model.colorBO.setOpenGLRenderWindow(model._openGLRenderWindow);\n    } else {\n      model.colorBO = null;\n    }\n\n    model.stride = 4 * model.blockSize;\n    var pointIdx = 0;\n    var normalIdx = 0;\n    var tcoordIdx = 0;\n    var colorIdx = 0;\n    var custIdx = 0;\n    var cellCount = 0;\n    var addAPoint;\n    var cellBuilders = {\n      // easy, every input point becomes an output point\n      anythingToPoints: function anythingToPoints(numPoints, cellPts, offset) {\n        for (var i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i]);\n        }\n      },\n      linesToWireframe: function linesToWireframe(numPoints, cellPts, offset) {\n        // for lines we add a bunch of segments\n        for (var i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1]);\n        }\n      },\n      polysToWireframe: function polysToWireframe(numPoints, cellPts, offset) {\n        // for polys we add a bunch of segments and close it\n        if (numPoints > 2) {\n          for (var i = 0; i < numPoints; ++i) {\n            addAPoint(cellPts[offset + i]);\n            addAPoint(cellPts[offset + (i + 1) % numPoints]);\n          }\n        }\n      },\n      stripsToWireframe: function stripsToWireframe(numPoints, cellPts, offset) {\n        if (numPoints > 2) {\n          // for strips we add a bunch of segments and close it\n          for (var i = 0; i < numPoints - 1; ++i) {\n            addAPoint(cellPts[offset + i]);\n            addAPoint(cellPts[offset + i + 1]);\n          }\n\n          for (var _i = 0; _i < numPoints - 2; _i++) {\n            addAPoint(cellPts[offset + _i]);\n            addAPoint(cellPts[offset + _i + 2]);\n          }\n        }\n      },\n      polysToSurface: function polysToSurface(npts, cellPts, offset) {\n        for (var i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + 0]);\n          addAPoint(cellPts[offset + i + 1]);\n          addAPoint(cellPts[offset + i + 2]);\n        }\n      },\n      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {\n        for (var i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1 + i % 2]);\n          addAPoint(cellPts[offset + i + 1 + (i + 1) % 2]);\n        }\n      }\n    };\n    var cellCounters = {\n      // easy, every input point becomes an output point\n      anythingToPoints: function anythingToPoints(numPoints, cellPts) {\n        return numPoints;\n      },\n      linesToWireframe: function linesToWireframe(numPoints, cellPts) {\n        if (numPoints > 1) {\n          return (numPoints - 1) * 2;\n        }\n\n        return 0;\n      },\n      polysToWireframe: function polysToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 2;\n        }\n\n        return 0;\n      },\n      stripsToWireframe: function stripsToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 4 - 6;\n        }\n\n        return 0;\n      },\n      polysToSurface: function polysToSurface(npts, cellPts) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n\n        return 0;\n      },\n      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n\n        return 0;\n      }\n    };\n    var func = null;\n    var countFunc = null;\n\n    if (outRep === Representation.POINTS || inRep === 'verts') {\n      func = cellBuilders.anythingToPoints;\n      countFunc = cellCounters.anythingToPoints;\n    } else if (outRep === Representation.WIREFRAME || inRep === 'lines') {\n      func = cellBuilders[\"\".concat(inRep, \"ToWireframe\")];\n      countFunc = cellCounters[\"\".concat(inRep, \"ToWireframe\")];\n    } else {\n      func = cellBuilders[\"\".concat(inRep, \"ToSurface\")];\n      countFunc = cellCounters[\"\".concat(inRep, \"ToSurface\")];\n    }\n\n    var array = cellArray.getData();\n    var size = array.length;\n    var caboCount = 0;\n\n    for (var index = 0; index < size;) {\n      caboCount += countFunc(array[index], array);\n      index += array[index] + 1;\n    }\n\n    var packedUCVBO = null;\n    var packedVBO = new Float32Array(caboCount * model.blockSize);\n\n    if (colorData) {\n      packedUCVBO = new Uint8Array(caboCount * 4);\n    }\n\n    var vboidx = 0;\n    var ucidx = 0; // Find out if shift scale should be used\n    // Compute squares of diagonal size and distance from the origin\n\n    var diagSq = 0.0;\n    var distSq = 0.0;\n\n    for (var i = 0; i < 3; ++i) {\n      var range = options.points.getRange(i);\n      var delta = range[1] - range[0];\n      diagSq += delta * delta;\n      var distShift = 0.5 * (range[1] + range[0]);\n      distSq += distShift * distShift;\n    }\n\n    var useShiftAndScale = diagSq > 0 && (Math.abs(distSq) / diagSq > 1.0e6 || // If data is far from the origin relative to its size\n    Math.abs(Math.log10(diagSq)) > 3.0 || // If the size is huge when not far from the origin\n    diagSq === 0 && distSq > 1.0e6); // If data is a point, but far from the origin\n\n    if (useShiftAndScale) {\n      // Compute shift and scale vectors\n      var coordShift = new Float64Array(3);\n      var coordScale = new Float64Array(3);\n\n      for (var _i2 = 0; _i2 < 3; ++_i2) {\n        var _range = options.points.getRange(_i2);\n\n        var _delta = _range[1] - _range[0];\n\n        coordShift[_i2] = 0.5 * (_range[1] + _range[0]);\n        coordScale[_i2] = _delta > 0 ? 1.0 / _delta : 1.0;\n      }\n\n      publicAPI.setCoordShiftAndScale(coordShift, coordScale);\n    } else if (model.coordShiftAndScaleEnabled === true) {\n      // Make sure to reset\n      publicAPI.setCoordShiftAndScale(null, null);\n    }\n\n    addAPoint = function addAPointFunc(i) {\n      // Vertices\n      pointIdx = i * 3;\n\n      if (!model.coordShiftAndScaleEnabled) {\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n      } else {\n        // Apply shift and scale\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];\n      }\n\n      if (normalData !== null) {\n        if (options.haveCellNormals) {\n          normalIdx = (cellCount + options.cellOffset) * 3;\n        } else {\n          normalIdx = i * 3;\n        }\n\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n      }\n\n      model.customData.forEach(function (attr) {\n        custIdx = i * attr.components;\n\n        for (var j = 0; j < attr.components; ++j) {\n          packedVBO[vboidx++] = attr.data[custIdx++];\n        }\n      });\n\n      if (tcoordData !== null) {\n        tcoordIdx = i * textureComponents;\n\n        for (var j = 0; j < textureComponents; ++j) {\n          packedVBO[vboidx++] = tcoordData[tcoordIdx++];\n        }\n      }\n\n      if (colorData !== null) {\n        if (options.haveCellScalars) {\n          colorIdx = (cellCount + options.cellOffset) * colorComponents;\n        } else {\n          colorIdx = i * colorComponents;\n        }\n\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorComponents === 4 ? colorData[colorIdx++] : 255;\n      }\n    };\n\n    for (var _index = 0; _index < size;) {\n      func(array[_index], array, _index + 1);\n      _index += array[_index] + 1;\n      cellCount++;\n    }\n\n    model.elementCount = caboCount;\n    publicAPI.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n\n    if (model.colorBO) {\n      model.colorBOStride = 4;\n      model.colorBO.upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n\n    return cellCount;\n  };\n\n  publicAPI.setCoordShiftAndScale = function (coordShift, coordScale) {\n    if (coordShift !== null && (coordShift.constructor !== Float64Array || coordShift.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');\n      return;\n    }\n\n    if (coordScale !== null && (coordScale.constructor !== Float64Array || coordScale.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');\n      return;\n    }\n\n    if (model.coordShift === null || coordShift === null || !vec3.equals(coordShift, model.coordShift)) {\n      model.coordShift = coordShift;\n    }\n\n    if (model.coordScale === null || coordScale === null || !vec3.equals(coordScale, model.coordScale)) {\n      model.coordScale = coordScale;\n    }\n\n    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(model.coordShift, model.coordScale);\n\n    if (model.coordShiftAndScaleEnabled) {\n      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(model.coordShift, model.coordScale);\n    } else {\n      model.inverseShiftAndScaleMatrix = null;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  elementCount: 0,\n  stride: 0,\n  colorBOStride: 0,\n  vertexOffset: 0,\n  normalOffset: 0,\n  tCoordOffset: 0,\n  tCoordComponents: 0,\n  colorOffset: 0,\n  colorComponents: 0,\n  tcoordBO: null,\n  customData: [],\n  coordShift: null,\n  coordScale: null,\n  coordShiftAndScaleEnabled: false,\n  inverseShiftAndScaleMatrix: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkBufferObject.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['colorBO', 'elementCount', 'stride', 'colorBOStride', 'vertexOffset', 'normalOffset', 'tCoordOffset', 'tCoordComponents', 'colorOffset', 'colorComponents', 'customData']);\n  macro.get(publicAPI, model, ['coordShift', 'coordScale', 'coordShiftAndScaleEnabled', 'inverseShiftAndScaleMatrix']); // Object specific methods\n\n  vtkOpenGLCellArrayBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkCellArrayBufferObject = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCellArrayBufferObject as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n\n  publicAPI.compile = function () {\n    var stype = model.context.VERTEX_SHADER;\n\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\n      return false;\n    } // Ensure we delete the previous shader if necessary.\n\n\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    var isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\n\n    if (!isCompiled) {\n      var lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(\"Error compiling shader '\".concat(model.source, \"': \").concat(lastError));\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    } // The shader compiled, store its handle and return success.\n\n\n    return true;\n  };\n\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']); // Object methods\n\n  vtkShader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShader'); // ----------------------------------------------------------------------------\n\nvar vtkShader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkShader$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkShader from './Shader.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\n\nfunction substitute(source, search, replace) {\n  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  var replaced = false;\n\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n\n  var gflag = '';\n\n  if (all) {\n    gflag = 'g';\n  }\n\n  var regex = new RegExp(search, gflag);\n  var resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n} // ----------------------------------------------------------------------------\n// vtkShaderProgram methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkShaderProgram(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderProgram');\n\n  publicAPI.compileShader = function () {\n    if (!model.vertexShader.compile()) {\n      vtkErrorMacro(model.vertexShader.getSource().split('\\n').map(function (line, index) {\n        return \"\".concat(index, \": \").concat(line);\n      }).join('\\n'));\n      vtkErrorMacro(model.vertexShader.getError());\n      return 0;\n    }\n\n    if (!model.fragmentShader.compile()) {\n      vtkErrorMacro(model.fragmentShader.getSource().split('\\n').map(function (line, index) {\n        return \"\".concat(index, \": \").concat(line);\n      }).join('\\n'));\n      vtkErrorMacro(model.fragmentShader.getError());\n      return 0;\n    } // skip geometry for now\n\n\n    if (!publicAPI.attachShader(model.vertexShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n\n    if (!publicAPI.attachShader(model.fragmentShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n\n    if (!publicAPI.link()) {\n      vtkErrorMacro(\"Links failed: \".concat(model.error));\n      return 0;\n    }\n\n    publicAPI.setCompiled(true);\n    return 1;\n  };\n\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n  };\n\n  publicAPI.bind = function () {\n    if (!model.linked && !publicAPI.link()) {\n      return false;\n    }\n\n    model.context.useProgram(model.handle);\n    publicAPI.setBound(true);\n    return true;\n  };\n\n  publicAPI.isBound = function () {\n    return !!model.bound;\n  };\n\n  publicAPI.release = function () {\n    model.context.useProgram(null);\n    publicAPI.setBound(false);\n  };\n\n  publicAPI.setContext = function (ctx) {\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.link = function () {\n    if (model.inked) {\n      return true;\n    }\n\n    if (model.handle === 0) {\n      model.error = 'Program has not been initialized, and/or does not have shaders.';\n      return false;\n    } // clear out the list of uniforms used\n\n\n    model.uniformLocs = {};\n    model.context.linkProgram(model.handle);\n    var isCompiled = model.context.getProgramParameter(model.handle, model.context.LINK_STATUS);\n\n    if (!isCompiled) {\n      var lastError = model.context.getProgramInfoLog(model.handle);\n      vtkErrorMacro(\"Error linking shader \".concat(lastError));\n      model.handle = 0;\n      return false;\n    }\n\n    publicAPI.setLinked(true);\n    model.attributeLocs = {};\n    return true;\n  };\n\n  publicAPI.setUniformMatrix = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    var f32 = new Float32Array(v);\n    model.context.uniformMatrix4fv(location, false, f32);\n    return true;\n  };\n\n  publicAPI.setUniformMatrix3x3 = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    var f32 = new Float32Array(v);\n    model.context.uniformMatrix3fv(location, false, f32);\n    return true;\n  };\n\n  publicAPI.setUniformf = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1f(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformfv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformi = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1i(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformiv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2f = function (name, v1, v2) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform2f(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform2fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2i = function (name, v1, v2) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform2i(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform2iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3f = function (name, a1, a2, a3) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (a3 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3f(location, a1, a2, a3);\n    return true;\n  };\n\n  publicAPI.setUniform3fArray = function (name, a) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (!Array.isArray(a) || a.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3f(location, a[0], a[1], a[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform3fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3i = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3i(location, array[0], array[1], array[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform3iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4f = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform4fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4i = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform4iv(location, v);\n    return true;\n  };\n\n  publicAPI.findUniform = function (name) {\n    if (!name || !model.linked) {\n      return -1;\n    } // see if we have cached the result\n\n\n    var loc = model.uniformLocs[name];\n\n    if (loc !== undefined) {\n      return loc;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n\n    if (loc === null) {\n      model.error = \"Uniform \".concat(name, \" not found in current shader program.\");\n      model.uniformLocs[name] = -1;\n      return -1;\n    }\n\n    model.uniformLocs[name] = loc;\n    return loc;\n  };\n\n  publicAPI.isUniformUsed = function (name) {\n    if (!name) {\n      return false;\n    } // see if we have cached the result\n\n\n    var loc = model.uniformLocs[name];\n\n    if (loc !== undefined) {\n      return loc !== null;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n    model.uniformLocs[name] = loc;\n\n    if (loc === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.isAttributeUsed = function (name) {\n    if (!name) {\n      return false;\n    } // see if we have cached the result\n\n\n    var loc = Object.keys(model.attributeLocs).indexOf(name);\n\n    if (loc !== -1) {\n      return true;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n\n    loc = model.context.getAttribLocation(model.handle, name);\n\n    if (loc === -1) {\n      return false;\n    }\n\n    model.attributeLocs[name] = loc;\n    return true;\n  };\n\n  publicAPI.attachShader = function (shader) {\n    if (shader.getHandle() === 0) {\n      model.error = 'Shader object was not initialized, cannot attach it.';\n      return false;\n    }\n\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n\n    if (model.handle === 0) {\n      var thandle = model.context.createProgram();\n\n      if (thandle === 0) {\n        model.error = 'Could not create shader program.';\n        return false;\n      }\n\n      model.handle = thandle;\n      model.linked = false;\n    }\n\n    if (shader.getShaderType() === 'Vertex') {\n      if (model.vertexShaderHandle !== 0) {\n        model.comntext.detachShader(model.handle, model.vertexShaderHandle);\n      }\n\n      model.vertexShaderHandle = shader.getHandle();\n    }\n\n    if (shader.getShaderType() === 'Fragment') {\n      if (model.fragmentShaderHandle !== 0) {\n        model.context.detachShader(model.handle, model.fragmentShaderHandle);\n      }\n\n      model.fragmentShaderHandle = shader.getHandle();\n    }\n\n    model.context.attachShader(model.handle, shader.getHandle());\n    publicAPI.setLinked(false);\n    return true;\n  };\n\n  publicAPI.detachShader = function (shader) {\n    if (shader.getHandle() === 0) {\n      model.error = 'shader object was not initialized, cannot attach it.';\n      return false;\n    }\n\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n\n    if (model.handle === 0) {\n      model.error = 'This shader program has not been initialized yet.';\n    }\n\n    switch (shader.getShaderType()) {\n      case 'Vertex':\n        if (model.vertexShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.vertexShaderHandle = 0;\n        model.linked = false;\n        return true;\n\n      case 'Fragment':\n        if (model.fragmentShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.fragmentShaderHandle = 0;\n        model.linked = false;\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  publicAPI.setContext = function (ctx) {\n    model.context = ctx;\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.setLastCameraMTime = function (mtime) {\n    model.lastCameraMTime = mtime;\n  }; // publicAPI.enableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.enableVertexAttribArray(location);\n  //   return true;\n  // };\n  // publicAPI.disableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.disableVertexAttribArray(location);\n  //   return true;\n  // };\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  vertexShaderHandle: 0,\n  fragmentShaderHandle: 0,\n  geometryShaderHandle: 0,\n  vertexShader: null,\n  fragmentShader: null,\n  geometryShader: null,\n  linked: false,\n  bound: false,\n  compiled: false,\n  error: '',\n  handle: 0,\n  numberOfOutputs: 0,\n  attributesLocs: null,\n  uniformLocs: null,\n  md5Hash: 0,\n  context: null,\n  lastCameraMTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Instantiate internal objects\n\n  model.attributesLocs = {};\n  model.uniformLocs = {};\n  model.vertexShader = vtkShader.newInstance();\n  model.vertexShader.setShaderType('Vertex');\n  model.fragmentShader = vtkShader.newInstance();\n  model.fragmentShader.setShaderType('Fragment');\n  model.geometryShader = vtkShader.newInstance();\n  model.geometryShader.setShaderType('Geometry'); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['error', 'handle', 'compiled', 'bound', 'md5Hash', 'vertexShader', 'fragmentShader', 'geometryShader', 'linked']); // Object methods\n\n  vtkShaderProgram(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkShaderProgram'); // ----------------------------------------------------------------------------\n\nvar vtkShaderProgram$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  substitute: substitute\n};\n\nexport { vtkShaderProgram$1 as default };\n", "import macro from '../../macros.js';\nimport { ObjectType } from './BufferObject/Constants.js';\n\n// vtkOpenGLVertexArrayObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVertexArrayObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVertexArrayObject'); // Public API methods\n\n  publicAPI.exposedMethod = function () {// This is a publicly exposed method of this object\n  };\n\n  publicAPI.initialize = function () {\n    model.instancingExtension = null;\n\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      model.instancingExtension = model.context.getExtension('ANGLE_instanced_arrays');\n    }\n\n    if (!model.forceEmulation && model._openGLRenderWindow && model._openGLRenderWindow.getWebgl2()) {\n      model.extension = null;\n      model.supported = true;\n      model.handleVAO = model.context.createVertexArray();\n    } else {\n      model.extension = model.context.getExtension('OES_vertex_array_object'); // Start setting up VAO\n\n      if (!model.forceEmulation && model.extension) {\n        model.supported = true;\n        model.handleVAO = model.extension.createVertexArrayOES();\n      } else {\n        model.supported = false;\n      }\n    }\n  };\n\n  publicAPI.isReady = function () {\n    return (// We either probed and allocated a VAO, or are falling back as the current\n      // hardware does not support VAOs.\n      model.handleVAO !== 0 || model.supported === false\n    );\n  };\n\n  publicAPI.bind = function () {\n    // Either simply bind the VAO, or emulate behavior by binding all attributes.\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.bindVertexArray(model.handleVAO);\n      }\n    } else if (publicAPI.isReady()) {\n      var gl = model.context;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n\n          for (var i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 1);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.release = function () {\n    // Either simply release the VAO, or emulate behavior by releasing all attributes.\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(null);\n      } else {\n        model.context.bindVertexArray(null);\n      }\n    } else if (publicAPI.isReady()) {\n      var gl = model.context;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n\n          for (var i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 0);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 0);\n              }\n            }\n\n            gl.disableVertexAttribArray(attrIt.index + i);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.shaderProgramChanged = function () {\n    publicAPI.release();\n\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n\n    model.handleVAO = 0;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    publicAPI.shaderProgramChanged();\n\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n\n    model.handleVAO = 0;\n    model.supported = true;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.addAttributeArray = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize) {\n    return publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, 0, false);\n  };\n\n  publicAPI.addAttributeArrayWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, isMatrix) {\n    if (!program) {\n      return false;\n    } // Check the program is bound, and the buffer is valid.\n\n\n    if (!program.isBound() || buffer.getHandle() === 0 || buffer.getType() !== ObjectType.ARRAY_BUFFER) {\n      return false;\n    } // Perform initialization if necessary, ensure program matches VAOs.\n\n\n    if (model.handleProgram === 0) {\n      model.handleProgram = program.getHandle();\n    }\n\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n\n    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {\n      return false;\n    }\n\n    var gl = model.context;\n    var attribs = {};\n    attribs.name = name;\n    attribs.index = gl.getAttribLocation(model.handleProgram, name);\n    attribs.offset = offset;\n    attribs.stride = stride;\n    attribs.type = elementType;\n    attribs.size = elementTupleSize;\n    attribs.normalize = normalize;\n    attribs.isMatrix = isMatrix;\n    attribs.divisor = divisor;\n\n    if (attribs.Index === -1) {\n      return false;\n    } // Always make the call as even the first use wants the attrib pointer setting\n    // up when we are emulating.\n\n\n    buffer.bind();\n    gl.enableVertexAttribArray(attribs.index);\n    gl.vertexAttribPointer(attribs.index, attribs.size, attribs.type, attribs.normalize, attribs.stride, attribs.offset);\n\n    if (divisor > 0) {\n      if (model.instancingExtension) {\n        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);\n      } else {\n        gl.vertexAttribDivisor(attribs.index, 1);\n      }\n    }\n\n    attribs.buffer = buffer.getHandle(); // If vertex array objects are not supported then build up our list.\n\n    if (!model.supported) {\n      // find the buffer\n      var buffFound = false;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n\n        if (buff.buffer === attribs.buffer) {\n          buffFound = true;\n          var found = false;\n\n          for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n            var attrIt = buff.attributes[iatt];\n\n            if (attrIt.name === name) {\n              found = true;\n              buff.attributes[iatt] = attribs;\n            }\n          }\n\n          if (!found) {\n            buff.attributes.push(attribs);\n          }\n        }\n      }\n\n      if (!buffFound) {\n        model.buffers.push({\n          buffer: attribs.buffer,\n          attributes: [attribs]\n        });\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.addAttributeMatrixWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor) {\n    // bind the first row of values\n    var result = publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, true);\n\n    if (!result) {\n      return result;\n    }\n\n    var gl = model.context;\n    var index = gl.getAttribLocation(model.handleProgram, name);\n\n    for (var i = 1; i < elementTupleSize; i++) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, elementTupleSize, elementType, normalize, stride, offset + stride * i / elementTupleSize);\n\n      if (divisor > 0) {\n        if (model.instancingExtension) {\n          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);\n        } else {\n          gl.vertexAttribDivisor(index + i, 1);\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.removeAttributeArray = function (name) {\n    if (!publicAPI.isReady() || model.handleProgram === 0) {\n      return false;\n    } // If we don't have real VAOs find the entry and remove it too.\n\n\n    if (!model.supported) {\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n\n          if (attrIt.name === name) {\n            buff.attributes.splice(iatt, 1);\n\n            if (!buff.attributes.length) {\n              model.buffers.splice(ibuff, 1);\n            }\n\n            return true;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  forceEmulation: false,\n  handleVAO: 0,\n  handleProgram: 0,\n  supported: true,\n  buffers: null,\n  context: null // _openGLRenderWindow: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects initialization\n\n  model.buffers = []; // Object methods\n\n  macro.obj(publicAPI, model); // Create get-only macros\n\n  macro.get(publicAPI, model, ['supported']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['forceEmulation']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkOpenGLVertexArrayObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLVertexArrayObject'); // ----------------------------------------------------------------------------\n\nvar vtkVertexArrayObject = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVertexArrayObject as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkCellArrayBufferObject from './CellArrayBufferObject.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\n\n// vtkOpenGLHelper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHelper');\n\n  publicAPI.setOpenGLRenderWindow = function (win) {\n    model.program.setContext(win.getContext());\n    model.VAO.setOpenGLRenderWindow(win);\n    model.CABO.setOpenGLRenderWindow(win);\n  };\n\n  publicAPI.releaseGraphicsResources = function (oglwin) {\n    model.VAO.releaseGraphicsResources();\n    model.CABO.releaseGraphicsResources();\n    model.CABO.setElementCount(0);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  program: null,\n  shaderSourceTime: null,\n  VAO: null,\n  attributeUpdateTime: null,\n  CABO: null,\n  primitiveType: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  model.shaderSourceTime = {};\n  macro.obj(model.shaderSourceTime);\n  model.attributeUpdateTime = {};\n  macro.obj(model.attributeUpdateTime);\n  macro.setGet(publicAPI, model, ['program', 'shaderSourceTime', 'VAO', 'attributeUpdateTime', 'CABO', 'primitiveType']);\n  model.program = vtkShaderProgram.newInstance();\n  model.VAO = vtkVertexArrayObject.newInstance();\n  model.CABO = vtkCellArrayBufferObject.newInstance(); // Object methods\n\n  vtkOpenGLHelper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkHelper = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkHelper as default, extend, newInstance };\n", "var Wrap = {\n  CLAMP_TO_EDGE: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2\n};\nvar Filter = {\n  NEAREST: 0,\n  LINEAR: 1,\n  NEAREST_MIPMAP_NEAREST: 2,\n  NEAREST_MIPMAP_LINEAR: 3,\n  LINEAR_MIPMAP_NEAREST: 4,\n  LINEAR_MIPMAP_LINEAR: 5\n};\nvar Constants = {\n  Wrap: Wrap,\n  Filter: Filter\n};\n\nexport { Filter, Wrap, Constants as default };\n", "/* eslint-disable no-bitwise */\nvar floatView = new Float32Array(1);\nvar int32View = new Int32Array(floatView.buffer);\n/* eslint-disable no-bitwise */\n\n/* This method is faster than the OpenEXR implementation (very often\n * used, eg. in Ogre), with the additional benefit of rounding, inspired\n * by James Tursa?s half-precision code. */\n\nfunction toHalf(val) {\n  floatView[0] = val;\n  var x = int32View[0];\n  var bits = x >> 16 & 0x8000;\n  /* Get the sign */\n\n  var m = x >> 12 & 0x07ff;\n  /* Keep one extra bit for rounding */\n\n  var e = x >> 23 & 0xff;\n  /* Using int is faster here */\n\n  /* If zero, or denormal, or exponent underflows too much for a denormal\n   * half, return signed zero. */\n\n  if (e < 103) {\n    return bits;\n  }\n  /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\n  if (e > 142) {\n    bits |= 0x7c00;\n    /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n     * not Inf, so make sure we set one mantissa bit too. */\n\n    bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;\n    return bits;\n  }\n  /* If exponent underflows but not too much, return a denormal */\n\n\n  if (e < 113) {\n    m |= 0x0800;\n    /* Extra rounding may overflow and set mantissa to 0 and exponent\n     * to 1, which is OK. */\n\n    bits |= (m >> 114 - e) + (m >> 113 - e & 1);\n    return bits;\n  }\n\n  bits |= e - 112 << 10 | m >> 1;\n  /* Extra rounding. An overflow will set mantissa to 0 and increment\n   * the exponent, which is OK. */\n\n  bits += m & 1;\n  return bits;\n}\n\nfunction fromHalf(h) {\n  var s = (h & 0x8000) >> 15;\n  var e = (h & 0x7c00) >> 10;\n  var f = h & 0x03ff;\n\n  if (e === 0) {\n    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\n  }\n\n  if (e === 0x1f) {\n    return f ? NaN : (s ? -1 : 1) * Infinity;\n  }\n\n  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));\n}\n\nvar HalfFloat = {\n  fromHalf: fromHalf,\n  toHalf: toHalf\n};\n\nexport { HalfFloat as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Constants from './Texture/Constants.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\nimport { newInstance as newInstance$1, obj, set, setGet, get, newTypedArray, vtkDebugMacro as vtkDebugMacro$1, vtkErrorMacro as vtkErrorMacro$1, vtkWarningMacro as vtkWarningMacro$1 } from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { Q as isPowerOfTwo, M as nearestPowerOfTwo } from '../../Common/Core/Math/index.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Wrap = Constants.Wrap,\n    Filter = Constants.Filter;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes;\nvar vtkDebugMacro = vtkDebugMacro$1,\n    vtkErrorMacro = vtkErrorMacro$1,\n    vtkWarningMacro = vtkWarningMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTexture(publicAPI, model) {\n  var _this = this;\n\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTexture'); // Renders myself\n\n  publicAPI.render = function () {\n    var renWin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (renWin) {\n      model._openGLRenderWindow = renWin;\n    } else {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer'); // sync renderable properties\n\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n    }\n\n    model.context = model._openGLRenderWindow.getContext();\n\n    if (model.renderable.getInterpolate()) {\n      if (model.generateMipmap) {\n        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n      } else {\n        publicAPI.setMinificationFilter(Filter.LINEAR);\n      }\n\n      publicAPI.setMagnificationFilter(Filter.LINEAR);\n    } else {\n      publicAPI.setMinificationFilter(Filter.NEAREST);\n      publicAPI.setMagnificationFilter(Filter.NEAREST);\n    }\n\n    if (model.renderable.getRepeat()) {\n      publicAPI.setWrapR(Wrap.REPEAT);\n      publicAPI.setWrapS(Wrap.REPEAT);\n      publicAPI.setWrapT(Wrap.REPEAT);\n    } // clear image if input data is set\n\n\n    if (model.renderable.getInputData()) {\n      model.renderable.setImage(null);\n    } // create the texture if it is not done already\n\n\n    if (!model.handle || model.renderable.getMTime() > model.textureBuildTime.getMTime()) {\n      // if we have an Image\n      if (model.renderable.getImage() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        } // Have an Image which may not be complete\n\n\n        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {\n          publicAPI.create2DFromImage(model.renderable.getImage());\n          publicAPI.activate();\n          publicAPI.sendParameters();\n          model.textureBuildTime.modified();\n        }\n      } // if we have a canvas\n\n\n      if (model.renderable.getCanvas() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        var canvas = model.renderable.getCanvas();\n        publicAPI.create2DFromRaw(canvas.width, canvas.height, 4, VtkDataTypes.UNSIGNED_CHAR, canvas, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      } // if we have jsImageData\n\n\n      if (model.renderable.getJsImageData() !== null) {\n        var jsid = model.renderable.getJsImageData();\n\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        publicAPI.create2DFromRaw(jsid.width, jsid.height, 4, VtkDataTypes.UNSIGNED_CHAR, jsid.data, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      } // if we have InputData\n\n\n      var input = model.renderable.getInputData(0);\n\n      if (input && input.getPointData().getScalars()) {\n        var ext = input.getExtent();\n        var inScalars = input.getPointData().getScalars(); // do we have a cube map? Six inputs\n\n        var data = [];\n\n        for (var i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {\n          var indata = model.renderable.getInputData(i);\n          var scalars = indata ? indata.getPointData().getScalars().getData() : null;\n\n          if (scalars) {\n            data.push(scalars);\n          }\n        }\n\n        if (model.renderable.getInterpolate() && inScalars.getNumberOfComponents() === 4) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        if (data.length % 6 === 0) {\n          publicAPI.createCubeFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), data);\n        } else {\n          publicAPI.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n        }\n\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n    }\n\n    if (model.handle) {\n      publicAPI.activate();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.destroyTexture = function () {\n    // deactivate it first\n    publicAPI.deactivate();\n\n    if (model.context && model.handle) {\n      model.context.deleteTexture(model.handle);\n    }\n\n    model.handle = 0;\n    model.numberOfDimensions = 0;\n    model.target = 0;\n    model.components = 0;\n    model.width = 0;\n    model.height = 0;\n    model.depth = 0;\n    publicAPI.resetFormatAndType();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createTexture = function () {\n    // reuse the existing handle if we have one\n    if (!model.handle) {\n      model.handle = model.context.createTexture();\n\n      if (model.target) {\n        model.context.bindTexture(model.target, model.handle); // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture\n        // turn off mip map filter or set the base and max level correctly. here\n        // both are done.\n\n        model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n\n        if (model._openGLRenderWindow.getWebgl2()) {\n          model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n        }\n\n        model.context.bindTexture(model.target, null);\n      }\n    }\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.getTextureUnit = function () {\n    if (model._openGLRenderWindow) {\n      return model._openGLRenderWindow.getTextureUnitForTexture(publicAPI);\n    }\n\n    return -1;\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.activate = function () {\n    // activate a free texture unit for this texture\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.bind();\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.deactivate = function () {\n    if (model._openGLRenderWindow) {\n      model._openGLRenderWindow.deactivateTexture(publicAPI);\n    }\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.releaseGraphicsResources = function (rwin) {\n    if (rwin && model.handle) {\n      rwin.activateTexture(publicAPI);\n      rwin.deactivateTexture(publicAPI);\n      model.context.deleteTexture(model.handle);\n      model.handle = 0;\n      model.numberOfDimensions = 0;\n      model.target = 0;\n      model.internalFormat = 0;\n      model.format = 0;\n      model.openGLDataType = 0;\n      model.components = 0;\n      model.width = 0;\n      model.height = 0;\n      model.depth = 0;\n    }\n\n    if (model.shaderProgram) {\n      model.shaderProgram.releaseGraphicsResources(rwin);\n      model.shaderProgram = null;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.bind = function () {\n    model.context.bindTexture(model.target, model.handle);\n\n    if (model.autoParameters && publicAPI.getMTime() > model.sendParametersTime.getMTime()) {\n      publicAPI.sendParameters();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.isBound = function () {\n    var result = false;\n\n    if (model.context && model.handle) {\n      var target = 0;\n\n      switch (model.target) {\n        case model.context.TEXTURE_2D:\n          target = model.context.TEXTURE_BINDING_2D;\n          break;\n\n        default:\n          vtkWarningMacro('impossible case');\n          break;\n      }\n\n      var oid = model.context.getIntegerv(target);\n      result = oid === model.handle;\n    }\n\n    return result;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.sendParameters = function () {\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n    }\n\n    model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n    model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_BASE_LEVEL, model.baseLevel);\n      model.context.texParameteri(model.target, model.context.TEXTURE_MAX_LEVEL, model.maxLevel);\n    } // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);\n\n\n    model.sendParametersTime.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getInternalFormat = function (vtktype, numComps) {\n    if (!model.internalFormat) {\n      model.internalFormat = publicAPI.getDefaultInternalFormat(vtktype, numComps);\n    }\n\n    if (!model.internalFormat) {\n      vtkDebugMacro(\"Unable to find suitable internal format for T=\".concat(vtktype, \" NC= \").concat(numComps));\n    }\n\n    return model.internalFormat;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultInternalFormat = function (vtktype, numComps) {\n    var result = 0; // try default next\n\n    result = model._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, false);\n\n    if (result) {\n      return result;\n    } // try floating point\n\n\n    result = _this._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, true);\n\n    if (!result) {\n      vtkDebugMacro('Unsupported internal texture type!');\n      vtkDebugMacro(\"Unable to find suitable internal format for T=\".concat(vtktype, \" NC= \").concat(numComps));\n    }\n\n    return result;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setInternalFormat = function (iFormat) {\n    if (iFormat !== model.internalFormat) {\n      model.internalFormat = iFormat;\n      publicAPI.modified();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getFormat = function (vtktype, numComps) {\n    model.format = publicAPI.getDefaultFormat(vtktype, numComps);\n    return model.format;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultFormat = function (vtktype, numComps) {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (numComps) {\n        case 1:\n          return model.context.RED;\n\n        case 2:\n          return model.context.RG;\n\n        case 3:\n          return model.context.RGB;\n\n        case 4:\n          return model.context.RGBA;\n\n        default:\n          return model.context.RGB;\n      }\n    } else {\n      // webgl1\n      switch (numComps) {\n        case 1:\n          return model.context.LUMINANCE;\n\n        case 2:\n          return model.context.LUMINANCE_ALPHA;\n\n        case 3:\n          return model.context.RGB;\n\n        case 4:\n          return model.context.RGBA;\n\n        default:\n          return model.context.RGB;\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.resetFormatAndType = function () {\n    model.format = 0;\n    model.internalFormat = 0;\n    model.openGLDataType = 0;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultDataType = function (vtkScalarType) {\n    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    // DON'T DEAL with VTK_CHAR as this is platform dependent.\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (vtkScalarType) {\n        // case VtkDataTypes.SIGNED_CHAR:\n        //   return model.context.BYTE;\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return model.context.UNSIGNED_BYTE;\n\n        case useHalfFloatType && VtkDataTypes.SHORT:\n          return model.context.HALF_FLOAT;\n\n        case useHalfFloatType && VtkDataTypes.UNSIGNED_SHORT:\n          return model.context.HALF_FLOAT;\n        // case VtkDataTypes.INT:\n        //   return model.context.INT;\n        // case VtkDataTypes.UNSIGNED_INT:\n        //   return model.context.UNSIGNED_INT;\n\n        case VtkDataTypes.FLOAT:\n        case VtkDataTypes.VOID: // used for depth component textures.\n\n        default:\n          return model.context.FLOAT;\n      }\n    }\n\n    switch (vtkScalarType) {\n      // case VtkDataTypes.SIGNED_CHAR:\n      //   return model.context.BYTE;\n      case VtkDataTypes.UNSIGNED_CHAR:\n        return model.context.UNSIGNED_BYTE;\n      // case VtkDataTypes.SHORT:\n      //   return model.context.SHORT;\n      // case VtkDataTypes.UNSIGNED_SHORT:\n      //   return model.context.UNSIGNED_SHORT;\n      // case VtkDataTypes.INT:\n      //   return model.context.INT;\n      // case VtkDataTypes.UNSIGNED_INT:\n      //   return model.context.UNSIGNED_INT;\n\n      case VtkDataTypes.FLOAT:\n      case VtkDataTypes.VOID: // used for depth component textures.\n\n      default:\n        if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n          return model.context.FLOAT;\n        }\n\n        {\n          var halfFloat = model.context.getExtension('OES_texture_half_float');\n\n          if (halfFloat && model.context.getExtension('OES_texture_half_float_linear')) {\n            return halfFloat.HALF_FLOAT_OES;\n          }\n        }\n        return model.context.UNSIGNED_BYTE;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLDataType = function (vtkScalarType) {\n    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!model.openGLDataType) {\n      model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType, useHalfFloatType);\n    }\n\n    return model.openGLDataType;\n  };\n\n  publicAPI.getShiftAndScale = function () {\n    var shift = 0.0;\n    var scale = 1.0; // for all float type internal formats\n\n    switch (model.openGLDataType) {\n      case model.context.BYTE:\n        scale = 127.5;\n        shift = scale - 128.0;\n        break;\n\n      case model.context.UNSIGNED_BYTE:\n        scale = 255.0;\n        shift = 0.0;\n        break;\n\n      case model.context.SHORT:\n        scale = 32767.5;\n        shift = scale - 32768.0;\n        break;\n\n      case model.context.UNSIGNED_SHORT:\n        scale = 65536.0;\n        shift = 0.0;\n        break;\n\n      case model.context.INT:\n        scale = 2147483647.5;\n        shift = scale - 2147483648.0;\n        break;\n\n      case model.context.UNSIGNED_INT:\n        scale = 4294967295.0;\n        shift = 0.0;\n        break;\n\n      case model.context.FLOAT:\n    }\n\n    return {\n      shift: shift,\n      scale: scale\n    };\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLFilterMode = function (emode) {\n    switch (emode) {\n      case Filter.NEAREST:\n        return model.context.NEAREST;\n\n      case Filter.LINEAR:\n        return model.context.LINEAR;\n\n      case Filter.NEAREST_MIPMAP_NEAREST:\n        return model.context.NEAREST_MIPMAP_NEAREST;\n\n      case Filter.NEAREST_MIPMAP_LINEAR:\n        return model.context.NEAREST_MIPMAP_LINEAR;\n\n      case Filter.LINEAR_MIPMAP_NEAREST:\n        return model.context.LINEAR_MIPMAP_NEAREST;\n\n      case Filter.LINEAR_MIPMAP_LINEAR:\n        return model.context.LINEAR_MIPMAP_LINEAR;\n\n      default:\n        return model.context.NEAREST;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLWrapMode = function (vtktype) {\n    switch (vtktype) {\n      case Wrap.CLAMP_TO_EDGE:\n        return model.context.CLAMP_TO_EDGE;\n\n      case Wrap.REPEAT:\n        return model.context.REPEAT;\n\n      case Wrap.MIRRORED_REPEAT:\n        return model.context.MIRRORED_REPEAT;\n\n      default:\n        return model.context.CLAMP_TO_EDGE;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  function updateArrayDataType(dataType, data) {\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var pixData = [];\n    var pixCount = model.width * model.height * model.components;\n\n    if (depth) {\n      pixCount *= model.depth;\n    } // if the opengl data type is float\n    // then the data array must be float\n\n\n    if (dataType !== VtkDataTypes.FLOAT && model.openGLDataType === model.context.FLOAT) {\n      for (var idx = 0; idx < data.length; idx++) {\n        if (data[idx]) {\n          var newArray = new Float32Array(pixCount);\n\n          for (var i = 0; i < pixCount; i++) {\n            newArray[i] = data[idx][i];\n          }\n\n          pixData.push(newArray);\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // if the opengl data type is ubyte\n    // then the data array must be u8, we currently simply truncate the data\n\n\n    if (dataType !== VtkDataTypes.UNSIGNED_CHAR && model.openGLDataType === model.context.UNSIGNED_BYTE) {\n      for (var _idx = 0; _idx < data.length; _idx++) {\n        if (data[_idx]) {\n          var _newArray = new Uint8Array(pixCount);\n\n          for (var _i = 0; _i < pixCount; _i++) {\n            _newArray[_i] = data[_idx][_i];\n          }\n\n          pixData.push(_newArray);\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // if the opengl data type is half float\n    // then the data array must be u16\n\n\n    var halfFloatExt = model.context.getExtension('OES_texture_half_float');\n    var halfFloat = model._openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n\n    if (halfFloat) {\n      for (var _idx2 = 0; _idx2 < data.length; _idx2++) {\n        if (data[_idx2]) {\n          var _newArray2 = new Uint16Array(pixCount);\n\n          for (var _i2 = 0; _i2 < pixCount; _i2++) {\n            _newArray2[_i2] = HalfFloat.toHalf(data[_idx2][_i2]);\n          }\n\n          pixData.push(_newArray2);\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // The output has to be filled\n\n\n    if (pixData.length === 0) {\n      for (var _i3 = 0; _i3 < data.length; _i3++) {\n        pixData.push(data[_i3]);\n      }\n    }\n\n    return pixData;\n  } //----------------------------------------------------------------------------\n\n\n  function scaleTextureToHighestPowerOfTwo(data) {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      // No need if webGL2\n      return data;\n    }\n\n    var pixData = [];\n    var width = model.width;\n    var height = model.height;\n    var numComps = model.components;\n\n    if (data && (!isPowerOfTwo(width) || !isPowerOfTwo(height))) {\n      // Scale up the texture to the next highest power of two dimensions.\n      var halfFloat = model.context.getExtension('OES_texture_half_float');\n      var newWidth = nearestPowerOfTwo(width);\n      var newHeight = nearestPowerOfTwo(height);\n      var pixCount = newWidth * newHeight * model.components;\n\n      for (var idx = 0; idx < data.length; idx++) {\n        if (data[idx] !== null) {\n          var newArray = null;\n          var jFactor = height / newHeight;\n          var iFactor = width / newWidth;\n          var usingHalf = false;\n\n          if (model.openGLDataType === model.context.FLOAT) {\n            newArray = new Float32Array(pixCount);\n          } else if (halfFloat && model.openGLDataType === halfFloat.HALF_FLOAT_OES) {\n            newArray = new Uint16Array(pixCount);\n            usingHalf = true;\n          } else {\n            newArray = new Uint8Array(pixCount);\n          }\n\n          for (var j = 0; j < newHeight; j++) {\n            var joff = j * newWidth * numComps;\n            var jidx = j * jFactor;\n            var jlow = Math.floor(jidx);\n            var jhi = Math.ceil(jidx);\n\n            if (jhi >= height) {\n              jhi = height - 1;\n            }\n\n            var jmix = jidx - jlow;\n            var jmix1 = 1.0 - jmix;\n            jlow = jlow * width * numComps;\n            jhi = jhi * width * numComps;\n\n            for (var i = 0; i < newWidth; i++) {\n              var ioff = i * numComps;\n              var iidx = i * iFactor;\n              var ilow = Math.floor(iidx);\n              var ihi = Math.ceil(iidx);\n\n              if (ihi >= width) {\n                ihi = width - 1;\n              }\n\n              var imix = iidx - ilow;\n              ilow *= numComps;\n              ihi *= numComps;\n\n              for (var c = 0; c < numComps; c++) {\n                if (usingHalf) {\n                  newArray[joff + ioff + c] = HalfFloat.toHalf(HalfFloat.fromHalf(data[idx][jlow + ilow + c]) * jmix1 * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jlow + ihi + c]) * jmix1 * imix + HalfFloat.fromHalf(data[idx][jhi + ilow + c]) * jmix * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jhi + ihi + c]) * jmix * imix);\n                } else {\n                  newArray[joff + ioff + c] = data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) + data[idx][jlow + ihi + c] * jmix1 * imix + data[idx][jhi + ilow + c] * jmix * (1.0 - imix) + data[idx][jhi + ihi + c] * jmix * imix;\n                }\n              }\n            }\n          }\n\n          pixData.push(newArray);\n          model.width = newWidth;\n          model.height = newHeight;\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // The output has to be filled\n\n\n    if (pixData.length === 0) {\n      for (var _i4 = 0; _i4 < data.length; _i4++) {\n        pixData.push(data[_i4]);\n      }\n    }\n\n    return pixData;\n  } //----------------------------------------------------------------------------\n\n\n  publicAPI.create2DFromRaw = function (width, height, numComps, dataType, data) {\n    var flip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Create an array of texture with one texture\n\n    var dataArray = [data];\n    var pixData = updateArrayDataType(dataType, dataArray);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.\n\n    model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, flip);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, scaledData[0]);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    } // always reset the flip\n\n\n    if (flip) {\n      model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createCubeFromRaw = function (width, height, numComps, dataType, data) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_CUBE_MAP;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    model.maxLevel = data.length / 6 - 1;\n    publicAPI.createTexture();\n    publicAPI.bind();\n    var pixData = updateArrayDataType(dataType, data);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // invert the data because opengl is messed up with cube maps\n    // and uses the old renderman standard with Y going down\n    // even though it is completely at odds with OpenGL standards\n\n    var invertedData = [];\n    var widthLevel = model.width;\n    var heightLevel = model.height;\n\n    for (var i = 0; i < scaledData.length; i++) {\n      if (i % 6 === 0 && i !== 0) {\n        widthLevel /= 2;\n        heightLevel /= 2;\n      }\n\n      invertedData[i] = newTypedArray(dataType, heightLevel * widthLevel * model.components);\n\n      for (var y = 0; y < heightLevel; ++y) {\n        var row1 = y * widthLevel * model.components;\n        var row2 = (heightLevel - y - 1) * widthLevel * model.components;\n        invertedData[i].set(scaledData[i].slice(row2, row2 + widthLevel * model.components), row1);\n      }\n    } // Source texture data from the PBO.\n\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // We get the 6 images\n\n    for (var _i5 = 0; _i5 < 6; _i5++) {\n      // For each mipmap level\n      var j = 0;\n      var w = model.width;\n      var h = model.height;\n\n      while (w >= 1 && h >= 1) {\n        // In webgl 1, all levels need to be defined. So if the latest level size is\n        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)\n        // In webgl 2, the attribute maxLevel will be use.\n        var tempData = null;\n\n        if (j <= model.maxLevel) {\n          tempData = invertedData[6 * j + _i5];\n        }\n\n        model.context.texImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + _i5, j, model.internalFormat, w, h, 0, model.format, model.openGLDataType, tempData);\n        j++;\n        w /= 2;\n        h /= 2;\n      }\n    } // generateMipmap must not be called here because we manually upload all levels\n    // if it is called, all levels will be overwritten\n\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createDepthFromRaw = function (width, height, dataType, data) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    model.format = model.context.DEPTH_COMPONENT;\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT) {\n        model.internalFormat = model.context.DEPTH_COMPONENT32F;\n      } else {\n        model.internalFormat = model.context.DEPTH_COMPONENT16;\n      }\n    } else {\n      model.internalFormat = model.context.DEPTH_COMPONENT;\n    }\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 1;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, data);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.create2DFromImage = function (image) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);\n    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 4;\n    model.width = image.width;\n    model.height = image.height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.\n\n    var needNearestPowerOfTwo = !isPowerOfTwo(image.width) || !isPowerOfTwo(image.height);\n    var canvas = document.createElement('canvas');\n    canvas.width = needNearestPowerOfTwo ? nearestPowerOfTwo(image.width) : image.width;\n    canvas.height = needNearestPowerOfTwo ? nearestPowerOfTwo(image.height) : image.height;\n    var ctx = canvas.getContext('2d');\n    ctx.translate(0, canvas.height);\n    ctx.scale(1, -1);\n    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n    var safeImage = canvas;\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.format, model.openGLDataType, safeImage);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  function computeScaleOffsets(numComps, numPixelsIn, data) {\n    // compute min and max values per component\n    var min = [];\n    var max = [];\n\n    for (var c = 0; c < numComps; ++c) {\n      min[c] = data[c];\n      max[c] = data[c];\n    }\n\n    var count = 0;\n\n    for (var i = 0; i < numPixelsIn; ++i) {\n      for (var _c = 0; _c < numComps; ++_c) {\n        if (data[count] < min[_c]) {\n          min[_c] = data[count];\n        }\n\n        if (data[count] > max[_c]) {\n          max[_c] = data[count];\n        }\n\n        count++;\n      }\n    }\n\n    var offset = [];\n    var scale = [];\n\n    for (var _c2 = 0; _c2 < numComps; ++_c2) {\n      if (min[_c2] === max[_c2]) {\n        max[_c2] = min[_c2] + 1.0;\n      }\n\n      offset[_c2] = min[_c2];\n      scale[_c2] = max[_c2] - min[_c2];\n    }\n\n    return {\n      scale: scale,\n      offset: offset\n    };\n  } // HalfFloat only represents numbers between [-2048, 2048] exactly accurate,\n  // for numbers outside of this range there is a precision limitation\n\n\n  function hasExactHalfFloat(offset, scale) {\n    // Per Component\n    for (var c = 0; c < offset.length; c++) {\n      var min = offset[c];\n      var max = scale[c] + min;\n\n      if (min < -2048 || min > 2048 || max < -2048 || max > 2048) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function checkUseHalfFloat(dataType, offset, scale, preferSizeOverAccuracy) {\n    var useHalfFloatType = true;\n    publicAPI.getOpenGLDataType(dataType, useHalfFloatType);\n    var halfFloatExt = model.context.getExtension('OES_texture_half_float');\n    var useHalfFloat = model._openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n\n    if (!useHalfFloat) {\n      return false;\n    } // Don't consider halfFloat and convert back to Float when the range of data does not generate an accurate halfFloat\n    // AND it is not preferable to have a smaller texture than an exact texture.\n\n\n    if (!hasExactHalfFloat(offset, scale) && !preferSizeOverAccuracy) {\n      return false;\n    }\n\n    return true;\n  } //----------------------------------------------------------------------------\n\n\n  publicAPI.create3DFromRaw = function (width, height, depth, numComps, dataType, data) {\n    // Permit OpenGLDataType to be half float, if applicable, for 3D\n    var useHalfFloatType = true;\n    publicAPI.getOpenGLDataType(dataType, useHalfFloatType); // Now determine the texture parameters using the arguments.\n\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_3D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = depth;\n    model.numberOfDimensions = 3;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Create an array of texture with one texture\n\n    var dataArray = [data];\n    var is3DArray = true;\n    var pixData = updateArrayDataType(dataType, dataArray, is3DArray);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage3D(model.target, 0, model.internalFormat, model.width, model.height, model.depth, 0, model.format, model.openGLDataType, scaledData[0]);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n  // This method simulates a 3D texture using 2D\n\n\n  publicAPI.create3DFilterableFromRaw = function (width, height, depth, numComps, dataType, data) {\n    var preferSizeOverAccuracy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var numPixelsIn = width * height * depth; // initialize offset/scale\n\n    var offset = [];\n    var scale = [];\n\n    for (var c = 0; c < numComps; ++c) {\n      offset[c] = 0.0;\n      scale[c] = 1.0;\n    } // store the information, we will need it later\n    // offset and scale are the offset and scale required to get\n    // the texture value back to data values ala\n    // data = texture * scale + offset\n    // and texture = (data - offset)/scale\n\n\n    model.volumeInfo = {\n      scale: scale,\n      offset: offset,\n      width: width,\n      height: height,\n      depth: depth\n    }; // Check if we can accurately use halfFloat or whether it is preferred to have a smaller size texture\n    // compute min and max values\n\n    var _computeScaleOffsets = computeScaleOffsets(numComps, numPixelsIn, data),\n        computedOffset = _computeScaleOffsets.offset,\n        computedScale = _computeScaleOffsets.scale;\n\n    model.volumeInfo.dataComputedScale = computedScale;\n    model.volumeInfo.dataComputedOffset = computedOffset;\n    var useHalfFloat = checkUseHalfFloat(dataType, computedOffset, computedScale, preferSizeOverAccuracy); // WebGL2 path, we have 3d textures etc\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT || useHalfFloat && (dataType === VtkDataTypes.SHORT || dataType === VtkDataTypes.UNSIGNED_SHORT)) {\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\n      }\n\n      if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n        for (var _c3 = 0; _c3 < numComps; ++_c3) {\n          model.volumeInfo.scale[_c3] = 255.0;\n        }\n\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\n      } // otherwise convert to float\n\n\n      var _newArray3 = new Float32Array(numPixelsIn * numComps); // compute min and max values\n\n\n      model.volumeInfo.offset = computedOffset;\n      model.volumeInfo.scale = computedScale;\n      var count = 0;\n      var scaleInverse = computedScale.map(function (s) {\n        return 1 / s;\n      });\n\n      for (var i = 0; i < numPixelsIn; i++) {\n        for (var nc = 0; nc < numComps; nc++) {\n          _newArray3[count] = (data[count] - computedOffset[nc]) * scaleInverse[nc];\n          count++;\n        }\n      }\n\n      return publicAPI.create3DFromRaw(width, height, depth, numComps, VtkDataTypes.FLOAT, _newArray3);\n    } // not webgl2, deal with webgl1, no 3d textures\n    // and maybe no float textures\n    // compute min and max values\n\n\n    var res = computeScaleOffsets(numComps, numPixelsIn, data);\n\n    var volCopyData = function volCopyData(outArray, outIdx, inValue, smin, smax) {\n      outArray[outIdx] = inValue;\n    };\n\n    var dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR; // unsigned char gets used as is\n\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n      for (var _c4 = 0; _c4 < numComps; ++_c4) {\n        res.offset[_c4] = 0.0;\n        res.scale[_c4] = 255.0;\n      }\n    } else if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n      // use float textures scaled to 0.0 to 1.0\n      dataTypeToUse = VtkDataTypes.FLOAT;\n\n      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {\n        outArray[outIdx] = (inValue - soffset) / sscale;\n      };\n    } else {\n      // worst case, scale data to uchar\n      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n\n      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {\n        outArray[outIdx] = 255.0 * (inValue - soffset) / sscale;\n      };\n    } // Now determine the texture parameters using the arguments.\n\n\n    publicAPI.getOpenGLDataType(dataTypeToUse);\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\n    publicAPI.getFormat(dataTypeToUse, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    } // have to pack this 3D texture into pot 2D texture\n\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.depth = 1;\n    model.numberOfDimensions = 2; // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,\n    // but it doesn't mean it will fit in memory. If we have to use a float data type\n    // or 4 components, there are good chances that the texture size will blow up\n    // and could not fit in the GPU memory. Use a smaller texture size in that case,\n    // which will force a downsampling of the dataset.\n    // That problem does not occur when using webGL2 since we can pack the data in\n    // denser textures based on our data type.\n    // TODO: try to fit in the biggest supported texture, catch the gl error if it\n    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture\n\n    var maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);\n\n    if (maxTexDim > 4096 && (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)) {\n      maxTexDim = 4096;\n    } // compute estimate for XY subsample\n\n\n    var xstride = 1;\n    var ystride = 1;\n\n    if (numPixelsIn > maxTexDim * maxTexDim) {\n      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));\n      ystride = xstride;\n    }\n\n    var targetWidth = Math.sqrt(numPixelsIn) / xstride;\n    targetWidth = nearestPowerOfTwo(targetWidth); // determine X reps\n\n    var xreps = Math.floor(targetWidth * xstride / width);\n    var yreps = Math.ceil(depth / xreps);\n    var targetHeight = nearestPowerOfTwo(height * yreps / ystride);\n    model.width = targetWidth;\n    model.height = targetHeight;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // store the information, we will need it later\n\n    model.volumeInfo.xreps = xreps;\n    model.volumeInfo.yreps = yreps;\n    model.volumeInfo.xstride = xstride;\n    model.volumeInfo.ystride = ystride;\n    model.volumeInfo.offset = res.offset;\n    model.volumeInfo.scale = res.scale; // OK stuff the data into the 2d TEXTURE\n    // first allocate the new texture\n\n    var newArray;\n    var pixCount = targetWidth * targetHeight * numComps;\n\n    if (dataTypeToUse === VtkDataTypes.FLOAT) {\n      newArray = new Float32Array(pixCount);\n    } else {\n      newArray = new Uint8Array(pixCount);\n    } // then stuff the data into it, nothing fancy right now\n    // for stride\n\n\n    var outIdx = 0;\n    var tileWidth = Math.floor(width / xstride);\n    var tileHeight = Math.floor(height / ystride);\n\n    for (var yRep = 0; yRep < yreps; yRep++) {\n      var xrepsThisRow = Math.min(xreps, depth - yRep * xreps);\n      var outXContIncr = numComps * (model.width - xrepsThisRow * Math.floor(width / xstride));\n\n      for (var tileY = 0; tileY < tileHeight; tileY++) {\n        for (var xRep = 0; xRep < xrepsThisRow; xRep++) {\n          var inOffset = numComps * ((yRep * xreps + xRep) * width * height + ystride * tileY * width);\n\n          for (var tileX = 0; tileX < tileWidth; tileX++) {\n            // copy value\n            for (var _nc = 0; _nc < numComps; _nc++) {\n              volCopyData(newArray, outIdx, data[inOffset + xstride * tileX * numComps + _nc], res.offset[_nc], res.scale[_nc]);\n              outIdx++;\n            }\n          }\n        }\n\n        outIdx += outXContIncr;\n      }\n    } // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, newArray);\n    publicAPI.deactivate();\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getMaximumTextureSize = function (ctx) {\n    if (ctx && ctx.isCurrent()) {\n      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);\n    }\n\n    return -1;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  _openGLRenderWindow: null,\n  context: null,\n  handle: 0,\n  sendParametersTime: null,\n  textureBuildTime: null,\n  numberOfDimensions: 0,\n  target: 0,\n  format: 0,\n  openGLDataType: 0,\n  components: 0,\n  width: 0,\n  height: 0,\n  depth: 0,\n  autoParameters: true,\n  wrapS: Wrap.CLAMP_TO_EDGE,\n  wrapT: Wrap.CLAMP_TO_EDGE,\n  wrapR: Wrap.CLAMP_TO_EDGE,\n  minificationFilter: Filter.NEAREST,\n  magnificationFilter: Filter.NEAREST,\n  minLOD: -1000.0,\n  maxLOD: 1000.0,\n  baseLevel: 0,\n  maxLevel: 1000,\n  generateMipmap: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.sendParametersTime = {};\n  obj(model.sendParametersTime, {\n    mtime: 0\n  });\n  model.textureBuildTime = {};\n  obj(model.textureBuildTime, {\n    mtime: 0\n  }); // Build VTK API\n\n  set(publicAPI, model, ['format', 'openGLDataType']);\n  setGet(publicAPI, model, ['keyMatrixTime', 'minificationFilter', 'magnificationFilter', 'wrapS', 'wrapT', 'wrapR', 'generateMipmap']);\n  get(publicAPI, model, ['width', 'height', 'volumeInfo', 'components', 'handle', 'target']); // Object methods\n\n  vtkOpenGLTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLTexture'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLTexture$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants); // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkTexture', newInstance);\n\nexport { vtkOpenGLTexture$1 as default, extend, newInstance };\n", "var InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1\n};\nvar Constants = {\n  InterpolationType: InterpolationType\n};\n\nexport { InterpolationType, Constants as default };\n", "var vtkPolyDataVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexMC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::PrimID::Impl\\n\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n\";\n\nexport { vtkPolyDataVS as v };\n", "var vtkPolyDataFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\nuniform int PrimitiveIDOffset;\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Light::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n\\n  //VTK::RenderPassFragmentShader::Impl\\n}\\n\";\n\nexport { vtkPolyDataFS as v };\n", "import vtkShaderProgram from './ShaderProgram.js';\n\nfunction implementReplaceShaderCoincidentOffset(publicAPI, model) {\n\n  publicAPI.replaceShaderCoincidentOffset = function (shaders, ren, actor) {\n    var cp = publicAPI.getCoincidentParameters(ren, actor); // if we need an offset handle it here\n    // The value of .000016 is suitable for depth buffers\n    // of at least 16 bit depth. We do not query the depth\n    // right now because we would need some mechanism to\n    // cache the result taking into account FBO changes etc.\n\n    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {\n      var FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Coincident::Dec', ['uniform float cfactor;', 'uniform float coffset;']).result;\n\n      if (model.context.getExtension('EXT_frag_depth')) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n\n      if (model._openGLRenderWindow.getWebgl2()) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n\n      shaders.Fragment = FSSource;\n    }\n  };\n}\n\nvar vtkReplacementShaderMapper = {\n  implementReplaceShaderCoincidentOffset: implementReplaceShaderCoincidentOffset\n};\n\nexport { vtkReplacementShaderMapper as default };\n", "import { mat4 } from 'gl-matrix';\nimport Constants from '../Core/ImageMapper/Constants.js';\nimport { newInstance as newInstance$1, setGet, obj, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkHelper from './Helper.js';\nimport { u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { Filter, Wrap } from './Texture/Constants.js';\nimport { InterpolationType } from '../Core/ImageProperty/Constants.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar SlicingMode = Constants.SlicingMode; // ----------------------------------------------------------------------------\n// helper methods\n// ----------------------------------------------------------------------------\n\nfunction computeFnToString(property, fn, numberOfComponents) {\n  var pwfun = fn.apply(property);\n\n  if (pwfun) {\n    var iComps = property.getIndependentComponents();\n    return \"\".concat(property.getMTime(), \"-\").concat(iComps, \"-\").concat(numberOfComponents);\n  }\n\n  return '0';\n} // ----------------------------------------------------------------------------\n// vtkOpenGLImageMapper methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageMapper');\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLImageSlice = publicAPI.getFirstAncestorOfType('vtkOpenGLImageSlice');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.pwfTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      var ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera()); // is slice set by the camera\n\n      if (model.renderable.getSliceAtFocalPoint()) {\n        model.renderable.setSliceFromCamera(ren.getActiveCamera());\n      }\n    }\n  };\n\n  publicAPI.translucentPass = function (prepass, renderPass) {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass) {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n\n  publicAPI.opaquePass = function (prepass) {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.getCoincidentParameters = function (ren, actor) {\n    if (model.renderable.getResolveCoincidentTopology()) {\n      return model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n    }\n\n    return null;\n  }; // Renders myself\n\n\n  publicAPI.render = function () {\n    var actor = model.openGLImageSlice.getRenderable();\n    var ren = model.openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n\n  publicAPI.buildShaders = function (shaders, ren, actor) {\n    publicAPI.getShaderTemplate(shaders, ren, actor); // apply any renderPassReplacements\n\n    if (model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement(shaders);\n    }\n\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.getShaderTemplate = function (shaders, ren, actor) {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var FSSource = shaders.Fragment;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\n    var tNumComp = model.openGLTexture.getComponents();\n    var iComps = actor.getProperty().getIndependentComponents();\n    var tcoordDec = ['varying vec2 tcoordVCVSOutput;', // color shift and scale\n    'uniform float cshift0;', 'uniform float cscale0;', // pwf shift and scale\n    'uniform float pwfshift0;', 'uniform float pwfscale0;', 'uniform sampler2D texture1;', 'uniform sampler2D colorTexture1;', 'uniform sampler2D pwfTexture1;', 'uniform float opacity;'];\n\n    if (iComps) {\n      for (var comp = 1; comp < tNumComp; comp++) {\n        tcoordDec = tcoordDec.concat([// color shift and scale\n        \"uniform float cshift\".concat(comp, \";\"), \"uniform float cscale\".concat(comp, \";\"), // weighting shift and scale\n        \"uniform float pwfshift\".concat(comp, \";\"), \"uniform float pwfscale\".concat(comp, \";\")]);\n      } // the heights defined below are the locations\n      // for the up to four components of the tfuns\n      // the tfuns have a height of 2XnumComps pixels so the\n      // values are computed to hit the middle of the two rows\n      // for that component\n\n\n      switch (tNumComp) {\n        case 1:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', '#define height0 0.5']);\n          break;\n\n        case 2:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', '#define height0 0.25', '#define height1 0.75']);\n          break;\n\n        case 3:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', '#define height0 0.17', '#define height1 0.5', '#define height2 0.83']);\n          break;\n\n        case 4:\n          tcoordDec = tcoordDec.concat(['uniform float mix0;', 'uniform float mix1;', 'uniform float mix2;', 'uniform float mix3;', '#define height0 0.125', '#define height1 0.375', '#define height2 0.625', '#define height3 0.875']);\n          break;\n\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n    }\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', tcoordDec).result;\n\n    if (iComps) {\n      var rgba = ['r', 'g', 'b', 'a'];\n      var tcoordImpl = ['vec4 tvalue = texture2D(texture1, tcoordVCVSOutput);'];\n\n      for (var _comp = 0; _comp < tNumComp; _comp++) {\n        tcoordImpl = tcoordImpl.concat([\"vec3 tcolor\".concat(_comp, \" = mix\").concat(_comp, \" * texture2D(colorTexture1, vec2(tvalue.\").concat(rgba[_comp], \" * cscale\").concat(_comp, \" + cshift\").concat(_comp, \", height\").concat(_comp, \")).rgb;\"), \"float compWeight\".concat(_comp, \" = mix\").concat(_comp, \" * texture2D(pwfTexture1, vec2(tvalue.\").concat(rgba[_comp], \" * pwfscale\").concat(_comp, \" + pwfshift\").concat(_comp, \", height\").concat(_comp, \")).r;\")]);\n      }\n\n      switch (tNumComp) {\n        case 1:\n          tcoordImpl = tcoordImpl.concat(['gl_FragData[0] = vec4(tcolor0.rgb, opacity);']);\n          break;\n\n        case 2:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum))), opacity);']);\n          break;\n\n        case 3:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum))), opacity);']);\n          break;\n\n        case 4:\n          tcoordImpl = tcoordImpl.concat(['float weightSum = compWeight0 + compWeight1 + compWeight2 + compWeight3;', 'gl_FragData[0] = vec4(vec3((tcolor0.rgb * (compWeight0 / weightSum)) + (tcolor1.rgb * (compWeight1 / weightSum)) + (tcolor2.rgb * (compWeight2 / weightSum)) + (tcolor3.rgb * (compWeight3 / weightSum))), opacity);']);\n          break;\n\n        default:\n          vtkErrorMacro('Unsupported number of independent coordinates.');\n      }\n\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', tcoordImpl).result;\n    } else {\n      // dependent components\n      switch (tNumComp) {\n        case 1:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['float intensity = texture2D(texture1, tcoordVCVSOutput).r;', 'vec3 tcolor = texture2D(colorTexture1, vec2(intensity * cscale0 + cshift0, 0.5)).rgb;', 'float scalarOpacity = texture2D(pwfTexture1, vec2(intensity * pwfscale0 + pwfshift0, 0.5)).r;', 'gl_FragData[0] = vec4(tcolor, scalarOpacity * opacity);']).result;\n          break;\n\n        case 2:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', 'float intensity = tcolor.r*cscale0 + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(intensity, 0.5)).rgb, pwfscale0*tcolor.g + pwfshift0);']).result;\n          break;\n\n        default:\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['vec4 tcolor = cscale0*texture2D(texture1, tcoordVCVSOutput.st) + cshift0;', 'gl_FragData[0] = vec4(texture2D(colorTexture1, vec2(tcolor.r,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.g,0.5)).r,', '  texture2D(colorTexture1, vec2(tcolor.b,0.5)).r, tcolor.a);']).result;\n      }\n    }\n\n    if (model.haveSeenDepthRequest) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderClip = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var FSSource = shaders.Fragment;\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n\n      if (numClipPlanes > 6) {\n        vtkErrorMacro$1('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'uniform vec4 clipPlanes[6];', 'varying float clipDistancesVSOutput[6];']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', 'varying float clipDistancesVSOutput[6];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', ['for (int planeNum = 0; planeNum < 6; planeNum++)', '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    var tNumComp = model.openGLTexture.getComponents();\n    var iComp = actor.getProperty().getIndependentComponents(); // has the render pass shader replacement changed? Two options\n\n    var needRebuild = false;\n\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n      model.lastRenderPassShaderReplacement = null;\n    }\n\n    if (model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement = model.currentRenderPass.getShaderReplacement();\n      needRebuild = true;\n    }\n\n    if (needRebuild || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram() === 0 || model.lastTextureComponents !== tNumComp || model.lastIndependentComponents !== iComp) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      model.lastTextureComponents = tNumComp;\n      model.lastIndependentComponents = iComp;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = function (cellBO, ren, actor) {\n    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?\n\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      var shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed\n\n      var newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO\n\n\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader); // reset the VAO as the shader has changed\n\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), model.context.FALSE)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      }\n\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    var texUnit = model.openGLTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('texture1', texUnit);\n    var numComp = model.openGLTexture.getComponents();\n    var iComps = actor.getProperty().getIndependentComponents();\n\n    if (iComps) {\n      for (var i = 0; i < numComp; i++) {\n        cellBO.getProgram().setUniformf(\"mix\".concat(i), actor.getProperty().getComponentWeight(i));\n      }\n    }\n\n    var oglShiftScale = model.openGLTexture.getShiftAndScale(); // three levels of shift scale combined into one\n    // for performance in the fragment shader\n\n    for (var _i = 0; _i < numComp; _i++) {\n      var cw = actor.getProperty().getColorWindow();\n      var cl = actor.getProperty().getColorLevel();\n      var target = iComps ? _i : 0;\n      var cfun = actor.getProperty().getRGBTransferFunction(target);\n\n      if (cfun && actor.getProperty().getUseLookupTableScalarRange()) {\n        var cRange = cfun.getRange();\n        cw = cRange[1] - cRange[0];\n        cl = 0.5 * (cRange[1] + cRange[0]);\n      }\n\n      var scale = oglShiftScale.scale / cw;\n      var shift = (oglShiftScale.shift - cl) / cw + 0.5;\n      cellBO.getProgram().setUniformf(\"cshift\".concat(_i), shift);\n      cellBO.getProgram().setUniformf(\"cscale\".concat(_i), scale);\n    } // pwf shift/scale\n\n\n    for (var _i2 = 0; _i2 < numComp; _i2++) {\n      var pwfScale = 1.0;\n      var pwfShift = 0.0;\n\n      var _target = iComps ? _i2 : 0;\n\n      var pwfun = actor.getProperty().getPiecewiseFunction(_target);\n\n      if (pwfun) {\n        var pwfRange = pwfun.getRange();\n        var length = pwfRange[1] - pwfRange[0];\n        var mid = 0.5 * (pwfRange[0] + pwfRange[1]);\n        pwfScale = oglShiftScale.scale / length;\n        pwfShift = (oglShiftScale.shift - mid) / length + 0.5;\n      }\n\n      cellBO.getProgram().setUniformf(\"pwfshift\".concat(_i2), pwfShift);\n      cellBO.getProgram().setUniformf(\"pwfscale\".concat(_i2), pwfScale);\n    }\n\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    } // handle coincident\n\n\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      var cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset); // cfactor isn't always used when coffset is.\n\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n\n    var texColorUnit = model.colorTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('colorTexture1', texColorUnit);\n    var texOpacityUnit = model.pwfTexture.getTextureUnit();\n    cellBO.getProgram().setUniformi('pwfTexture1', texOpacityUnit);\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n\n      if (numClipPlanes > 6) {\n        vtkErrorMacro$1('OpenGL has a limit of 6 clipping planes');\n        numClipPlanes = 6;\n      }\n\n      var image = model.currentInput;\n      var w2imat4 = image.getWorldToIndex();\n      var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n      var mat = inverseShiftScaleMatrix ? mat4.copy(model.imagematinv, actor.getMatrix()) : actor.getMatrix();\n\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n\n      mat4.multiply(model.imagematinv, mat, w2imat4);\n      var planeEquations = [];\n\n      for (var _i3 = 0; _i3 < numClipPlanes; _i3++) {\n        var planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(model.imagematinv, _i3, planeEquation);\n\n        for (var j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\n    }\n  };\n\n  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    var actMats = model.openGLImageSlice.getKeyMatrices();\n    var image = model.currentInput;\n    var i2wmat4 = image.getIndexToWorld();\n    mat4.multiply(model.imagemat, actMats.mcwc, i2wmat4);\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n    mat4.multiply(model.imagemat, keyMats.wcpc, model.imagemat);\n\n    if (cellBO.getCABO().getCoordShiftAndScaleEnabled()) {\n      var inverseShiftScaleMat = cellBO.getCABO().getInverseShiftAndScaleMatrix();\n      mat4.multiply(model.imagemat, model.imagemat, inverseShiftScaleMat);\n    }\n\n    program.setUniformMatrix('MCPCMatrix', model.imagemat);\n  };\n\n  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    var ppty = actor.getProperty();\n    var opacity = ppty.getOpacity();\n    program.setUniformf('opacity', opacity);\n  };\n\n  publicAPI.renderPieceStart = function (ren, actor) {\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor); // Bind the OpenGL, this is shared between the different primitive/cell types.\n\n    model.lastBoundBO = null;\n  };\n\n  publicAPI.renderPieceDraw = function (ren, actor) {\n    var gl = model.context; // activate the texture\n\n    model.openGLTexture.activate();\n    model.colorTexture.activate();\n    model.pwfTexture.activate(); // draw polygons\n\n    if (model.tris.getCABO().getElementCount()) {\n      // First we do the triangles, update the shader, set uniforms, etc.\n      publicAPI.updateShaders(model.tris, ren, actor);\n      gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n    }\n\n    model.openGLTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.pwfTexture.deactivate();\n  };\n\n  publicAPI.renderPieceFinish = function (ren, actor) {};\n\n  publicAPI.renderPiece = function (ren, actor) {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = function (ren, actor) {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.bounds);\n      return;\n    }\n\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = function (ren, actor) {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {\n    // first do a coarse check\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    var image = model.currentInput;\n\n    if (!image) {\n      return;\n    }\n\n    var imgScalars = image.getPointData() && image.getPointData().getScalars();\n\n    if (!imgScalars) {\n      return;\n    }\n\n    var actorProperty = actor.getProperty(); // set interpolation on the texture based on property setting\n\n    var iType = actorProperty.getInterpolationType();\n\n    if (iType === InterpolationType.NEAREST) {\n      model.colorTexture.setMinificationFilter(Filter.NEAREST);\n      model.colorTexture.setMagnificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMinificationFilter(Filter.NEAREST);\n      model.pwfTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMinificationFilter(Filter.LINEAR);\n      model.pwfTexture.setMagnificationFilter(Filter.LINEAR);\n    }\n\n    var numComp = imgScalars.getNumberOfComponents();\n    var iComps = actorProperty.getIndependentComponents();\n    var numIComps = iComps ? numComp : 1;\n    var textureHeight = iComps ? 2 * numIComps : 1;\n    var cfunToString = computeFnToString(actorProperty, actorProperty.getRGBTransferFunction, numIComps);\n\n    if (model.colorTextureString !== cfunToString) {\n      var cWidth = 1024;\n      var cSize = cWidth * textureHeight * 3;\n      var cTable = new Uint8Array(cSize);\n      var cfun = actorProperty.getRGBTransferFunction();\n\n      if (cfun) {\n        var tmpTable = new Float32Array(cWidth * 3);\n\n        for (var c = 0; c < numIComps; c++) {\n          cfun = actorProperty.getRGBTransferFunction(c);\n          var cRange = cfun.getRange();\n          cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n\n          if (iComps) {\n            for (var i = 0; i < cWidth * 3; i++) {\n              cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n              cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n            }\n          } else {\n            for (var _i4 = 0; _i4 < cWidth * 3; _i4++) {\n              cTable[c * cWidth * 6 + _i4] = 255.0 * tmpTable[_i4];\n            }\n          }\n        }\n\n        model.colorTexture.create2DFromRaw(cWidth, textureHeight, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      } else {\n        for (var _i5 = 0; _i5 < cWidth * 3; ++_i5) {\n          cTable[_i5] = 255.0 * _i5 / ((cWidth - 1) * 3);\n          cTable[_i5 + 1] = 255.0 * _i5 / ((cWidth - 1) * 3);\n          cTable[_i5 + 2] = 255.0 * _i5 / ((cWidth - 1) * 3);\n        }\n\n        model.colorTexture.create2DFromRaw(cWidth, 1, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      }\n\n      model.colorTextureString = cfunToString;\n    } // Build piecewise function buffer.  This buffer is used either\n    // for component weighting or opacity, depending on whether we're\n    // rendering components independently or not.\n\n\n    var pwfunToString = computeFnToString(actorProperty, actorProperty.getPiecewiseFunction, numIComps);\n\n    if (model.pwfTextureString !== pwfunToString) {\n      var pwfWidth = 1024;\n      var pwfSize = pwfWidth * textureHeight;\n      var pwfTable = new Uint8Array(pwfSize);\n      var pwfun = actorProperty.getPiecewiseFunction(); // support case where pwfun is added/removed\n\n      model.pwfTexture.resetFormatAndType();\n\n      if (pwfun) {\n        var pwfFloatTable = new Float32Array(pwfSize);\n\n        var _tmpTable = new Float32Array(pwfWidth);\n\n        for (var _c = 0; _c < numIComps; ++_c) {\n          pwfun = actorProperty.getPiecewiseFunction(_c);\n\n          if (pwfun === null) {\n            // Piecewise constant max if no function supplied for this component\n            pwfFloatTable.fill(1.0);\n          } else {\n            var pwfRange = pwfun.getRange();\n            pwfun.getTable(pwfRange[0], pwfRange[1], pwfWidth, _tmpTable, 1); // adjust for sample distance etc\n\n            if (iComps) {\n              for (var _i6 = 0; _i6 < pwfWidth; _i6++) {\n                pwfFloatTable[_c * pwfWidth * 2 + _i6] = _tmpTable[_i6];\n                pwfFloatTable[_c * pwfWidth * 2 + _i6 + pwfWidth] = _tmpTable[_i6];\n              }\n            } else {\n              for (var _i7 = 0; _i7 < pwfWidth; _i7++) {\n                pwfFloatTable[_c * pwfWidth * 2 + _i7] = _tmpTable[_i7];\n              }\n            }\n          }\n        }\n\n        model.pwfTexture.create2DFromRaw(pwfWidth, textureHeight, 1, VtkDataTypes.FLOAT, pwfFloatTable);\n      } else {\n        // default is opaque\n        pwfTable.fill(255.0);\n        model.pwfTexture.create2DFromRaw(pwfWidth, 1, 1, VtkDataTypes.UNSIGNED_CHAR, pwfTable);\n      }\n\n      model.pwfTextureString = pwfunToString;\n    } // Find what IJK axis and what direction to slice along\n\n\n    var _model$renderable$get = model.renderable.getClosestIJKAxis(),\n        ijkMode = _model$renderable$get.ijkMode; // Find the IJK slice\n\n\n    var slice = model.renderable.getSlice();\n\n    if (ijkMode !== model.renderable.getSlicingMode()) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      slice = model.renderable.getSliceAtPosition(slice);\n    }\n\n    var nSlice = Math.round(slice); // Find sliceOffset\n\n    var ext = image.getExtent();\n    var sliceOffset;\n\n    if (ijkMode === SlicingMode.I) {\n      sliceOffset = nSlice - ext[0];\n    }\n\n    if (ijkMode === SlicingMode.J) {\n      sliceOffset = nSlice - ext[2];\n    }\n\n    if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n      sliceOffset = nSlice - ext[4];\n    } // rebuild the VBO if the data has changed\n\n\n    var toString = \"\".concat(slice, \"A\").concat(image.getMTime(), \"A\").concat(imgScalars.getMTime(), \"B\").concat(publicAPI.getMTime(), \"C\").concat(model.renderable.getSlicingMode(), \"D\").concat(actor.getProperty().getMTime());\n\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      var dims = image.getDimensions();\n\n      if (iType === InterpolationType.NEAREST) {\n        if (numComp === 4) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.NEAREST);\n        }\n\n        model.openGLTexture.setMagnificationFilter(Filter.NEAREST);\n      } else {\n        if (numComp === 4) {\n          model.openGLTexture.setGenerateMipmap(true);\n          model.openGLTexture.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        } else {\n          model.openGLTexture.setMinificationFilter(Filter.LINEAR);\n        }\n\n        model.openGLTexture.setMagnificationFilter(Filter.LINEAR);\n      }\n\n      model.openGLTexture.setWrapS(Wrap.CLAMP_TO_EDGE);\n      model.openGLTexture.setWrapT(Wrap.CLAMP_TO_EDGE);\n      var sliceSize = dims[0] * dims[1] * numComp;\n      var ptsArray = new Float32Array(12);\n      var tcoordArray = new Float32Array(8);\n\n      for (var _i8 = 0; _i8 < 4; _i8++) {\n        tcoordArray[_i8 * 2] = _i8 % 2 ? 1.0 : 0.0;\n        tcoordArray[_i8 * 2 + 1] = _i8 > 1 ? 1.0 : 0.0;\n      } // Determine depth position of the slicing plane in the scene.\n      // Slicing modes X, Y, and Z use a continuous axis position, whereas\n      // slicing modes I, J, and K should use discrete positions.\n\n\n      var sliceDepth = [SlicingMode.X, SlicingMode.Y, SlicingMode.Z].includes(model.renderable.getSlicingMode()) ? slice : nSlice;\n      var spatialExt = image.getSpatialExtent();\n      var basicScalars = imgScalars.getData();\n      var scalars = null; // Get right scalars according to slicing mode\n\n      if (ijkMode === SlicingMode.I) {\n        scalars = new basicScalars.constructor(dims[2] * dims[1] * numComp);\n        var id = 0;\n\n        for (var k = 0; k < dims[2]; k++) {\n          for (var j = 0; j < dims[1]; j++) {\n            var bsIdx = (sliceOffset + j * dims[0] + k * dims[0] * dims[1]) * numComp;\n            id = (k * dims[1] + j) * numComp;\n            scalars.set(basicScalars.subarray(bsIdx, bsIdx + numComp), id);\n          }\n        }\n\n        dims[0] = dims[1];\n        dims[1] = dims[2];\n        ptsArray[0] = sliceDepth;\n        ptsArray[1] = spatialExt[2];\n        ptsArray[2] = spatialExt[4];\n        ptsArray[3] = sliceDepth;\n        ptsArray[4] = spatialExt[3];\n        ptsArray[5] = spatialExt[4];\n        ptsArray[6] = sliceDepth;\n        ptsArray[7] = spatialExt[2];\n        ptsArray[8] = spatialExt[5];\n        ptsArray[9] = sliceDepth;\n        ptsArray[10] = spatialExt[3];\n        ptsArray[11] = spatialExt[5];\n      } else if (ijkMode === SlicingMode.J) {\n        scalars = new basicScalars.constructor(dims[2] * dims[0] * numComp);\n        var _id = 0;\n\n        for (var _k = 0; _k < dims[2]; _k++) {\n          for (var _i9 = 0; _i9 < dims[0]; _i9++) {\n            var _bsIdx = (_i9 + sliceOffset * dims[0] + _k * dims[0] * dims[1]) * numComp;\n\n            _id = (_k * dims[0] + _i9) * numComp;\n            scalars.set(basicScalars.subarray(_bsIdx, _bsIdx + numComp), _id);\n          }\n        }\n\n        dims[1] = dims[2];\n        ptsArray[0] = spatialExt[0];\n        ptsArray[1] = sliceDepth;\n        ptsArray[2] = spatialExt[4];\n        ptsArray[3] = spatialExt[1];\n        ptsArray[4] = sliceDepth;\n        ptsArray[5] = spatialExt[4];\n        ptsArray[6] = spatialExt[0];\n        ptsArray[7] = sliceDepth;\n        ptsArray[8] = spatialExt[5];\n        ptsArray[9] = spatialExt[1];\n        ptsArray[10] = sliceDepth;\n        ptsArray[11] = spatialExt[5];\n      } else if (ijkMode === SlicingMode.K || ijkMode === SlicingMode.NONE) {\n        scalars = basicScalars.subarray(sliceOffset * sliceSize, (sliceOffset + 1) * sliceSize);\n        ptsArray[0] = spatialExt[0];\n        ptsArray[1] = spatialExt[2];\n        ptsArray[2] = sliceDepth;\n        ptsArray[3] = spatialExt[1];\n        ptsArray[4] = spatialExt[2];\n        ptsArray[5] = sliceDepth;\n        ptsArray[6] = spatialExt[0];\n        ptsArray[7] = spatialExt[3];\n        ptsArray[8] = sliceDepth;\n        ptsArray[9] = spatialExt[1];\n        ptsArray[10] = spatialExt[3];\n        ptsArray[11] = sliceDepth;\n      } else {\n        vtkErrorMacro('Reformat slicing not yet supported.');\n      }\n\n      model.openGLTexture.create2DFromRaw(dims[0], dims[1], numComp, imgScalars.getDataType(), scalars);\n      model.openGLTexture.activate();\n      model.openGLTexture.sendParameters();\n      model.openGLTexture.deactivate();\n      var points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      var tcoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: tcoordArray\n      });\n      tcoords.setName('tcoords');\n      var cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      var cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points: points,\n        tcoords: tcoords,\n        cellOffset: 0\n      });\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  openGLTexture: null,\n  tris: null,\n  imagemat: null,\n  imagematinv: null,\n  colorTexture: null,\n  pwfTexture: null,\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastTextureComponents: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  model.tris = vtkHelper.newInstance();\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.colorTexture = vtkOpenGLTexture.newInstance();\n  model.pwfTexture = vtkOpenGLTexture.newInstance();\n  model.imagemat = mat4.identity(new Float64Array(16));\n  model.imagematinv = mat4.identity(new Float64Array(16)); // Build VTK API\n\n  setGet(publicAPI, model, []);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime); // Object methods\n\n  vtkOpenGLImageMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLImageMapper'); // ----------------------------------------------------------------------------\n\nvar vtkImageMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkImageMapper', newInstance);\n\nexport { vtkImageMapper as default, extend, newInstance };\n", "import { mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = function (renderPass) {\n    publicAPI.traverseOpaquePass(renderPass);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {\n    return publicAPI.opaquePass(prepass, renderPass);\n  }; // Renders myself\n\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(true);\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = function (prepass, renderPass) {\n    model.context.depthMask(!prepass);\n  };\n\n  publicAPI.getKeyMatrices = function () {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  }; // Build VTK API\n\n  setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLImageSlice'); // ----------------------------------------------------------------------------\n\nvar vtkImageSlice = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);\n\nexport { vtkImageSlice as default, extend, newInstance };\n", "import { mat4, mat3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolume'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      renderPass.incrementVolumeCount();\n    }\n  };\n\n  publicAPI.traverseVolumePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children[0].traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // Renders myself\n\n\n  publicAPI.volumePass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    model.context.depthMask(!prepass);\n  };\n\n  publicAPI.getKeyMatrices = function () {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.MCWCMatrix, model.renderable.getMatrix());\n      mat4.transpose(model.MCWCMatrix, model.MCWCMatrix);\n\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.normalMatrix);\n      } else {\n        mat3.fromMat4(model.normalMatrix, model.MCWCMatrix);\n        mat3.invert(model.normalMatrix, model.normalMatrix);\n      }\n\n      model.keyMatrixTime.modified();\n    }\n\n    return {\n      mcwc: model.MCWCMatrix,\n      normalMatrix: model.normalMatrix\n    };\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// context: null,\n  // keyMatrixTime: null,\n  // normalMatrix: null,\n  // MCWCMatrix: null,\n  // _openGLRenderWindow: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  }); // always set by getter\n\n  model.normalMatrix = new Float64Array(9);\n  model.MCWCMatrix = new Float64Array(16); // Build VTK API\n\n  setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkVolume', newInstance);\n\nexport { vtkVolume as default, extend, newInstance };\n", "import { newInstance as newInstance$1, obj, vtkErrorMacro, getArray } from '../../macros.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { Filter } from './Texture/Constants.js';\n\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n\n  publicAPI.getBothMode = function () {\n    return model.context.FRAMEBUFFER;\n  }; // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n\n  publicAPI.saveCurrentBindingsAndBuffers = function (modeIn) {\n    var mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n\n  publicAPI.saveCurrentBindings = function (modeIn) {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling saveCurrentBindings');\n      return;\n    }\n\n    var gl = model.context;\n    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);\n    model.previousActiveFramebuffer = model._openGLRenderWindow.getActiveFramebuffer();\n  };\n\n  publicAPI.saveCurrentBuffers = function (modeIn) {// noop on webgl 1\n  };\n\n  publicAPI.restorePreviousBindingsAndBuffers = function (modeIn) {\n    var mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n\n  publicAPI.restorePreviousBindings = function (modeIn) {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling restorePreviousBindings');\n      return;\n    }\n\n    var gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n\n    model._openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);\n  };\n\n  publicAPI.restorePreviousBuffers = function (modeIn) {// currently a noop on webgl1\n  };\n\n  publicAPI.bind = function () {\n    var modeArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var mode = modeArg;\n\n    if (mode === null) {\n      mode = model.context.FRAMEBUFFER;\n    }\n\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\n\n    for (var i = 0; i < model.colorBuffers.length; i++) {\n      model.colorBuffers[i].bind();\n    }\n\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n\n  publicAPI.create = function (width, height) {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling create');\n      return;\n    }\n\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n\n  publicAPI.setColorBuffer = function (texture) {\n    var attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var gl = model.context;\n\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setColorBuffer');\n      return;\n    }\n\n    var glAttachment = gl.COLOR_ATTACHMENT0;\n\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n\n    model.colorBuffers[attachment] = texture;\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);\n  };\n\n  publicAPI.removeColorBuffer = function () {\n    var attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var gl = model.context;\n\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeColorBuffer');\n      return;\n    }\n\n    var glAttachment = gl.COLOR_ATTACHMENT0;\n\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\n  };\n\n  publicAPI.setDepthBuffer = function (texture) {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setDepthBuffer');\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      var gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to fbo requires WebGL 2');\n    }\n  };\n\n  publicAPI.removeDepthBuffer = function () {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeDepthBuffer');\n      return;\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      var gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to framebuffers requires WebGL 2');\n    }\n  };\n\n  publicAPI.getGLFramebuffer = function () {\n    return model.glFramebuffer;\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n  };\n\n  publicAPI.getSize = function () {\n    var size = [0, 0];\n\n    if (model.glFramebuffer !== null) {\n      size[0] = model.glFramebuffer.width;\n      size[1] = model.glFramebuffer.height;\n    }\n\n    return size;\n  };\n\n  publicAPI.populateFramebuffer = function () {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling populateFrameBuffer');\n      return;\n    }\n\n    publicAPI.bind();\n    var gl = model.context;\n    var texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, VtkDataTypes.UNSIGNED_CHAR, null);\n    publicAPI.setColorBuffer(texture); // for now do not count on having a depth buffer texture\n    // as they are not standard webgl 1\n\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);\n  }; // For backwards compatibility. Use getColorBuffers()[0] going forward.\n\n\n  publicAPI.getColorTexture = function () {\n    return model.colorBuffers[0];\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorBuffers: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n\n  if (model.colorBuffers) {\n    vtkErrorMacro('you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.');\n  }\n\n  model.colorBuffers = [];\n  getArray(publicAPI, model, ['colorBuffers']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkFramebuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkFramebuffer'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLFramebuffer = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkOpenGLFramebuffer as default, extend, newInstance };\n", "var vtkVolumeVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexDC;\\n\\nvarying vec3 vertexVCVSOutput;\\nuniform mat4 PCVCMatrix;\\n\\nuniform float dcxmin;\\nuniform float dcxmax;\\nuniform float dcymin;\\nuniform float dcymax;\\n\\nvoid main()\\n{\\n  // dcsmall is the device coords reduced to the\\n  // x y area covered by the volume\\n  vec4 dcsmall = vec4(\\n    dcxmin + 0.5 * (vertexDC.x + 1.0) * (dcxmax - dcxmin),\\n    dcymin + 0.5 * (vertexDC.y + 1.0) * (dcymax - dcymin),\\n    vertexDC.z,\\n    vertexDC.w);\\n  vec4 vcpos = PCVCMatrix * dcsmall;\\n  vertexVCVSOutput = vcpos.xyz/vcpos.w;\\n  gl_Position = dcsmall;\\n}\\n\";\n\nexport { vtkVolumeVS as v };\n", "var vtkVolumeFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkVolumeFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the volume mappers fragment shader\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvarying vec3 vertexVCVSOutput;\\n\\n// first declare the settings from the mapper\\n// that impact the code paths in here\\n\\n// always set vtkNumComponents 1,2,3,4\\n//VTK::NumComponents\\n\\n// possibly define vtkTrilinearOn\\n//VTK::TrilinearOn\\n\\n// possibly define vtkIndependentComponents\\n//VTK::IndependentComponentsOn\\n\\n// possibly define any \\\"proportional\\\" components\\n//VTK::vtkProportionalComponents\\n\\n// Define the blend mode to use\\n#define vtkBlendMode //VTK::BlendMode\\n\\n// Possibly define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n#ifdef vtkImageLabelOutlineOn\\nuniform int outlineThickness;\\nuniform float vpWidth;\\nuniform float vpHeight;\\nuniform float vpOffsetX;\\nuniform float vpOffsetY;\\nuniform mat4 PCWCMatrix;\\nuniform mat4 vWCtoIDX;\\n#endif\\n\\n// define vtkLightComplexity\\n//VTK::LightComplexity\\n#if vtkLightComplexity > 0\\nuniform float vSpecularPower;\\nuniform float vAmbient;\\nuniform float vDiffuse;\\nuniform float vSpecular;\\n//VTK::Light::Dec\\n#endif\\n\\n// possibly define vtkGradientOpacityOn\\n//VTK::GradientOpacityOn\\n#ifdef vtkGradientOpacityOn\\nuniform float goscale0;\\nuniform float goshift0;\\nuniform float gomin0;\\nuniform float gomax0;\\n#if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\nuniform float goscale1;\\nuniform float goshift1;\\nuniform float gomin1;\\nuniform float gomax1;\\n#if vtkNumComponents >= 3\\nuniform float goscale2;\\nuniform float goshift2;\\nuniform float gomin2;\\nuniform float gomax2;\\n#endif\\n#if vtkNumComponents >= 4\\nuniform float goscale3;\\nuniform float goshift3;\\nuniform float gomin3;\\nuniform float gomax3;\\n#endif\\n#endif\\n#endif\\n\\n// if you want to see the raw tiled\\n// data in webgl1 uncomment the following line\\n// #define debugtile\\n\\n// camera values\\nuniform float camThick;\\nuniform float camNear;\\nuniform float camFar;\\nuniform int cameraParallel;\\n\\n// values describing the volume geometry\\nuniform vec3 vOriginVC;\\nuniform vec3 vSpacing;\\nuniform ivec3 volumeDimensions; // 3d texture dimensions\\nuniform vec3 vPlaneNormal0;\\nuniform float vPlaneDistance0;\\nuniform vec3 vPlaneNormal1;\\nuniform float vPlaneDistance1;\\nuniform vec3 vPlaneNormal2;\\nuniform float vPlaneDistance2;\\nuniform vec3 vPlaneNormal3;\\nuniform float vPlaneDistance3;\\nuniform vec3 vPlaneNormal4;\\nuniform float vPlaneDistance4;\\nuniform vec3 vPlaneNormal5;\\nuniform float vPlaneDistance5;\\n\\n//VTK::ClipPlane::Dec\\n\\n// opacity and color textures\\nuniform sampler2D otexture;\\nuniform float oshift0;\\nuniform float oscale0;\\nuniform sampler2D ctexture;\\nuniform float cshift0;\\nuniform float cscale0;\\n\\n// jitter texture\\nuniform sampler2D jtexture;\\n\\n// some 3D texture values\\nuniform float sampleDistance;\\nuniform vec3 vVCToIJK;\\n\\n// the heights defined below are the locations\\n// for the up to four components of the tfuns\\n// the tfuns have a height of 2XnumComps pixels so the\\n// values are computed to hit the middle of the two rows\\n// for that component\\n#ifdef vtkIndependentComponentsOn\\n#if vtkNumComponents == 2\\nuniform float mix0;\\nuniform float mix1;\\n#define height0 0.25\\n#define height1 0.75\\n#endif\\n#if vtkNumComponents == 3\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\n#define height0 0.17\\n#define height1 0.5\\n#define height2 0.83\\n#endif\\n#if vtkNumComponents == 4\\nuniform float mix0;\\nuniform float mix1;\\nuniform float mix2;\\nuniform float mix3;\\n#define height0 0.125\\n#define height1 0.375\\n#define height2 0.625\\n#define height3 0.875\\n#endif\\n#endif\\n\\n#if vtkNumComponents >= 2\\nuniform float oshift1;\\nuniform float oscale1;\\nuniform float cshift1;\\nuniform float cscale1;\\n#endif\\n#if vtkNumComponents >= 3\\nuniform float oshift2;\\nuniform float oscale2;\\nuniform float cshift2;\\nuniform float cscale2;\\n#endif\\n#if vtkNumComponents >= 4\\nuniform float oshift3;\\nuniform float oscale3;\\nuniform float cshift3;\\nuniform float cscale3;\\n#endif\\n\\nuniform vec4 ipScalarRangeMin;\\nuniform vec4 ipScalarRangeMax;\\n\\n// declaration for intermixed geometry\\n//VTK::ZBuffer::Dec\\n\\n// Lighting values\\n//VTK::Light::Dec\\n\\n//=======================================================================\\n// Webgl2 specific version of functions\\n#if __VERSION__ == 300\\n\\nuniform highp sampler3D texture1;\\n\\nvec4 getTextureValue(vec3 pos)\\n{\\n  vec4 tmp = texture(texture1, pos);\\n#if vtkNumComponents == 1\\n  tmp.a = tmp.r;\\n#endif\\n#if vtkNumComponents == 2\\n  tmp.a = tmp.g;\\n#endif\\n#if vtkNumComponents == 3\\n  tmp.a = length(tmp.rgb);\\n#endif\\n  return tmp;\\n}\\n\\n//=======================================================================\\n// WebGL1 specific version of functions\\n#else\\n\\nuniform sampler2D texture1;\\n\\nuniform float texWidth;\\nuniform float texHeight;\\nuniform int xreps;\\nuniform int xstride;\\nuniform int ystride;\\n\\n// if computing trilinear values from multiple z slices\\n#ifdef vtkTrilinearOn\\nvec4 getTextureValue(vec3 ijk)\\n{\\n  float zoff = 1.0/float(volumeDimensions.z);\\n  vec4 val1 = getOneTextureValue(ijk);\\n  vec4 val2 = getOneTextureValue(vec3(ijk.xy, ijk.z + zoff));\\n\\n  float indexZ = float(volumeDimensions)*ijk.z;\\n  float zmix =  indexZ - floor(indexZ);\\n\\n  return mix(val1, val2, zmix);\\n}\\n\\nvec4 getOneTextureValue(vec3 ijk)\\n#else // nearest or fast linear\\nvec4 getTextureValue(vec3 ijk)\\n#endif\\n{\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n#ifdef debugtile\\n  vec2 tpos = vec2(ijk.x, ijk.y);\\n  vec4 tmp = texture2D(texture1, tpos);\\n  tmp.a = 1.0;\\n\\n#else\\n  int z = int(ijk.z * tdims.z);\\n  int yz = z / xreps;\\n  int xz = z - yz*xreps;\\n\\n  int tileWidth = volumeDimensions.x/xstride;\\n  int tileHeight = volumeDimensions.y/ystride;\\n\\n  xz *= tileWidth;\\n  yz *= tileHeight;\\n\\n  float ni = float(xz) + (ijk.x*float(tileWidth));\\n  float nj = float(yz) + (ijk.y*float(tileHeight));\\n\\n  vec2 tpos = vec2(ni/texWidth, nj/texHeight);\\n\\n  vec4 tmp = texture2D(texture1, tpos);\\n\\n#if vtkNumComponents == 1\\n  tmp.a = tmp.r;\\n#endif\\n#if vtkNumComponents == 2\\n  tmp.g = tmp.a;\\n#endif\\n#if vtkNumComponents == 3\\n  tmp.a = length(tmp.rgb);\\n#endif\\n#endif\\n\\n  return tmp;\\n}\\n\\n// End of Webgl1 specific code\\n//=======================================================================\\n#endif\\n\\n//=======================================================================\\n// compute the normal and gradient magnitude for a position\\nvec4 computeNormal(vec3 pos, float scalar, vec3 tstep)\\n{\\n  vec4 result;\\n\\n  result.x = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)).a - scalar;\\n  result.y = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)).a - scalar;\\n  result.z = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)).a - scalar;\\n\\n  // divide by spacing\\n  result.xyz /= vSpacing;\\n\\n  result.w = length(result.xyz);\\n\\n  // rotate to View Coords\\n  result.xyz =\\n    result.x * vPlaneNormal0 +\\n    result.y * vPlaneNormal2 +\\n    result.z * vPlaneNormal4;\\n\\n  if (result.w > 0.0)\\n  {\\n    result.xyz /= result.w;\\n  }\\n  return result;\\n}\\n\\n#ifdef vtkImageLabelOutlineOn\\nvec3 fragCoordToIndexSpace(vec4 fragCoord) {\\n  vec4 pcPos = vec4(\\n    (fragCoord.x / vpWidth - vpOffsetX - 0.5) * 2.0,\\n    (fragCoord.y / vpHeight - vpOffsetY - 0.5) * 2.0,\\n    (fragCoord.z - 0.5) * 2.0,\\n    1.0);\\n\\n  vec4 worldCoord = PCWCMatrix * pcPos;\\n  vec4 vertex = (worldCoord/worldCoord.w);\\n\\n  vec3 index = (vWCtoIDX * vertex).xyz;\\n\\n  // half voxel fix for labelmapOutline \\n  return (index + vec3(0.5)) / vec3(volumeDimensions);\\n}\\n#endif\\n\\n//=======================================================================\\n// compute the normals and gradient magnitudes for a position\\n// for independent components\\nmat4 computeMat4Normal(vec3 pos, vec4 tValue, vec3 tstep)\\n{\\n  mat4 result;\\n  vec4 distX = getTextureValue(pos + vec3(tstep.x, 0.0, 0.0)) - tValue;\\n  vec4 distY = getTextureValue(pos + vec3(0.0, tstep.y, 0.0)) - tValue;\\n  vec4 distZ = getTextureValue(pos + vec3(0.0, 0.0, tstep.z)) - tValue;\\n\\n  // divide by spacing\\n  distX /= vSpacing.x;\\n  distY /= vSpacing.y;\\n  distZ /= vSpacing.z;\\n\\n  mat3 rot;\\n  rot[0] = vPlaneNormal0;\\n  rot[1] = vPlaneNormal2;\\n  rot[2] = vPlaneNormal4;\\n\\n#if !defined(vtkComponent0Proportional)\\n  result[0].xyz = vec3(distX.r, distY.r, distZ.r);\\n  result[0].a = length(result[0].xyz);\\n  result[0].xyz *= rot;\\n  if (result[0].w > 0.0)\\n  {\\n    result[0].xyz /= result[0].w;\\n  }\\n#endif\\n\\n// optionally compute the 2nd component\\n#if vtkNumComponents >= 2 && !defined(vtkComponent1Proportional)\\n  result[1].xyz = vec3(distX.g, distY.g, distZ.g);\\n  result[1].a = length(result[1].xyz);\\n  result[1].xyz *= rot;\\n  if (result[1].w > 0.0)\\n  {\\n    result[1].xyz /= result[1].w;\\n  }\\n#endif\\n\\n// optionally compute the 3rd component\\n#if vtkNumComponents >= 3 && !defined(vtkComponent2Proportional)\\n  result[2].xyz = vec3(distX.b, distY.b, distZ.b);\\n  result[2].a = length(result[2].xyz);\\n  result[2].xyz *= rot;\\n  if (result[2].w > 0.0)\\n  {\\n    result[2].xyz /= result[2].w;\\n  }\\n#endif\\n\\n// optionally compute the 4th component\\n#if vtkNumComponents >= 4 && !defined(vtkComponent3Proportional)\\n  result[3].xyz = vec3(distX.a, distY.a, distZ.a);\\n  result[3].a = length(result[3].xyz);\\n  result[3].xyz *= rot;\\n  if (result[3].w > 0.0)\\n  {\\n    result[3].xyz /= result[3].w;\\n  }\\n#endif\\n\\n  return result;\\n}\\n\\n//=======================================================================\\n// Given a normal compute the gradient opacity factors\\n//\\nfloat computeGradientOpacityFactor(\\n  vec4 normal, float goscale, float goshift, float gomin, float gomax)\\n{\\n#if defined(vtkGradientOpacityOn)\\n  return clamp(normal.a*goscale + goshift, gomin, gomax);\\n#else\\n  return 1.0;\\n#endif\\n}\\n\\n#if vtkLightComplexity > 0\\nvoid applyLighting(inout vec3 tColor, vec4 normal)\\n{\\n  vec3 diffuse = vec3(0.0, 0.0, 0.0);\\n  vec3 specular = vec3(0.0, 0.0, 0.0);\\n  //VTK::Light::Impl\\n  tColor.rgb = tColor.rgb*(diffuse*vDiffuse + vAmbient) + specular*vSpecular;\\n}\\n#endif\\n\\n//=======================================================================\\n// Given a texture value compute the color and opacity\\n//\\nvec4 getColorForValue(vec4 tValue, vec3 posIS, vec3 tstep)\\n{\\n#ifdef vtkImageLabelOutlineOn\\n  vec3 centerPosIS = fragCoordToIndexSpace(gl_FragCoord); // pos in texture space\\n  vec4 centerValue = getTextureValue(centerPosIS);\\n  bool pixelOnBorder = false;\\n  vec4 tColor = texture2D(ctexture, vec2(centerValue.r * cscale0 + cshift0, 0.5));\\n\\n  // Get alpha of segment from opacity function.\\n  tColor.a = texture2D(otexture, vec2(centerValue.r * oscale0 + oshift0, 0.5)).r;\\n\\n  // Only perform outline check on fragments rendering voxels that aren't invisible.\\n  // Saves a bunch of needless checks on the background.\\n  // TODO define epsilon when building shader?\\n  if (float(tColor.a) > 0.01) {\\n    for (int i = -outlineThickness; i <= outlineThickness; i++) {\\n      for (int j = -outlineThickness; j <= outlineThickness; j++) {\\n        if (i == 0 || j == 0) {\\n          continue;\\n        }\\n\\n        vec4 neighborPixelCoord = vec4(gl_FragCoord.x + float(i),\\n          gl_FragCoord.y + float(j),\\n          gl_FragCoord.z, gl_FragCoord.w);\\n\\n        vec3 neighborPosIS = fragCoordToIndexSpace(neighborPixelCoord);\\n        vec4 value = getTextureValue(neighborPosIS);\\n\\n        // If any of my neighbours are not the same value as I\\n        // am, this means I am on the border of the segment.\\n        // We can break the loops\\n        if (any(notEqual(value, centerValue))) {\\n          pixelOnBorder = true;\\n          break;\\n        }\\n      }\\n\\n      if (pixelOnBorder == true) {\\n        break;\\n      }\\n    }\\n\\n    // If I am on the border, I am displayed at full opacity\\n    if (pixelOnBorder == true) {\\n      tColor.a = 1.0;\\n    }\\n  }\\n\\n#else\\n  // compute the normal and gradient magnitude if needed\\n  // We compute it as a vec4 if possible otherwise a mat4\\n  //\\n  vec4 goFactor = vec4(1.0,1.0,1.0,1.0);\\n\\n  // compute the normal vectors as needed\\n  #if (vtkLightComplexity > 0) || defined(vtkGradientOpacityOn)\\n    #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\n      mat4 normalMat = computeMat4Normal(posIS, tValue, tstep);\\n      #if !defined(vtkComponent0Proportional)\\n        vec4 normal0 = normalMat[0];\\n      #endif\\n      #if !defined(vtkComponent1Proportional)\\n        vec4 normal1 = normalMat[1];\\n      #endif\\n      #if vtkNumComponents > 2\\n        #if !defined(vtkComponent2Proportional)\\n          vec4 normal2 = normalMat[2];\\n        #endif\\n        #if vtkNumComponents > 3\\n          #if !defined(vtkComponent3Proportional)\\n            vec4 normal3 = normalMat[3];\\n          #endif\\n        #endif\\n      #endif\\n    #else\\n      vec4 normal0 = computeNormal(posIS, tValue.a, tstep);\\n    #endif\\n  #endif\\n\\n  // compute gradient opacity factors as needed\\n  #if defined(vtkGradientOpacityOn)\\n    #if !defined(vtkComponent0Proportional)\\n      goFactor.x =\\n        computeGradientOpacityFactor(normal0, goscale0, goshift0, gomin0, gomax0);\\n    #endif\\n    #if defined(vtkIndependentComponentsOn) && (vtkNumComponents > 1)\\n      #if !defined(vtkComponent1Proportional)\\n        goFactor.y =\\n          computeGradientOpacityFactor(normal1, goscale1, goshift1, gomin1, gomax1);\\n      #endif\\n      #if vtkNumComponents > 2\\n        #if !defined(vtkComponent2Proportional)\\n          goFactor.z =\\n            computeGradientOpacityFactor(normal2, goscale2, goshift2, gomin2, gomax2);\\n        #endif\\n        #if vtkNumComponents > 3\\n          #if !defined(vtkComponent3Proportional)\\n            goFactor.w =\\n              computeGradientOpacityFactor(normal3, goscale3, goshift3, gomin3, gomax3);\\n          #endif\\n        #endif\\n      #endif\\n    #endif\\n  #endif\\n\\n  // single component is always independent\\n  #if vtkNumComponents == 1\\n    vec4 tColor = texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, 0.5));\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, 0.5)).r;\\n  #endif\\n\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n    vec4 tColor = mix0*texture2D(ctexture, vec2(tValue.r * cscale0 + cshift0, height0));\\n    #if !defined(vtkComponent0Proportional)\\n      tColor.a = goFactor.x*mix0*texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\\n    #else\\n      float pwfValue = texture2D(otexture, vec2(tValue.r * oscale0 + oshift0, height0)).r;\\n      tColor *= pwfValue;\\n      tColor.a *= mix(pwfValue, 1.0, (1.0 - mix0));\\n    #endif\\n\\n    vec3 tColor1 = mix1*texture2D(ctexture, vec2(tValue.g * cscale1 + cshift1, height1)).rgb;\\n    #if !defined(vtkComponent1Proportional)\\n      tColor.a += goFactor.y*mix1*texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\\n    #else\\n      float pwfValue = texture2D(otexture, vec2(tValue.g * oscale1 + oshift1, height1)).r;\\n      tColor1 *= pwfValue;\\n      tColor.a *= mix(pwfValue, 1.0, (1.0 - mix1));\\n    #endif\\n\\n    #if vtkNumComponents >= 3\\n      vec3 tColor2 = mix2*texture2D(ctexture, vec2(tValue.b * cscale2 + cshift2, height2)).rgb;\\n      #if !defined(vtkComponent2Proportional)\\n        tColor.a += goFactor.z*mix2*texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\\n      #else\\n        float pwfValue = texture2D(otexture, vec2(tValue.b * oscale2 + oshift2, height2)).r;\\n        tColor2 *= pwfValue;\\n        tColor.a *= mix(pwfValue, 1.0, (1.0 - mix2));\\n      #endif\\n\\n      #if vtkNumComponents >= 4\\n        vec3 tColor3 = mix3*texture2D(ctexture, vec2(tValue.a * cscale3 + cshift3, height3)).rgb;\\n        #if !defined(vtkComponent3Proportional)\\n          tColor.a += goFactor.w*mix3*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\\n        #else\\n          float pwfValue = texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, height3)).r;\\n          tColor3 *= pwfValue;\\n          tColor.a *= mix(pwfValue, 1.0, (1.0 - mix3));\\n        #endif\\n      #endif\\n    #endif\\n  #else // then not independent\\n\\n  #if vtkNumComponents == 2\\n    float lum = tValue.r * cscale0 + cshift0;\\n    float alpha = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale1 + oshift1, 0.5)).r;\\n    vec4 tColor = vec4(lum, lum, lum, alpha);\\n  #endif\\n  #if vtkNumComponents == 3\\n    vec4 tColor;\\n    tColor.r = tValue.r * cscale0 + cshift0;\\n    tColor.g = tValue.g * cscale1 + cshift1;\\n    tColor.b = tValue.b * cscale2 + cshift2;\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale0 + oshift0, 0.5)).r;\\n  #endif\\n  #if vtkNumComponents == 4\\n    vec4 tColor;\\n    tColor.r = tValue.r * cscale0 + cshift0;\\n    tColor.g = tValue.g * cscale1 + cshift1;\\n    tColor.b = tValue.b * cscale2 + cshift2;\\n    tColor.a = goFactor.x*texture2D(otexture, vec2(tValue.a * oscale3 + oshift3, 0.5)).r;\\n  #endif\\n  #endif // dependent\\n\\n  // apply lighting if requested as appropriate\\n  #if vtkLightComplexity > 0\\n    #if !defined(vtkComponent0Proportional)\\n      applyLighting(tColor.rgb, normal0);\\n    #endif\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n    #if !defined(vtkComponent1Proportional)\\n      applyLighting(tColor1, normal1);\\n    #endif\\n  #if vtkNumComponents >= 3\\n    #if !defined(vtkComponent2Proportional)\\n      applyLighting(tColor2, normal2);\\n    #endif\\n  #if vtkNumComponents >= 4\\n    #if !defined(vtkComponent3Proportional)\\n      applyLighting(tColor3, normal3);\\n    #endif\\n  #endif\\n  #endif\\n  #endif\\n#endif\\n\\n// perform final independent blend as needed\\n#if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 2\\n  tColor.rgb += tColor1;\\n#if vtkNumComponents >= 3\\n  tColor.rgb += tColor2;\\n#if vtkNumComponents >= 4\\n  tColor.rgb += tColor3;\\n#endif\\n#endif\\n#endif\\n\\n#endif\\n\\n\\n\\n\\n\\n\\n\\nreturn tColor;\\n}\\n\\nbool valueWithinScalarRange(vec4 val, vec4 min, vec4 max) {\\n  bool withinRange = false;\\n  #if vtkNumComponents == 1\\n    if (val.r >= min.r && val.r <= max.r) {\\n      withinRange = true;\\n    }\\n  #endif\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents == 2\\n     if (val.r >= min.r && val.r <= max.r &&\\n        val.g >= min.g && val.g <= max.g) {\\n      withinRange = true;\\n    }\\n  #endif\\n  #if defined(vtkIndependentComponentsOn) && vtkNumComponents >= 3\\n    if (all(greaterThanEqual(val, ipScalarRangeMin)) &&\\n        all(lessThanEqual(val, ipScalarRangeMax))) {\\n      withinRange = true;\\n    }\\n  #endif\\n  return withinRange;\\n}\\n\\n//=======================================================================\\n// Apply the specified blend mode operation along the ray's path.\\n//\\nvoid applyBlend(vec3 posIS, vec3 endIS, float sampleDistanceIS, vec3 tdims)\\n{\\n  vec3 tstep = 1.0/tdims;\\n\\n  // start slightly inside and apply some jitter\\n  vec3 delta = endIS - posIS;\\n  vec3 stepIS = normalize(delta)*sampleDistanceIS;\\n  float raySteps = length(delta)/sampleDistanceIS;\\n\\n  // avoid 0.0 jitter\\n  float jitter = 0.01 + 0.99*texture2D(jtexture, gl_FragCoord.xy/32.0).r;\\n  float stepsTraveled = jitter;\\n\\n  // local vars for the loop\\n  vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\\n  vec4 tValue;\\n  vec4 tColor;\\n\\n  // if we have less than one step then pick the middle point\\n  // as our value\\n  // if (raySteps <= 1.0)\\n  // {\\n  //   posIS = (posIS + endIS)*0.5;\\n  // }\\n\\n  // Perform initial step at the volume boundary\\n  // compute the scalar\\n  tValue = getTextureValue(posIS);\\n\\n  #if vtkBlendMode == 0 // COMPOSITE_BLEND\\n    // now map through opacity and color\\n    tColor = getColorForValue(tValue, posIS, tstep);\\n\\n    // handle very thin volumes\\n    if (raySteps <= 1.0)\\n    {\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps);\\n      gl_FragData[0] = tColor;\\n      return;\\n    }\\n\\n    tColor.a = 1.0 - pow(1.0 - tColor.a, jitter);\\n    color = vec4(tColor.rgb*tColor.a, tColor.a);\\n    posIS += (jitter*stepIS);\\n\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n\\n      float mix = (1.0 - color.a);\\n\\n      // this line should not be needed but nvidia seems to not handle\\n      // the break correctly on windows/chrome 58 angle\\n      //mix = mix * sign(max(raySteps - stepsTraveled - 1.0, 0.0));\\n\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n      stepsTraveled++;\\n      posIS += stepIS;\\n      if (color.a > 0.99) { color.a = 1.0; break; }\\n    }\\n\\n    if (color.a < 0.99 && (raySteps - stepsTraveled) > 0.0)\\n    {\\n      posIS = endIS;\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // now map through opacity and color\\n      tColor = getColorForValue(tValue, posIS, tstep);\\n      tColor.a = 1.0 - pow(1.0 - tColor.a, raySteps - stepsTraveled);\\n\\n      float mix = (1.0 - color.a);\\n      color = color + vec4(tColor.rgb*tColor.a, tColor.a)*mix;\\n    }\\n\\n    gl_FragData[0] = vec4(color.rgb/color.a, color.a);\\n  #endif\\n  #if vtkBlendMode == 1 || vtkBlendMode == 2\\n    // MAXIMUM_INTENSITY_BLEND || MINIMUM_INTENSITY_BLEND\\n    // Find maximum/minimum intensity along the ray.\\n\\n    // Define the operation we will use (min or max)\\n    #if vtkBlendMode == 1\\n    #define OP max\\n    #else\\n    #define OP min\\n    #endif\\n\\n    // If the clipping range is shorter than the sample distance\\n    // we can skip the sampling loop along the ray.\\n    if (raySteps <= 1.0)\\n    {\\n      gl_FragData[0] = getColorForValue(tValue, posIS, tstep);\\n      return;\\n    }\\n\\n    vec4 value = tValue;\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // Update the maximum value if necessary\\n      value = OP(tValue, value);\\n\\n      // Otherwise, continue along the ray\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n    tValue = getTextureValue(posIS);\\n    value = OP(tValue, value);\\n\\n    // Now map through opacity and color\\n    gl_FragData[0] = getColorForValue(value, posIS, tstep);\\n  #endif\\n  #if vtkBlendMode == 3 || vtkBlendMode == 4 //AVERAGE_INTENSITY_BLEND || ADDITIVE_BLEND\\n    vec4 sum = vec4(0.);\\n\\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n      sum += tValue;\\n    }\\n\\n    if (raySteps <= 1.0) {\\n      gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n      return;\\n    }\\n\\n    posIS += (jitter*stepIS);\\n\\n    // Sample along the ray until MaximumSamplesValue,\\n    // ending slightly inside the total distance\\n    for (int i = 0; i < //VTK::MaximumSamplesValue ; ++i)\\n    {\\n      // If we have reached the last step, break\\n      if (stepsTraveled + 1.0 >= raySteps) { break; }\\n\\n      // compute the scalar\\n      tValue = getTextureValue(posIS);\\n\\n      // One can control the scalar range by setting the AverageIPScalarRange to disregard scalar values, not in the range of interest, from the average computation.\\n      // Notes:\\n      // - We are comparing all values in the texture to see if any of them\\n      //   are outside of the scalar range. In the future we might want to allow\\n      //   scalar ranges for each component.\\n      if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n        // Sum the values across each step in the path\\n        sum += tValue;\\n      }\\n      stepsTraveled++;\\n      posIS += stepIS;\\n    }\\n\\n    // Perform the last step along the ray using the\\n    // residual distance\\n    posIS = endIS;\\n\\n    // compute the scalar\\n    tValue = getTextureValue(posIS);\\n\\n    // One can control the scalar range by setting the IPScalarRange to disregard scalar values, not in the range of interest, from the average computation\\n    if (valueWithinScalarRange(tValue, ipScalarRangeMin, ipScalarRangeMax)) {\\n      sum += tValue;\\n\\n      stepsTraveled++;\\n    }\\n\\n    #if vtkBlendMode == 3 // Average\\n      sum /= vec4(stepsTraveled, stepsTraveled, stepsTraveled, 1.0);\\n    #endif\\n\\n    gl_FragData[0] = getColorForValue(sum, posIS, tstep);\\n  #endif\\n}\\n\\n//=======================================================================\\n// Compute a new start and end point for a given ray based\\n// on the provided bounded clipping plane (aka a rectangle)\\nvoid getRayPointIntersectionBounds(\\n  vec3 rayPos, vec3 rayDir,\\n  vec3 planeDir, float planeDist,\\n  inout vec2 tbounds, vec3 vPlaneX, vec3 vPlaneY,\\n  float vSize1, float vSize2)\\n{\\n  float result = dot(rayDir, planeDir);\\n  if (abs(result) < 1e-6)\\n  {\\n    return;\\n  }\\n  result = -1.0 * (dot(rayPos, planeDir) + planeDist) / result;\\n  vec3 xposVC = rayPos + rayDir*result;\\n  vec3 vxpos = xposVC - vOriginVC;\\n  vec2 vpos = vec2(\\n    dot(vxpos, vPlaneX),\\n    dot(vxpos, vPlaneY));\\n\\n  // on some apple nvidia systems this does not work\\n  // if (vpos.x < 0.0 || vpos.x > vSize1 ||\\n  //     vpos.y < 0.0 || vpos.y > vSize2)\\n  // even just\\n  // if (vpos.x < 0.0 || vpos.y < 0.0)\\n  // fails\\n  // so instead we compute a value that represents in and out\\n  //and then compute the return using this value\\n  float xcheck = max(0.0, vpos.x * (vpos.x - vSize1)); //  0 means in bounds\\n  float check = sign(max(xcheck, vpos.y * (vpos.y - vSize2))); //  0 means in bounds, 1 = out\\n\\n  tbounds = mix(\\n   vec2(min(tbounds.x, result), max(tbounds.y, result)), // in value\\n   tbounds, // out value\\n   check);  // 0 in 1 out\\n}\\n\\n//=======================================================================\\n// given a\\n// - ray direction (rayDir)\\n// - starting point (vertexVCVSOutput)\\n// - bounding planes of the volume\\n// - optionally depth buffer values\\n// - far clipping plane\\n// compute the start/end distances of the ray we need to cast\\nvec2 computeRayDistances(vec3 rayDir, vec3 tdims)\\n{\\n  vec2 dists = vec2(100.0*camFar, -1.0);\\n\\n  vec3 vSize = vSpacing*tdims;\\n\\n  // all this is in View Coordinates\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal0, vPlaneDistance0, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal1, vPlaneDistance1, dists, vPlaneNormal2, vPlaneNormal4,\\n    vSize.y, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal2, vPlaneDistance2, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal3, vPlaneDistance3, dists, vPlaneNormal0, vPlaneNormal4,\\n    vSize.x, vSize.z);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal4, vPlaneDistance4, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n  getRayPointIntersectionBounds(vertexVCVSOutput, rayDir,\\n    vPlaneNormal5, vPlaneDistance5, dists, vPlaneNormal0, vPlaneNormal2,\\n    vSize.x, vSize.y);\\n\\n  //VTK::ClipPlane::Impl\\n\\n  // do not go behind front clipping plane\\n  dists.x = max(0.0,dists.x);\\n\\n  // do not go PAST far clipping plane\\n  float farDist = -camThick/rayDir.z;\\n  dists.y = min(farDist,dists.y);\\n\\n  // Do not go past the zbuffer value if set\\n  // This is used for intermixing opaque geometry\\n  //VTK::ZBuffer::Impl\\n\\n  return dists;\\n}\\n\\n//=======================================================================\\n// Compute the index space starting position (pos) and end\\n// position\\n//\\nvoid computeIndexSpaceValues(out vec3 pos, out vec3 endPos, out float sampleDistanceIS, vec3 rayDir, vec2 dists)\\n{\\n  // compute starting and ending values in volume space\\n  pos = vertexVCVSOutput + dists.x*rayDir;\\n  pos = pos - vOriginVC;\\n  // convert to volume basis and origin\\n  pos = vec3(\\n    dot(pos, vPlaneNormal0),\\n    dot(pos, vPlaneNormal2),\\n    dot(pos, vPlaneNormal4));\\n\\n  endPos = vertexVCVSOutput + dists.y*rayDir;\\n  endPos = endPos - vOriginVC;\\n  endPos = vec3(\\n    dot(endPos, vPlaneNormal0),\\n    dot(endPos, vPlaneNormal2),\\n    dot(endPos, vPlaneNormal4));\\n\\n  float delta = length(endPos - pos);\\n\\n  pos *= vVCToIJK;\\n  endPos *= vVCToIJK;\\n\\n  float delta2 = length(endPos - pos);\\n  sampleDistanceIS = sampleDistance*delta2/delta;\\n}\\n\\nvoid main()\\n{\\n\\n  vec3 rayDirVC;\\n\\n  if (cameraParallel == 1)\\n  {\\n    // Camera is parallel, so the rayDir is just the direction of the camera.\\n    rayDirVC = vec3(0.0, 0.0, -1.0);\\n  } else {\\n    // camera is at 0,0,0 so rayDir for perspective is just the vc coord\\n    rayDirVC = normalize(vertexVCVSOutput);\\n  }\\n\\n  vec3 tdims = vec3(volumeDimensions);\\n\\n  // compute the start and end points for the ray\\n  vec2 rayStartEndDistancesVC = computeRayDistances(rayDirVC, tdims);\\n\\n  // do we need to composite? aka does the ray have any length\\n  // If not, bail out early\\n  if (rayStartEndDistancesVC.y <= rayStartEndDistancesVC.x)\\n  {\\n    discard;\\n  }\\n\\n  // IS = Index Space\\n  vec3 posIS;\\n  vec3 endIS;\\n  float sampleDistanceIS;\\n  computeIndexSpaceValues(posIS, endIS, sampleDistanceIS, rayDirVC, rayStartEndDistancesVC);\\n\\n  // Perform the blending operation along the ray\\n  applyBlend(posIS, endIS, sampleDistanceIS, tdims);\\n}\\n\";\n\nexport { vtkVolumeFS as v };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj, setGet, chain, vtkWarningMacro as vtkWarningMacro$1, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport { mat4, mat3, vec3 } from 'gl-matrix';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkHelper from './Helper.js';\nimport { u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { Wrap, Filter } from './Texture/Constants.js';\nimport { InterpolationType, OpacityMode } from '../Core/VolumeProperty/Constants.js';\nimport { BlendMode } from '../Core/VolumeMapper/Constants.js';\nimport { v as vtkVolumeVS } from './glsl/vtkVolumeVS.glsl.js';\nimport { v as vtkVolumeFS } from './glsl/vtkVolumeFS.glsl.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkWarningMacro = vtkWarningMacro$1,\n    vtkErrorMacro = vtkErrorMacro$1; // TODO: Do we want this in some shared utility? Shouldwe just use lodash.isEqual\n\nfunction arrayEquals(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n} // ----------------------------------------------------------------------------\n// vtkOpenGLVolumeMapper methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVolumeMapper');\n\n  publicAPI.buildPass = function () {\n    model.zBufferTexture = null;\n  }; // ohh someone is doing a zbuffer pass, use that for\n  // intermixed volume rendering\n\n\n  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {\n    if (prepass) {\n      var zbt = renderPass.getZBufferTexture();\n\n      if (zbt !== model.zBufferTexture) {\n        model.zBufferTexture = zbt;\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.volumePass = function (prepass, renderPass) {\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.jitterTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow); // Per Component?\n\n      model.scalarTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.colorTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.opacityTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLVolume = publicAPI.getFirstAncestorOfType('vtkOpenGLVolume');\n      var actor = model.openGLVolume.getRenderable();\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      var ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n      publicAPI.renderPiece(ren, actor);\n    }\n  };\n\n  publicAPI.buildShaders = function (shaders, ren, actor) {\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.getShaderTemplate = function (shaders, ren, actor) {\n    shaders.Vertex = vtkVolumeVS;\n    shaders.Fragment = vtkVolumeFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = function (shaders, ren, actor) {\n    var FSSource = shaders.Fragment; // define some values in the shader\n\n    var iType = actor.getProperty().getInterpolationType();\n\n    if (iType === InterpolationType.LINEAR) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TrilinearOn', '#define vtkTrilinearOn').result;\n    }\n\n    var vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n\n    if (vtkImageLabelOutline === true) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ImageLabelOutlineOn', '#define vtkImageLabelOutlineOn').result;\n    }\n\n    var numComp = model.scalarTexture.getComponents();\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::NumComponents', \"#define vtkNumComponents \".concat(numComp)).result;\n    var iComps = actor.getProperty().getIndependentComponents();\n\n    if (iComps) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::IndependentComponentsOn', '#define vtkIndependentComponentsOn').result; // Define any proportional components\n\n      var proportionalComponents = [];\n\n      for (var nc = 0; nc < numComp; nc++) {\n        if (actor.getProperty().getOpacityMode(nc) === OpacityMode.PROPORTIONAL) {\n          proportionalComponents.push(\"#define vtkComponent\".concat(nc, \"Proportional\"));\n        }\n      }\n\n      if (proportionalComponents.length > 0) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::vtkProportionalComponents', proportionalComponents.join('\\n')).result;\n      }\n    } // WebGL only supports loops over constants\n    // and does not support while loops so we\n    // have to hard code how many steps/samples to take\n    // We do a break so most systems will gracefully\n    // early terminate, but it is always possible\n    // a system will execute every step regardless\n\n\n    var ext = model.currentInput.getSpatialExtent();\n    var spc = model.currentInput.getSpacing();\n    var vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    var maxSamples = vec3.length(vsize) / model.renderable.getSampleDistance();\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::MaximumSamplesValue', \"\".concat(Math.ceil(maxSamples))).result; // set light complexity\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::LightComplexity', \"#define vtkLightComplexity \".concat(model.lastLightComplexity)).result; // if using gradient opacity define that\n\n    model.gopacity = actor.getProperty().getUseGradientOpacity(0);\n\n    for (var _nc = 1; iComps && !model.gopacity && _nc < numComp; ++_nc) {\n      if (actor.getProperty().getUseGradientOpacity(_nc)) {\n        model.gopacity = true;\n      }\n    }\n\n    if (model.gopacity) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::GradientOpacityOn', '#define vtkGradientOpacityOn').result;\n    } // if we have a ztexture then declare it and use it\n\n\n    if (model.zBufferTexture !== null) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', ['uniform sampler2D zBufferTexture;', 'uniform float vpWidth;', 'uniform float vpHeight;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['vec4 depthVec = texture2D(zBufferTexture, vec2(gl_FragCoord.x / vpWidth, gl_FragCoord.y/vpHeight));', 'float zdepth = (depthVec.r*256.0 + depthVec.g)/257.0;', 'zdepth = zdepth * 2.0 - 1.0;', 'zdepth = -2.0 * camFar * camNear / (zdepth*(camFar-camNear)-(camFar+camNear)) - camNear;', 'zdepth = -zdepth/rayDir.z;', 'dists.y = min(zdepth,dists.y);']).result;\n    } // Set the BlendMode approach\n\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::BlendMode', \"\".concat(model.renderable.getBlendMode())).result;\n    shaders.Fragment = FSSource;\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderClippingPlane(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderLight = function (shaders, ren, actor) {\n    var FSSource = shaders.Fragment; // check for shadow maps\n\n    var shadowFactor = '';\n\n    switch (model.lastLightComplexity) {\n      case 1: // headlight\n\n      case 2: // light kit\n\n      case 3:\n        {\n          // positional not implemented fallback to directional\n          var lightNum = 0;\n          ren.getLights().forEach(function (light) {\n            var status = light.getSwitch();\n\n            if (status > 0) {\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', [// intensity weighted color\n              \"uniform vec3 lightColor\".concat(lightNum, \";\"), \"uniform vec3 lightDirectionVC\".concat(lightNum, \"; // normalized\"), \"uniform vec3 lightHalfAngleVC\".concat(lightNum, \"; // normalized\"), '//VTK::Light::Dec'], false).result;\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', [//              `  float df = max(0.0, dot(normal.rgb, -lightDirectionVC${lightNum}));`,\n              \"  float df = abs(dot(normal.rgb, -lightDirectionVC\".concat(lightNum, \"));\"), \"  diffuse += ((df\".concat(shadowFactor, \") * lightColor\").concat(lightNum, \");\"), // '  if (df > 0.0)',\n              // '    {',\n              //              `    float sf = pow( max(0.0, dot(lightHalfAngleWC${lightNum},normal.rgb)), specularPower);`,\n              \"    float sf = pow( abs(dot(lightHalfAngleVC\".concat(lightNum, \",normal.rgb)), vSpecularPower);\"), \"    specular += ((sf\".concat(shadowFactor, \") * lightColor\").concat(lightNum, \");\"), //              '    }',\n              '  //VTK::Light::Impl'], false).result;\n              lightNum++;\n            }\n          });\n          break;\n        }\n    }\n\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderClippingPlane = function (shaders, ren, actor) {\n    var FSSource = shaders.Fragment;\n\n    if (model.renderable.getClippingPlanes().length > 0) {\n      var clipPlaneSize = model.renderable.getClippingPlanes().length;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ClipPlane::Dec', [\"uniform vec3 vClipPlaneNormals[6];\", \"uniform float vClipPlaneDistances[6];\", '//VTK::ClipPlane::Dec'], false).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ClipPlane::Impl', [\"for(int i = 0; i < \".concat(clipPlaneSize, \"; i++) {\"), '  float rayDirRatio = dot(rayDir, vClipPlaneNormals[i]);', '  float equationResult = dot(vertexVCVSOutput, vClipPlaneNormals[i]) + vClipPlaneDistances[i];', '  if (rayDirRatio == 0.0)', '  {', '    if (equationResult < 0.0) dists.x = dists.y;', '    continue;', '  }', '  float result = -1.0 * equationResult / rayDirRatio;', '  if (rayDirRatio < 0.0) dists.y = min(dists.y, result);', '  else dists.x = max(dists.x, result);', '}', '//VTK::ClipPlane::Impl'], false).result;\n    }\n\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {\n    // do we need lighting?\n    var lightComplexity = 0;\n\n    if (actor.getProperty().getShade() && model.renderable.getBlendMode() === BlendMode.COMPOSITE_BLEND) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      model.numberOfLights = 0;\n      ren.getLights().forEach(function (light) {\n        var status = light.getSwitch();\n\n        if (status > 0) {\n          model.numberOfLights++;\n\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n\n        if (lightComplexity === 1 && (model.numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\n          lightComplexity = 2;\n        }\n\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      });\n    }\n\n    var needRebuild = false;\n\n    if (model.lastLightComplexity !== lightComplexity) {\n      model.lastLightComplexity = lightComplexity;\n      needRebuild = true;\n    }\n\n    var numComp = model.scalarTexture.getComponents();\n    var iComps = actor.getProperty().getIndependentComponents();\n    var usesProportionalComponents = false;\n    var proportionalComponents = [];\n\n    if (iComps) {\n      // Define any proportional components\n      for (var nc = 0; nc < numComp; nc++) {\n        proportionalComponents.push(actor.getProperty().getOpacityMode(nc));\n      }\n\n      if (proportionalComponents.length > 0) {\n        usesProportionalComponents = true;\n      }\n    }\n\n    var ext = model.currentInput.getSpatialExtent();\n    var spc = model.currentInput.getSpacing();\n    var vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    var maxSamples = vec3.length(vsize) / model.renderable.getSampleDistance();\n    var state = {\n      interpolationType: actor.getProperty().getInterpolationType(),\n      useLabelOutline: actor.getProperty().getUseLabelOutline(),\n      numComp: numComp,\n      usesProportionalComponents: usesProportionalComponents,\n      iComps: iComps,\n      maxSamples: maxSamples,\n      useGradientOpacity: actor.getProperty().getUseGradientOpacity(0),\n      blendMode: model.renderable.getBlendMode(),\n      proportionalComponents: proportionalComponents\n    }; // We only need to rebuild the shader if one of these variables has changed,\n    // since they are used in the shader template replacement step.\n\n    if (!model.previousState || model.previousState.interpolationType !== state.interpolationType || model.previousState.useLabelOutline !== state.useLabelOutline || model.previousState.numComp !== state.numComp || model.previousState.usesProportionalComponents !== state.usesProportionalComponents || model.previousState.iComps !== state.iComps || model.previousState.maxSamples !== state.maxSamples || model.previousState.useGradientOpacity !== state.useGradientOpacity || model.previousState.blendMode !== state.blendMode || !arrayEquals(model.previousState.proportionalComponents, state.proportionalComponents)) {\n      model.previousState = _objectSpread({}, state);\n      return true;\n    } // has something changed that would require us to recreate the shader?\n\n\n    if (cellBO.getProgram() === 0 || needRebuild || model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || !!model.lastZBufferTexture !== !!model.zBufferTexture || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime()) {\n      model.lastZBufferTexture = model.zBufferTexture;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = function (cellBO, ren, actor) {\n    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?\n\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      var shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed\n\n      var newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO\n\n\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader); // reset the VAO as the shader has changed\n\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n    publicAPI.getClippingPlaneShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    // Now to update the VAO too, if necessary.\n    var program = cellBO.getProgram();\n\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (program.isAttributeUsed('vertexDC')) {\n        if (!cellBO.getVAO().addAttributeArray(program, cellBO.getCABO(), 'vertexDC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexDC in shader VAO.');\n        }\n      }\n\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    program.setUniformi('texture1', model.scalarTexture.getTextureUnit());\n    program.setUniformf('sampleDistance', model.renderable.getSampleDistance());\n    var volInfo = model.scalarTexture.getVolumeInfo();\n    var ipScalarRange = model.renderable.getIpScalarRange();\n    var minVals = [];\n    var maxVals = [];\n\n    for (var i = 0; i < 4; i++) {\n      // convert iprange from 0-1 into data range values\n      minVals[i] = ipScalarRange[0] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i];\n      maxVals[i] = ipScalarRange[1] * volInfo.dataComputedScale[i] + volInfo.dataComputedOffset[i]; // convert data ranges into texture values\n\n      minVals[i] = (minVals[i] - volInfo.offset[i]) / volInfo.scale[i];\n      maxVals[i] = (maxVals[i] - volInfo.offset[i]) / volInfo.scale[i];\n    }\n\n    program.setUniform4f('ipScalarRangeMin', minVals[0], minVals[1], minVals[2], minVals[3]);\n    program.setUniform4f('ipScalarRangeMax', maxVals[0], maxVals[1], maxVals[2], maxVals[3]); // if we have a zbuffer texture then set it\n\n    if (model.zBufferTexture !== null) {\n      program.setUniformi('zBufferTexture', model.zBufferTexture.getTextureUnit());\n      var size = publicAPI.getRenderTargetSize();\n      program.setUniformf('vpWidth', size[0]);\n      program.setUniformf('vpHeight', size[1]);\n    }\n  };\n\n  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {\n    // // [WMVP]C == {world, model, view, projection} coordinates\n    // // E.g., WCPC == world to projection coordinate transformation\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n    var actMats = model.openGLVolume.getKeyMatrices();\n    mat4.multiply(model.modelToView, keyMats.wcvc, actMats.mcwc);\n    var program = cellBO.getProgram();\n    var cam = model.openGLCamera.getRenderable();\n    var crange = cam.getClippingRange();\n    program.setUniformf('camThick', crange[1] - crange[0]);\n    program.setUniformf('camNear', crange[0]);\n    program.setUniformf('camFar', crange[1]);\n    var bounds = model.currentInput.getBounds();\n    var dims = model.currentInput.getDimensions(); // compute the viewport bounds of the volume\n    // we will only render those fragments.\n\n    var pos = new Float64Array(3);\n    var dir = new Float64Array(3);\n    var dcxmin = 1.0;\n    var dcxmax = -1.0;\n    var dcymin = 1.0;\n    var dcymax = -1.0;\n\n    for (var i = 0; i < 8; ++i) {\n      vec3.set(pos, bounds[i % 2], bounds[2 + Math.floor(i / 2) % 2], bounds[4 + Math.floor(i / 4)]);\n      vec3.transformMat4(pos, pos, model.modelToView);\n\n      if (!cam.getParallelProjection()) {\n        vec3.normalize(dir, pos); // now find the projection of this point onto a\n        // nearZ distance plane. Since the camera is at 0,0,0\n        // in VC the ray is just t*pos and\n        // t is -nearZ/dir.z\n        // intersection becomes pos.x/pos.z\n\n        var t = -crange[0] / pos[2];\n        vec3.scale(pos, dir, t);\n      } // now convert to DC\n\n\n      vec3.transformMat4(pos, pos, keyMats.vcpc);\n      dcxmin = Math.min(pos[0], dcxmin);\n      dcxmax = Math.max(pos[0], dcxmax);\n      dcymin = Math.min(pos[1], dcymin);\n      dcymax = Math.max(pos[1], dcymax);\n    }\n\n    program.setUniformf('dcxmin', dcxmin);\n    program.setUniformf('dcxmax', dcxmax);\n    program.setUniformf('dcymin', dcymin);\n    program.setUniformf('dcymax', dcymax);\n\n    if (program.isUniformUsed('cameraParallel')) {\n      program.setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n\n    var ext = model.currentInput.getSpatialExtent();\n    var spc = model.currentInput.getSpacing();\n    var vsize = new Float64Array(3);\n    vec3.set(vsize, (ext[1] - ext[0]) * spc[0], (ext[3] - ext[2]) * spc[1], (ext[5] - ext[4]) * spc[2]);\n    program.setUniform3f('vSpacing', spc[0], spc[1], spc[2]);\n    vec3.set(pos, ext[0], ext[2], ext[4]);\n    model.currentInput.indexToWorldVec3(pos, pos);\n    vec3.transformMat4(pos, pos, model.modelToView);\n    program.setUniform3f('vOriginVC', pos[0], pos[1], pos[2]); // apply the image directions\n\n    var i2wmat4 = model.currentInput.getIndexToWorld();\n    mat4.multiply(model.idxToView, model.modelToView, i2wmat4);\n    mat3.multiply(model.idxNormalMatrix, keyMats.normalMatrix, actMats.normalMatrix);\n    mat3.multiply(model.idxNormalMatrix, model.idxNormalMatrix, model.currentInput.getDirection());\n    var maxSamples = vec3.length(vsize) / model.renderable.getSampleDistance();\n\n    if (maxSamples > model.renderable.getMaximumSamplesPerRay()) {\n      vtkWarningMacro(\"The number of steps required \".concat(Math.ceil(maxSamples), \" is larger than the\\n        specified maximum number of steps \").concat(model.renderable.getMaximumSamplesPerRay(), \".\\n        Please either change the\\n        volumeMapper sampleDistance or its maximum number of samples.\"));\n    }\n\n    var vctoijk = new Float64Array(3);\n    vec3.set(vctoijk, 1.0, 1.0, 1.0);\n    vec3.divide(vctoijk, vctoijk, vsize);\n    program.setUniform3f('vVCToIJK', vctoijk[0], vctoijk[1], vctoijk[2]);\n    program.setUniform3i('volumeDimensions', dims[0], dims[1], dims[2]);\n\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      var volInfo = model.scalarTexture.getVolumeInfo();\n      program.setUniformf('texWidth', model.scalarTexture.getWidth());\n      program.setUniformf('texHeight', model.scalarTexture.getHeight());\n      program.setUniformi('xreps', volInfo.xreps);\n      program.setUniformi('xstride', volInfo.xstride);\n      program.setUniformi('ystride', volInfo.ystride);\n    } // map normals through normal matrix\n    // then use a point on the plane to compute the distance\n\n\n    var normal = new Float64Array(3);\n    var pos2 = new Float64Array(3);\n\n    for (var _i = 0; _i < 6; ++_i) {\n      switch (_i) {\n        case 1:\n          vec3.set(normal, -1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n\n        case 2:\n          vec3.set(normal, 0.0, 1.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n\n        case 3:\n          vec3.set(normal, 0.0, -1.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n\n        case 4:\n          vec3.set(normal, 0.0, 0.0, 1.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n\n        case 5:\n          vec3.set(normal, 0.0, 0.0, -1.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n\n        case 0:\n        default:\n          vec3.set(normal, 1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n      }\n\n      vec3.transformMat3(normal, normal, model.idxNormalMatrix);\n      vec3.transformMat4(pos2, pos2, model.idxToView);\n      var dist = -1.0 * vec3.dot(pos2, normal); // we have the plane in view coordinates\n      // specify the planes in view coordinates\n\n      program.setUniform3f(\"vPlaneNormal\".concat(_i), normal[0], normal[1], normal[2]);\n      program.setUniformf(\"vPlaneDistance\".concat(_i), dist);\n\n      if (actor.getProperty().getUseLabelOutline()) {\n        var image = model.currentInput;\n        var worldToIndex = image.getWorldToIndex();\n        program.setUniformMatrix('vWCtoIDX', worldToIndex); // Get the projection coordinate to world coordinate transformation matrix.\n\n        mat4.invert(model.projectionToWorld, keyMats.wcpc);\n        program.setUniformMatrix('PCWCMatrix', model.projectionToWorld);\n        var size = publicAPI.getRenderTargetSize();\n        program.setUniformf('vpWidth', size[0]);\n        program.setUniformf('vpHeight', size[1]);\n        var offset = publicAPI.getRenderTargetOffset();\n        program.setUniformf('vpOffsetX', offset[0] / size[0]);\n        program.setUniformf('vpOffsetY', offset[1] / size[1]);\n      }\n    }\n\n    mat4.invert(model.projectionToView, keyMats.vcpc);\n    program.setUniformMatrix('PCVCMatrix', model.projectionToView); // handle lighting values\n\n    switch (model.lastLightComplexity) {\n      case 1: // headlight\n\n      case 2: // light kit\n\n      case 3:\n        {\n          // positional not implemented fallback to directional\n          // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n          var lightNum = 0;\n          var lightColor = [];\n          ren.getLights().forEach(function (light) {\n            var status = light.getSwitch();\n\n            if (status > 0) {\n              var dColor = light.getColor();\n              var intensity = light.getIntensity();\n              lightColor[0] = dColor[0] * intensity;\n              lightColor[1] = dColor[1] * intensity;\n              lightColor[2] = dColor[2] * intensity;\n              program.setUniform3fArray(\"lightColor\".concat(lightNum), lightColor);\n              var ldir = light.getDirection();\n              vec3.set(normal, ldir[0], ldir[1], ldir[2]);\n              vec3.transformMat3(normal, normal, keyMats.normalMatrix);\n              program.setUniform3f(\"lightDirectionVC\".concat(lightNum), normal[0], normal[1], normal[2]); // camera DOP is 0,0,-1.0 in VC\n\n              var halfAngle = [-0.5 * normal[0], -0.5 * normal[1], -0.5 * (normal[2] - 1.0)];\n              program.setUniform3fArray(\"lightHalfAngleVC\".concat(lightNum), halfAngle);\n              lightNum++;\n            }\n          }); // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n\n          break;\n        }\n    }\n  };\n\n  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    program.setUniformi('ctexture', model.colorTexture.getTextureUnit());\n    program.setUniformi('otexture', model.opacityTexture.getTextureUnit());\n    program.setUniformi('jtexture', model.jitterTexture.getTextureUnit());\n    var volInfo = model.scalarTexture.getVolumeInfo();\n    var vprop = actor.getProperty(); // set the component mix when independent\n\n    var numComp = model.scalarTexture.getComponents();\n    var iComps = actor.getProperty().getIndependentComponents();\n\n    if (iComps && numComp >= 2) {\n      for (var i = 0; i < numComp; i++) {\n        program.setUniformf(\"mix\".concat(i), actor.getProperty().getComponentWeight(i));\n      }\n    } // three levels of shift scale combined into one\n    // for performance in the fragment shader\n\n\n    for (var _i2 = 0; _i2 < numComp; _i2++) {\n      var target = iComps ? _i2 : 0;\n      var sscale = volInfo.scale[_i2];\n      var ofun = vprop.getScalarOpacity(target);\n      var oRange = ofun.getRange();\n      var oscale = sscale / (oRange[1] - oRange[0]);\n      var oshift = (volInfo.offset[_i2] - oRange[0]) / (oRange[1] - oRange[0]);\n      program.setUniformf(\"oshift\".concat(_i2), oshift);\n      program.setUniformf(\"oscale\".concat(_i2), oscale);\n      var cfun = vprop.getRGBTransferFunction(target);\n      var cRange = cfun.getRange();\n      program.setUniformf(\"cshift\".concat(_i2), (volInfo.offset[_i2] - cRange[0]) / (cRange[1] - cRange[0]));\n      program.setUniformf(\"cscale\".concat(_i2), sscale / (cRange[1] - cRange[0]));\n    }\n\n    if (model.gopacity) {\n      if (iComps) {\n        for (var nc = 0; nc < numComp; ++nc) {\n          var _sscale = volInfo.scale[nc];\n          var useGO = vprop.getUseGradientOpacity(nc);\n\n          if (useGO) {\n            var gomin = vprop.getGradientOpacityMinimumOpacity(nc);\n            var gomax = vprop.getGradientOpacityMaximumOpacity(nc);\n            program.setUniformf(\"gomin\".concat(nc), gomin);\n            program.setUniformf(\"gomax\".concat(nc), gomax);\n            var goRange = [vprop.getGradientOpacityMinimumValue(nc), vprop.getGradientOpacityMaximumValue(nc)];\n            program.setUniformf(\"goscale\".concat(nc), _sscale * (gomax - gomin) / (goRange[1] - goRange[0]));\n            program.setUniformf(\"goshift\".concat(nc), -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin);\n          } else {\n            program.setUniformf(\"gomin\".concat(nc), 1.0);\n            program.setUniformf(\"gomax\".concat(nc), 1.0);\n            program.setUniformf(\"goscale\".concat(nc), 0.0);\n            program.setUniformf(\"goshift\".concat(nc), 1.0);\n          }\n        }\n      } else {\n        var _sscale2 = volInfo.scale[numComp - 1];\n\n        var _gomin = vprop.getGradientOpacityMinimumOpacity(0);\n\n        var _gomax = vprop.getGradientOpacityMaximumOpacity(0);\n\n        program.setUniformf('gomin0', _gomin);\n        program.setUniformf('gomax0', _gomax);\n        var _goRange = [vprop.getGradientOpacityMinimumValue(0), vprop.getGradientOpacityMaximumValue(0)];\n        program.setUniformf('goscale0', _sscale2 * (_gomax - _gomin) / (_goRange[1] - _goRange[0]));\n        program.setUniformf('goshift0', -_goRange[0] * (_gomax - _gomin) / (_goRange[1] - _goRange[0]) + _gomin);\n      }\n    }\n\n    var vtkImageLabelOutline = actor.getProperty().getUseLabelOutline();\n\n    if (vtkImageLabelOutline === true) {\n      var labelOutlineThickness = actor.getProperty().getLabelOutlineThickness();\n      program.setUniformi('outlineThickness', labelOutlineThickness);\n    }\n\n    if (model.lastLightComplexity > 0) {\n      program.setUniformf('vAmbient', vprop.getAmbient());\n      program.setUniformf('vDiffuse', vprop.getDiffuse());\n      program.setUniformf('vSpecular', vprop.getSpecular());\n      program.setUniformf('vSpecularPower', vprop.getSpecularPower());\n    }\n  };\n\n  publicAPI.getClippingPlaneShaderParameters = function (cellBO, ren, actor) {\n    if (model.renderable.getClippingPlanes().length > 0) {\n      var keyMats = model.openGLCamera.getKeyMatrices(ren);\n      var clipPlaneNormals = [];\n      var clipPlaneDistances = [];\n      var clipPlanes = model.renderable.getClippingPlanes();\n      var clipPlaneSize = clipPlanes.length;\n\n      for (var i = 0; i < clipPlaneSize; ++i) {\n        var clipPlaneNormal = clipPlanes[i].getNormal();\n        var clipPlanePos = clipPlanes[i].getOrigin();\n        vec3.transformMat3(clipPlaneNormal, clipPlaneNormal, keyMats.normalMatrix);\n        vec3.transformMat4(clipPlanePos, clipPlanePos, keyMats.wcvc);\n        var clipPlaneDist = -1.0 * vec3.dot(clipPlanePos, clipPlaneNormal);\n        clipPlaneNormals.push(clipPlaneNormal[0]);\n        clipPlaneNormals.push(clipPlaneNormal[1]);\n        clipPlaneNormals.push(clipPlaneNormal[2]);\n        clipPlaneDistances.push(clipPlaneDist);\n      }\n\n      var program = cellBO.getProgram();\n      program.setUniform3fv(\"vClipPlaneNormals\", clipPlaneNormals);\n      program.setUniformfv(\"vClipPlaneDistances\", clipPlaneDistances);\n    }\n  }; // unsubscribe from our listeners\n\n\n  publicAPI.delete = chain(function () {\n    if (model._animationRateSubscription) {\n      model._animationRateSubscription.unsubscribe();\n\n      model._animationRateSubscription = null;\n    }\n  }, publicAPI.delete);\n\n  publicAPI.getRenderTargetSize = function () {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n\n    var _model$openGLRenderer = model.openGLRenderer.getTiledSizeAndOrigin(),\n        usize = _model$openGLRenderer.usize,\n        vsize = _model$openGLRenderer.vsize;\n\n    return [usize, vsize];\n  };\n\n  publicAPI.getRenderTargetOffset = function () {\n    var _model$openGLRenderer2 = model.openGLRenderer.getTiledSizeAndOrigin(),\n        lowerLeftU = _model$openGLRenderer2.lowerLeftU,\n        lowerLeftV = _model$openGLRenderer2.lowerLeftV;\n\n    return [lowerLeftU, lowerLeftV];\n  };\n\n  publicAPI.renderPieceStart = function (ren, actor) {\n    var rwi = ren.getVTKWindow().getInteractor();\n    model._useSmallViewport = false;\n\n    if (rwi.isAnimating() && model._lastScale > 1.5) {\n      model._useSmallViewport = true;\n    }\n\n    if (!model._animationRateSubscription) {\n      // when the animation frame rate changes recompute the scale factor\n      model._animationRateSubscription = rwi.onAnimationFrameRateUpdate(function () {\n        if (model.renderable.getAutoAdjustSampleDistances()) {\n          var frate = rwi.getRecentAnimationFrameRate();\n          var adjustment = rwi.getDesiredUpdateRate() / frate; // only change if we are off by 15%\n\n          if (adjustment > 1.15 || adjustment < 0.85) {\n            model._lastScale *= adjustment;\n          } // clamp scale to some reasonable values.\n          // Below 1.5 we will just be using full resolution as that is close enough\n          // Above 400 seems like a lot so we limit to that 1/20th per axis\n\n\n          if (model._lastScale > 400) {\n            model._lastScale = 400;\n          }\n\n          if (model._lastScale < 1.5) {\n            model._lastScale = 1.5;\n          }\n        } else {\n          model._lastScale = model.renderable.getImageSampleDistance() * model.renderable.getImageSampleDistance();\n        }\n\n        var size = model._openGLRenderWindow.getFramebufferSize();\n\n        model._smallViewportWidth = Math.ceil(size[0] / Math.sqrt(model._lastScale));\n        model._smallViewportHeight = Math.ceil(size[1] / Math.sqrt(model._lastScale));\n      });\n    } // use/create/resize framebuffer if needed\n\n\n    if (model._useSmallViewport) {\n      var size = model._openGLRenderWindow.getFramebufferSize(); // adjust viewportSize to always be at most the dest fo size\n\n\n      if (model._smallViewportHeight > size[1]) {\n        model._smallViewportHeight = size[1];\n      }\n\n      if (model._smallViewportWidth > size[0]) {\n        model._smallViewportWidth = size[0];\n      }\n\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n\n      if (model.framebuffer.getGLFramebuffer() === null) {\n        model.framebuffer.create(size[0], size[1]);\n        model.framebuffer.populateFramebuffer();\n      } else {\n        var fbSize = model.framebuffer.getSize();\n\n        if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n          model.framebuffer.create(size[0], size[1]);\n          model.framebuffer.populateFramebuffer();\n        }\n      }\n\n      model.framebuffer.bind();\n      var gl = model.context;\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      gl.colorMask(true, true, true, true);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.viewport(0, 0, model._smallViewportWidth, model._smallViewportHeight);\n      model.fvp = [model._smallViewportWidth / size[0], model._smallViewportHeight / size[1]];\n    }\n\n    model.context.disable(model.context.DEPTH_TEST); // make sure the BOs are up to date\n\n    publicAPI.updateBufferObjects(ren, actor); // set interpolation on the texture based on property setting\n\n    var iType = actor.getProperty().getInterpolationType();\n\n    if (iType === InterpolationType.NEAREST) {\n      model.scalarTexture.setMinificationFilter(Filter.NEAREST);\n      model.scalarTexture.setMagnificationFilter(Filter.NEAREST);\n    } else {\n      model.scalarTexture.setMinificationFilter(Filter.LINEAR);\n      model.scalarTexture.setMagnificationFilter(Filter.LINEAR);\n    } // Bind the OpenGL, this is shared between the different primitive/cell types.\n\n\n    model.lastBoundBO = null; // if we have a zbuffer texture then activate it\n\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.activate();\n    }\n  };\n\n  publicAPI.renderPieceDraw = function (ren, actor) {\n    var gl = model.context; // render the texture\n\n    model.scalarTexture.activate();\n    model.opacityTexture.activate();\n    model.colorTexture.activate();\n    model.jitterTexture.activate();\n    publicAPI.updateShaders(model.tris, ren, actor); // First we do the triangles, update the shader, set uniforms, etc.\n    // for (let i = 0; i < 11; ++i) {\n    //   gl.drawArrays(gl.TRIANGLES, 66 * i, 66);\n    // }\n\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    model.tris.getVAO().release();\n    model.scalarTexture.deactivate();\n    model.colorTexture.deactivate();\n    model.opacityTexture.deactivate();\n    model.jitterTexture.deactivate();\n  };\n\n  publicAPI.renderPieceFinish = function (ren, actor) {\n    // if we have a zbuffer texture then deactivate it\n    if (model.zBufferTexture !== null) {\n      model.zBufferTexture.deactivate();\n    }\n\n    if (model._useSmallViewport) {\n      // now copy the framebuffer with the volume into the\n      // regular buffer\n      model.framebuffer.restorePreviousBindingsAndBuffers();\n\n      if (model.copyShader === null) {\n        model.copyShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'uniform vec2 tfactor;', 'varying vec2 tcoord;', 'void main() { tcoord = vec2(vertexDC.x*0.5 + 0.5, vertexDC.y*0.5 + 0.5) * tfactor; gl_Position = vertexDC; }'].join('\\n'), ['//VTK::System::Dec', '//VTK::Output::Dec', 'uniform sampler2D texture1;', 'varying vec2 tcoord;', 'void main() { gl_FragData[0] = texture2D(texture1,tcoord); }'].join('\\n'), '');\n        var program = model.copyShader;\n        model.copyVAO = vtkVertexArrayObject.newInstance();\n        model.copyVAO.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.tris.getCABO().bind();\n\n        if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n          vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n        }\n      } else {\n        model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.copyShader);\n      }\n\n      var size = model._openGLRenderWindow.getFramebufferSize();\n\n      model.context.viewport(0, 0, size[0], size[1]); // activate texture\n\n      var tex = model.framebuffer.getColorTexture();\n      tex.activate();\n      model.copyShader.setUniformi('texture', tex.getTextureUnit());\n      model.copyShader.setUniform2f('tfactor', model.fvp[0], model.fvp[1]);\n      var gl = model.context;\n      gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA); // render quad\n\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      tex.deactivate();\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    }\n  };\n\n  publicAPI.renderPiece = function (ren, actor) {\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = function (ren, actor) {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.Bounds);\n      return;\n    }\n\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = function (ren, actor) {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {\n    // first do a coarse check\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime() || model.VBOBuildTime.getMTime() < actor.getMTime() || model.VBOBuildTime.getMTime() < model.renderable.getMTime() || model.VBOBuildTime.getMTime() < actor.getProperty().getMTime() || model.VBOBuildTime.getMTime() < model.currentInput.getMTime()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    var image = model.currentInput;\n\n    if (!image) {\n      return;\n    }\n\n    var scalars = image.getPointData() && image.getPointData().getScalars();\n\n    if (!scalars) {\n      return;\n    }\n\n    var vprop = actor.getProperty();\n\n    if (!model.jitterTexture.getHandle()) {\n      var oTable = new Uint8Array(32 * 32);\n\n      for (var i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(32, 32, 1, VtkDataTypes.UNSIGNED_CHAR, oTable);\n    }\n\n    var numComp = scalars.getNumberOfComponents();\n    var iComps = vprop.getIndependentComponents();\n    var numIComps = iComps ? numComp : 1; // rebuild opacity tfun?\n\n    var toString = \"\".concat(vprop.getMTime());\n\n    if (model.opacityTextureString !== toString) {\n      var oWidth = 1024;\n      var oSize = oWidth * 2 * numIComps;\n      var ofTable = new Float32Array(oSize);\n      var tmpTable = new Float32Array(oWidth);\n\n      for (var c = 0; c < numIComps; ++c) {\n        var ofun = vprop.getScalarOpacity(c);\n        var opacityFactor = model.renderable.getSampleDistance() / vprop.getScalarOpacityUnitDistance(c);\n        var oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1); // adjust for sample distance etc\n\n        for (var _i3 = 0; _i3 < oWidth; ++_i3) {\n          ofTable[c * oWidth * 2 + _i3] = 1.0 - Math.pow(1.0 - tmpTable[_i3], opacityFactor);\n          ofTable[c * oWidth * 2 + _i3 + oWidth] = ofTable[c * oWidth * 2 + _i3];\n        }\n      }\n\n      model.opacityTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR); // use float texture where possible because we really need the resolution\n      // for this table. Errors in low values of opacity accumulate to\n      // visible artifacts. High values of opacity quickly terminate without\n      // artifacts.\n\n      if (model._openGLRenderWindow.getWebgl2() || model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.FLOAT, ofTable);\n      } else {\n        var _oTable = new Uint8Array(oSize);\n\n        for (var _i4 = 0; _i4 < oSize; ++_i4) {\n          _oTable[_i4] = 255.0 * ofTable[_i4];\n        }\n\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.UNSIGNED_CHAR, _oTable);\n      }\n\n      model.opacityTextureString = toString;\n    } // rebuild color tfun?\n\n\n    toString = \"\".concat(vprop.getMTime());\n\n    if (model.colorTextureString !== toString) {\n      var cWidth = 1024;\n      var cSize = cWidth * 2 * numIComps * 3;\n      var cTable = new Uint8Array(cSize);\n\n      var _tmpTable = new Float32Array(cWidth * 3);\n\n      for (var _c = 0; _c < numIComps; ++_c) {\n        var cfun = vprop.getRGBTransferFunction(_c);\n        var cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, _tmpTable, 1);\n\n        for (var _i5 = 0; _i5 < cWidth * 3; ++_i5) {\n          cTable[_c * cWidth * 6 + _i5] = 255.0 * _tmpTable[_i5];\n          cTable[_c * cWidth * 6 + _i5 + cWidth * 3] = 255.0 * _tmpTable[_i5];\n        }\n      }\n\n      model.colorTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.colorTexture.create2DFromRaw(cWidth, 2 * numIComps, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      model.colorTextureString = toString;\n    } // rebuild the scalarTexture if the data has changed\n\n\n    toString = \"\".concat(image.getMTime());\n\n    if (model.scalarTextureString !== toString) {\n      // Build the textures\n      var dims = image.getDimensions();\n      model.scalarTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.scalarTexture.resetFormatAndType();\n      model.scalarTexture.create3DFilterableFromRaw(dims[0], dims[1], dims[2], numComp, scalars.getDataType(), scalars.getData(), model.renderable.getPreferSizeOverAccuracy());\n      model.scalarTextureString = toString;\n    }\n\n    if (!model.tris.getCABO().getElementCount()) {\n      // build the CABO\n      var ptsArray = new Float32Array(12);\n\n      for (var _i6 = 0; _i6 < 4; _i6++) {\n        ptsArray[_i6 * 3] = _i6 % 2 * 2 - 1.0;\n        ptsArray[_i6 * 3 + 1] = _i6 > 1 ? 1.0 : -1.0;\n        ptsArray[_i6 * 3 + 2] = -1.0;\n      }\n\n      var cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2; // const dim = 12.0;\n      // const ptsArray = new Float32Array(3 * dim * dim);\n      // for (let i = 0; i < dim; i++) {\n      //   for (let j = 0; j < dim; j++) {\n      //     const offset = ((i * dim) + j) * 3;\n      //     ptsArray[offset] = (2.0 * (i / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 1] = (2.0 * (j / (dim - 1.0))) - 1.0;\n      //     ptsArray[offset + 2] = -1.0;\n      //   }\n      // }\n      // const cellArray = new Uint16Array(8 * (dim - 1) * (dim - 1));\n      // for (let i = 0; i < dim - 1; i++) {\n      //   for (let j = 0; j < dim - 1; j++) {\n      //     const offset = 8 * ((i * (dim - 1)) + j);\n      //     cellArray[offset] = 3;\n      //     cellArray[offset + 1] = (i * dim) + j;\n      //     cellArray[offset + 2] = (i * dim) + 1 + j;\n      //     cellArray[offset + 3] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 4] = 3;\n      //     cellArray[offset + 5] = (i * dim) + j;\n      //     cellArray[offset + 6] = ((i + 1) * dim) + 1 + j;\n      //     cellArray[offset + 7] = ((i + 1) * dim) + j;\n      //   }\n      // }\n\n      var points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      var cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points: points,\n        cellOffset: 0\n      });\n    }\n\n    model.VBOBuildTime.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: null,\n  scalarTexture: null,\n  scalarTextureString: null,\n  opacityTexture: null,\n  opacityTextureString: null,\n  colorTexture: null,\n  colorTextureString: null,\n  jitterTexture: null,\n  tris: null,\n  framebuffer: null,\n  copyShader: null,\n  copyVAO: null,\n  lastXYF: 1.0,\n  targetXYF: 1.0,\n  zBufferTexture: null,\n  lastZBufferTexture: null,\n  lastLightComplexity: 0,\n  fullViewportTime: 1.0,\n  idxToView: null,\n  idxNormalMatrix: null,\n  modelToView: null,\n  projectionToView: null,\n  avgWindowArea: 0.0,\n  avgFrameTime: 0.0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  model.scalarTexture = vtkOpenGLTexture.newInstance();\n  model.opacityTexture = vtkOpenGLTexture.newInstance();\n  model.colorTexture = vtkOpenGLTexture.newInstance();\n  model.jitterTexture = vtkOpenGLTexture.newInstance();\n  model.jitterTexture.setWrapS(Wrap.REPEAT);\n  model.jitterTexture.setWrapT(Wrap.REPEAT);\n  model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n  model.idxToView = mat4.identity(new Float64Array(16));\n  model.idxNormalMatrix = mat3.identity(new Float64Array(9));\n  model.modelToView = mat4.identity(new Float64Array(16));\n  model.projectionToView = mat4.identity(new Float64Array(16));\n  model.projectionToWorld = mat4.identity(new Float64Array(16));\n  model._lastScale = 1.0; // Build VTK API\n\n  setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLVolumeMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLVolumeMapper'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkVolumeMapper', newInstance);\n\nexport { vtkVolumeMapper as default, extend, newInstance };\n", "import { newInstance as newInstance$1, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// import { mat4, vec3 }     from 'gl-matrix';\nvar vtkDebugMacro = vtkDebugMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n    model._openGLRenderWindow = model.openGLRenderer.getParent();\n    var aspectRatio = model.openGLRenderer.getAspectRatio();\n    var camera = model.openGLRenderer ? model.openGLRenderer.getRenderable().getActiveCamera() : null;\n    var tsize = model.openGLRenderer.getTiledSizeAndOrigin();\n    var texels = null;\n\n    if (model.renderable.getUseZValues()) {\n      var zbt = renderPass.getZBufferTexture();\n      var width = Math.floor(zbt.getWidth());\n      var height = Math.floor(zbt.getHeight());\n\n      var gl = model._openGLRenderWindow.getContext();\n\n      zbt.bind(); // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)\n\n      var fb = renderPass.getFramebuffer();\n\n      if (!fb) {\n        vtkDebugMacro('No framebuffer to save/restore');\n      } else {\n        // save framebuffer settings\n        fb.saveCurrentBindingsAndBuffers();\n      }\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, zbt.getHandle(), 0);\n\n      if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\n        texels = new Uint8Array(width * height * 4);\n        gl.viewport(0, 0, width, height);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);\n      } // Now we need to restore framebuffer bindings/buffers\n\n\n      if (fb) {\n        fb.restorePreviousBindingsAndBuffers();\n      }\n\n      gl.deleteFramebuffer(framebuffer);\n    }\n\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (model.renderable.getUseZValues()) {\n        renderPass.requestDepth();\n      }\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLPixelSpaceCallbackMapper'); // ----------------------------------------------------------------------------\n\nvar vtkPixelSpaceCallbackMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkPixelSpaceCallbackMapper', newInstance);\n\nexport { vtkPixelSpaceCallbackMapper as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNodeFactory from '../SceneGraph/ViewNodeFactory.js';\n\nvar CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUViewNodeFactory');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Static class mapping shared across instances\n\n  model.overrides = CLASS_MAPPING; // Inheritance\n\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUViewNodeFactory$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUViewNodeFactory$1 as default, extend, newInstance, registerOverride };\n", "import { mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n\n  publicAPI.getProjectionMatrix = function (outMat, aspect, cRange, windowCenter) {\n    mat4.identity(outMat);\n\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      var parallelScale = model.renderable.getParallelScale();\n      var width = parallelScale * aspect;\n      var height = parallelScale;\n      var xmin = (windowCenter[0] - 1.0) * width;\n      var xmax = (windowCenter[0] + 1.0) * width;\n      var ymin = (windowCenter[1] - 1.0) * height;\n      var ymax = (windowCenter[1] + 1.0) * height;\n      var xr = 1.0 / (xmax - xmin);\n      var yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      var tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n\n      var _width;\n\n      var _height;\n\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        _width = cRange[0] * tmp;\n        _height = cRange[0] * tmp / aspect;\n      } else {\n        _width = cRange[0] * tmp * aspect;\n        _height = cRange[0] * tmp;\n      }\n\n      var _xmin = (windowCenter[0] - 1.0) * _width;\n\n      var _xmax = (windowCenter[0] + 1.0) * _width;\n\n      var _ymin = (windowCenter[1] - 1.0) * _height;\n\n      var _ymax = (windowCenter[1] + 1.0) * _height;\n\n      outMat[0] = 2.0 * cRange[0] / (_xmax - _xmin);\n      outMat[5] = 2.0 * cRange[0] / (_ymax - _ymin);\n      outMat[12] = (_xmin + _xmax) / (_xmax - _xmin);\n      outMat[13] = (_ymin + _ymax) / (_ymax - _ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n\n  publicAPI.convertToOpenGLDepth = function (val) {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n\n    var cRange = model.renderable.getClippingRangeByReference();\n    var zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n\n  publicAPI.getKeyMatrices = function (webGPURenderer) {\n    // has the camera changed?\n    var ren = webGPURenderer.getRenderable();\n    var webGPURenderWindow = webGPURenderer.getParent();\n\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      var wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc); // zero out translation\n\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      var center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      var aspectRatio = webGPURenderer.getAspectRatio();\n      var cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime); // values always get set by the get method\n\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  }; // Build VTK API\n\n  macro.setGet(publicAPI, model, ['keyMatrixTime']); // Object methods\n\n  vtkWebGPUCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkCamera', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n// vtkWebGPUBindGroup methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBindGroup(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBindGroup');\n\n  publicAPI.setBindables = function (bindables) {\n    // is there a difference between the old and new list?\n    if (model.bindables.length === bindables.length) {\n      var allMatch = true;\n\n      for (var i = 0; i < model.bindables.length; i++) {\n        if (model.bindables[i] !== bindables[i]) {\n          allMatch = false;\n        }\n      }\n\n      if (allMatch) {\n        return;\n      }\n    } // there is a difference\n\n\n    model.bindables = bindables;\n    publicAPI.modified();\n  };\n\n  publicAPI.getBindGroupLayout = function (device) {\n    var entries = [];\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      var entry = model.bindables[i].getBindGroupLayoutEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n\n    return device.getBindGroupLayout({\n      entries: entries\n    });\n  };\n\n  publicAPI.getBindGroup = function (device) {\n    // check mtime\n    var mtime = publicAPI.getMTime();\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      var tm = model.bindables[i].getBindGroupTime().getMTime();\n      mtime = tm > mtime ? tm : mtime;\n    }\n\n    if (mtime < model.bindGroupTime.getMTime()) {\n      return model.bindGroup;\n    }\n\n    var entries = [];\n\n    for (var _i = 0; _i < model.bindables.length; _i++) {\n      var entry = model.bindables[_i].getBindGroupEntry();\n\n      entry.binding = _i;\n      entries.push(entry);\n    }\n\n    model.bindGroup = device.getHandle().createBindGroup({\n      layout: publicAPI.getBindGroupLayout(device),\n      entries: entries,\n      label: model.label\n    });\n    model.bindGroupTime.modified();\n    return model.bindGroup;\n  };\n\n  publicAPI.getShaderCode = function (pipeline) {\n    var lines = [];\n    var bgroup = pipeline.getBindGroupLayoutCount(model.label);\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\n    }\n\n    return lines.join('\\n');\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  model.bindables = [];\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['label', 'device', 'arrayInformation', 'sourceTime']);\n  vtkWebGPUBindGroup(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBindGroup$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUBindGroup$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n// vtkWebGPUShaderModule methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderModule(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderModule');\n\n  publicAPI.initialize = function (device, shaderDesc) {\n    model.device = device; // console.log(shaderDesc.getCode());\n\n    model.handle = model.device.getHandle().createShaderModule({\n      code: shaderDesc.getCode()\n    });\n  }; // publicAPI.setLastCameraMTime = (mtime) => {\n  //   model.lastCameraMTime = mtime;\n  // };\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['device', 'handle']); // Object methods\n\n  vtkWebGPUShaderModule(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderModule'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderModule$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUShaderModule$1 as default };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderModule from './ShaderModule.js';\n\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\n\nfunction substitute(source, search, replace) {\n  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  var replaced = false;\n\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n\n  var gflag = '';\n\n  if (all) {\n    gflag = 'g';\n  }\n\n  var regex = new RegExp(search, gflag);\n  var resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n} // ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n\n  publicAPI.getShaderModule = function (shaderDesc) {\n    // has it already been created?\n    var sType = shaderDesc.getType();\n    var sHash = shaderDesc.getHash();\n\n    var keys = model._shaderModules.keys();\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    } // console.log(JSON.stringify(shaderDesc));\n\n\n    var sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n\n    model._shaderModules.set(shaderDesc, sm);\n\n    return sm;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects\n\n  model._shaderModules = new Map(); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']); // Object methods\n\n  vtkWebGPUShaderCache(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderCache$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  substitute: substitute\n};\n\nexport { vtkWebGPUShaderCache$1 as default, extend, newInstance };\n", "import { newInstance as newInstance$1, obj, get, setGet } from '../../macros.js';\n\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n\n  publicAPI.getShaderDescriptions = function () {\n    return model.shaderDescriptions;\n  };\n\n  publicAPI.initialize = function (device, hash) {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash; // add in bind group layouts\n\n    var bindGroupLayouts = [];\n\n    for (var i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts: bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n\n    for (var _i = 0; _i < model.shaderDescriptions.length; _i++) {\n      var sd = model.shaderDescriptions[_i];\n      var sm = device.getShaderModule(sd);\n\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n\n  publicAPI.getShaderDescription = function (stype) {\n    for (var i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n\n    return null;\n  };\n\n  publicAPI.addBindGroupLayout = function (bindGroup) {\n    if (!bindGroup) {\n      return;\n    }\n\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n\n  publicAPI.getBindGroupLayout = function (idx) {\n    return model.layouts[idx].layout;\n  };\n\n  publicAPI.getBindGroupLayoutCount = function (llabel) {\n    for (var i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n\n    return 0;\n  };\n\n  publicAPI.bindVertexInput = function (renderEncoder, vInput) {\n    vInput.bindBuffers(renderEncoder);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUPipeline(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPipeline'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPipeline$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n\n  publicAPI.hasOutput = function (name) {\n    return model.outputNames.includes(name);\n  };\n\n  publicAPI.addOutput = function (type, name) {\n    var interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n\n  publicAPI.addBuiltinOutput = function (type, name) {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n\n  publicAPI.addBuiltinInput = function (type, name) {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  }; // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n\n\n  publicAPI.replaceShaderCode = function (priorStage, vertexInput) {\n    var inputImpl = [];\n    var iodec = [];\n\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n\n    if (priorStage || model.builtinInputNames.length) {\n      var inputStruct = [];\n      inputStruct.push(\"struct \".concat(model.type, \"Input\\n{\"));\n\n      if (priorStage) {\n        var inputNames = priorStage.getOutputNamesByReference();\n        var inputTypes = priorStage.getOutputTypesByReference();\n        var inputInterpolations = priorStage.getOutputInterpolationsByReference();\n\n        for (var i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(\"  @location(\".concat(i, \") @interpolate(\").concat(inputInterpolations[i], \") \").concat(inputNames[i], \" : \").concat(inputTypes[i], \";\"));\n          } else {\n            inputStruct.push(\"  @location(\".concat(i, \") \").concat(inputNames[i], \" : \").concat(inputTypes[i], \";\"));\n          }\n        }\n      }\n\n      for (var _i = 0; _i < model.builtinInputNames.length; _i++) {\n        inputStruct.push(\"  \".concat(model.builtinInputNames[_i], \" : \").concat(model.builtinInputTypes[_i], \";\"));\n      }\n\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(\"input: \".concat(model.type, \"Input\"));\n      }\n    }\n\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      var outputStruct = [\"struct \".concat(model.type, \"Output\\n{\")];\n\n      for (var _i2 = 0; _i2 < model.outputNames.length; _i2++) {\n        if (model.outputInterpolations[_i2] !== undefined) {\n          outputStruct.push(\"  @location(\".concat(_i2, \") @interpolate(\").concat(model.outputInterpolations[_i2], \") \").concat(model.outputNames[_i2], \" : \").concat(model.outputTypes[_i2], \";\"));\n        } else {\n          outputStruct.push(\"  @location(\".concat(_i2, \") \").concat(model.outputNames[_i2], \" : \").concat(model.outputTypes[_i2], \";\"));\n        }\n      }\n\n      for (var _i3 = 0; _i3 < model.builtinOutputNames.length; _i3++) {\n        outputStruct.push(\"  \".concat(model.builtinOutputNames[_i3], \" : \").concat(model.builtinOutputTypes[_i3], \";\"));\n      }\n\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [\"-> \".concat(model.type, \"Output\")]).result;\n    }\n\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = []; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']); // Object methods\n\n  vtkWebGPUShaderDescription(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderDescription$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUShaderDescription$1 as default, extend, newInstance };\n", "import { vtkErrorMacro } from '../../macros.js';\n\n// vtkWebGPUDevice static functions\n//\n// WebGPU uses types in a many places and calls, and often those types\n// need to be associated with byte sizes, alignments, native arrays etc.\n// The folowing methods are designed to help vtk.js introspect those types.\n// WebGPU currently tends to use multiple type formats:\n//  - buffer types such as float32x4\n//  - shader types suchs as vec4<f32>\n//  - texture types such as rgba32float\n// ----------------------------------------------------------------------------\n// see https://gpuweb.github.io/gpuweb/#texture-formats\n// for possible formats, there are a lot of them\n\nvar textureDetails = {\n  // 8-bit formats\n  r8unorm: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8snorm: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8uint: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  r8sint: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 16-bit formats\n  r16uint: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  r16sint: {\n    numComponents: 1,\n    nativeType: Int16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  r16float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rg8unorm: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8snorm: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8uint: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rg8sint: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 32-bit formats\n  r32uint: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  r32sint: {\n    numComponents: 1,\n    nativeType: Int32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  r32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rg16uint: {\n    numComponents: 2,\n    nativeType: Uint16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rg16sint: {\n    numComponents: 2,\n    nativeType: Int16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rg16float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rgba8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'rgba8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8snorm: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8uint: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rgba8sint: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  bgra8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'bgra8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  // Packed 32-bit formats\n  rgb9e5ufloat: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rgb10a2unorm: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rg11b10ufloat: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  // 64-bit formats\n  rg32uint: {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rg32sint: {\n    numComponents: 2,\n    nativeType: Int32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rg32float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rgba16uint: {\n    numComponents: 4,\n    nativeType: Uint16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rgba16sint: {\n    numComponents: 4,\n    nativeType: Int16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rgba16float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  // 128-bit formats\n  rgba32uint: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rgba32sint: {\n    numComponents: 4,\n    nativeType: Int32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rgba32float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  // Depth and stencil formats\n  stencil8: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  depth16unorm: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'depth'\n  },\n  depth24plus: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 3,\n    sampleType: 'depth'\n  },\n  'depth24plus-stencil8': {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'mixed'\n  },\n  depth32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'depth'\n  }\n};\n\nfunction getDetailsFromTextureFormat(format) {\n  if (!format || format.length < 6) return 0;\n\n  if (format in textureDetails === true) {\n    return textureDetails[format];\n  }\n\n  vtkErrorMacro(\"unknown format \".concat(format));\n  return null;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getByteStrideFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // options are x2, x3, x4 or nothing\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = format[format.length - 1];\n  }\n\n  var sizeStart = numComp === 1 ? format.length - 1 : format.length - 3; // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n\n  var num = Number(format[sizeStart]);\n\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return 0;\n  }\n\n  var typeSize = 5 - num / 2;\n  return numComp * typeSize;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getNumberOfComponentsFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // options are x2, x3, x4 or nothing\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = format[format.length - 1];\n  }\n\n  return numComp;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getNativeTypeFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // raw types are Uint Int or Float as follows\n\n  var result;\n\n  if (format[0] === 'f') {\n    result = 'Float';\n  } else if (format[0] === 's') {\n    result = 'Int';\n  } else if (format[0] === 'u') {\n    result = 'Uint';\n  } else {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  } // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n\n\n  var base = format.split('x')[0];\n  var num = Number(base[base.length - 1]);\n\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  }\n\n  result += 8 * (5 - num / 2);\n  result += 'Array';\n  return result;\n}\n\nfunction getShaderTypeFromBufferFormat(format) {\n  var dataType;\n\n  if (format[0] === 'f' || format[1] === 'n') {\n    dataType = 'f32';\n  } else if (format[0] === 's' && format[1] === 'i') {\n    dataType = 'i32';\n  } else if (format[0] === 'u' && format[1] === 'i') {\n    dataType = 'u32';\n  } else {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  } // options are x2, x3, x4 or nothing\n\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n\n  if (numComp === 4) return \"vec4<\".concat(dataType, \">\");\n  if (numComp === 3) return \"vec3<\".concat(dataType, \">\");\n  if (numComp === 2) return \"vec2<\".concat(dataType, \">\");\n  return dataType;\n}\n\nfunction getByteStrideFromShaderFormat(format) {\n  if (!format) return 0;\n  var numComp = 1;\n\n  if (format.substring(0, 3) === 'vec') {\n    numComp = format[3];\n  } else if (format.substring(0, 3) === 'mat') {\n    numComp = format[3] * format[5];\n  }\n\n  var typeSize = 4;\n  return numComp * typeSize;\n}\n\nfunction getNativeTypeFromShaderFormat(format) {\n  if (!format) return undefined;\n  if (format.includes('f32')) return 'Float32Array';\n  if (format.includes('i32')) return 'Int32Array';\n  if (format.includes('u32')) return 'Uint32Array';\n  vtkErrorMacro(\"unknown format \".concat(format));\n  return undefined;\n}\n\nvar vtkWebGPUTypes = {\n  getDetailsFromTextureFormat: getDetailsFromTextureFormat,\n  getByteStrideFromBufferFormat: getByteStrideFromBufferFormat,\n  getNumberOfComponentsFromBufferFormat: getNumberOfComponentsFromBufferFormat,\n  getNativeTypeFromBufferFormat: getNativeTypeFromBufferFormat,\n  getShaderTypeFromBufferFormat: getShaderTypeFromBufferFormat,\n  getByteStrideFromShaderFormat: getByteStrideFromShaderFormat,\n  getNativeTypeFromShaderFormat: getNativeTypeFromShaderFormat\n};\n\nexport { vtkWebGPUTypes as default };\n", "import { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkWebGPUTypes from './Types.js';\n\nfunction arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!b.includes(a[i])) return false;\n  }\n\n  return true;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUVertexInput methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUVertexInput(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVertexInput');\n\n  publicAPI.addBuffer = function (buffer, inames) {\n    var stepMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'vertex';\n    var names = inames;\n\n    if (!Array.isArray(names)) {\n      names = [names];\n    } // only add if it is a new setting\n\n\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (arraysEqual(model.inputs[i].names, names)) {\n        if (model.inputs[i].buffer === buffer) {\n          return;\n        }\n\n        model.inputs[i].buffer = buffer;\n        return;\n      }\n    } // when adding a new entry, make sure we sort the array\n    // as the order is important to the shader and must always\n    // be the same, so alphabetical is an easy option\n\n\n    model.inputs.push({\n      buffer: buffer,\n      stepMode: stepMode,\n      names: names\n    });\n    model.inputs = model.inputs.sort(function (v1, v2) {\n      if (v1.names[0] < v2.names[0]) {\n        return -1;\n      }\n\n      if (v1.names[0] > v2.names[0]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  publicAPI.removeBufferIfPresent = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        model.inputs.splice(i, 1);\n      }\n    }\n  };\n\n  publicAPI.getBuffer = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer;\n      }\n    }\n\n    return null;\n  };\n\n  publicAPI.hasAttribute = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  publicAPI.getAttributeTime = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer.getSourceTime();\n      }\n    }\n\n    return 0;\n  };\n\n  publicAPI.getShaderCode = function () {\n    var result = '';\n    var nameCount = 0;\n\n    for (var i = 0; i < model.inputs.length; i++) {\n      for (var nm = 0; nm < model.inputs[i].names.length; nm++) {\n        var arrayInfo = model.inputs[i].buffer.getArrayInformation()[nm];\n        var type = vtkWebGPUTypes.getShaderTypeFromBufferFormat(arrayInfo.format);\n\n        if (nameCount > 0) {\n          result += ',\\n';\n        }\n\n        result = \"\".concat(result, \"  @location(\").concat(nameCount, \") \").concat(model.inputs[i].names[nm], \" : \").concat(type);\n        nameCount++;\n      }\n    }\n\n    return result;\n  };\n\n  publicAPI.getVertexInputInformation = function () {\n    var info = {};\n\n    if (model.inputs.length) {\n      var vertexBuffers = [];\n      var nameCount = 0;\n\n      for (var i = 0; i < model.inputs.length; i++) {\n        var buf = model.inputs[i].buffer;\n        var buffer = {\n          arrayStride: buf.getStrideInBytes(),\n          stepMode: model.inputs[i].stepMode,\n          attributes: []\n        };\n        var arrayInfo = buf.getArrayInformation();\n\n        for (var nm = 0; nm < model.inputs[i].names.length; nm++) {\n          buffer.attributes.push({\n            shaderLocation: nameCount,\n            offset: arrayInfo[nm].offset,\n            format: arrayInfo[nm].format\n          });\n          nameCount++;\n        }\n\n        vertexBuffers.push(buffer);\n      }\n\n      info.buffers = vertexBuffers;\n    }\n\n    return info;\n  };\n\n  publicAPI.bindBuffers = function (renderEncoder) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      renderEncoder.setVertexBuffer(i, model.inputs[i].buffer.getHandle());\n    }\n  };\n\n  publicAPI.getReady = function () {};\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.created) {\n      model.inputs = [];\n      model.bindingDescriptions = [];\n      model.attributeDescriptions = [];\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  inputs: null,\n  bindingDescriptions: false,\n  attributeDescriptions: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.bindingDescriptions = [];\n  model.attributeDescriptions = [];\n  model.inputs = [];\n  setGet(publicAPI, model, ['created', 'device', 'handle']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUVertexInput(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUVertexInput'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUVertexInput$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUVertexInput$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkWebGPUBindGroup from './BindGroup.js';\nimport vtkWebGPUPipeline from './Pipeline.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUShaderDescription from './ShaderDescription.js';\nimport vtkWebGPUVertexInput from './VertexInput.js';\n\nvar vtkWebGPUMapperHelperVS = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Color::Dec\\n\\n//VTK::Normal::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Select::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@stage(vertex)\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output : vertexOutput;\\n\\n  // var vertex: vec4<f32> = vertexBC;\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Select::Impl\\n\\n  //VTK::Position::Impl\\n\\n  return output;\\n}\\n\";\nvar vtkWebGPUMapperHelperFS = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Color::Dec\\n\\n//VTK::Normal::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Select::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@stage(fragment)\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output : fragmentOutput;\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Select::Impl\\n\\n  // var computedColor:vec4<f32> = vec4<f32>(1.0,0.5,0.5,1.0);\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\"; // ----------------------------------------------------------------------------\n// vtkWebGPUMapperHelper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUMapperHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUMapperHelper');\n\n  publicAPI.generateShaderDescriptions = function (hash, pipeline, vertexInput) {\n    // create the shader descriptions\n    var vDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'vertex',\n      hash: hash,\n      code: model.vertexShaderTemplate\n    });\n    var fDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'fragment',\n      hash: hash,\n      code: model.fragmentShaderTemplate\n    }); // add them to the pipeline\n\n    var sdrs = pipeline.getShaderDescriptions();\n    sdrs.push(vDesc);\n    sdrs.push(fDesc); // look for replacements to invoke\n\n    var scode = model.vertexShaderTemplate + model.fragmentShaderTemplate; // eslint-disable-next-line prefer-regex-literals\n\n    var re = new RegExp('//VTK::[^:]*::', 'g');\n    var unique = scode.match(re).filter(function (v, i, a) {\n      return a.indexOf(v) === i;\n    });\n    var fnames = unique.map(function (v) {\n      return \"replaceShader\".concat(v.substring(7, v.length - 2));\n    }); // now invoke shader replacement functions\n\n    for (var i = 0; i < fnames.length; i++) {\n      var fname = fnames[i];\n\n      if (fname !== 'replaceShaderIOStructs' && model.shaderReplacements.has(fname)) {\n        model.shaderReplacements.get(fname)(hash, pipeline, vertexInput);\n      }\n    } // always replace the IOStructs last as other replacement funcs may\n    // add inputs or outputs\n\n\n    publicAPI.replaceShaderIOStructs(hash, pipeline, vertexInput); // console.log(vDesc.getCode());\n    // console.log(fDesc.getCode());\n  };\n\n  publicAPI.replaceShaderIOStructs = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.replaceShaderCode(null, vertexInput);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.replaceShaderCode(vDesc);\n  };\n\n  publicAPI.replaceShaderRenderEncoder = function (hash, pipeline, vertexInput) {\n    model.renderEncoder.replaceShaderCode(pipeline);\n  };\n\n  model.shaderReplacements.set('replaceShaderRenderEncoder', publicAPI.replaceShaderRenderEncoder);\n\n  publicAPI.replaceShaderRenderer = function (hash, pipeline, vertexInput) {\n    if (!model.WebGPURenderer) {\n      return;\n    }\n\n    var ubocode = model.WebGPURenderer.getBindGroup().getShaderCode(pipeline);\n    var vDesc = pipeline.getShaderDescription('vertex');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderRenderer', publicAPI.replaceShaderRenderer);\n\n  publicAPI.replaceShaderMapper = function (hash, pipeline, vertexInput) {\n    var ubocode = model.bindGroup.getShaderCode(pipeline);\n    var vDesc = pipeline.getShaderDescription('vertex');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addBuiltinInput('bool', '@builtin(front_facing) frontFacing');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderMapper', publicAPI.replaceShaderMapper);\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    output.Position = rendererUBO.SCPCMatrix*vertexBC;']).result;\n    vDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.replaceShaderTCoord = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec2<f32>', 'tcoordVS');\n  };\n\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\n\n  publicAPI.addTextureView = function (view) {\n    // is it already there?\n    if (model.textureViews.includes(view)) {\n      return;\n    }\n\n    model.textureViews.push(view);\n  };\n\n  publicAPI.renderForPipeline = function (renderEncoder) {\n    var pipeline = renderEncoder.getBoundPipeline(); // bind the mapper bind group\n\n    renderEncoder.activateBindGroup(model.bindGroup); // bind the vertex input\n\n    pipeline.bindVertexInput(renderEncoder, model.vertexInput);\n    renderEncoder.draw(model.numberOfVertices, model.numberOfInstances, 0, 0);\n  };\n\n  publicAPI.registerToDraw = function () {\n    if (model.pipeline) {\n      model.WebGPURenderer.registerPipelineCallback(model.pipeline, publicAPI.renderForPipeline);\n    }\n  };\n\n  publicAPI.render = function (renderEncoder, device) {\n    publicAPI.build(renderEncoder, device);\n    renderEncoder.setPipeline(model.pipeline);\n\n    if (model.WebGPURenderer) {\n      model.WebGPURenderer.bindUBO(renderEncoder);\n    }\n\n    publicAPI.renderForPipeline(renderEncoder);\n  };\n\n  publicAPI.getBindables = function () {\n    var bindables = _toConsumableArray(model.additionalBindables);\n\n    if (model.UBO) {\n      bindables.push(model.UBO);\n    }\n\n    if (model.SSBO) {\n      bindables.push(model.SSBO);\n    } // add texture BindGroupLayouts\n\n\n    for (var t = 0; t < model.textureViews.length; t++) {\n      bindables.push(model.textureViews[t]);\n      var samp = model.textureViews[t].getSampler();\n\n      if (samp) {\n        bindables.push(samp);\n      }\n    }\n\n    return bindables;\n  };\n\n  publicAPI.build = function (renderEncoder, device) {\n    // handle per primitive type\n    model.renderEncoder = renderEncoder;\n    model.pipeline = device.getPipeline(model.pipelineHash);\n    model.bindGroup.setBindables(publicAPI.getBindables()); // build VBO for this primitive\n    // build the pipeline if needed\n\n    if (!model.pipeline) {\n      model.pipeline = vtkWebGPUPipeline.newInstance();\n      model.pipeline.setDevice(device);\n\n      if (model.WebGPURenderer) {\n        model.pipeline.addBindGroupLayout(model.WebGPURenderer.getBindGroup());\n      }\n\n      model.pipeline.addBindGroupLayout(model.bindGroup);\n      publicAPI.generateShaderDescriptions(model.pipelineHash, model.pipeline, model.vertexInput);\n      model.pipeline.setTopology(model.topology);\n      model.pipeline.setRenderEncoder(renderEncoder);\n      model.pipeline.setVertexState(model.vertexInput.getVertexInputInformation());\n      device.createPipeline(model.pipelineHash, model.pipeline);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  additionalBindables: undefined,\n  bindGroup: null,\n  device: null,\n  fragmentShaderTemplate: null,\n  numberOfInstances: 1,\n  numberOfVertices: 0,\n  pipelineHash: null,\n  shaderReplacements: null,\n  SSBO: null,\n  textureViews: null,\n  topology: 'triangle-list',\n  UBO: null,\n  vertexShaderTemplate: null,\n  WebGPURenderer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  model.textureViews = [];\n  model.vertexInput = vtkWebGPUVertexInput.newInstance();\n  model.bindGroup = vtkWebGPUBindGroup.newInstance({\n    label: 'mapperBG'\n  });\n  model.additionalBindables = [];\n  model.fragmentShaderTemplate = model.fragmentShaderTemplate || vtkWebGPUMapperHelperFS;\n  model.vertexShaderTemplate = model.vertexShaderTemplate || vtkWebGPUMapperHelperVS;\n  model.shaderReplacements = new Map(); // Build VTK API\n\n  macro.get(publicAPI, model, ['vertexInput']);\n  macro.setGet(publicAPI, model, ['additionalBindables', 'device', 'fragmentShaderTemplate', 'interpolate', 'numberOfInstances', 'numberOfVertices', 'pipelineHash', 'shaderReplacements', 'SSBO', 'textureViews', 'topology', 'UBO', 'vertexShaderTemplate', 'WebGPURenderer']); // Object methods\n\n  vtkWebGPUMapperHelper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUMapperHelper'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUMapperHelper$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUMapperHelper$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUMapperHelper from './MapperHelper.js';\n\n// vtkWebGPUFullScreenQuad methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUFullScreenQuad(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUFullScreenQuad');\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);']).result;\n    vDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n  var superclassBuild = publicAPI.build;\n\n  publicAPI.build = function (renderEncoder, device) {\n    var buff = device.getBufferManager().getFullScreenQuadBuffer();\n    model.vertexInput.addBuffer(buff, ['vertexBC']);\n    model.numberOfVertices = 6;\n    superclassBuild(renderEncoder, device);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUMapperHelper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUFullScreenQuad(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUFullScreenQuad'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUFullScreenQuad$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUFullScreenQuad$1 as default, extend, newInstance };\n", "var BufferUsage = {\n  Verts: 0,\n  Lines: 1,\n  Triangles: 2,\n  Strips: 3,\n  LinesFromStrips: 4,\n  LinesFromTriangles: 5,\n  Points: 6,\n  UniformArray: 7,\n  PointArray: 8,\n  NormalsFromPoints: 9,\n  Texture: 10,\n  RawVertex: 11,\n  Storage: 12,\n  CellIndex: 13\n};\nvar PrimitiveTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Triangles: 2,\n  TriangleStrips: 3,\n  TriangleEdges: 4,\n  TriangleStripEdges: 5,\n  End: 6\n};\nvar Constants = {\n  BufferUsage: BufferUsage,\n  PrimitiveTypes: PrimitiveTypes\n};\n\nexport { BufferUsage, PrimitiveTypes, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferManager/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\n\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  var byteCount = srcArrayBuffer.byteLength;\n  var srcBuffer = device.createBuffer({\n    size: byteCount,\n\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  var arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n\n  srcBuffer.unmap();\n  var encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  var commandBuffer = encoder.finish();\n  var queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n\n  publicAPI.create = function (sizeInBytes, usage) {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage: usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n\n  publicAPI.write = function (data) {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n\n  publicAPI.createAndWrite = function (data, usage) {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage: usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n\n    model.handle.unmap();\n  }; // simple forwarders\n\n\n  var _loop = function _loop(i) {\n    publicAPI[forwarded[i]] = function () {\n      var _model$handle;\n\n      return (_model$handle = model.handle)[forwarded[i]].apply(_model$handle, arguments);\n    };\n  };\n\n  for (var i = 0; i < forwarded.length; i++) {\n    _loop(i);\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBuffer$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkWebGPUBuffer$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport PropertyConst from './Property/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Representation = PropertyConst.Representation,\n    Interpolation = PropertyConst.Interpolation;\n\nfunction notImplemented(method) {\n  return function () {\n    return macro.vtkErrorMacro(\"vtkProperty::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkProperty methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProperty');\n\n  publicAPI.setColor = function (r, g, b) {\n    if (Array.isArray(r)) {\n      if (model.color[0] !== r[0] || model.color[1] !== r[1] || model.color[2] !== r[2]) {\n        model.color[0] = r[0];\n        model.color[1] = r[1];\n        model.color[2] = r[2];\n        publicAPI.modified();\n      }\n    } else if (model.color[0] !== r || model.color[1] !== g || model.color[2] !== b) {\n      model.color[0] = r;\n      model.color[1] = g;\n      model.color[2] = b;\n      publicAPI.modified();\n    }\n\n    publicAPI.setDiffuseColor(model.color);\n    publicAPI.setAmbientColor(model.color);\n    publicAPI.setSpecularColor(model.color);\n  };\n\n  publicAPI.computeCompositeColor = notImplemented('ComputeCompositeColor');\n\n  publicAPI.getColor = function () {\n    // Inline computeCompositeColor\n    var norm = 0.0;\n\n    if (model.ambient + model.diffuse + model.specular > 0) {\n      norm = 1.0 / (model.ambient + model.diffuse + model.specular);\n    }\n\n    for (var i = 0; i < 3; i++) {\n      model.color[i] = norm * (model.ambient * model.ambientColor[i] + model.diffuse * model.diffuseColor[i] + model.specular * model.specularColor[i]);\n    }\n\n    return [].concat(model.color);\n  };\n\n  publicAPI.addShaderVariable = notImplemented('AddShaderVariable');\n\n  publicAPI.setInterpolationToFlat = function () {\n    return publicAPI.setInterpolation(Interpolation.FLAT);\n  };\n\n  publicAPI.setInterpolationToGouraud = function () {\n    return publicAPI.setInterpolation(Interpolation.GOURAUD);\n  };\n\n  publicAPI.setInterpolationToPhong = function () {\n    return publicAPI.setInterpolation(Interpolation.PHONG);\n  };\n\n  publicAPI.getInterpolationAsString = function () {\n    return macro.enumToString(Interpolation, model.interpolation);\n  };\n\n  publicAPI.setRepresentationToWireframe = function () {\n    return publicAPI.setRepresentation(Representation.WIREFRAME);\n  };\n\n  publicAPI.setRepresentationToSurface = function () {\n    return publicAPI.setRepresentation(Representation.SURFACE);\n  };\n\n  publicAPI.setRepresentationToPoints = function () {\n    return publicAPI.setRepresentation(Representation.POINTS);\n  };\n\n  publicAPI.getRepresentationAsString = function () {\n    return macro.enumToString(Representation, model.representation);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  color: [1, 1, 1],\n  ambientColor: [1, 1, 1],\n  diffuseColor: [1, 1, 1],\n  specularColor: [1, 1, 1],\n  edgeColor: [0, 0, 0],\n  ambient: 0,\n  diffuse: 1,\n  specular: 0,\n  specularPower: 1,\n  opacity: 1,\n  interpolation: Interpolation.GOURAUD,\n  representation: Representation.SURFACE,\n  edgeVisibility: false,\n  backfaceCulling: false,\n  frontfaceCulling: false,\n  pointSize: 1,\n  lineWidth: 1,\n  lighting: true,\n  shading: false,\n  materialName: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['lighting', 'interpolation', 'ambient', 'diffuse', 'specular', 'specularPower', 'opacity', 'edgeVisibility', 'lineWidth', 'pointSize', 'backfaceCulling', 'frontfaceCulling', 'representation']);\n  macro.setGetArray(publicAPI, model, ['ambientColor', 'specularColor', 'diffuseColor', 'edgeColor'], 3); // Object methods\n\n  vtkProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkProperty'); // ----------------------------------------------------------------------------\n\nvar vtkProperty$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, PropertyConst);\n\nexport { vtkProperty$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj, setGet, newTypedArray, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport { j as cross, l as normalize } from '../../Common/Core/Math/index.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUTypes from './Types.js';\nimport vtkProperty from '../Core/Property.js';\nimport Constants from './BufferManager/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar BufferUsage = Constants.BufferUsage,\n    PrimitiveTypes = Constants.PrimitiveTypes;\nvar Representation = vtkProperty.Representation;\nvar vtkDebugMacro = vtkDebugMacro$1; // the webgpu constants all show up as undefined\n\n/* eslint-disable no-undef */\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {};\nvar cellCounters = {\n  // easy, every input point becomes an output point\n  anythingToPoints: function anythingToPoints(numPoints, cellPts) {\n    return numPoints;\n  },\n  linesToWireframe: function linesToWireframe(numPoints, cellPts) {\n    if (numPoints > 1) {\n      return (numPoints - 1) * 2;\n    }\n\n    return 0;\n  },\n  polysToWireframe: function polysToWireframe(numPoints, cellPts) {\n    if (numPoints > 2) {\n      return numPoints * 2;\n    }\n\n    return 0;\n  },\n  stripsToWireframe: function stripsToWireframe(numPoints, cellPts) {\n    if (numPoints > 2) {\n      return numPoints * 4 - 6;\n    }\n\n    return 0;\n  },\n  polysToSurface: function polysToSurface(npts, cellPts) {\n    if (npts > 2) {\n      return (npts - 2) * 3;\n    }\n\n    return 0;\n  },\n  stripsToSurface: function stripsToSurface(npts, cellPts, offset) {\n    if (numPoints > 2) {\n      return (npts - 2) * 3;\n    }\n\n    return 0;\n  }\n};\n\nfunction getPrimitiveName(primType) {\n  switch (primType) {\n    case PrimitiveTypes.Points:\n      return 'points';\n\n    case PrimitiveTypes.Lines:\n      return 'lines';\n\n    case PrimitiveTypes.Triangles:\n    case PrimitiveTypes.TriangleEdges:\n      return 'polys';\n\n    case PrimitiveTypes.TriangleStripEdges:\n    case PrimitiveTypes.TriangleStrips:\n      return 'strips';\n\n    default:\n      return '';\n  }\n}\n\nfunction getOutputSize(cellArray, representation, inRepName) {\n  var countFunc = null;\n\n  if (representation === Representation.POINTS || inRepName === 'points') {\n    countFunc = cellCounters.anythingToPoints;\n  } else if (representation === Representation.WIREFRAME || inRepName === 'lines') {\n    countFunc = cellCounters[\"\".concat(inRepName, \"ToWireframe\")];\n  } else {\n    countFunc = cellCounters[\"\".concat(inRepName, \"ToSurface\")];\n  }\n\n  var array = cellArray.getData();\n  var size = array.length;\n  var caboCount = 0;\n\n  for (var index = 0; index < size;) {\n    caboCount += countFunc(array[index], array);\n    index += array[index] + 1;\n  }\n\n  return caboCount;\n}\n\nfunction packArray(cellArray, primType, representation, inArray, outputType, options) {\n  var result = {\n    elementCount: 0,\n    blockSize: 0,\n    stride: 0\n  };\n\n  if (!cellArray.getData() || !cellArray.getData().length) {\n    return result;\n  } // setup shift and scale\n\n\n  var shift = [0.0, 0.0, 0.0, 0.0];\n\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n\n  var scale = [1.0, 1.0, 1.0, 1.0];\n\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n\n  var packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  var pointData = inArray.getData();\n  var addAPoint;\n  var cellBuilders = {\n    // easy, every input point becomes an output point\n    anythingToPoints: function anythingToPoints(numPoints, cellPts, offset, cellId) {\n      for (var i = 0; i < numPoints; ++i) {\n        addAPoint(cellPts[offset + i], cellId);\n      }\n    },\n    linesToWireframe: function linesToWireframe(numPoints, cellPts, offset, cellId) {\n      // for lines we add a bunch of segments\n      for (var i = 0; i < numPoints - 1; ++i) {\n        addAPoint(cellPts[offset + i], cellId);\n        addAPoint(cellPts[offset + i + 1], cellId);\n      }\n    },\n    polysToWireframe: function polysToWireframe(numPoints, cellPts, offset, cellId) {\n      // for polys we add a bunch of segments and close it\n      if (numPoints > 2) {\n        for (var i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i], cellId);\n          addAPoint(cellPts[offset + (i + 1) % numPoints], cellId);\n        }\n      }\n    },\n    stripsToWireframe: function stripsToWireframe(numPoints, cellPts, offset, cellId) {\n      if (numPoints > 2) {\n        // for strips we add a bunch of segments and close it\n        for (var i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i], cellId);\n          addAPoint(cellPts[offset + i + 1], cellId);\n        }\n\n        for (var _i = 0; _i < numPoints - 2; _i++) {\n          addAPoint(cellPts[offset + _i], cellId);\n          addAPoint(cellPts[offset + _i + 2], cellId);\n        }\n      }\n    },\n    polysToSurface: function polysToSurface(npts, cellPts, offset, cellId) {\n      for (var i = 0; i < npts - 2; i++) {\n        addAPoint(cellPts[offset + 0], cellId);\n        addAPoint(cellPts[offset + i + 1], cellId);\n        addAPoint(cellPts[offset + i + 2], cellId);\n      }\n    },\n    stripsToSurface: function stripsToSurface(npts, cellPts, offset, cellId) {\n      for (var i = 0; i < npts - 2; i++) {\n        addAPoint(cellPts[offset + i], cellId);\n        addAPoint(cellPts[offset + i + 1 + i % 2], cellId);\n        addAPoint(cellPts[offset + i + 1 + (i + 1) % 2], cellId);\n      }\n    }\n  };\n  var inRepName = getPrimitiveName(primType);\n  var func = null;\n\n  if (representation === Representation.POINTS || primType === PrimitiveTypes.Points) {\n    func = cellBuilders.anythingToPoints;\n  } else if (representation === Representation.WIREFRAME || primType === PrimitiveTypes.Lines) {\n    func = cellBuilders[\"\".concat(inRepName, \"ToWireframe\")];\n  } else {\n    func = cellBuilders[\"\".concat(inRepName, \"ToSurface\")];\n  }\n\n  var array = cellArray.getData();\n  var size = array.length;\n  var caboCount = getOutputSize(cellArray, representation, inRepName);\n  var vboidx = 0;\n  var numComp = inArray.getNumberOfComponents();\n  var packedVBO = newTypedArray(outputType, caboCount * (numComp + (packExtra ? 1 : 0))); // pick the right function based on point versus cell data\n\n  var getData = function getData(ptId, cellId) {\n    return pointData[ptId];\n  };\n\n  if (options.cellData) {\n    getData = function getData(ptId, cellId) {\n      return pointData[cellId];\n    };\n  } // add data based on number of components\n\n\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i, cellid) {\n      packedVBO[vboidx++] = scale[0] * getData(i, cellid) + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i, cellid) {\n      packedVBO[vboidx++] = scale[0] * getData(i * 2, cellid * 2) + shift[0];\n      packedVBO[vboidx++] = scale[1] * getData(i * 2 + 1, cellid * 2 + 1) + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i, cellid) {\n      packedVBO[vboidx++] = scale[0] * getData(i * 3, cellid * 3) + shift[0];\n      packedVBO[vboidx++] = scale[1] * getData(i * 3 + 1, cellid * 3 + 1) + shift[1];\n      packedVBO[vboidx++] = scale[2] * getData(i * 3 + 2, cellid * 3 + 2) + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i, cellid) {\n      packedVBO[vboidx++] = scale[0] * getData(i * 3, cellid * 3) + shift[0];\n      packedVBO[vboidx++] = scale[1] * getData(i * 3 + 1, cellid * 3 + 1) + shift[1];\n      packedVBO[vboidx++] = scale[2] * getData(i * 3 + 2, cellid * 3 + 2) + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i, cellid) {\n      packedVBO[vboidx++] = scale[0] * getData(i * 4, cellid * 4) + shift[0];\n      packedVBO[vboidx++] = scale[1] * getData(i * 4 + 1, cellid * 4 + 1) + shift[1];\n      packedVBO[vboidx++] = scale[2] * getData(i * 4 + 2, cellid * 4 + 2) + shift[2];\n      packedVBO[vboidx++] = scale[3] * getData(i * 4 + 3, cellid * 4 + 3) + shift[3];\n    };\n  }\n\n  var cellId = options.cellOffset;\n\n  for (var index = 0; index < size;) {\n    func(array[index], array, index + 1, cellId);\n    index += array[index] + 1;\n    cellId++;\n  }\n\n  result.nativeArray = packedVBO;\n  result.elementCount = caboCount;\n  return result;\n}\n\nfunction getNormal(pointData, i0, i1, i2) {\n  var v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var result = [];\n  cross(v1, v2, result);\n  normalize(result);\n  return result;\n}\n\nfunction generateNormals(cellArray, primType, representation, inArray) {\n  if (!cellArray.getData() || !cellArray.getData().length) {\n    return null;\n  }\n\n  var pointData = inArray.getData();\n  var addAPoint;\n  var cellBuilders = {\n    polysToPoints: function polysToPoints(numPoints, cellPts, offset) {\n      var normal = getNormal(pointData, cellPts[offset], cellPts[offset + 1], cellPts[offset + 2]);\n\n      for (var i = 0; i < numPoints; ++i) {\n        addAPoint(normal);\n      }\n    },\n    polysToWireframe: function polysToWireframe(numPoints, cellPts, offset) {\n      // for polys we add a bunch of segments and close it\n      // compute the normal\n      var normal = getNormal(pointData, cellPts[offset], cellPts[offset + 1], cellPts[offset + 2]);\n\n      for (var i = 0; i < numPoints; ++i) {\n        addAPoint(normal);\n        addAPoint(normal);\n      }\n    },\n    polysToSurface: function polysToSurface(npts, cellPts, offset) {\n      if (npts < 3) {\n        // ignore degenerate triangles\n        vtkDebugMacro('skipping degenerate triangle');\n      } else {\n        // compute the normal\n        var normal = getNormal(pointData, cellPts[offset], cellPts[offset + 1], cellPts[offset + 2]);\n\n        for (var i = 0; i < npts - 2; i++) {\n          addAPoint(normal);\n          addAPoint(normal);\n          addAPoint(normal);\n        }\n      }\n    }\n  };\n  var primName = getPrimitiveName(primType);\n  var func = null;\n\n  if (representation === Representation.POINTS) {\n    func = cellBuilders[\"\".concat(primName, \"ToPoints\")];\n  } else if (representation === Representation.WIREFRAME) {\n    func = cellBuilders[\"\".concat(primName, \"ToWireframe\")];\n  } else {\n    func = cellBuilders[\"\".concat(primName, \"ToSurface\")];\n  }\n\n  var caboCount = getOutputSize(cellArray, representation, primName);\n  var vboidx = 0;\n  var packedVBO = new Int8Array(caboCount * 4);\n\n  addAPoint = function addAPointFunc(normal) {\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n  };\n\n  var array = cellArray.getData();\n  var size = array.length;\n\n  for (var index = 0; index < size;) {\n    func(array[index], array, index + 1);\n    index += array[index] + 1;\n  }\n\n  return packedVBO;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    } // create one\n\n\n    var buffer = vtkWebGPUBuffer.newInstance({\n      label: req.label\n    });\n    buffer.setDevice(model.device);\n    var gpuUsage = null; // handle uniform buffers\n\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle storage buffers\n\n\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle textures\n\n\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n    // handle point data\n\n\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      var result = packArray(req.cells, req.primitiveType, req.representation, req.dataArray, arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    } // handle normals from points, snorm8x4\n\n\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var normals = generateNormals(req.cells, req.primitiveType, req.representation, req.dataArray);\n      buffer.createAndWrite(normals, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n\n    buffer.setSourceTime(req.time);\n    return buffer;\n  } // is the buffer already present?\n\n\n  publicAPI.hasBuffer = function (req) {\n    if (req.owner) {\n      // if a matching buffer already exists then return true\n      var hash = req.time + req.format + req.usage + req.hash;\n      return model.device.hasCachedObject(req.owner, hash);\n    }\n\n    return false;\n  };\n\n  publicAPI.getBuffer = function (req) {\n    // if we have a source the get/create/cache the buffer\n    if (req.owner) {\n      // if a matching buffer already exists then return it\n      var hash = req.time + req.format + req.usage + req.hash;\n      return model.device.getCachedObject(req.owner, hash, _createBuffer, req);\n    }\n\n    return _createBuffer(req);\n  };\n\n  publicAPI.getFullScreenQuadBuffer = function () {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device); // prettier-ignore\n\n    var array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBufferManager$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkWebGPUBufferManager$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nvar BufferUsage = vtkWebGPUBufferManager.BufferUsage;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkWebGPUUniformBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUUniformBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUUniformBuffer');\n\n  publicAPI.addEntry = function (name, type) {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(\"entry named \".concat(name, \" already exists\"));\n      return;\n    }\n\n    model.sortDirty = true;\n\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n\n    model.bufferEntries.push({\n      name: name,\n      type: type,\n      sizeInBytes: vtkWebGPUTypes.getByteStrideFromShaderFormat(type),\n      offset: -1,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type),\n      packed: false\n    });\n  }; // UBOs have layout rules in terms of how memory is aligned so we\n  // have to be careful how we order the entries. For example a vec4<f32>\n  // must be aligned on a 16 byte offset, etc. See\n  // https://gpuweb.github.io/gpuweb/wgsl/#memory-layouts\n  // for more details. Right now you can create a situation that would fail\n  // in the future we could add dummy spacer entries where needed to\n  // handle alignment issues\n\n\n  publicAPI.sortBufferEntries = function () {\n    if (!model.sortDirty) {\n      return;\n    }\n\n    var currOffset = 0;\n    var newEntries = []; // compute the max alignment, this is required as WebGPU defines a UBO to have\n    // a size that is a multiple of the maxAlignment\n\n    var maxAlignment = 4;\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n\n      if (entry.sizeInBytes % 16 === 0) {\n        maxAlignment = Math.max(16, maxAlignment);\n      }\n\n      if (entry.sizeInBytes % 8 === 0) {\n        maxAlignment = Math.max(8, maxAlignment);\n      }\n    } // pack anything whose size is a multiple of 16 bytes first\n    // this includes a couple types that don't require 16 byte alignment\n    // such as mat2x2<f32> but that is OK\n\n\n    for (var _i = 0; _i < model.bufferEntries.length; _i++) {\n      var _entry = model.bufferEntries[_i];\n\n      if (_entry.packed === false && _entry.sizeInBytes % 16 === 0) {\n        _entry.packed = true;\n        _entry.offset = currOffset;\n        newEntries.push(_entry);\n        currOffset += _entry.sizeInBytes;\n      }\n    } // now it gets tough, we have the following common types (f32, i32, u32)\n    // - vec2<f32> 8 byte size, 8 byte alignment\n    // - vec3<f32> 12 byte size, 16 byte alignment\n    // - f32 4 byte size, 4 byte alignment\n    // try adding 12 byte, 4 byte pairs\n\n\n    for (var _i2 = 0; _i2 < model.bufferEntries.length; _i2++) {\n      var _entry2 = model.bufferEntries[_i2];\n\n      if (_entry2.packed === false && _entry2.sizeInBytes === 12) {\n        for (var i2 = 0; i2 < model.bufferEntries.length; i2++) {\n          var entry2 = model.bufferEntries[i2];\n\n          if (entry2.packed === false && entry2.sizeInBytes === 4) {\n            _entry2.packed = true;\n            _entry2.offset = currOffset;\n            newEntries.push(_entry2);\n            currOffset += _entry2.sizeInBytes;\n            entry2.packed = true;\n            entry2.offset = currOffset;\n            newEntries.push(entry2);\n            currOffset += entry2.sizeInBytes;\n            break;\n          }\n        }\n      }\n    } // try adding 8 byte, 8 byte pairs\n\n\n    for (var _i3 = 0; _i3 < model.bufferEntries.length; _i3++) {\n      var _entry3 = model.bufferEntries[_i3];\n\n      if (!_entry3.packed && _entry3.sizeInBytes % 8 === 0) {\n        for (var _i4 = _i3 + 1; _i4 < model.bufferEntries.length; _i4++) {\n          var _entry4 = model.bufferEntries[_i4];\n\n          if (!_entry4.packed && _entry4.sizeInBytes % 8 === 0) {\n            _entry3.packed = true;\n            _entry3.offset = currOffset;\n            newEntries.push(_entry3);\n            currOffset += _entry3.sizeInBytes;\n            _entry4.packed = true;\n            _entry4.offset = currOffset;\n            newEntries.push(_entry4);\n            currOffset += _entry4.sizeInBytes;\n            break;\n          }\n        }\n      }\n    } // try adding 8 byte, 4 byte 4 byte triplets\n\n\n    for (var _i5 = 0; _i5 < model.bufferEntries.length; _i5++) {\n      var _entry5 = model.bufferEntries[_i5];\n\n      if (!_entry5.packed && _entry5.sizeInBytes % 8 === 0) {\n        var found = false;\n\n        for (var _i6 = 0; !found && _i6 < model.bufferEntries.length; _i6++) {\n          var _entry6 = model.bufferEntries[_i6];\n\n          if (!_entry6.packed && _entry6.sizeInBytes === 4) {\n            for (var i3 = _i6 + 1; i3 < model.bufferEntries.length; i3++) {\n              var entry3 = model.bufferEntries[i3];\n\n              if (!entry3.packed && entry3.sizeInBytes === 4) {\n                _entry5.packed = true;\n                _entry5.offset = currOffset;\n                newEntries.push(_entry5);\n                currOffset += _entry5.sizeInBytes;\n                _entry6.packed = true;\n                _entry6.offset = currOffset;\n                newEntries.push(_entry6);\n                currOffset += _entry6.sizeInBytes;\n                entry3.packed = true;\n                entry3.offset = currOffset;\n                newEntries.push(entry3);\n                currOffset += entry3.sizeInBytes;\n                found = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n    } // Add anything remaining that is larger than 4 bytes and hope we get lucky.\n    // Likely if there is more than one item added here it will result\n    // in a failed UBO\n\n\n    for (var _i7 = 0; _i7 < model.bufferEntries.length; _i7++) {\n      var _entry7 = model.bufferEntries[_i7];\n\n      if (!_entry7.packed && _entry7.sizeInBytes > 4) {\n        _entry7.packed = true;\n        _entry7.offset = currOffset;\n        newEntries.push(_entry7);\n        currOffset += _entry7.sizeInBytes;\n      }\n    } // finally add remaining 4 byte items\n\n\n    for (var _i8 = 0; _i8 < model.bufferEntries.length; _i8++) {\n      var _entry8 = model.bufferEntries[_i8];\n\n      if (!_entry8.packed) {\n        _entry8.packed = true;\n        _entry8.offset = currOffset;\n        newEntries.push(_entry8);\n        currOffset += _entry8.sizeInBytes;\n      }\n    } // update entries and entryNames\n\n\n    model.bufferEntries = newEntries;\n\n    model._bufferEntryNames.clear();\n\n    for (var _i9 = 0; _i9 < model.bufferEntries.length; _i9++) {\n      model._bufferEntryNames.set(model.bufferEntries[_i9].name, _i9);\n    }\n\n    model.sizeInBytes = currOffset;\n    model.sizeInBytes = maxAlignment * Math.ceil(model.sizeInBytes / maxAlignment);\n    model.sortDirty = false;\n  };\n\n  publicAPI.sendIfNeeded = function (device) {\n    if (!model.UBO) {\n      var req = {\n        nativeArray: model.Float32Array,\n        time: 0,\n        usage: BufferUsage.UniformArray,\n        label: model.label\n      };\n      model.UBO = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n      model.sendDirty = false;\n    } // send data down if needed\n\n\n    if (model.sendDirty) {\n      device.getHandle().queue.writeBuffer(model.UBO.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes);\n      model.sendDirty = false;\n    } // always updated as mappers depend on this time\n    // it is more of a sentIfNeededTime\n\n\n    model.sendTime.modified();\n  };\n\n  publicAPI.createView = function (type) {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes);\n      }\n\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n\n  publicAPI.setValue = function (name, val) {\n    publicAPI.sortBufferEntries();\n\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n\n    if (entry.lastValue !== val) {\n      view[entry.offset / view.BYTES_PER_ELEMENT] = val;\n      model.sendDirty = true;\n    }\n\n    entry.lastValue = val;\n  };\n\n  publicAPI.setArray = function (name, arr) {\n    publicAPI.sortBufferEntries();\n\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var changed = false;\n\n    for (var i = 0; i < arr.length; i++) {\n      if (!entry.lastValue || entry.lastValue[i] !== arr[i]) {\n        view[entry.offset / view.BYTES_PER_ELEMENT + i] = arr[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      model.sendDirty = true;\n      entry.lastValue = _toConsumableArray(arr);\n    }\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: {\n        buffer: model.UBO.getHandle()\n      }\n    };\n    return foo;\n  };\n\n  publicAPI.getSendTime = function () {\n    return model.sendTime.getMTime();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    // sort the entries\n    publicAPI.sortBufferEntries();\n    var lines = [\"struct \".concat(model.label, \"Struct\\n{\")];\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n      lines.push(\"  \".concat(entry.name, \": \").concat(entry.type, \";\"));\n    }\n\n    lines.push(\"};\\n@binding(\".concat(binding, \") @group(\").concat(group, \") var<uniform> \").concat(model.label, \": \").concat(model.label, \"Struct;\"));\n    return lines.join('\\n');\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  bindGroupLayoutEntry: null,\n  bindGroupEntry: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Internal objects\n\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = []; // default UBO desc\n\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'uniform'\n    }\n  };\n  model.sendTime = {};\n  macro.obj(model.sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  model.sendDirty = true;\n  model.sortDirty = true;\n  macro.get(publicAPI, model, ['binding', 'bindGroupTime']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label', 'sizeInBytes']); // Object methods\n\n  vtkWebGPUUniformBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUUniformBuffer'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUUniformBuffer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUUniformBuffer$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, get, getArray, setGet, vtkDebugMacro as vtkDebugMacro$1 } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkWebGPUBindGroup from './BindGroup.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar vtkDebugMacro = vtkDebugMacro$1;\nvar clearFragTemplate = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@stage(fragment)\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  var computedColor: vec4<f32> = mapperUBO.BackgroundColor;\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\"; // ----------------------------------------------------------------------------\n// vtkWebGPURenderer methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-bitwise */\n\nfunction vtkWebGPURenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderer'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.camera = model.renderable.getActiveCamera();\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.camera);\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n      model.webgpuCamera = publicAPI.getViewNodeFor(model.camera);\n      publicAPI.updateStabilizedMatrix();\n    }\n  };\n\n  publicAPI.updateStabilizedMatrix = function () {\n    // This method is designed to help with floating point\n    // issues when rendering datasets that push the limits of\n    // resolutions on float.\n    //\n    // One of the most common cases is when the dataset is located far\n    // away from the origin relative to the clipping range we are looking\n    // at. For that case we want to perform the floating point sensitive\n    // multiplications on the CPU in double. To this end we want the\n    // vertex rendering ops to look something like\n    //\n    // Compute shifted points and load those into the VBO\n    // pointCoordsSC = WorldToStabilizedMatrix * pointCoords;\n    //\n    // In the vertex shader do the following\n    // positionVC = StabilizedToDeviceMatrix * ModelToStabilizedMatrix*vertexIn;\n    //\n    // We use two matrices because it is expensive to change the\n    // WorldToStabilized matrix as we have to reupload all pointCoords\n    // So that matrix (MCSCMatrix) is fairly static, the Stabilized to\n    // Device matrix is the one that gets updated every time the camera\n    // changes.\n    //\n    // The basic idea is that we should translate the data so that\n    // when the center of the view frustum moves a lot\n    // we recenter it. The center of the view frustum is roughly\n    // camPos + dirOfProj*(far + near)*0.5\n    var clipRange = model.camera.getClippingRange();\n    var pos = model.camera.getPositionByReference();\n    var dop = model.camera.getDirectionOfProjectionByReference();\n    var center = [];\n    var offset = [];\n    vec3.scale(offset, dop, 0.5 * (clipRange[0] + clipRange[1]));\n    vec3.add(center, pos, offset);\n    vec3.sub(offset, center, model.stabilizedCenter);\n    var length = vec3.len(offset);\n\n    if (length / (clipRange[1] - clipRange[0]) > model.recenterThreshold) {\n      model.stabilizedCenter = center;\n      model.stabilizedTime.modified();\n    }\n  };\n\n  publicAPI.updateLights = function () {\n    var count = 0;\n    var lights = model.renderable.getLightsByReference();\n\n    for (var index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n\n    return count;\n  }; // register pipeline callbacks from a mapper\n\n\n  publicAPI.registerPipelineCallback = function (pipeline, cb) {\n    // if there is a matching pipeline just add the cb\n    for (var i = 0; i < model.pipelineCallbacks.length; i++) {\n      if (model.pipelineCallbacks[i].pipeline === pipeline) {\n        model.pipelineCallbacks[i].callbacks.push(cb);\n        return;\n      }\n    }\n\n    model.pipelineCallbacks.push({\n      pipeline: pipeline,\n      callbacks: [cb]\n    });\n  };\n\n  publicAPI.updateUBO = function () {\n    // make sure the data is up to date\n    // has the camera changed?\n    var utime = model.UBO.getSendTime();\n\n    if (model._parent.getMTime() > utime || publicAPI.getMTime() > utime || model.camera.getMTime() > utime || model.renderable.getMTime() > utime) {\n      var keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\n      model.UBO.setArray('WCVCMatrix', keyMats.wcvc);\n      model.UBO.setArray('SCPCMatrix', keyMats.scpc);\n      model.UBO.setArray('PCSCMatrix', keyMats.pcsc);\n      model.UBO.setArray('SCVCMatrix', keyMats.scvc);\n      model.UBO.setArray('VCPCMatrix', keyMats.vcpc);\n      model.UBO.setArray('WCVCNormals', keyMats.normalMatrix);\n      var tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\n      model.UBO.setArray('viewportSize', [tsize.usize, tsize.vsize]);\n      model.UBO.setValue('cameraParallel', model.camera.getParallelProjection());\n\n      var device = model._parent.getDevice();\n\n      model.UBO.sendIfNeeded(device);\n    }\n  };\n\n  publicAPI.scissorAndViewport = function (encoder) {\n    var tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\n    encoder.getHandle().setViewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize, 0.0, 1.0); // set scissor\n\n    encoder.getHandle().setScissorRect(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n  };\n\n  publicAPI.bindUBO = function (renderEncoder) {\n    renderEncoder.activateBindGroup(model.bindGroup);\n  }; // Renders myself\n\n\n  publicAPI.opaquePass = function (prepass) {\n    if (prepass) {\n      // clear last pipelines\n      model.pipelineCallbacks = [];\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n      publicAPI.updateUBO();\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder);\n      publicAPI.clear(); // loop over registered pipelines\n\n      for (var i = 0; i < model.pipelineCallbacks.length; i++) {\n        var pStruct = model.pipelineCallbacks[i];\n        var pl = pStruct.pipeline;\n        model.renderEncoder.setPipeline(pl);\n        publicAPI.bindUBO(model.renderEncoder);\n\n        for (var cb = 0; cb < pStruct.callbacks.length; cb++) {\n          pStruct.callbacks[cb](model.renderEncoder);\n        }\n      }\n\n      model.renderEncoder.end();\n    }\n  };\n\n  publicAPI.clear = function () {\n    if (model.renderable.getTransparent() || model.suppressClear) {\n      return;\n    }\n\n    var device = model._parent.getDevice();\n\n    if (!model.clearFSQ) {\n      model.clearFSQ = vtkWebGPUFullScreenQuad.newInstance();\n      model.clearFSQ.setDevice(device);\n      model.clearFSQ.setPipelineHash('clearfsq');\n      model.clearFSQ.setFragmentShaderTemplate(clearFragTemplate);\n      var ubo = vtkWebGPUUniformBuffer.newInstance({\n        label: 'mapperUBO'\n      });\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\n      model.clearFSQ.setUBO(ubo);\n    }\n\n    var background = model.renderable.getBackgroundByReference();\n    model.clearFSQ.getUBO().setArray('BackgroundColor', background);\n    model.clearFSQ.getUBO().sendIfNeeded(device);\n    model.clearFSQ.render(model.renderEncoder, device);\n  };\n\n  publicAPI.translucentPass = function (prepass) {\n    if (prepass) {\n      // clear last pipelines\n      model.pipelineCallbacks = [];\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder); // loop over registered pipelines\n\n      for (var i = 0; i < model.pipelineCallbacks.length; i++) {\n        var pStruct = model.pipelineCallbacks[i];\n        var pl = pStruct.pipeline;\n        model.renderEncoder.setPipeline(pl);\n        publicAPI.bindUBO(model.renderEncoder);\n\n        for (var cb = 0; cb < pStruct.callbacks.length; cb++) {\n          pStruct.callbacks[cb](model.renderEncoder);\n        }\n      }\n\n      model.renderEncoder.end();\n    }\n  };\n\n  publicAPI.volumeDepthRangePass = function (prepass) {\n    if (prepass) {\n      // clear last pipelines\n      model.pipelineCallbacks = [];\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder); // loop over registered pipelines\n\n      for (var i = 0; i < model.pipelineCallbacks.length; i++) {\n        var pStruct = model.pipelineCallbacks[i];\n        var pl = pStruct.pipeline;\n        model.renderEncoder.setPipeline(pl);\n        publicAPI.bindUBO(model.renderEncoder);\n\n        for (var cb = 0; cb < pStruct.callbacks.length; cb++) {\n          pStruct.callbacks[cb](model.renderEncoder);\n        }\n      }\n\n      model.renderEncoder.end();\n    }\n  };\n\n  publicAPI.getAspectRatio = function () {\n    var size = model._parent.getSizeByReference();\n\n    var viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n\n  publicAPI.convertToOpenGLDepth = function (val) {\n    return model.webgpuCamera.convertToOpenGLDepth(val);\n  };\n\n  publicAPI.getYInvertedTiledSizeAndOrigin = function () {\n    var res = publicAPI.getTiledSizeAndOrigin();\n\n    var size = model._parent.getSizeByReference();\n\n    res.lowerLeftV = size[1] - res.vsize - res.lowerLeftV;\n    return res;\n  };\n\n  publicAPI.getTiledSizeAndOrigin = function () {\n    var vport = model.renderable.getViewportByReference(); // if there is no window assume 0 1\n\n    var tileViewPort = [0.0, 0.0, 1.0, 1.0]; // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu = vport[0] - tileViewPort[0];\n    var vpv = vport[1] - tileViewPort[1]; // store the result as a pixel value\n\n    var ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n\n    var lowerLeftU = Math.round(ndvp[0]);\n    var lowerLeftV = Math.round(ndvp[1]); // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n\n    var vpu2 = vport[2] - tileViewPort[0];\n    var vpv2 = vport[3] - tileViewPort[1];\n\n    var ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2); // now compute the size of the intersection of the viewport with the\n    // current tile\n\n\n    var usize = Math.round(ndvp2[0]) - lowerLeftU;\n    var vsize = Math.round(ndvp2[1]) - lowerLeftV;\n\n    if (usize < 0) {\n      usize = 0;\n    }\n\n    if (vsize < 0) {\n      vsize = 0;\n    }\n\n    return {\n      usize: usize,\n      vsize: vsize,\n      lowerLeftU: lowerLeftU,\n      lowerLeftV: lowerLeftV\n    };\n  };\n\n  publicAPI.getPropFromID = function (id) {\n    for (var i = 0; i < model.children.length; i++) {\n      var res = model.children[i].getPropID ? model.children[i].getPropID() : -1;\n\n      if (res === id) {\n        return model.children[i];\n      }\n    }\n\n    return null;\n  };\n\n  publicAPI.getStabilizedTime = function () {\n    return model.stabilizedTime.getMTime();\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bindGroup: null,\n  selector: null,\n  renderEncoder: null,\n  recenterThreshold: 20.0,\n  suppressClear: false,\n  stabilizedCenter: [0.0, 0.0, 0.0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.UBO = vtkWebGPUUniformBuffer.newInstance({\n    label: 'rendererUBO'\n  });\n  model.UBO.addEntry('WCVCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('SCPCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('PCSCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('SCVCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('VCPCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('WCVCNormals', 'mat4x4<f32>');\n  model.UBO.addEntry('viewportSize', 'vec2<f32>');\n  model.UBO.addEntry('cameraParallel', 'u32');\n  model.bindGroup = vtkWebGPUBindGroup.newInstance({\n    label: 'rendererBG'\n  });\n  model.bindGroup.setBindables([model.UBO]);\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  model.stabilizedTime = {};\n  obj(model.stabilizedTime, {\n    mtime: 0\n  }); // Build VTK API\n\n  get(publicAPI, model, ['bindGroup', 'stabilizedTime']);\n  getArray(publicAPI, model, ['stabilizedCenter']);\n  setGet(publicAPI, model, ['renderEncoder', 'selector', 'suppressClear', 'UBO']); // Object methods\n\n  vtkWebGPURenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPURenderer'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkRenderer', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nvar BufferUsage = vtkWebGPUBufferManager.BufferUsage;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer - similar to the UniformBuffer class\n// but YOU are responsible for layout issues and alignment.\n// The order you add entries is the order they will be layed out\n// in memory. But you must follow layout rules.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUStorageBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUStorageBuffer');\n\n  publicAPI.addEntry = function (name, type) {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(\"entry named \".concat(name, \" already exists\"));\n      return;\n    }\n\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n\n    var sizeInBytes = vtkWebGPUTypes.getByteStrideFromShaderFormat(type);\n    model.bufferEntries.push({\n      name: name,\n      type: type,\n      sizeInBytes: sizeInBytes,\n      offset: model.sizeInBytes,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type)\n    });\n    model.sizeInBytes += sizeInBytes;\n  };\n\n  publicAPI.send = function (device) {\n    if (!model._buffer) {\n      var req = {\n        nativeArray: model.Float32Array,\n        time: 0,\n        usage: BufferUsage.Storage,\n        label: model.label\n      };\n      model._buffer = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n\n      model._sendTime.modified();\n\n      return;\n    }\n\n    device.getHandle().queue.writeBuffer(model._buffer.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes * model.numberOfInstances);\n\n    model._sendTime.modified();\n  };\n\n  publicAPI.createView = function (type) {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes * model.numberOfInstances);\n      }\n\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n\n  publicAPI.setValue = function (name, instance, val) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    view[(entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT] = val;\n  };\n\n  publicAPI.setArray = function (name, instance, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var ioffset = (entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n    for (var i = 0; i < arr.length; i++) {\n      view[ioffset + i] = arr[i];\n    }\n  };\n\n  publicAPI.setAllInstancesFromArray = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = arr.length / model.numberOfInstances;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i];\n      }\n    }\n  };\n\n  publicAPI.setAllInstancesFromArrayColorToFloat = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = arr.length / model.numberOfInstances;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i] / 255.0;\n      }\n    }\n  };\n\n  publicAPI.setAllInstancesFromArray3x3To4x4 = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = 9;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var j = 0; j < 3; j++) {\n        for (var i = 0; i < 3; i++) {\n          view[ioffset + j * 4 + i] = arr[inst * numComponents + j * 3 + i];\n        }\n      }\n    }\n  };\n\n  publicAPI.getSendTime = function () {\n    return model._sendTime.getMTime();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    var lines = [\"struct \".concat(model.label, \"StructEntry\\n{\")];\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n      lines.push(\"  \".concat(entry.name, \": \").concat(entry.type, \";\"));\n    }\n\n    lines.push(\"\\n};\\nstruct \".concat(model.label, \"Struct\\n{\\n  values: array<\").concat(model.label, \"StructEntry>;\\n};\\n@binding(\").concat(binding, \") @group(\").concat(group, \") var<storage, read> \").concat(model.label, \": \").concat(model.label, \"Struct;\\n\"));\n    return lines.join('\\n');\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: {\n        buffer: model._buffer.getHandle()\n      }\n    };\n    return foo;\n  };\n\n  publicAPI.clearData = function () {\n    model.numberOfInstances = 0;\n    model.sizeInBytes = 0;\n    model.bufferEntries = [];\n    model._bufferEntryNames = new Map();\n    model._buffer = null;\n    delete model.arrayBuffer;\n    delete model.Float32Array;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  numberOfInstances: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Internal objects\n\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = [];\n  model._sendTime = {};\n  macro.obj(model._sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  }); // default SSBO desc\n\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'read-only-storage'\n    }\n  };\n  macro.get(publicAPI, model, ['bindGroupTime']);\n  macro.setGet(publicAPI, model, ['device', 'bindGroupLayoutEntry', 'label', 'numberOfInstances', 'sizeInBytes']); // Object methods\n\n  vtkWebGPUStorageBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUStorageBuffer'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUStorageBuffer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUStorageBuffer$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n/* eslint-disable no-bitwise */\n// ----------------------------------------------------------------------------\n// vtkWebGPUSampler methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUSampler(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUSampler');\n\n  publicAPI.create = function (device) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.device = device;\n    model.options.magFilter = options.magFilter ? options.magFilter : 'nearest';\n    model.options.minFilter = options.minFilter ? options.minFilter : 'nearest';\n    model.options.label = model.label;\n    model.handle = model.device.getHandle().createSampler(model.options);\n    model.bindGroupTime.modified();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    var result = \"@binding(\".concat(binding, \") @group(\").concat(group, \") var \").concat(model.label, \": sampler;\");\n    return result;\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: model.handle\n    };\n    return foo;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null,\n  options: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  model.options = {};\n  model.bindGroupLayoutEntry = {\n    /* eslint-disable no-undef */\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\n    /* eslint-enable no-undef */\n    sampler: {// type: 'filtering',\n    }\n  };\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'options']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label']);\n  vtkWebGPUSampler(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUSampler$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUSampler$1 as default, extend, newInstance };\n", "import { mat4, vec4 } from 'gl-matrix';\nimport Constants from '../Core/ImageMapper/Constants.js';\nimport { newInstance as newInstance$1, obj } from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUStorageBuffer from './StorageBuffer.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport vtkWebGPUSampler from './Sampler.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { InterpolationType } from '../Core/ImageProperty/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar SlicingMode = Constants.SlicingMode;\nvar imgFragTemplate = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Image::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@stage(fragment)\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  //VTK::Image::Sample\\n\\n  // var computedColor: vec4<f32> = vec4<f32>(1.0,0.7, 0.5, 1.0);\\n\\n//VTK::RenderEncoder::Impl\\n\\n  return output;\\n}\\n\"; // ----------------------------------------------------------------------------\n// helper methods\n// ----------------------------------------------------------------------------\n\nfunction computeFnToString(property, fn, numberOfComponents) {\n  var pwfun = fn.apply(property);\n\n  if (pwfun) {\n    var iComps = property.getIndependentComponents();\n    return \"\".concat(property.getMTime(), \"-\").concat(iComps, \"-\").concat(numberOfComponents);\n  }\n\n  return '0';\n} // ----------------------------------------------------------------------------\n// vtkWebGPUImageMapper methods\n// ----------------------------------------------------------------------------\n\n\nvar tmpMat4 = new Float64Array(16);\nvar tmp2Mat4 = new Float64Array(16);\nvar tmp3Mat4 = new Float64Array(16);\nvar ptsArray1 = new Float64Array(4);\nvar ptsArray2 = new Float64Array(4);\n\nfunction vtkWebGPUImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageMapper');\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.WebGPUImageSlice = publicAPI.getFirstAncestorOfType('vtkWebGPUImageSlice');\n      model.WebGPURenderer = model.WebGPUImageSlice.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      model.device = model.WebGPURenderWindow.getDevice();\n      var ren = model.WebGPURenderer.getRenderable(); // is slice set by the camera\n\n      if (model.renderable.getSliceAtFocalPoint()) {\n        model.renderable.setSliceFromCamera(ren.getActiveCamera());\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = function (prepass) {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.opaquePass = function (prepass) {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.render = function () {\n    model.renderable.update();\n    model.currentInput = model.renderable.getInputData();\n    model.renderEncoder = model.WebGPURenderer.getRenderEncoder();\n    publicAPI.build(model.renderEncoder, model.device); // update descriptor sets\n\n    publicAPI.updateUBO(model.device);\n  };\n\n  publicAPI.computePipelineHash = function () {\n    var ext = model.currentInput.getExtent();\n\n    if (ext[0] === ext[1] || ext[2] === ext[3] || ext[4] === ext[5]) {\n      model.dimensions = 2;\n      model.pipelineHash = 'img2';\n    } else {\n      model.dimensions = 3;\n      model.pipelineHash = 'img3';\n    }\n  };\n\n  publicAPI.updateUBO = function (device) {\n    var utime = model.UBO.getSendTime();\n    var actor = model.WebGPUImageSlice.getRenderable();\n    var volMapr = actor.getMapper();\n\n    if (publicAPI.getMTime() > utime || model.renderable.getMTime() > utime || actor.getProperty().getMTime() > utime) {\n      // compute the SCTCMatrix\n      var image = volMapr.getInputData();\n      var center = model.WebGPURenderer.getStabilizedCenterByReference();\n      mat4.identity(tmpMat4);\n      mat4.translate(tmpMat4, tmpMat4, center); // tmpMat4 is now SC->World\n\n      var mcwcmat = actor.getMatrix();\n      mat4.transpose(tmp2Mat4, mcwcmat);\n      mat4.invert(tmp2Mat4, tmp2Mat4); // tmp2Mat4 is now world to model\n\n      mat4.multiply(tmpMat4, tmp2Mat4, tmpMat4); // tmp4Mat is now SC->Model\n      // the method on the data is world to index but the volume is in\n      // model coordinates so really in this context it is model to index\n\n      var modelToIndex = image.getWorldToIndex();\n      mat4.multiply(tmpMat4, modelToIndex, tmpMat4); // tmpMat4 is now SC -> Index, save this as we need it later\n\n      mat4.invert(tmp3Mat4, tmpMat4);\n      var dims = image.getDimensions();\n      mat4.identity(tmp2Mat4);\n      mat4.scale(tmp2Mat4, tmp2Mat4, [1.0 / dims[0], 1.0 / dims[1], 1.0 / dims[2]]);\n      mat4.multiply(tmpMat4, tmp2Mat4, tmpMat4); // tmpMat4 is now SC -> Tcoord\n\n      model.UBO.setArray('SCTCMatrix', tmpMat4); // need to compute the plane here in world coordinates\n      // then pass that down in the UBO\n\n      var ext = model.currentInput.getExtent(); // Find what IJK axis and what direction to slice along\n\n      var _model$renderable$get = model.renderable.getClosestIJKAxis(),\n          ijkMode = _model$renderable$get.ijkMode; // Find the IJK slice\n\n\n      var nSlice = model.renderable.getSlice();\n\n      if (ijkMode !== model.renderable.getSlicingMode()) {\n        // If not IJK slicing, get the IJK slice from the XYZ position/slice\n        nSlice = model.renderable.getSliceAtPosition(nSlice);\n      }\n\n      var axis0 = 2;\n      var axis1 = 0;\n      var axis2 = 1;\n\n      if (ijkMode === SlicingMode.I) {\n        axis0 = 0;\n        axis1 = 1;\n        axis2 = 2;\n      } else if (ijkMode === SlicingMode.J) {\n        axis0 = 1;\n        axis1 = 2;\n        axis2 = 0;\n      }\n\n      ptsArray1[axis0] = nSlice;\n      ptsArray1[axis1] = ext[axis1 * 2];\n      ptsArray1[axis2] = ext[axis2 * 2];\n      ptsArray1[3] = 1.0;\n      vec4.transformMat4(ptsArray1, ptsArray1, tmp3Mat4);\n      model.UBO.setArray('Origin', ptsArray1);\n      ptsArray2[axis0] = nSlice;\n      ptsArray2[axis1] = ext[axis1 * 2 + 1];\n      ptsArray2[axis2] = ext[axis2 * 2];\n      ptsArray2[3] = 1.0;\n      vec4.transformMat4(ptsArray2, ptsArray2, tmp3Mat4);\n      vec4.subtract(ptsArray2, ptsArray2, ptsArray1);\n      ptsArray2[3] = 1.0;\n      model.UBO.setArray('Axis1', ptsArray2);\n      ptsArray2[axis0] = nSlice;\n      ptsArray2[axis1] = ext[axis1 * 2];\n      ptsArray2[axis2] = ext[axis2 * 2 + 1];\n      ptsArray2[3] = 1.0;\n      vec4.transformMat4(ptsArray2, ptsArray2, tmp3Mat4);\n      vec4.subtract(ptsArray2, ptsArray2, ptsArray1);\n      ptsArray2[3] = 1.0;\n      model.UBO.setArray('Axis2', ptsArray2); // three levels of shift scale combined into one\n      // for performance in the fragment shader\n\n      var cScale = [1, 1, 1, 1];\n      var cShift = [0, 0, 0, 0];\n      var tView = model.helper.getTextureViews()[0];\n      var tScale = tView.getTexture().getScale();\n      var numComp = tView.getTexture().getNumberOfComponents();\n      var iComps = false; // todo handle independent?\n\n      for (var i = 0; i < numComp; i++) {\n        var cw = actor.getProperty().getColorWindow();\n        var cl = actor.getProperty().getColorLevel();\n        var target = iComps ? i : 0;\n        var cfun = actor.getProperty().getRGBTransferFunction(target);\n\n        if (cfun && actor.getProperty().getUseLookupTableScalarRange()) {\n          var cRange = cfun.getRange();\n          cw = cRange[1] - cRange[0];\n          cl = 0.5 * (cRange[1] + cRange[0]);\n        }\n\n        cScale[i] = tScale / cw;\n        cShift[i] = -cl / cw + 0.5;\n      }\n\n      model.UBO.setArray('cScale', cScale);\n      model.UBO.setArray('cShift', cShift);\n      model.UBO.sendIfNeeded(device);\n    }\n  };\n\n  publicAPI.updateLUTImage = function (device) {\n    var actorProperty = model.WebGPUImageSlice.getRenderable().getProperty();\n    var tView = model.helper.getTextureViews()[0];\n    tView.getTexture().getNumberOfComponents();\n\n    var numIComps = 1;\n    var cfunToString = computeFnToString(actorProperty, actorProperty.getRGBTransferFunction, numIComps);\n\n    if (model.colorTextureString !== cfunToString) {\n      model.numRows = numIComps;\n      var colorArray = new Uint8Array(model.numRows * 2 * model.rowLength * 4);\n      var cfun = actorProperty.getRGBTransferFunction();\n\n      if (cfun) {\n        var tmpTable = new Float32Array(model.rowLength * 3);\n\n        for (var c = 0; c < numIComps; c++) {\n          cfun = actorProperty.getRGBTransferFunction(c);\n          var cRange = cfun.getRange();\n          cfun.getTable(cRange[0], cRange[1], model.rowLength, tmpTable, 1);\n\n          {\n            for (var _i = 0; _i < model.rowLength; _i++) {\n              var _idx = c * model.rowLength * 8 + _i * 4;\n\n              colorArray[_idx] = 255.0 * tmpTable[_i * 3];\n              colorArray[_idx + 1] = 255.0 * tmpTable[_i * 3 + 1];\n              colorArray[_idx + 2] = 255.0 * tmpTable[_i * 3 + 2];\n              colorArray[_idx + 3] = 255.0;\n\n              for (var _j = 0; _j < 4; _j++) {\n                colorArray[_idx + model.rowLength * 4 + _j] = colorArray[_idx + _j];\n              }\n            }\n          }\n        }\n      } else {\n        for (var _i2 = 0; _i2 < model.rowLength; ++_i2) {\n          var grey = 255.0 * _i2 / (model.rowLength - 1);\n          colorArray[_i2 * 4] = grey;\n          colorArray[_i2 * 4 + 1] = grey;\n          colorArray[_i2 * 4 + 2] = grey;\n          colorArray[_i2 * 4 + 3] = 255.0;\n\n          for (var _j2 = 0; _j2 < 4; _j2++) {\n            colorArray[_i2 * 4 + model.rowLength * 4 + _j2] = colorArray[_i2 * 4 + _j2];\n          }\n        }\n      }\n\n      {\n        var treq = {\n          nativeArray: colorArray,\n          width: model.rowLength,\n          height: model.numRows * 2,\n          depth: 1,\n          format: 'rgba8unorm'\n        };\n        var newTex = device.getTextureManager().getTexture(treq);\n        var tview = newTex.createView('tfunTexture');\n        var tViews = model.helper.getTextureViews();\n        tViews[1] = tview;\n      }\n      model.colorTextureString = cfunToString;\n    }\n  };\n\n  publicAPI.updateBuffers = function (device) {\n    var treq = {\n      imageData: model.currentInput,\n      owner: model.currentInput.getPointData().getScalars()\n    };\n    var newTex = device.getTextureManager().getTexture(treq);\n    var tViews = model.helper.getTextureViews();\n\n    if (!tViews[0] || tViews[0].getTexture() !== newTex) {\n      var tview = newTex.createView('imgTexture');\n      tViews[0] = tview;\n    }\n\n    publicAPI.updateLUTImage(device);\n  };\n\n  publicAPI.build = function (renderEncoder, device) {\n    publicAPI.computePipelineHash();\n    model.helper.setPipelineHash(model.pipelineHash);\n    publicAPI.updateBuffers(device); // set interpolation on the texture based on property setting\n\n    var actorProperty = model.WebGPUImageSlice.getRenderable().getProperty();\n    var iType = actorProperty.getInterpolationType() === InterpolationType.NEAREST ? 'nearest' : 'linear';\n\n    if (!model.clampSampler || iType !== model.clampSampler.getOptions().minFilter) {\n      model.clampSampler = vtkWebGPUSampler.newInstance({\n        label: 'clampSampler'\n      });\n      model.clampSampler.create(device, {\n        minFilter: iType,\n        magFilter: iType\n      });\n    }\n\n    model.helper.setAdditionalBindables(publicAPI.getBindables());\n    model.helper.setWebGPURenderer(model.WebGPURenderer);\n    model.helper.build(renderEncoder, device);\n    model.helper.registerToDraw();\n  };\n\n  publicAPI.getBindables = function () {\n    var bindables = []; // bindables.push(model.componentSSBO);\n\n    bindables.push(model.clampSampler);\n    return bindables;\n  };\n\n  var sr = model.helper.getShaderReplacements();\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    var code = vDesc.getCode();\n    var lines = ['var pos: vec4<f32> = mapperUBO.Origin +', '   (vertexBC.x * 0.5 + 0.5) * mapperUBO.Axis1 + (vertexBC.y * 0.5 + 0.5) * mapperUBO.Axis2;', 'pos.w = 1.0;'];\n\n    if (model.dimensions === 2) {\n      lines.push('var tcoord : vec2<f32> = (mapperUBO.SCTCMatrix * pos).xy;');\n    } else {\n      lines.push('var tcoord : vec3<f32> = (mapperUBO.SCTCMatrix * pos).xyz;');\n    }\n\n    lines.push('output.tcoordVS = tcoord;', 'output.Position = rendererUBO.SCPCMatrix * pos;');\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', lines).result;\n    vDesc.setCode(code);\n  };\n\n  sr.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.replaceShaderTCoord = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n\n    if (model.dimensions === 2) {\n      vDesc.addOutput('vec2<f32>', 'tcoordVS');\n    } else {\n      vDesc.addOutput('vec3<f32>', 'tcoordVS');\n    }\n  };\n\n  sr.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\n\n  publicAPI.replaceShaderImage = function (hash, pipeline, vertexInput) {\n    var fDesc = pipeline.getShaderDescription('fragment');\n    var code = fDesc.getCode();\n\n    if (model.dimensions === 3) {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Image::Sample', [\"    var computedColor: vec4<f32> =\", \"      textureSampleLevel(imgTexture, clampSampler, input.tcoordVS, 0.0);\", \"//VTK::Image::Sample\"]).result;\n    } else {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Image::Sample', [\"    var computedColor: vec4<f32> =\", \"      textureSampleLevel(imgTexture, clampSampler, input.tcoordVS, 0.0);\", \"//VTK::Image::Sample\"]).result;\n    }\n\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Image::Sample', [\"    var coord: vec2<f32> =\", \"      vec2<f32>(computedColor.r * mapperUBO.cScale.r + mapperUBO.cShift.r, 0.5);\", \"    computedColor = textureSampleLevel(tfunTexture, clampSampler, coord, 0.0);\"]).result;\n    fDesc.setCode(code);\n  };\n\n  sr.set('replaceShaderImage', publicAPI.replaceShaderImage);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  rowLength: 1024 // VBOBuildTime: 0,\n  // VBOBuildString: null,\n  // webGPUTexture: null,\n  // tris: null,\n  // imagemat: null,\n  // imagematinv: null,\n  // colorTexture: null,\n  // pwfTexture: null,\n  // lastHaveSeenDepthRequest: false,\n  // haveSeenDepthRequest: false,\n  // lastTextureComponents: 0,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.helper = vtkWebGPUFullScreenQuad.newInstance();\n  model.helper.setFragmentShaderTemplate(imgFragTemplate);\n  model.UBO = vtkWebGPUUniformBuffer.newInstance({\n    label: 'mapperUBO'\n  });\n  model.UBO.addEntry('SCTCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('Origin', 'vec4<f32>');\n  model.UBO.addEntry('Axis2', 'vec4<f32>');\n  model.UBO.addEntry('Axis1', 'vec4<f32>');\n  model.UBO.addEntry('cScale', 'vec4<f32>');\n  model.UBO.addEntry('cShift', 'vec4<f32>');\n  model.helper.setUBO(model.UBO);\n  model.SSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'volumeSSBO'\n  });\n  model.componentSSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'componentSSBO'\n  });\n  model.lutBuildTime = {};\n  obj(model.lutBuildTime, {\n    mtime: 0\n  });\n  model.imagemat = mat4.identity(new Float64Array(16));\n  model.imagematinv = mat4.identity(new Float64Array(16));\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime); // Object methods\n\n  vtkWebGPUImageMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUImageMapper'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkImageMapper', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, get } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUImageSlice'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children.forEach(function (child) {\n      child.traverse(renderPass);\n    });\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.getBufferShift = function (wgpuRen) {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n\n  publicAPI.getKeyMatrices = function (wgpuRen) {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      var mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      var center = wgpuRen.getStabilizedCenterByReference();\n      model.bufferShift[0] = mcwc[3] - center[0];\n      model.bufferShift[1] = mcwc[7] - center[1];\n      model.bufferShift[2] = mcwc[11] - center[2];\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc); // zero out translation\n\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat4.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      } // only meed the buffer shift to get to world\n\n\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferShift: undefined,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  propID: undefined\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n  model.bufferShift = [0, 0, 0, 0];\n  get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUImageSlice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUImageSlice'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkImageSlice', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { mat4 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVolume'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (!model.renderable || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow'); // for the future if we support hardware selection of volumes\n\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n\n      publicAPI.prepareNodes();\n      model.renderable.getMapper().update(); // publicAPI.addMissingNode(model.renderable.getMapper());\n\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      } // Check for the special case when the mapper's bounds are unknown\n\n\n      var bds = model.renderable.getMapper().getBounds();\n\n      if (!bds || bds.length !== 6 || bds[0] > bds[1]) {\n        return;\n      }\n\n      renderPass.addVolume(publicAPI);\n    }\n  }; // used in the method below\n\n\n  var idx = new Float64Array(3);\n  var vout = new Float64Array(3);\n\n  publicAPI.getBoundingCubePoints = function (result, offset) {\n    var input = model.renderable.getMapper().getInputData();\n\n    if (!input) {\n      return;\n    }\n\n    var extent = input.getExtent();\n    var m = model.renderable.getMatrix();\n    var count = 0;\n\n    for (var iz = 4; iz < 6; iz++) {\n      idx[2] = extent[iz];\n\n      for (var iy = 2; iy < 4; iy++) {\n        idx[1] = extent[iy];\n\n        for (var ix = 0; ix < 2; ix++) {\n          idx[0] = extent[ix];\n          input.indexToWorld(idx, vout);\n          var poffset = offset + count * 3;\n          result[poffset++] = m[0] * vout[0] + m[1] * vout[1] + m[2] * vout[2] + m[3];\n          result[poffset++] = m[4] * vout[0] + m[5] * vout[1] + m[6] * vout[2] + m[7];\n          result[poffset++] = m[8] * vout[0] + m[9] * vout[1] + m[10] * vout[2] + m[11];\n          count++;\n        }\n      }\n    }\n  };\n\n  publicAPI.traverseVolumePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.children[0].traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.getKeyMatrices = function (wgpuRen) {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      var mcwc = model.renderable.getMatrix(); // compute the net shift\n\n      var center = wgpuRen.getStabilizedCenterByReference();\n      mat4.transpose(model.keyMatrices.bcwc, mcwc); // to get to stabilized we also need the center\n\n      mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      model.keyMatricesTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  propID: undefined,\n  keyMatricesTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']); // Object methods\n\n  vtkWebGPUVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUVolume'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkVolume', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkWebGPUPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUPixelSpaceCallbackMapper');\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n    model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n    var aspectRatio = model.WebGPURenderer.getAspectRatio();\n    var camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n    var tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n    var texels = null;\n\n    if (model.renderable.getUseZValues()) ;\n\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUPixelSpaceCallbackMapper'); // ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to WebGPU backend if imported\n\nregisterOverride('vtkPixelSpaceCallbackMapper', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import '../OpenGL/Camera.js';\nimport '../OpenGL/Renderer.js';\nimport '../OpenGL/ImageMapper.js';\nimport '../OpenGL/ImageSlice.js';\nimport '../OpenGL/Volume.js';\nimport '../OpenGL/VolumeMapper.js';\nimport '../OpenGL/PixelSpaceCallbackMapper.js';\nimport '../WebGPU/Camera.js';\nimport '../WebGPU/Renderer.js';\nimport '../WebGPU/ImageMapper.js';\nimport '../WebGPU/ImageSlice.js';\nimport '../WebGPU/Volume.js';\nimport '../WebGPU/PixelSpaceCallbackMapper.js';\n", "import vtk from '../../../vtk.js';\nimport macro from '../../../macros.js';\nimport vtkDataArray from '../../Core/DataArray.js';\n\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  var superGetState = publicAPI.getState; // Decode serialized data if any\n\n  if (model.arrays) {\n    model.arrays = model.arrays.map(function (item) {\n      return {\n        data: vtk(item.data)\n      };\n    });\n  }\n\n  publicAPI.initialize = function () {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n\n  publicAPI.initializeFields = function () {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n\n  publicAPI.copyStructure = function (other) {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map(function (x) {\n      return x;\n    }); // Deep-copy\n\n    model.arrays = other.arrays().map(function (x) {\n      return {\n        array: x\n      };\n    }); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = function () {\n    return model.arrays.length;\n  };\n\n  publicAPI.getNumberOfActiveArrays = function () {\n    return model.arrays.length;\n  };\n\n  publicAPI.addArray = function (arr) {\n    model.arrays = [].concat(model.arrays, {\n      data: arr\n    });\n    return model.arrays.length - 1;\n  };\n\n  publicAPI.removeAllArrays = function () {\n    model.arrays = [];\n  };\n\n  publicAPI.removeArray = function (arrayName) {\n    model.arrays = model.arrays.filter(function (entry) {\n      return arrayName !== entry.data.getName();\n    });\n  };\n\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    model.arrays = model.arrays.filter(function (entry, idx) {\n      return idx !== arrayIdx;\n    });\n  };\n\n  publicAPI.getArrays = function () {\n    return model.arrays.map(function (entry) {\n      return entry.data;\n    });\n  };\n\n  publicAPI.getArray = function (arraySpec) {\n    return typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);\n  };\n\n  publicAPI.getArrayByName = function (arrayName) {\n    return model.arrays.reduce(function (a, b, i) {\n      return b.data.getName() === arrayName ? b.data : a;\n    }, null);\n  };\n\n  publicAPI.getArrayWithIndex = function (arrayName) {\n    return model.arrays.reduce(function (a, b, i) {\n      return b.data && b.data.getName() === arrayName ? {\n        array: b.data,\n        index: i\n      } : a;\n    }, {\n      array: null,\n      index: -1\n    });\n  };\n\n  publicAPI.getArrayByIndex = function (idx) {\n    return idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  };\n\n  publicAPI.hasArray = function (arrayName) {\n    return publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  };\n\n  publicAPI.getArrayName = function (idx) {\n    var arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n\n  publicAPI.getCopyFieldFlags = function () {\n    return model.copyFieldFlags;\n  };\n\n  publicAPI.getFlag = function (arrayName) {\n    return model.copyFieldFlags[arrayName];\n  };\n\n  publicAPI.passData = function (other) {\n    var fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    other.getArrays().forEach(function (arr) {\n      var copyFlag = publicAPI.getFlag(arr.getName());\n\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\n        var destArr = publicAPI.getArrayByName(arr.getName());\n\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            publicAPI.addArray(arr);\n          } else {\n            var ncomps = arr.getNumberOfComponents();\n            var newSize = arr.getNumberOfValues();\n            var tId = toId > -1 ? toId : fromId;\n\n            if (newSize < tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: arr.getNumberOfComponents(),\n              size: newSize\n            });\n            destArr.setTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n          }\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            var _tId = toId > -1 ? toId : fromId;\n\n            destArr.setTuple(_tId, arr.getTuple(fromId));\n          } else {\n            // if fromId and not provided, just copy all (or as much possible)\n            // of arr to destArr.\n            for (var i = 0; i < arr.getNumberOfTuples(); ++i) {\n              destArr.setTuple(i, arr.getTuple(i));\n            }\n          }\n        }\n      }\n    });\n  };\n\n  publicAPI.copyFieldOn = function (arrayName) {\n    model.copyFieldFlags[arrayName] = true;\n  };\n\n  publicAPI.copyFieldOff = function (arrayName) {\n    model.copyFieldFlags[arrayName] = false;\n  };\n\n  publicAPI.copyAllOn = function () {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.copyAllOff = function () {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.clearFieldFlags = function () {\n    model.copyFieldFlags = {};\n  };\n\n  publicAPI.deepCopy = function (other) {\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return {\n        data: arrNew\n      };\n    });\n  };\n\n  publicAPI.copyFlags = function (other) {\n    return other.getCopyFieldFlags().map(function (x) {\n      return x;\n    });\n  }; // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n\n\n  publicAPI.reset = function () {\n    return model.arrays.forEach(function (entry) {\n      return entry.data.reset();\n    });\n  }; // TODO: getActualMemorySize\n\n\n  publicAPI.getMTime = function () {\n    return model.arrays.reduce(function (a, b) {\n      return b.data.getMTime() > a ? b.data.getMTime() : a;\n    }, model.mtime);\n  }; // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n\n\n  publicAPI.getNumberOfComponents = function () {\n    return model.arrays.reduce(function (a, b) {\n      return a + b.data.getNumberOfComponents();\n    }, 0);\n  };\n\n  publicAPI.getNumberOfTuples = function () {\n    return model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n  };\n\n  publicAPI.getState = function () {\n    var result = superGetState();\n\n    if (result) {\n      result.arrays = model.arrays.map(function (item) {\n        return {\n          data: item.data.getState()\n        };\n      });\n    }\n\n    return result;\n  };\n}\n\nvar DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [],\n  // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false\n};\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkFieldData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkFieldData'); // ----------------------------------------------------------------------------\n\nvar vtkFieldData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkFieldData$1 as default, extend, newInstance };\n", "var AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8\n};\nvar AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2\n};\nvar CellGhostTypes = {\n  DUPLICATECELL: 1,\n  // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2,\n  // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4,\n  // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8,\n  // other cells are present that refines it.\n  EXTERIORCELL: 16,\n  // the cell is on the exterior of the data set\n  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.\n\n};\nvar PointGhostTypes = {\n  DUPLICATEPOINT: 1,\n  // the cell is present on multiple processors\n  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.\n\n};\nvar AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3 // all of the above\n\n};\nvar ghostArrayName = 'vtkGhostType';\nvar DesiredOutputPrecision = {\n  DEFAULT: 0,\n  // use the point type that does not truncate any data\n  SINGLE: 1,\n  // use Float32Array\n  DOUBLE: 2 // use Float64Array\n\n};\nvar Constants = {\n  AttributeCopyOperations: AttributeCopyOperations,\n  AttributeLimitTypes: AttributeLimitTypes,\n  AttributeTypes: AttributeTypes,\n  CellGhostTypes: CellGhostTypes,\n  DesiredOutputPrecision: DesiredOutputPrecision,\n  PointGhostTypes: PointGhostTypes,\n  ghostArrayName: ghostArrayName\n};\n\nexport { AttributeCopyOperations, AttributeLimitTypes, AttributeTypes, CellGhostTypes, DesiredOutputPrecision, PointGhostTypes, Constants as default, ghostArrayName };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkFieldData from './DataSetAttributes/FieldData.js';\nimport Constants from './DataSetAttributes/Constants.js';\nimport vtkDataArray from '../Core/DataArray.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar AttributeTypes = Constants.AttributeTypes,\n    AttributeCopyOperations = Constants.AttributeCopyOperations;\nvar vtkWarningMacro = macro.vtkWarningMacro; // ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  var attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];\n\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    var cleanAttType = attrTypes.find(function (ee) {\n      return AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase();\n    });\n\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n\n    return cleanAttType;\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkDataSetAttributes');\n\n  publicAPI.checkNumberOfComponents = function (x) {\n    return true;\n  }; // TODO\n\n\n  publicAPI.setAttribute = function (arr, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n\n    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". The attribute must be a vtkDataArray.\"));\n      return -1;\n    }\n\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n      return -1;\n    }\n\n    var currentAttribute = model[\"active\".concat(attType)];\n\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      }\n\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[\"active\".concat(attType)] = currentAttribute;\n    } else {\n      model[\"active\".concat(attType)] = -1;\n    }\n\n    publicAPI.modified();\n    return model[\"active\".concat(attType)];\n  };\n\n  publicAPI.setActiveAttributeByName = function (arrayName, attType) {\n    return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);\n  };\n\n  publicAPI.setActiveAttributeByIndex = function (arrayIdx, uncleanAttType) {\n    var attType = cleanAttributeType(uncleanAttType);\n\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        var arr = publicAPI.getArrayByIndex(arrayIdx);\n\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Only vtkDataArray subclasses can be set as active attributes.\"));\n          return -1;\n        }\n\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\"Cannot set attribute \".concat(attType, \". Incorrect number of components.\"));\n          return -1;\n        }\n      }\n\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n\n    if (arrayIdx === -1) {\n      model[\"active\".concat(attType)] = arrayIdx;\n      publicAPI.modified();\n    }\n\n    return -1;\n  };\n\n  publicAPI.getActiveAttribute = function (attType) {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    var cleanAttType = cleanAttributeType(attType);\n    return publicAPI[\"get\".concat(cleanAttType)]();\n  }; // Override to allow proper handling of active attributes\n\n\n  publicAPI.removeAllArrays = function () {\n    model.arrays = [];\n    attrTypes.forEach(function (attType) {\n      model[\"active\".concat(attType)] = -1;\n    });\n  }; // Override to allow proper handling of active attributes\n\n\n  publicAPI.removeArray = function (arrayName) {\n    model.arrays = model.arrays.filter(function (entry, idx) {\n      if (arrayName === entry.data.getName()) {\n        // Found the array to remove, but is it an active attribute?\n        attrTypes.forEach(function (attType) {\n          if (idx === model[\"active\".concat(attType)]) {\n            model[\"active\".concat(attType)] = -1;\n          }\n        });\n        return false;\n      }\n\n      return true;\n    });\n  }; // Override to allow proper handling of active attributes\n\n\n  publicAPI.removeArrayByIndex = function (arrayIdx) {\n    model.arrays = model.arrays.filter(function (entry, idx) {\n      return idx !== arrayIdx;\n    });\n    attrTypes.forEach(function (attType) {\n      if (arrayIdx === model[\"active\".concat(attType)]) {\n        model[\"active\".concat(attType)] = -1;\n      }\n    });\n  };\n\n  attrTypes.forEach(function (value) {\n    var activeVal = \"active\".concat(value);\n\n    publicAPI[\"get\".concat(value)] = function () {\n      return publicAPI.getArrayByIndex(model[activeVal]);\n    };\n\n    publicAPI[\"set\".concat(value)] = function (da) {\n      return publicAPI.setAttribute(da, value);\n    };\n\n    publicAPI[\"setActive\".concat(value)] = function (arrayName) {\n      return publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);\n    };\n\n    publicAPI[\"copy\".concat(value, \"Off\")] = function () {\n      var attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;\n    };\n  });\n\n  publicAPI.initializeAttributeCopyFlags = function () {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations).filter(function (op) {\n      return op !== 'ALLCOPY';\n    }).forEach(function (attCopyOp) {\n      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(function (ty) {\n        return ty !== 'NUM_ATTRIBUTES';\n      }).reduce(function (a, b) {\n        a[AttributeTypes[b]] = true;\n        return a;\n      }, []);\n    }); // Override some operations where we don't want to copy:\n\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;\n  };\n\n  publicAPI.initialize = macro.chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags); // Process dataArrays if any\n\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach(function (name) {\n      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other, debug) {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map(function (arr) {\n      var arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return {\n        data: arrNew\n      };\n    });\n  };\n\n  publicAPI.initializeAttributeCopyFlags();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);\n\n  if (!model.arrays) {\n    model.arrays = {};\n  } // Object specific methods\n\n\n  vtkDataSetAttributes(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkDataSetAttributes'); // ----------------------------------------------------------------------------\n\nvar vtkDataSetAttributes$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkDataSetAttributes$1 as default, extend, newInstance };\n", "// Specify how data arrays can be used by data objects\nvar FieldDataTypes = {\n  UNIFORM: 0,\n  // data that does not vary over points/cells/etc.\n  DATA_OBJECT_FIELD: 0,\n  // to match VTK\n  COORDINATE: 1,\n  // data that specifies the location of each point\n  POINT_DATA: 1,\n  // to match VTK\n  POINT: 2,\n  // data defined at each point, but that does not specify the point location\n  POINT_FIELD_DATA: 2,\n  // to match VTK\n  CELL: 3,\n  // data defined at each cell, but that does not specify the cell\n  CELL_FIELD_DATA: 3,\n  // to match VTK\n  VERTEX: 4,\n  // data defined at each graph vertex, but that does not specify the graph vertex\n  VERTEX_FIELD_DATA: 4,\n  // to match VTK\n  EDGE: 5,\n  // data defined at each graph edge, but that does not specify the graph edge\n  EDGE_FIELD_DATA: 5,\n  // to match VTK\n  ROW: 6,\n  // data specifying a table row\n  ROW_DATA: 6 // to match VTK\n\n};\nvar FieldAssociations = {\n  FIELD_ASSOCIATION_POINTS: 0,\n  FIELD_ASSOCIATION_CELLS: 1,\n  FIELD_ASSOCIATION_NONE: 2,\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\n  FIELD_ASSOCIATION_VERTICES: 4,\n  FIELD_ASSOCIATION_EDGES: 5,\n  FIELD_ASSOCIATION_ROWS: 6,\n  NUMBER_OF_ASSOCIATIONS: 7\n};\nvar Constants = {\n  FieldDataTypes: FieldDataTypes,\n  FieldAssociations: FieldAssociations\n};\n\nexport { FieldAssociations, FieldDataTypes, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtk from '../../vtk.js';\nimport vtkDataSetAttributes from './DataSetAttributes.js';\nimport Constants from './DataSet/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// import * as vtkMath from '../../Core/Math';\n//\n// function getBounds(dataset) {\n//   if (dataset.bounds) {\n//     return dataset.bounds;\n//   }\n//   if (dataset.type && dataset[dataset.type]) {\n//     const ds = dataset[dataset.type];\n//     if (ds.bounds) {\n//       return ds.bounds;\n//     }\n//     if (ds.Points && ds.Points.bounds) {\n//       return ds.Points.bounds;\n//     }\n//     if (ds.Points && ds.Points.values) {\n//       const array = ds.Points.values;\n//       const bbox = [...vtkBoundingBox.INIT_BOUNDS];\n//       const size = array.length;\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\n//       for (let idx = 0; idx < size; idx += delta) {\n//         vtkBoundingBox.addPoint(bbox, array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\n//       }\n//       ds.Points.bounds = bbox;\n//       return ds.Points.bounds;\n//     }\n//   }\n//   return vtkMath.createUninitializedBounds();\n// }\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nvar DATASET_FIELDS = ['pointData', 'cellData', 'fieldData']; // ----------------------------------------------------------------------------\n// vtkDataSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataSet'); // Add dataset attributes\n\n  DATASET_FIELDS.forEach(function (fieldName) {\n    if (!model[fieldName]) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n    } else {\n      model[fieldName] = vtk(model[fieldName]);\n    }\n  });\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    DATASET_FIELDS.forEach(function (fieldName) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// pointData: null,\n  // cellData: null,\n  // fieldData: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, DATASET_FIELDS); // Object specific methods\n\n  vtkDataSet(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkDataSet'); // ----------------------------------------------------------------------------\n\nvar vtkDataSet$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkDataSet$1 as default, extend, newInstance };\n", "var StructuredType = {\n  UNCHANGED: 0,\n  SINGLE_POINT: 1,\n  X_LINE: 2,\n  Y_LINE: 3,\n  Z_LINE: 4,\n  XY_PLANE: 5,\n  YZ_PLANE: 6,\n  XZ_PLANE: 7,\n  XYZ_GRID: 8,\n  EMPTY: 9\n};\nvar Constants = {\n  StructuredType: StructuredType\n};\n\nexport { StructuredType, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Constants from './StructuredData/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar StructuredType = Constants.StructuredType;\nfunction getDataDescriptionFromExtent(inExt) {\n  var dataDim = 0;\n\n  for (var i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\nvar vtkStructuredData = _objectSpread({\n  getDataDescriptionFromExtent: getDataDescriptionFromExtent\n}, Constants);\n\nexport { vtkStructuredData as default, getDataDescriptionFromExtent };\n", "import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../macros.js';\nimport { c as computeBoundsFromPoints, b as roundVector, e as clampVector } from '../Core/Math/index.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkStructuredData from './StructuredData.js';\nimport { StructuredType } from './StructuredData/Constants.js';\nimport { mat3, vec3, mat4 } from 'gl-matrix';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n\n  publicAPI.setExtent = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\n      inExtent[_key] = arguments[_key];\n    }\n\n    var extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n\n    if (extentArray.length !== 6) {\n      return false;\n    }\n\n    var changeDetected = false;\n    model.extent.forEach(function (item, index) {\n      if (item !== extentArray[index]) {\n        if (changeDetected) {\n          return;\n        }\n\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(model.extent);\n      publicAPI.modified();\n    }\n\n    return changeDetected;\n  };\n\n  publicAPI.setDimensions = function () {\n    var i;\n    var j;\n    var k;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (arguments.length === 1) {\n      var array = arguments.length <= 0 ? undefined : arguments[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (arguments.length === 3) {\n      i = arguments.length <= 0 ? undefined : arguments[0];\n      j = arguments.length <= 1 ? undefined : arguments[1];\n      k = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n\n  publicAPI.getDimensions = function () {\n    return [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\n  };\n\n  publicAPI.getNumberOfCells = function () {\n    var dims = publicAPI.getDimensions();\n    var nCells = 1;\n\n    for (var i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n\n    return nCells;\n  };\n\n  publicAPI.getNumberOfPoints = function () {\n    var dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n\n  publicAPI.getPoint = function (index) {\n    var dims = publicAPI.getDimensions();\n\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n\n    var ijk = new Float64Array(3);\n\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n\n      case StructuredType.SINGLE_POINT:\n        break;\n\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0] % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n\n    var coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  }; // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n\n  publicAPI.getBounds = function () {\n    return publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n  };\n\n  publicAPI.extentToBounds = function (ex) {\n    // prettier-ignore\n    var corners = [ex[0], ex[2], ex[4], ex[1], ex[2], ex[4], ex[0], ex[3], ex[4], ex[1], ex[3], ex[4], ex[0], ex[2], ex[5], ex[1], ex[2], ex[5], ex[0], ex[3], ex[5], ex[1], ex[3], ex[5]];\n    var idx = new Float64Array([corners[0], corners[1], corners[2]]);\n    var vout = new Float64Array(3);\n    publicAPI.indexToWorld(idx, vout);\n    var bounds = [vout[0], vout[0], vout[1], vout[1], vout[2], vout[2]];\n\n    for (var i = 3; i < 24; i += 3) {\n      vec3.set(idx, corners[i], corners[i + 1], corners[i + 2]);\n      publicAPI.indexToWorld(idx, vout);\n\n      if (vout[0] < bounds[0]) {\n        bounds[0] = vout[0];\n      }\n\n      if (vout[1] < bounds[2]) {\n        bounds[2] = vout[1];\n      }\n\n      if (vout[2] < bounds[4]) {\n        bounds[4] = vout[2];\n      }\n\n      if (vout[0] > bounds[1]) {\n        bounds[1] = vout[0];\n      }\n\n      if (vout[1] > bounds[3]) {\n        bounds[3] = vout[1];\n      }\n\n      if (vout[2] > bounds[5]) {\n        bounds[5] = vout[2];\n      }\n    }\n\n    return bounds;\n  };\n\n  publicAPI.getSpatialExtent = function () {\n    var boundingBox = vtkBoundingBox.newInstance();\n    boundingBox.setBounds(model.extent);\n    boundingBox.inflate(0.5);\n    return boundingBox.getBounds();\n  }; // Internal, shouldn't need to call this manually.\n\n\n  publicAPI.computeTransforms = function () {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  }; //\n  // The direction matrix is a 3x3 basis for the I, J, K axes\n  // of the image. The rows of the matrix correspond to the\n  // axes directions in world coordinates. Direction must\n  // form an orthonormal basis, results are undefined if\n  // it is not.\n  //\n\n\n  publicAPI.setDirection = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var array = args; // allow an array passed as a single arg.\n\n    if (array.length === 1 && (Array.isArray(array[0]) || array[0].constructor === Float32Array || array[0].constructor === Float64Array)) {\n      array = array[0];\n    }\n\n    if (array.length !== 9) {\n      throw new RangeError('Invalid number of values for array setter');\n    }\n\n    var changeDetected = false;\n    model.direction.forEach(function (item, index) {\n      if (item !== array[index]) {\n        if (changeDetected) {\n          return;\n        }\n\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      for (var i = 0; i < 9; ++i) {\n        model.direction[i] = array[i];\n      }\n\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.indexToWorld = function (ain) {\n    var aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n\n  publicAPI.worldToIndex = function (ain) {\n    var aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n\n  publicAPI.indexToWorldBounds = function (bin) {\n    var bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var in1 = [0, 0, 0];\n    var in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bin, in1, in2);\n    var out1 = [0, 0, 0];\n    var out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.indexToWorld);\n    vec3.transformMat4(out2, in2, model.indexToWorld);\n    return computeBoundsFromPoints(out1, out2, bout);\n  };\n\n  publicAPI.worldToIndexBounds = function (bin) {\n    var bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var in1 = [0, 0, 0];\n    var in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bin, in1, in2);\n    var out1 = [0, 0, 0];\n    var out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.worldToIndex);\n    vec3.transformMat4(out2, in2, model.worldToIndex);\n    return computeBoundsFromPoints(out1, out2, bout);\n  }; // Make sure the transform is correct\n\n\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n\n  publicAPI.getCenter = function () {\n    var bounds = publicAPI.getBounds();\n    var center = [];\n\n    for (var i = 0; i < 3; i++) {\n      center[i] = (bounds[2 * i + 1] + bounds[2 * i]) / 2;\n    }\n\n    return center;\n  };\n\n  publicAPI.computeHistogram = function (worldBounds) {\n    var voxelFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n    var point1 = [0, 0, 0];\n    var point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n    roundVector(point1, point1);\n    roundVector(point2, point2);\n    var dimensions = publicAPI.getDimensions();\n    clampVector(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\n    clampVector(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\n    var yStride = dimensions[0];\n    var zStride = dimensions[0] * dimensions[1];\n    var pixels = publicAPI.getPointData().getScalars().getData();\n    var maximum = -Infinity;\n    var minimum = Infinity;\n    var sumOfSquares = 0;\n    var isum = 0;\n    var inum = 0;\n\n    for (var z = point1[2]; z <= point2[2]; z++) {\n      for (var y = point1[1]; y <= point2[1]; y++) {\n        var index = point1[0] + y * yStride + z * zStride;\n\n        for (var x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            var pixel = pixels[index];\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n\n          ++index;\n        }\n      }\n    }\n\n    var average = inum > 0 ? isum / inum : 0;\n    var variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\n    var sigma = Math.sqrt(variance);\n    return {\n      minimum: minimum,\n      maximum: maximum,\n      average: average,\n      variance: variance,\n      sigma: sigma,\n      count: inum\n    };\n  }; // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n\n\n  publicAPI.computeIncrements = function (extent) {\n    var numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var increments = [];\n    var incr = numberOfComponents; // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n\n    for (var idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n\n    return increments;\n  };\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n\n\n  publicAPI.computeOffsetIndex = function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        i = _ref2[0],\n        j = _ref2[1],\n        k = _ref2[2];\n\n    var extent = publicAPI.getExtent();\n    var numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    var increments = publicAPI.computeIncrements(extent, numberOfComponents); // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n\n\n  publicAPI.getOffsetIndexFromWorld = function (xyz) {\n    var extent = publicAPI.getExtent();\n    var index = publicAPI.worldToIndex(xyz); // Confirm indexed i,j,k coords are within the bounds of the volume\n\n    for (var idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(\"GetScalarPointer: Pixel \".concat(index, \" is not in memory. Current extent = \").concat(extent));\n        return NaN;\n      }\n    } // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n\n\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n\n\n  publicAPI.getScalarValueFromWorld = function (xyz) {\n    var comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(\"GetScalarPointer: Scalar Component \".concat(comp, \" is not within bounds. Current Scalar numberOfComponents: \").concat(numberOfComponents));\n      return NaN;\n    }\n\n    var offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  direction: null,\n  // a mat3\n  indexToWorld: null,\n  // a mat4\n  worldToIndex: null,\n  // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkDataSet.extend(publicAPI, model, initialValues);\n\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16); // Set/Get methods\n\n  macro.get(publicAPI, model, ['direction', 'indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.getArray(publicAPI, model, ['extent'], 6); // Object specific methods\n\n  vtkImageData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkImageData'); // ----------------------------------------------------------------------------\n\nvar vtkImageData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkImageData$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractMapper');\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.addClippingPlane = function (plane) {\n    if (!plane.isA('vtkPlane')) {\n      return false;\n    }\n\n    if (!model.clippingPlanes.includes(plane)) {\n      model.clippingPlanes.push(plane);\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getNumberOfClippingPlanes = function () {\n    return model.clippingPlanes.length;\n  };\n\n  publicAPI.removeAllClippingPlanes = function () {\n    model.clippingPlanes.length = 0;\n  };\n\n  publicAPI.removeClippingPlane = function (clippingPlane) {\n    var i = model.clippingPlanes.indexOf(clippingPlane);\n\n    if (i === -1) {\n      return false;\n    }\n\n    model.clippingPlanes.splice(i, 1);\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.getClippingPlanes = function () {\n    return model.clippingPlanes;\n  };\n\n  publicAPI.setClippingPlanes = function (planes) {\n    if (!planes) {\n      return;\n    }\n\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      var nbPlanes = planes.length;\n\n      for (var i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n\n  publicAPI.getClippingPlaneInDataCoords = function (propMatrix, i, hnormal) {\n    var clipPlanes = model.clippingPlanes;\n    var mat = propMatrix;\n\n    if (clipPlanes) {\n      var n = clipPlanes.length;\n\n      if (i >= 0 && i < n) {\n        // Get the plane\n        var plane = clipPlanes[i];\n        var normal = plane.getNormal();\n        var origin = plane.getOrigin(); // Compute the plane equation\n\n        var v1 = normal[0];\n        var v2 = normal[1];\n        var v3 = normal[2];\n        var v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]); // Transform normal from world to data coords\n\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n        return;\n      }\n    }\n\n    macro.vtkErrorMacro(\"Clipping plane index \".concat(i, \" is out of range.\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  clippingPlanes: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n\n  vtkAbstractMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper$1 = {\n  extend: extend\n};\n\nexport { vtkAbstractMapper$1 as default, extend };\n", "import macro from '../../macros.js';\nimport { N as createUninitializedBounds } from '../../Common/Core/Math/index.js';\nimport Constants from './VolumeMapper/Constants.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\n\nvar BlendMode = Constants.BlendMode,\n    FilterMode = Constants.FilterMode; // ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n\n  publicAPI.getBounds = function () {\n    var input = publicAPI.getInputData();\n\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n\n      model.bounds = input.getBounds();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.setBlendModeToComposite = function () {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n\n  publicAPI.setBlendModeToMaximumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToMinimumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAverageIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAdditiveIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);\n  };\n\n  publicAPI.getBlendModeAsString = function () {\n    return macro.enumToString(BlendMode, model.blendMode);\n  };\n\n  publicAPI.setAverageIPScalarRange = function (min, max) {\n    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');\n    publicAPI.setIpScalarRange(min, max);\n  };\n\n  publicAPI.getFilterModeAsString = function () {\n    return macro.enumToString(FilterMode, model.filterMode);\n  };\n\n  publicAPI.setFilterModeToOff = function () {\n    publicAPI.setFilterMode(FilterMode.OFF);\n  };\n\n  publicAPI.setFilterModeToNormalized = function () {\n    publicAPI.setFilterMode(FilterMode.NORMALIZED);\n  };\n\n  publicAPI.setFilterModeToRaw = function () {\n    publicAPI.setFilterMode(FilterMode.RAW);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\n\n\nvar DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  ipScalarRange: [-1000000.0, 1000000.0],\n  filterMode: FilterMode.OFF,\n  // ignored by WebGL so no behavior change\n  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'blendMode', 'filterMode', 'preferSizeOverAccuracy']);\n  macro.setGetArray(publicAPI, model, ['ipScalarRange'], 2);\n  macro.event(publicAPI, model, 'lightingActivated'); // Object methods\n\n  vtkVolumeMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeMapper'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVolumeMapper$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport { mat4, vec3, glMatrix } from 'gl-matrix';\nimport { a as areMatricesEqual } from './Math/index.js';\n\nvar NoOp = function NoOp(v) {\n  return v;\n};\n\nvar IDENTITY = mat4.identity(new Float64Array(16));\nvar EPSILON = 1e-6;\n\nvar Transform = /*#__PURE__*/function () {\n  function Transform() {\n    var useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, Transform);\n\n    this.matrix = mat4.identity(new Float64Array(16));\n    this.tmp = new Float64Array(3);\n    this.angleConv = useDegree ? glMatrix.toRadian : NoOp;\n  }\n\n  _createClass(Transform, [{\n    key: \"rotateFromDirections\",\n    value: function rotateFromDirections(originDirection, targetDirection) {\n      var src = new Float64Array(3);\n      var dst = new Float64Array(3);\n      var transf = new Float64Array(16);\n      vec3.set(src, originDirection[0], originDirection[1], originDirection[2]);\n      vec3.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\n      vec3.normalize(src, src);\n      vec3.normalize(dst, dst);\n      var cosAlpha = vec3.dot(src, dst);\n\n      if (cosAlpha >= 1) {\n        return this;\n      }\n\n      vec3.cross(this.tmp, src, dst);\n\n      if (vec3.length(this.tmp) < EPSILON) {\n        // cross product is 0, so pick arbitrary axis perpendicular\n        // to originDirection.\n        vec3.cross(this.tmp, [1, 0, 0], originDirection);\n\n        if (vec3.length(this.tmp) < EPSILON) {\n          vec3.cross(this.tmp, [0, 1, 0], originDirection);\n        }\n      }\n\n      mat4.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\n      mat4.multiply(this.matrix, this.matrix, transf);\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle, axis) {\n      vec3.set.apply(vec3, [this.tmp].concat(_toConsumableArray(axis)));\n      vec3.normalize(this.tmp, this.tmp);\n      mat4.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\n      return this;\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(angle) {\n      mat4.rotateX(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(angle) {\n      mat4.rotateY(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(angle) {\n      mat4.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(x, y, z) {\n      vec3.set(this.tmp, x, y, z);\n      mat4.translate(this.matrix, this.matrix, this.tmp);\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy, sz) {\n      vec3.set(this.tmp, sx, sy, sz);\n      mat4.scale(this.matrix, this.matrix, this.tmp);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(mat4x4) {\n      mat4.multiply(this.matrix, this.matrix, mat4x4);\n      return this;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      mat4.identity(this.matrix);\n      return this;\n    } //-----------\n\n  }, {\n    key: \"apply\",\n    value: function apply(typedArray) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n      if (areMatricesEqual(IDENTITY, this.matrix)) {\n        // Make sure we can chain apply...\n        return this;\n      }\n\n      var size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\n\n      for (var i = offset; i < size; i += 3) {\n        vec3.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\n        vec3.transformMat4(this.tmp, this.tmp, this.matrix);\n        typedArray[i] = this.tmp[0];\n        typedArray[i + 1] = this.tmp[1];\n        typedArray[i + 2] = this.tmp[2];\n      } // Make sure we can chain apply...\n\n\n      return this;\n    }\n  }, {\n    key: \"getMatrix\",\n    value: function getMatrix() {\n      return this.matrix;\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function setMatrix(mat4x4) {\n      if (!!mat4x4 && mat4x4.length === 16) {\n        mat4.copy(this.matrix, mat4x4);\n      }\n\n      return this;\n    }\n  }]);\n\n  return Transform;\n}();\n\nfunction buildFromDegree() {\n  return new Transform(true);\n}\n\nfunction buildFromRadian() {\n  return new Transform(false);\n}\n\nvar vtkMatrixBuilder = {\n  buildFromDegree: buildFromDegree,\n  buildFromRadian: buildFromRadian\n};\n\nexport { vtkMatrixBuilder as default };\n", "import macro from '../../macros.js';\nimport { l as normalize, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\n\nvar LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight']; // ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n\n  publicAPI.getTransformedPosition = function () {\n    if (model.transformMatrix) {\n      return []; // FIXME !!!!\n    }\n\n    return [].concat(model.position);\n  };\n\n  publicAPI.getTransformedFocalPoint = function () {\n    if (model.transformMatrix) {\n      return []; // FIXME !!!!\n    }\n\n    return [].concat(model.focalPoint);\n  };\n\n  publicAPI.getDirection = function () {\n    if (model.directionMTime < model.mtime) {\n      model.direction[0] = model.focalPoint[0] - model.position[0];\n      model.direction[1] = model.focalPoint[1] - model.position[1];\n      model.direction[2] = model.focalPoint[2] - model.position[2];\n      normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n\n    return model.direction;\n  };\n\n  publicAPI.setDirectionAngle = function (elevation, azimuth) {\n    var elevationRadians = radiansFromDegrees(elevation);\n    var azimuthRadians = radiansFromDegrees(azimuth);\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n\n  publicAPI.setLightTypeToHeadLight = function () {\n    publicAPI.setLightType('HeadLight');\n  };\n\n  publicAPI.setLightTypeToCameraLight = function () {\n    publicAPI.setLightType('CameraLight');\n  };\n\n  publicAPI.setLightTypeToSceneLight = function () {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n\n  publicAPI.lightTypeIsHeadLight = function () {\n    return model.lightType === 'HeadLight';\n  };\n\n  publicAPI.lightTypeIsSceneLight = function () {\n    return model.lightType === 'SceneLight';\n  };\n\n  publicAPI.lightTypeIsCameraLight = function () {\n    return model.lightType === 'CameraLight';\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'transformMatrix', 'lightType', 'shadowAttenuation']);\n  macro.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3); // Object methods\n\n  vtkLight(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLight'); // ----------------------------------------------------------------------------\n\nvar vtkLight$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  LIGHT_TYPES: LIGHT_TYPES\n};\n\nexport { LIGHT_TYPES, vtkLight$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction notImplemented(method) {\n  return function () {\n    return vtkErrorMacro(\"vtkViewport::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport'); // Public API methods\n\n  publicAPI.getViewProps = function () {\n    return model.props;\n  };\n\n  publicAPI.hasViewProp = function (prop) {\n    return !!model.props.filter(function (item) {\n      return item === prop;\n    }).length;\n  };\n\n  publicAPI.addViewProp = function (prop) {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props = model.props.concat(prop);\n    }\n  };\n\n  publicAPI.removeViewProp = function (prop) {\n    var newPropList = model.props.filter(function (item) {\n      return item !== prop;\n    });\n\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n\n  publicAPI.removeAllViewProps = function () {\n    model.props = [];\n  }; // this method get all the props including any nested props\n\n\n  function gatherProps(prop) {\n    var allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    allProps.push(prop);\n    var children = prop.getNestedProps();\n\n    if (children && children.length) {\n      for (var i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n\n    return allProps;\n  }\n\n  publicAPI.getViewPropsWithNestedProps = function () {\n    var allPropsArray = [];\n\n    for (var i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n\n    return allPropsArray;\n  };\n\n  publicAPI.addActor2D = publicAPI.addViewProp;\n\n  publicAPI.removeActor2D = function (prop) {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n\n  publicAPI.getActors2D = function () {\n    model.actors2D = [];\n    model.props.forEach(function (prop) {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n\n  publicAPI.displayToView = function () {\n    return vtkErrorMacro('call displayToView on your view instead');\n  };\n\n  publicAPI.viewToDisplay = function () {\n    return vtkErrorMacro('callviewtodisplay on your view instead');\n  };\n\n  publicAPI.getSize = function () {\n    return vtkErrorMacro('call getSize on your View instead');\n  };\n\n  publicAPI.normalizedDisplayToProjection = function (x, y, z) {\n    // first to normalized viewport\n    var nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z); // then to view\n\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedDisplayToNormalizedViewport = function (x, y, z) {\n    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];\n  };\n\n  publicAPI.normalizedViewportToProjection = function (x, y, z) {\n    return [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];\n  };\n\n  publicAPI.projectionToNormalizedDisplay = function (x, y, z) {\n    // first to nvp\n    var nvp = publicAPI.projectionToNormalizedViewport(x, y, z); // then to ndp\n\n    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedViewportToNormalizedDisplay = function (x, y, z) {\n    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];\n  };\n\n  publicAPI.projectionToNormalizedViewport = function (x, y, z) {\n    return [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];\n  };\n\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n  vtkViewport(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkViewport'); // ----------------------------------------------------------------------------\n\nvar vtkViewport$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewport$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, get, setGet, getArray, setGetArray, moveToProtected, vtkDebugMacro as vtkDebugMacro$1, vtkErrorMacro as vtkErrorMacro$1, vtkWarningMacro as vtkWarningMacro$1 } from '../../macros.js';\nimport vtkCamera from './Camera.js';\nimport vtkLight from './Light.js';\nimport { P as areBoundsInitialized, u as uninitializeBounds, r as radiansFromDegrees, d as dot, N as createUninitializedBounds } from '../../Common/Core/Math/index.js';\nimport vtkViewport from './Viewport.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nvar vtkDebugMacro = vtkDebugMacro$1,\n    vtkErrorMacro = vtkErrorMacro$1,\n    vtkWarningMacro = vtkWarningMacro$1;\n\nfunction notImplemented(method) {\n  return function () {\n    return vtkErrorMacro(\"vtkRenderer::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkRenderer methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderer'); // Events\n\n  var COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {\n    type: 'ComputeVisiblePropBoundsEvent',\n    renderer: publicAPI\n  };\n  var RESET_CAMERA_CLIPPING_RANGE_EVENT = {\n    type: 'ResetCameraClippingRangeEvent',\n    renderer: publicAPI\n  };\n  var RESET_CAMERA_EVENT = {\n    type: 'ResetCameraEvent',\n    renderer: publicAPI\n  };\n\n  publicAPI.updateCamera = function () {\n    if (!model.activeCamera) {\n      vtkDebugMacro('No cameras are on, creating one.'); // the get method will automagically create a camera\n      // and reset it since one hasn't been specified yet.\n\n      publicAPI.getActiveCameraAndResetIfCreated();\n    } // update the viewing transformation\n\n\n    model.activeCamera.render(publicAPI);\n    return true;\n  };\n\n  publicAPI.updateLightsGeometryToFollowCamera = function () {\n    // only update the light's geometry if this Renderer is tracking\n    // this lights.  That allows one renderer to view the lights that\n    // another renderer is setting up.\n    var camera = publicAPI.getActiveCameraAndResetIfCreated();\n    model.lights.forEach(function (light) {\n      if (light.lightTypeIsSceneLight() || light.lightTypeIsCameraLight()) ; else if (light.lightTypeIsHeadLight()) {\n        // update position and orientation of light to match camera.\n        light.setPositionFrom(camera.getPositionByReference());\n        light.setFocalPointFrom(camera.getFocalPointByReference());\n        light.modified(camera.getMTime());\n      } else {\n        vtkErrorMacro('light has unknown light type', light.get());\n      }\n    });\n  };\n\n  publicAPI.updateLightGeometry = function () {\n    if (model.lightFollowCamera) {\n      // only update the light's geometry if this Renderer is tracking\n      // this lights.  That allows one renderer to view the lights that\n      // another renderer is setting up.\n      return publicAPI.updateLightsGeometryToFollowCamera();\n    }\n\n    return true;\n  };\n\n  publicAPI.allocateTime = notImplemented('allocateTime');\n  publicAPI.updateGeometry = notImplemented('updateGeometry');\n\n  publicAPI.getVTKWindow = function () {\n    return model._renderWindow;\n  };\n\n  publicAPI.setLayer = function (layer) {\n    vtkDebugMacro(publicAPI.getClassName(), publicAPI, 'setting Layer to ', layer);\n\n    if (model.layer !== layer) {\n      model.layer = layer;\n      publicAPI.modified();\n    }\n\n    publicAPI.setPreserveColorBuffer(!!layer);\n  };\n\n  publicAPI.setActiveCamera = function (camera) {\n    if (model.activeCamera === camera) {\n      return false;\n    }\n\n    model.activeCamera = camera;\n    publicAPI.modified();\n    publicAPI.invokeEvent({\n      type: 'ActiveCameraEvent',\n      camera: camera\n    });\n    return true;\n  };\n\n  publicAPI.makeCamera = function () {\n    var camera = vtkCamera.newInstance();\n    publicAPI.invokeEvent({\n      type: 'CreateCameraEvent',\n      camera: camera\n    });\n    return camera;\n  }; // Replace the set/get macro method\n\n\n  publicAPI.getActiveCamera = function () {\n    if (!model.activeCamera) {\n      model.activeCamera = publicAPI.makeCamera();\n    }\n\n    return model.activeCamera;\n  };\n\n  publicAPI.getActiveCameraAndResetIfCreated = function () {\n    if (!model.activeCamera) {\n      publicAPI.getActiveCamera();\n      publicAPI.resetCamera();\n    }\n\n    return model.activeCamera;\n  };\n\n  publicAPI.getActors = function () {\n    model.actors = [];\n    model.props.forEach(function (prop) {\n      model.actors = model.actors.concat(prop.getActors());\n    });\n    return model.actors;\n  };\n\n  publicAPI.addActor = publicAPI.addViewProp;\n\n  publicAPI.removeActor = function (actor) {\n    model.actors = model.actors.filter(function (a) {\n      return a !== actor;\n    });\n    publicAPI.removeViewProp(actor);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllActors = function () {\n    var actors = publicAPI.getActors();\n    actors.forEach(function (actor) {\n      publicAPI.removeViewProp(actor);\n    });\n    model.actors = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.getVolumes = function () {\n    model.volumes = [];\n    model.props.forEach(function (prop) {\n      model.volumes = model.volumes.concat(prop.getVolumes());\n    });\n    return model.volumes;\n  };\n\n  publicAPI.addVolume = publicAPI.addViewProp;\n\n  publicAPI.removeVolume = function (volume) {\n    model.volumes = model.volumes.filter(function (v) {\n      return v !== volume;\n    });\n    publicAPI.removeViewProp(volume);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllVolumes = function () {\n    var volumes = publicAPI.getVolumes();\n    volumes.forEach(function (volume) {\n      publicAPI.removeViewProp(volume);\n    });\n    model.volumes = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.addLight = function (light) {\n    model.lights = [].concat(model.lights, light);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeLight = function (light) {\n    model.lights = model.lights.filter(function (l) {\n      return l !== light;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllLights = function () {\n    model.lights = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.setLightCollection = function (lights) {\n    model.lights = lights;\n    publicAPI.modified();\n  };\n\n  publicAPI.makeLight = vtkLight.newInstance;\n\n  publicAPI.createLight = function () {\n    if (!model.automaticLightCreation) {\n      return;\n    }\n\n    if (model._createdLight) {\n      publicAPI.removeLight(model._createdLight);\n\n      model._createdLight.delete();\n\n      model._createdLight = null;\n    }\n\n    model._createdLight = publicAPI.makeLight();\n    publicAPI.addLight(model._createdLight);\n\n    model._createdLight.setLightTypeToHeadLight(); // set these values just to have a good default should LightFollowCamera\n    // be turned off.\n\n\n    model._createdLight.setPosition(publicAPI.getActiveCamera().getPosition());\n\n    model._createdLight.setFocalPoint(publicAPI.getActiveCamera().getFocalPoint());\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.normalizedDisplayToWorld = function (x, y, z, aspect) {\n    var vpd = publicAPI.normalizedDisplayToProjection(x, y, z);\n    vpd = publicAPI.projectionToView(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2]);\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.worldToNormalizedDisplay = function (x, y, z, aspect) {\n    var vpd = publicAPI.worldToView(x, y, z);\n    vpd = publicAPI.viewToProjection(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.projectionToNormalizedDisplay(vpd[0], vpd[1], vpd[2]);\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.viewToWorld = function (x, y, z) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the view matrix from the active camera\n\n\n    var matrix = model.activeCamera.getViewMatrix();\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix); // Transform point to world coordinates\n\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  publicAPI.projectionToView = function (x, y, z, aspect) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ProjectionToView: no active camera, cannot compute projection to view, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the projection transformation from the active camera\n\n\n    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix); // Transform point to world coordinates\n\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  }; // Convert world point coordinates to view coordinates.\n\n\n  publicAPI.worldToView = function (x, y, z) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('WorldToView: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the view transformation from the active camera\n\n\n    var matrix = model.activeCamera.getViewMatrix();\n    mat4.transpose(matrix, matrix);\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  }; // Convert world point coordinates to view coordinates.\n  // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.viewToProjection = function (x, y, z, aspect) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToProjection: no active camera, cannot compute view to projection, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the projeciton transformation from the active camera\n\n\n    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.transpose(matrix, matrix);\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  publicAPI.computeVisiblePropBounds = function () {\n    model.allBounds[0] = vtkBoundingBox.INIT_BOUNDS[0];\n    model.allBounds[1] = vtkBoundingBox.INIT_BOUNDS[1];\n    model.allBounds[2] = vtkBoundingBox.INIT_BOUNDS[2];\n    model.allBounds[3] = vtkBoundingBox.INIT_BOUNDS[3];\n    model.allBounds[4] = vtkBoundingBox.INIT_BOUNDS[4];\n    model.allBounds[5] = vtkBoundingBox.INIT_BOUNDS[5];\n    var nothingVisible = true;\n    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT); // loop through all props\n\n    for (var index = 0; index < model.props.length; ++index) {\n      var prop = model.props[index];\n\n      if (prop.getVisibility() && prop.getUseBounds()) {\n        var bounds = prop.getBounds();\n\n        if (bounds && areBoundsInitialized(bounds)) {\n          nothingVisible = false;\n\n          if (bounds[0] < model.allBounds[0]) {\n            model.allBounds[0] = bounds[0];\n          }\n\n          if (bounds[1] > model.allBounds[1]) {\n            model.allBounds[1] = bounds[1];\n          }\n\n          if (bounds[2] < model.allBounds[2]) {\n            model.allBounds[2] = bounds[2];\n          }\n\n          if (bounds[3] > model.allBounds[3]) {\n            model.allBounds[3] = bounds[3];\n          }\n\n          if (bounds[4] < model.allBounds[4]) {\n            model.allBounds[4] = bounds[4];\n          }\n\n          if (bounds[5] > model.allBounds[5]) {\n            model.allBounds[5] = bounds[5];\n          }\n        }\n      }\n    }\n\n    if (nothingVisible) {\n      uninitializeBounds(model.allBounds);\n      vtkDebugMacro(\"Can't compute bounds, no 3D props are visible\");\n    }\n\n    return model.allBounds;\n  };\n\n  publicAPI.resetCamera = function () {\n    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n    var center = [0, 0, 0];\n\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera!');\n      return false;\n    }\n\n    var vn = null;\n\n    if (publicAPI.getActiveCamera()) {\n      vn = model.activeCamera.getViewPlaneNormal();\n    } else {\n      vtkErrorMacro('Trying to reset non-existent camera');\n      return false;\n    } // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n\n\n    model.activeCamera.setViewAngle(30.0);\n    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;\n    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;\n    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;\n    var w1 = boundsToUse[1] - boundsToUse[0];\n    var w2 = boundsToUse[3] - boundsToUse[2];\n    var w3 = boundsToUse[5] - boundsToUse[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    var radius = w1 + w2 + w3; // If we have just a single point, pick a radius of 1.0\n\n    radius = radius === 0 ? 1.0 : radius; // compute the radius of the enclosing sphere\n\n    radius = Math.sqrt(radius) * 0.5; // default so that the bounding sphere fits within the view fustrum\n    // compute the distance from the intersection of the view frustum with the\n    // bounding sphere. Basically in 2D draw a circle representing the bounding\n    // sphere in 2D then draw a horizontal line going out from the center of\n    // the circle. That is the camera view. Then draw a line from the camera\n    // position to the point where it intersects the circle. (it will be tangent\n    // to the circle at this point, this is important, only go to the tangent\n    // point, do not draw all the way to the view plane). Then draw the radius\n    // from the tangent point to the center of the circle. You will note that\n    // this forms a right triangle with one side being the radius, another being\n    // the target distance for the camera, then just find the target dist using\n    // a sin.\n\n    var angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n    var parallelScale = radius;\n    var distance = radius / Math.sin(angle * 0.5); // check view-up vector against view plane normal\n\n    var vup = model.activeCamera.getViewUp();\n\n    if (Math.abs(dot(vup, vn)) > 0.999) {\n      vtkWarningMacro('Resetting view-up since view plane normal is parallel');\n      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);\n    } // update the camera\n\n\n    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);\n    model.activeCamera.setPosition(center[0] + distance * vn[0], center[1] + distance * vn[1], center[2] + distance * vn[2]);\n    publicAPI.resetCameraClippingRange(boundsToUse); // setup default parallel scale\n\n    model.activeCamera.setParallelScale(parallelScale); // update reasonable world to physical values\n\n    model.activeCamera.setPhysicalScale(radius);\n    model.activeCamera.setPhysicalTranslation(-center[0], -center[1], -center[2]); // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n\n    publicAPI.invokeEvent(RESET_CAMERA_EVENT);\n    return true;\n  };\n\n  publicAPI.resetCameraClippingRange = function () {\n    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera clipping range!');\n      return false;\n    } // Make sure we have an active camera\n\n\n    publicAPI.getActiveCameraAndResetIfCreated();\n\n    if (!model.activeCamera) {\n      vtkErrorMacro('Trying to reset clipping range of non-existent camera');\n      return false;\n    } // Get the exact range for the bounds\n\n\n    var range = model.activeCamera.computeClippingRange(boundsToUse); // do not let far - near be less than 0.1 of the window height\n    // this is for cases such as 2D images which may have zero range\n\n    var minGap = 0.0;\n\n    if (model.activeCamera.getParallelProjection()) {\n      minGap = 0.2 * model.activeCamera.getParallelScale();\n    } else {\n      var angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];\n    }\n\n    if (range[1] - range[0] < minGap) {\n      minGap = minGap - range[1] + range[0];\n      range[1] += minGap / 2.0;\n      range[0] -= minGap / 2.0;\n    } // Do not let the range behind the camera throw off the calculation.\n\n\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    } // Give ourselves a little breathing room\n\n\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion; // Make sure near is not bigger than far\n\n    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0]; // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer\n\n    if (!model.nearClippingPlaneTolerance) {\n      model.nearClippingPlaneTolerance = 0.01;\n    } // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used\n\n\n    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {\n      range[0] = model.nearClippingPlaneTolerance * range[1];\n    }\n\n    model.activeCamera.setClippingRange(range[0], range[1]); // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n\n    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);\n    return false;\n  };\n\n  publicAPI.setRenderWindow = function (renderWindow) {\n    if (renderWindow !== model._renderWindow) {\n      model._vtkWindow = renderWindow;\n      model._renderWindow = renderWindow;\n    }\n  };\n\n  publicAPI.visibleActorCount = function () {\n    return model.props.filter(function (prop) {\n      return prop.getVisibility();\n    }).length;\n  };\n\n  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;\n\n  publicAPI.getMTime = function () {\n    var m1 = model.mtime;\n    var m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;\n\n    if (m2 > m1) {\n      m1 = m2;\n    }\n\n    var m3 = model._createdLight ? model._createdLight.getMTime() : 0;\n\n    if (m3 > m1) {\n      m1 = m3;\n    }\n\n    return m1;\n  };\n\n  publicAPI.getTransparent = function () {\n    return !!model.preserveColorBuffer;\n  };\n\n  publicAPI.isActiveCameraCreated = function () {\n    return !!model.activeCamera;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  pickedProp: null,\n  activeCamera: null,\n  allBounds: [],\n  ambient: [1, 1, 1],\n  allocatedRenderTime: 100,\n  timeFactor: 1,\n  automaticLightCreation: true,\n  twoSidedLighting: true,\n  lastRenderTimeInSeconds: -1,\n  renderWindow: null,\n  lights: [],\n  actors: [],\n  volumes: [],\n  lightFollowCamera: true,\n  numberOfPropsRendered: 0,\n  propArray: null,\n  pathArray: null,\n  layer: 0,\n  preserveColorBuffer: false,\n  preserveDepthBuffer: false,\n  computeVisiblePropBounds: createUninitializedBounds(),\n  interactive: true,\n  nearClippingPlaneTolerance: 0,\n  clippingRangeExpansion: 0.05,\n  erase: true,\n  draw: true,\n  useShadows: false,\n  useDepthPeeling: false,\n  occlusionRatio: 0,\n  maximumNumberOfPeels: 4,\n  selector: null,\n  delegate: null,\n  texturedBackground: false,\n  backgroundTexture: null,\n  pass: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewport.extend(publicAPI, model, initialValues); // make sure background has 4 entries. Default to opaque black\n\n  if (!model.background) model.background = [0, 0, 0, 1];\n\n  while (model.background.length < 3) {\n    model.background.push(0);\n  }\n\n  if (model.background.length === 3) model.background.push(1); // Build VTK API\n\n  get(publicAPI, model, ['_renderWindow', 'allocatedRenderTime', 'timeFactor', 'lastRenderTimeInSeconds', 'numberOfPropsRendered', 'lastRenderingUsedDepthPeeling', 'selector']);\n  setGet(publicAPI, model, ['twoSidedLighting', 'lightFollowCamera', 'automaticLightCreation', 'erase', 'draw', 'nearClippingPlaneTolerance', 'clippingRangeExpansion', 'backingStore', 'interactive', 'layer', 'preserveColorBuffer', 'preserveDepthBuffer', 'useDepthPeeling', 'occlusionRatio', 'maximumNumberOfPeels', 'delegate', 'backgroundTexture', 'texturedBackground', 'useShadows', 'pass']);\n  getArray(publicAPI, model, ['actors', 'volumes', 'lights']);\n  setGetArray(publicAPI, model, ['background'], 4, 1.0);\n  moveToProtected(publicAPI, model, ['renderWindow']); // Object methods\n\n  vtkRenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkRenderer'); // ----------------------------------------------------------------------------\n\nvar vtkRenderer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderer$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar DEFAULT_VIEW_API = navigator.gpu ? 'WebGPU' : 'WebGL';\nvar VIEW_CONSTRUCTORS = Object.create(null); // ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n} // ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow'); // Add renderer\n\n  publicAPI.addRenderer = function (renderer) {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer); // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeRenderer = function (renderer) {\n    model.renderers = model.renderers.filter(function (r) {\n      return r !== renderer;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.hasRenderer = function (ren) {\n    return model.renderers.indexOf(ren) !== -1;\n  }; // get an API specific view of this data\n\n\n  publicAPI.newAPISpecificView = function (name) {\n    var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  }; // Add renderer\n\n\n  publicAPI.addView = function (view) {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n\n    view.setRenderable(publicAPI);\n    model.views.push(view);\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeView = function (view) {\n    model.views = model.views.filter(function (r) {\n      return r !== view;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.hasView = function (view) {\n    return model.views.indexOf(view) !== -1;\n  }; // handle any pre render initializations\n\n\n  publicAPI.preRender = function () {\n    model.renderers.forEach(function (ren) {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n\n  publicAPI.render = function () {\n    publicAPI.preRender();\n\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model.views.forEach(function (view) {\n        return view.traverseAllPasses();\n      });\n    }\n  };\n\n  publicAPI.getStatistics = function () {\n    var results = {\n      propCount: 0,\n      invisiblePropCount: 0\n    };\n    model.renderers.forEach(function (ren) {\n      var props = ren.getViewProps();\n      props.forEach(function (prop) {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          var mpr = prop.getMapper && prop.getMapper();\n\n          if (mpr && mpr.getPrimitiveCount) {\n            var pcount = mpr.getPrimitiveCount();\n            Object.keys(pcount).forEach(function (keyName) {\n              if (!results[keyName]) {\n                results[keyName] = 0;\n              }\n\n              results[keyName] += pcount[keyName];\n            });\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(function (keyName) {\n      return \"\".concat(keyName, \": \").concat(results[keyName]);\n    }).join('\\n');\n    return results;\n  };\n\n  publicAPI.captureImages = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model.views.map(function (view) {\n      return view.captureNextImage ? view.captureNextImage(format, opts) : undefined;\n    }).filter(function (i) {\n      return !!i;\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', 'views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.event(publicAPI, model, 'completion'); // Object methods\n\n  vtkRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderWindow'); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  registerViewConstructor: registerViewConstructor,\n  listViewAPIs: listViewAPIs,\n  newAPISpecificView: newAPISpecificView\n};\n\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };\n", "var Device = {\n  Unknown: 0,\n  LeftController: 1,\n  RightController: 2\n};\nvar Input = {\n  Unknown: 0,\n  Trigger: 1,\n  TrackPad: 2,\n  Grip: 3,\n  Thumbstick: 4,\n  A: 5,\n  B: 6,\n  ApplicationMenu: 7 // Not exposed in WebXR API\n\n};\nvar Axis = {\n  Unknown: 0,\n  TouchpadX: 1,\n  TouchpadY: 2,\n  ThumbstickX: 3,\n  ThumbstickY: 4\n};\nvar Constants = {\n  Device: Device,\n  Input: Input,\n  Axis: Axis\n};\n\nexport { Axis, Device, Input, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Device = Constants.Device,\n    Input = Constants.Input;\nvar vtkWarningMacro = macro.vtkWarningMacro,\n    vtkErrorMacro = macro.vtkErrorMacro,\n    normalizeWheel = macro.normalizeWheel,\n    vtkOnceErrorMacro = macro.vtkOnceErrorMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nvar deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nvar handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\n\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  return false;\n} // ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor'); // Initialize list of requesters\n\n  var animationRequesters = new Set(); // track active event listeners to handle simultaneous button tracking\n\n  var activeListenerCount = 0; // Public API methods\n  //----------------------------------------------------------------------\n\n  publicAPI.start = function () {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n\n      if (!model.initialized) {\n        return;\n      }\n    } // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n\n\n    publicAPI.startEventLoop();\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.setRenderWindow = function (aren) {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.setInteractorStyle = function (style) {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n\n      model.interactorStyle = style;\n\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  }; //---------------------------------------------------------------------\n\n\n  publicAPI.initialize = function () {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n\n  publicAPI.enable = function () {\n    return publicAPI.setEnabled(true);\n  };\n\n  publicAPI.disable = function () {\n    return publicAPI.setEnabled(false);\n  };\n\n  publicAPI.startEventLoop = function () {\n    return vtkWarningMacro('empty event loop');\n  };\n\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n\n  publicAPI.getCurrentRenderer = function () {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n\n  function getScreenEventPositionFor(source) {\n    var bounds = model.container.getBoundingClientRect();\n\n    var canvas = model._view.getCanvas();\n\n    var scaleX = canvas.width / bounds.width;\n    var scaleY = canvas.height / bounds.height;\n    var position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n    updateCurrentRenderer(position.x, position.y);\n    return position;\n  }\n\n  function getTouchEventPositionsFor(touches) {\n    var positions = {};\n\n    for (var i = 0; i < touches.length; i++) {\n      var touch = touches[i];\n      positions[touch.identifier] = getScreenEventPositionFor(touch);\n    }\n\n    return positions;\n  }\n\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n\n  function getKeysFor(event) {\n    var modifierKeys = getModifierKeysFor(event);\n\n    var keys = _objectSpread({\n      key: event.key,\n      keyCode: event.charCode\n    }, modifierKeys);\n\n    return keys;\n  }\n\n  function interactionRegistration(addListeners) {\n    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var rootElm = document;\n    var method = addListeners ? 'addEventListener' : 'removeEventListener';\n    var invMethod = addListeners ? 'removeEventListener' : 'addEventListener';\n\n    if (!force && !addListeners && activeListenerCount > 0) {\n      --activeListenerCount;\n    } // only add/remove listeners when there are no registered listeners\n\n\n    if (!activeListenerCount || force) {\n      activeListenerCount = 0;\n\n      if (model.container) {\n        model.container[invMethod]('mousemove', publicAPI.handleMouseMove);\n      }\n\n      rootElm[method]('mouseup', publicAPI.handleMouseUp);\n      rootElm[method]('mousemove', publicAPI.handleMouseMove);\n      rootElm[method]('touchend', publicAPI.handleTouchEnd, false);\n      rootElm[method]('touchcancel', publicAPI.handleTouchEnd, false);\n      rootElm[method]('touchmove', publicAPI.handleTouchMove, false);\n    }\n\n    if (!force && addListeners) {\n      ++activeListenerCount;\n    }\n  }\n\n  publicAPI.bindEvents = function (container) {\n    model.container = container;\n    container.addEventListener('contextmenu', preventDefault); // container.addEventListener('click', preventDefault); // Avoid stopping event propagation\n\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('mouseenter', publicAPI.handleMouseEnter);\n    container.addEventListener('mouseleave', publicAPI.handleMouseLeave);\n    container.addEventListener('mousemove', publicAPI.handleMouseMove);\n    container.addEventListener('mousedown', publicAPI.handleMouseDown);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    container.addEventListener('touchstart', publicAPI.handleTouchStart, false);\n  };\n\n  publicAPI.unbindEvents = function () {\n    // force unbinding listeners\n    interactionRegistration(false, true);\n    model.container.removeEventListener('contextmenu', preventDefault); // model.container.removeEventListener('click', preventDefault); // Avoid stopping event propagation\n\n    model.container.removeEventListener('wheel', publicAPI.handleWheel);\n    model.container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    model.container.removeEventListener('mouseenter', publicAPI.handleMouseEnter);\n    model.container.removeEventListener('mouseleave', publicAPI.handleMouseLeave);\n    model.container.removeEventListener('mousemove', publicAPI.handleMouseMove);\n    model.container.removeEventListener('mousedown', publicAPI.handleMouseDown);\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    model.container.removeEventListener('touchstart', publicAPI.handleTouchStart);\n    model.container = null;\n  };\n\n  publicAPI.handleKeyPress = function (event) {\n    var data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n\n  publicAPI.handleKeyDown = function (event) {\n    var data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n\n  publicAPI.handleKeyUp = function (event) {\n    var data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n\n  publicAPI.handleMouseDown = function (event) {\n    if (event.button > 2) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n\n    interactionRegistration(true);\n    preventDefault(event);\n\n    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n\n      default:\n        vtkErrorMacro(\"Unknown mouse button pressed: \".concat(event.button));\n        break;\n    }\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.requestPointerLock = function () {\n    var canvas = publicAPI.getView().getCanvas();\n    canvas.requestPointerLock();\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.exitPointerLock = function () {\n    return document.exitPointerLock();\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.isPointerLocked = function () {\n    return !!document.pointerLockElement;\n  }; //----------------------------------------------------------------------\n\n\n  publicAPI.handlePointerLockChange = function () {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  }; //----------------------------------------------------------------------\n\n\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n\n      model._view.traverseAllPasses();\n\n      model.inRender = false;\n    } // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n\n\n    publicAPI.invokeRenderEvent();\n  }\n\n  publicAPI.requestAnimation = function (requestor) {\n    if (requestor === undefined) {\n      vtkErrorMacro(\"undefined requester, can not start animating\");\n      return;\n    }\n\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(\"requester is already registered for animating\");\n      return;\n    }\n\n    animationRequesters.add(requestor);\n\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  }; // continue animating for at least the specified duration of\n  // milliseconds.\n\n\n  publicAPI.extendAnimation = function (duration) {\n    var newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  publicAPI.isAnimating = function () {\n    return model.xrAnimation || model.animationRequest !== null;\n  };\n\n  publicAPI.cancelAnimation = function (requestor) {\n    var skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        var requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(\"\".concat(requestStr, \" did not request an animation\"));\n      }\n\n      return;\n    }\n\n    animationRequesters.delete(requestor);\n\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.switchToXRAnimation = function () {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n\n    model.xrAnimation = true;\n  };\n\n  publicAPI.returnFromXRAnimation = function () {\n    model.xrAnimation = false;\n\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n\n  publicAPI.updateXRGamepads = function (xrSession, xrFrame, xrRefSpace) {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(function (inputSource) {\n      var gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      var gp = inputSource.gamepad;\n      var hand = inputSource.handedness;\n\n      if (gp) {\n        if (!(gp.index in model.lastGamepadValues)) {\n          model.lastGamepadValues[gp.index] = {\n            left: {\n              buttons: {}\n            },\n            right: {\n              buttons: {}\n            }\n          };\n        }\n\n        for (var b = 0; b < gp.buttons.length; ++b) {\n          if (!(b in model.lastGamepadValues[gp.index][hand].buttons)) {\n            model.lastGamepadValues[gp.index][hand].buttons[b] = false;\n          }\n\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] !== gp.buttons[b].pressed && gripPose != null) {\n            publicAPI.button3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              pressed: gp.buttons[b].pressed,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n              input: deviceInputMap[gp.mapping] && deviceInputMap[gp.mapping][b] ? deviceInputMap[gp.mapping][b] : Input.Trigger\n            });\n            model.lastGamepadValues[gp.index][hand].buttons[b] = gp.buttons[b].pressed;\n          }\n\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] && gripPose != null) {\n            publicAPI.move3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n            });\n          }\n        }\n      }\n    });\n  };\n\n  publicAPI.handleMouseMove = function (event) {\n    // Do not consume event for move\n    // preventDefault(event);\n    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    } // start a timer to keep us animating while we get mouse move events\n\n\n    model.moveTimeoutID = setTimeout(function () {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n\n  publicAPI.handleAnimation = function () {\n    var currTime = Date.now();\n    model._animationFrameCount++;\n\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n\n    publicAPI.animationEvent();\n    forceRender();\n\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.handleWheel = function (event) {\n    preventDefault(event);\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n\n    var callData = _objectSpread(_objectSpread(_objectSpread({}, normalizeWheel(event)), getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    } // start a timer to keep us animating while we get wheel events\n\n\n    model.wheelTimeoutID = setTimeout(function () {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    }, 200);\n  };\n\n  publicAPI.handleMouseEnter = function (event) {\n    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    publicAPI.mouseEnterEvent(callData);\n  };\n\n  publicAPI.handleMouseLeave = function (event) {\n    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    publicAPI.mouseLeaveEvent(callData);\n  };\n\n  publicAPI.handleMouseUp = function (event) {\n    interactionRegistration(false);\n    preventDefault(event);\n\n    var callData = _objectSpread(_objectSpread({}, getModifierKeysFor(event)), {}, {\n      position: getScreenEventPositionFor(event)\n    });\n\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n\n      default:\n        vtkErrorMacro(\"Unknown mouse button released: \".concat(event.button));\n        break;\n    }\n  };\n\n  publicAPI.handleTouchStart = function (event) {\n    interactionRegistration(true);\n    preventDefault(event); // If multitouch\n\n    if (model.recognizeGestures && event.touches.length > 1) {\n      var positions = getTouchEventPositionsFor(event.touches); // did we just transition to multitouch?\n\n      if (event.touches.length === 2) {\n        var touch = event.touches[0];\n        var callData = {\n          position: getScreenEventPositionFor(touch),\n          shiftKey: false,\n          altKey: false,\n          controlKey: false\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } // handle the gesture\n\n\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else {\n      var _touch = event.touches[0];\n      var _callData = {\n        position: getScreenEventPositionFor(_touch),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false\n      };\n      publicAPI.leftButtonPressEvent(_callData);\n    }\n  };\n\n  publicAPI.handleTouchMove = function (event) {\n    preventDefault(event);\n\n    if (model.recognizeGestures && event.touches.length > 1) {\n      var positions = getTouchEventPositionsFor(event.touches);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else {\n      var touch = event.touches[0];\n      var callData = {\n        position: getScreenEventPositionFor(touch),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n\n  publicAPI.handleTouchEnd = function (event) {\n    preventDefault(event);\n\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (event.touches.length === 0) {\n        // If just one finger released, consider as left button\n        if (event.changedTouches.length === 1) {\n          var touch = event.changedTouches[0];\n          var callData = {\n            position: getScreenEventPositionFor(touch),\n            shiftKey: false,\n            altKey: false,\n            controlKey: false\n          };\n          publicAPI.leftButtonReleaseEvent(callData);\n          interactionRegistration(false);\n        } else {\n          // If more than one finger released, recognize touchend\n          var positions = getTouchEventPositionsFor(event.changedTouches);\n          publicAPI.recognizeGesture('TouchEnd', positions);\n          interactionRegistration(false);\n        }\n      } else if (event.touches.length === 1) {\n        // If one finger left, end touch and start button press\n        var _positions = getTouchEventPositionsFor(event.changedTouches);\n\n        publicAPI.recognizeGesture('TouchEnd', _positions);\n        var _touch2 = event.touches[0];\n        var _callData2 = {\n          position: getScreenEventPositionFor(_touch2),\n          shiftKey: false,\n          altKey: false,\n          controlKey: false\n        };\n        publicAPI.leftButtonPressEvent(_callData2);\n      } else {\n        // If more than one finger left, keep touch move\n        var _positions2 = getTouchEventPositionsFor(event.touches);\n\n        publicAPI.recognizeGesture('TouchMove', _positions2);\n      }\n    } else {\n      var _touch3 = event.changedTouches[0];\n      var _callData3 = {\n        position: getScreenEventPositionFor(_touch3),\n        shiftKey: false,\n        altKey: false,\n        controlKey: false\n      };\n      publicAPI.leftButtonReleaseEvent(_callData3);\n      interactionRegistration(false);\n    }\n  };\n\n  publicAPI.setView = function (val) {\n    if (model._view === val) {\n      return;\n    }\n\n    model._view = val;\n\n    model._view.getRenderable().setInteractor(publicAPI);\n\n    publicAPI.modified();\n  };\n\n  publicAPI.getFirstRenderer = function () {\n    var _model$_view, _model$_view$getRende, _model$_view$getRende2;\n\n    return (_model$_view = model._view) === null || _model$_view === void 0 ? void 0 : (_model$_view$getRende = _model$_view.getRenderable()) === null || _model$_view$getRende === void 0 ? void 0 : (_model$_view$getRende2 = _model$_view$getRende.getRenderersByReference()) === null || _model$_view$getRende2 === void 0 ? void 0 : _model$_view$getRende2[0];\n  };\n\n  publicAPI.findPokedRenderer = function () {\n    var _model$_view2, _model$_view2$getRend;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!model._view) {\n      return null;\n    } // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n\n\n    var rc = (_model$_view2 = model._view) === null || _model$_view2 === void 0 ? void 0 : (_model$_view2$getRend = _model$_view2.getRenderable()) === null || _model$_view2$getRend === void 0 ? void 0 : _model$_view2$getRend.getRenderers();\n\n    if (!rc) {\n      return null;\n    }\n\n    rc.sort(function (a, b) {\n      return a.getLayer() - b.getLayer();\n    });\n    var interactiveren = null;\n    var viewportren = null;\n    var currentRenderer = null;\n    var count = rc.length;\n\n    while (count--) {\n      var aren = rc[count];\n\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    } // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n\n\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    } // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n\n\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    } // We must have a value - take anything.\n\n\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n\n    return currentRenderer;\n  }; // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n\n\n  publicAPI.render = function () {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  }; // create the generic Event methods\n\n\n  handledEvents.forEach(function (eventName) {\n    var lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n\n    publicAPI[\"\".concat(lowerFirst, \"Event\")] = function (arg) {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      } // Check that a poked renderer exists\n\n\n      var renderer = publicAPI.getCurrentRenderer();\n\n      if (!renderer) {\n        vtkOnceErrorMacro(\"\\n          Can not forward events without a current renderer on the interactor.\\n        \");\n        return;\n      } // Pass the eventName and the poked renderer\n\n\n      var callData = _objectSpread({\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer()\n      }, arg); // Call invoke\n\n\n      publicAPI[\"invoke\".concat(eventName)](callData);\n    };\n  }); // we know we are in multitouch now, so start recognizing\n\n  publicAPI.recognizeGesture = function (event, positions) {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    } // store the initial positions\n\n\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(function (key) {\n        model.startingEventPositions[key] = positions[key];\n      }); // we do not know what the gesture is yet\n\n      model.currentGesture = 'Start';\n      return;\n    } // end the gesture if needed\n\n\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    } // what are the two pointers we are working with\n\n\n    var count = 0;\n    var posVals = [];\n    var startVals = [];\n    Object.keys(positions).forEach(function (key) {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    }); // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n\n    var originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    var newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y)); // calculate rotations\n\n    var originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    var newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x)); // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n\n    var angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    } // calculate the translations\n\n\n    var trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        var thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n\n        var pinchDistance = Math.abs(newDistance - originalDistance);\n        var rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        var panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          var callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          var _callData4 = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(_callData4);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          var _callData5 = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(_callData5);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          var _callData6 = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(_callData6);\n        }\n\n        if (model.currentGesture === 'Pinch') {\n          var _callData7 = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(_callData7);\n        }\n\n        if (model.currentGesture === 'Pan') {\n          var _callData8 = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(_callData8);\n        }\n      }\n    }\n  };\n\n  publicAPI.handleVisibilityChange = function () {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n\n  publicAPI.setCurrentRenderer = function (r) {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  }; // Stop animating if the renderWindowInteractor is deleted.\n\n\n  var superDelete = publicAPI.delete;\n\n  publicAPI.delete = function () {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n\n    superDelete();\n  }; // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n\n\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {}\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model); // run animation at least until this time\n\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(function (eventName) {\n    return macro.event(publicAPI, model, eventName);\n  }); // Create get-only macros\n\n  macro.get(publicAPI, model, ['initialized', 'container', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker']);\n  macro.moveToProtected(publicAPI, model, ['view']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkRenderWindowInteractor(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor'); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend,\n  handledEvents: handledEvents\n}, Constants);\n\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar INVALID_BOUNDS = [1, -1, 1, -1, 1, -1]; // ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints'); // Forwarding methods\n\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n\n  publicAPI.setNumberOfPoints = function (nbPoints) {\n    var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = macro.newTypedArray(model.dataType, model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint = function (idx) {\n    var offset = idx * model.numberOfComponents;\n\n    for (var i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    }\n  };\n\n  publicAPI.getPoint = publicAPI.getTuple;\n\n  publicAPI.getBounds = function () {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      var _xRange = publicAPI.getRange(0);\n\n      model.bounds[0] = _xRange[0];\n      model.bounds[1] = _xRange[1];\n\n      var _yRange = publicAPI.getRange(1);\n\n      model.bounds[2] = _yRange[0];\n      model.bounds[3] = _yRange[1];\n      var zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(\"getBounds called on an array with components of\\n        \".concat(publicAPI.getNumberOfComponents()));\n      return INVALID_BOUNDS;\n    }\n\n    var xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    var yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n    return model.bounds;\n  }; // Trigger the computation of bounds\n\n\n  publicAPI.computeBounds = publicAPI.getBounds; // Initialize\n\n  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPoints'); // ----------------------------------------------------------------------------\n\nvar vtkPoints$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPoints$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  var currentIdx = 0;\n  return cellArray.filter(function (value, index) {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction getNumberOfCells(cellArray) {\n  return extractCellSizes(cellArray).length;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  extractCellSizes: extractCellSizes,\n  getNumberOfCells: getNumberOfCells\n}; // ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n\n  publicAPI.getNumberOfCells = function (recompute) {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n\n    model.cellSizes = extractCellSizes(model.values);\n    model.numberOfCells = model.cellSizes.length;\n    return model.numberOfCells;\n  };\n\n  publicAPI.getCellSizes = function (recompute) {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n\n    model.cellSizes = extractCellSizes(model.values);\n    return model.cellSizes;\n  };\n\n  var superSetData = publicAPI.setData;\n\n  publicAPI.setData = function (typedArray) {\n    superSetData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n  /**\n   * Returns the point indexes at the given location as a subarray.\n   */\n\n\n  publicAPI.getCell = function (loc) {\n    var cellLoc = loc;\n    var numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nfunction defaultValues(initialValues) {\n  return _objectSpread({\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT\n  }, initialValues);\n} // ----------------------------------------------------------------------------\n\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCellArray'); // ----------------------------------------------------------------------------\n\nvar vtkCellArray$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkCellArray$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport { u as uninitializeBounds } from '../Core/Math/index.js';\nimport vtkPoints from '../Core/Points.js';\n\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n\n  publicAPI.initialize = function (points) {\n    var pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n\n      for (var i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      var triangleData = model.points.getData();\n\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = macro.newTypedArray(points.getDataType(), 3 * model.pointsIds.length);\n      }\n\n      var pointsData = points.getData();\n      model.pointsIds.forEach(function (pointId, index) {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        var pointOffset = 3 * pointId;\n        var trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n\n  publicAPI.getBounds = function () {\n    var nbPoints = model.points.getNumberOfPoints();\n    var x = [];\n\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n\n      for (var i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      uninitializeBounds(model.bounds);\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getLength2 = function () {\n    publicAPI.getBounds();\n    var length = 0.0;\n    var diff = 0;\n\n    for (var i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n\n    return length;\n  };\n\n  publicAPI.getParametricDistance = function (pcoords) {\n    var pDist;\n    var pDistMax = 0.0;\n\n    for (var i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n\n    return pDistMax;\n  };\n\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n\n  publicAPI.deepCopy = function (cell) {\n    cell.initialize(model.points, model.pointsIds);\n  };\n\n  publicAPI.getCellDimension = function () {}; // virtual\n\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, t, x, pcoords, subId) {}; // virtual\n\n\n  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {}; // virtual\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n  vtkCell(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCell'); // ----------------------------------------------------------------------------\n\nvar vtkCell$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCell$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkCell from './Cell.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n\nvar InitLink = {\n  ncells: 0,\n  cells: null\n};\n\nfunction resize(model, sz) {\n  var newSize = sz;\n\n  if (sz >= model.array.length) {\n    newSize += model.array.length;\n  }\n\n  while (newSize > model.array.length) {\n    model.array.push({\n      ncells: 0,\n      cells: null\n    });\n  }\n\n  model.array.length = newSize;\n} // ----------------------------------------------------------------------------\n// vtkCellLinks methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkCellLinks(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellLinks');\n  /**\n   * Build the link list array. All subclasses of vtkAbstractCellLinks\n   * must support this method.\n   */\n\n  publicAPI.buildLinks = function (data) {\n    var numPts = data.getPoints().getNumberOfPoints();\n    var numCells = data.getNumberOfCells(); // fill out lists with number of references to cells\n\n    var linkLoc = new Uint32Array(numPts); // Use fast path if polydata\n\n    if (data.isA('vtkPolyData')) {\n      // traverse data to determine number of uses of each point\n      for (var cellId = 0; cellId < numCells; ++cellId) {\n        var _data$getCellPoints = data.getCellPoints(cellId),\n            cellPointIds = _data$getCellPoints.cellPointIds;\n\n        cellPointIds.forEach(function (cellPointId) {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      } // now allocate storage for the links\n\n\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      var _loop = function _loop(_cellId) {\n        var _data$getCellPoints2 = data.getCellPoints(_cellId),\n            cellPointIds = _data$getCellPoints2.cellPointIds;\n\n        cellPointIds.forEach(function (cellPointId) {\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, _cellId);\n        });\n      };\n\n      for (var _cellId = 0; _cellId < numCells; ++_cellId) {\n        _loop(_cellId);\n      }\n    } // any other type of dataset\n    else {\n      // traverse data to determine number of uses of each point\n      for (var _cellId2 = 0; _cellId2 < numCells; _cellId2++) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        var cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach(function (cellPointId) {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      } // now allocate storage for the links\n\n\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      var _loop2 = function _loop2(_cellId3) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        var cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach(function (cellPointId) {\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, _cellId3);\n        });\n      };\n\n      for (var _cellId3 = 0; _cellId3 < numCells; ++_cellId3) {\n        _loop2(_cellId3);\n      }\n    } // end else\n\n  };\n  /**\n   * Build the link list array with a provided connectivity array.\n   */\n  // publicAPI.buildLinks = (data, connectivity) => {};\n\n  /**\n   * Allocate the specified number of links (i.e., number of points) that\n   * will be built.\n   */\n\n\n  publicAPI.allocate = function (numLinks) {\n    var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    model.array = Array(numLinks).fill().map(function () {\n      return {\n        ncells: 0,\n        cells: null\n      };\n    });\n    model.extend = ext;\n    model.maxId = -1;\n  };\n\n  publicAPI.initialize = function () {\n    model.array = null;\n  };\n  /**\n   * Get a link structure given a point id.\n   */\n\n\n  publicAPI.getLink = function (ptId) {\n    return model.array[ptId];\n  };\n  /**\n   * Get the number of cells using the point specified by ptId.\n   */\n\n\n  publicAPI.getNcells = function (ptId) {\n    return model.array[ptId].ncells;\n  };\n  /**\n   * Return a list of cell ids using the point.\n   */\n\n\n  publicAPI.getCells = function (ptId) {\n    return model.array[ptId].cells;\n  };\n  /**\n   * Insert a new point into the cell-links data structure. The size parameter\n   * is the initial size of the list.\n   */\n\n\n  publicAPI.insertNextPoint = function (numLinks) {\n    model.array.push({\n      ncells: numLinks,\n      cells: Array(numLinks)\n    });\n    ++model.maxId;\n  };\n  /**\n   * Insert a cell id into the list of cells (at the end) using the cell id\n   * provided. (Make sure to extend the link list (if necessary) using the\n   * method resizeCellList().)\n   */\n\n\n  publicAPI.insertNextCellReference = function (ptId, cellId) {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n  /**\n   * Delete point (and storage) by destroying links to using cells.\n   */\n\n\n  publicAPI.deletePoint = function (ptId) {\n    model.array[ptId].ncells = 0;\n    model.array[ptId].cells = null;\n  };\n  /**\n   * Delete the reference to the cell (cellId) from the point (ptId). This\n   * removes the reference to the cellId from the cell list, but does not\n   * resize the list (recover memory with resizeCellList(), if necessary).\n   */\n\n\n  publicAPI.removeCellReference = function (cellId, ptId) {\n    model.array[ptId].cells = model.array[ptId].cells.filter(function (cell) {\n      return cell !== cellId;\n    });\n    model.array[ptId].ncells = model.array[ptId].cells.length;\n  };\n  /**\n   * Add the reference to the cell (cellId) from the point (ptId). This\n   * adds a reference to the cellId from the cell list, but does not resize\n   * the list (extend memory with resizeCellList(), if necessary).\n   */\n\n\n  publicAPI.addCellReference = function (cellId, ptId) {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n  /**\n   * Change the length of a point's link list (i.e., list of cells using a\n   * point) by the size specified.\n   */\n\n\n  publicAPI.resizeCellList = function (ptId, size) {\n    model.array[ptId].cells.length = size;\n  };\n  /**\n   * Reclaim any unused memory.\n   */\n\n\n  publicAPI.squeeze = function () {\n    resize(model, model.maxId + 1);\n  };\n  /**\n   * Reset to a state of no entries without freeing the memory.\n   */\n\n\n  publicAPI.reset = function () {\n    model.maxId = -1;\n  };\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n\n\n  publicAPI.deepCopy = function (src) {\n    model.array = _toConsumableArray(src.array);\n    model.extend = src.extend;\n    model.maxId = src.maxId;\n  };\n  /**\n   * Increment the count of the number of cells using the point.\n   */\n\n\n  publicAPI.incrementLinkCount = function (ptId) {\n    ++model.array[ptId].ncells;\n  };\n\n  publicAPI.allocateLinks = function (n) {\n    for (var i = 0; i < n; ++i) {\n      model.array[i].cells = new Array(model.array[i].ncells);\n    }\n  };\n  /**\n   * Insert a cell id into the list of cells using the point.\n   */\n\n\n  publicAPI.insertCellReference = function (ptId, pos, cellId) {\n    model.array[ptId].cells[pos] = cellId;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  array: null,\n  // pointer to data\n  maxId: 0,\n  // maximum index inserted thus far\n  extend: 0 // grow array by this point\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkCellLinks(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCellLinks'); // ----------------------------------------------------------------------------\n\nvar vtkCellLinks$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { InitLink, vtkCellLinks$1 as default, extend, newInstance };\n", "var CellType = {\n  // Linear cells\n  VTK_EMPTY_CELL: 0,\n  VTK_VERTEX: 1,\n  VTK_POLY_VERTEX: 2,\n  VTK_LINE: 3,\n  VTK_POLY_LINE: 4,\n  VTK_TRIANGLE: 5,\n  VTK_TRIANGLE_STRIP: 6,\n  VTK_POLYGON: 7,\n  VTK_PIXEL: 8,\n  VTK_QUAD: 9,\n  VTK_TETRA: 10,\n  VTK_VOXEL: 11,\n  VTK_HEXAHEDRON: 12,\n  VTK_WEDGE: 13,\n  VTK_PYRAMID: 14,\n  VTK_PENTAGONAL_PRISM: 15,\n  VTK_HEXAGONAL_PRISM: 16,\n  // Quadratic, isoparametric cells\n  VTK_QUADRATIC_EDGE: 21,\n  VTK_QUADRATIC_TRIANGLE: 22,\n  VTK_QUADRATIC_QUAD: 23,\n  VTK_QUADRATIC_POLYGON: 36,\n  VTK_QUADRATIC_TETRA: 24,\n  VTK_QUADRATIC_HEXAHEDRON: 25,\n  VTK_QUADRATIC_WEDGE: 26,\n  VTK_QUADRATIC_PYRAMID: 27,\n  VTK_BIQUADRATIC_QUAD: 28,\n  VTK_TRIQUADRATIC_HEXAHEDRON: 29,\n  VTK_QUADRATIC_LINEAR_QUAD: 30,\n  VTK_QUADRATIC_LINEAR_WEDGE: 31,\n  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,\n  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,\n  VTK_BIQUADRATIC_TRIANGLE: 34,\n  // Cubic, isoparametric cell\n  VTK_CUBIC_LINE: 35,\n  // Special class of cells formed by convex group of points\n  VTK_CONVEX_POINT_SET: 41,\n  // Polyhedron cell (consisting of polygonal faces)\n  VTK_POLYHEDRON: 42,\n  // Higher order cells in parametric form\n  VTK_PARAMETRIC_CURVE: 51,\n  VTK_PARAMETRIC_SURFACE: 52,\n  VTK_PARAMETRIC_TRI_SURFACE: 53,\n  VTK_PARAMETRIC_QUAD_SURFACE: 54,\n  VTK_PARAMETRIC_TETRA_REGION: 55,\n  VTK_PARAMETRIC_HEX_REGION: 56,\n  // Higher order cells\n  VTK_HIGHER_ORDER_EDGE: 60,\n  VTK_HIGHER_ORDER_TRIANGLE: 61,\n  VTK_HIGHER_ORDER_QUAD: 62,\n  VTK_HIGHER_ORDER_POLYGON: 63,\n  VTK_HIGHER_ORDER_TETRAHEDRON: 64,\n  VTK_HIGHER_ORDER_WEDGE: 65,\n  VTK_HIGHER_ORDER_PYRAMID: 66,\n  VTK_HIGHER_ORDER_HEXAHEDRON: 67,\n  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)\n  VTK_LAGRANGE_CURVE: 68,\n  VTK_LAGRANGE_TRIANGLE: 69,\n  VTK_LAGRANGE_QUADRILATERAL: 70,\n  VTK_LAGRANGE_TETRAHEDRON: 71,\n  VTK_LAGRANGE_HEXAHEDRON: 72,\n  VTK_LAGRANGE_WEDGE: 73,\n  VTK_LAGRANGE_PYRAMID: 74,\n  VTK_NUMBER_OF_CELL_TYPES: 75\n}; // This list should contain the cell class names in\n// the same order as in CellType.\n\nvar CellTypesStrings = ['vtkEmptyCell', 'vtkVertex', 'vtkPolyVertex', 'vtkLine', 'vtkPolyLine', 'vtkTriangle', 'vtkTriangleStrip', 'vtkPolygon', 'vtkPixel', 'vtkQuad', 'vtkTetra', 'vtkVoxel', 'vtkHexahedron', 'vtkWedge', 'vtkPyramid', 'vtkPentagonalPrism', 'vtkHexagonalPrism', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkQuadraticEdge', 'vtkQuadraticTriangle', 'vtkQuadraticQuad', 'vtkQuadraticTetra', 'vtkQuadraticHexahedron', 'vtkQuadraticWedge', 'vtkQuadraticPyramid', 'vtkBiQuadraticQuad', 'vtkTriQuadraticHexahedron', 'vtkQuadraticLinearQuad', 'vtkQuadraticLinearWedge', 'vtkBiQuadraticQuadraticWedge', 'vtkBiQuadraticQuadraticHexahedron', 'vtkBiQuadraticTriangle', 'vtkCubicLine', 'vtkQuadraticPolygon', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkConvexPointSet', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkParametricCurve', 'vtkParametricSurface', 'vtkParametricTriSurface', 'vtkParametricQuadSurface', 'vtkParametricTetraRegion', 'vtkParametricHexRegion', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkHigherOrderEdge', 'vtkHigherOrderTriangle', 'vtkHigherOrderQuad', 'vtkHigherOrderPolygon', 'vtkHigherOrderTetrahedron', 'vtkHigherOrderWedge', 'vtkHigherOrderPyramid', 'vtkHigherOrderHexahedron'];\nvar Constants = {\n  CellType: CellType,\n  CellTypesStrings: CellTypesStrings\n};\n\nexport { CellType, CellTypesStrings, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { CellTypesStrings, CellType } from './CellTypes/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Global methods\n// ----------------------------------------------------------------------------\n\n/**\n * Given an int (as defined in vtkCellType.h) identifier for a class\n * return it's classname.\n */\n\nfunction getClassNameFromTypeId(typeId) {\n  return typeId < CellTypesStrings.length ? CellTypesStrings[typeId] : 'UnknownClass';\n}\n/**\n * Given a data object classname, return it's int identified (as\n * defined in vtkCellType.h)\n */\n\n\nfunction getTypeIdFromClassName(cellTypeString) {\n  return CellTypesStrings.findIndex(cellTypeString);\n}\n/**\n * This convenience method is a fast check to determine if a cell type\n * represents a linear or nonlinear cell.  This is generally much more\n * efficient than getting the appropriate vtkCell and checking its IsLinear\n * method.\n */\n\n\nfunction isLinear(type) {\n  return type < CellType.VTK_QUADRATIC_EDGE || type === CellType.VTK_CONVEX_POINT_SET || type === CellType.VTK_POLYHEDRON;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  getClassNameFromTypeId: getClassNameFromTypeId,\n  getTypeIdFromClassName: getTypeIdFromClassName,\n  isLinear: isLinear\n}; // ----------------------------------------------------------------------------\n// vtkCellTypes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellTypes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellTypes');\n  /**\n   * Allocate memory for this array. Delete old storage only if necessary.\n   */\n\n  publicAPI.allocate = function () {\n    var sz = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;\n    var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    model.size = sz > 0 ? sz : 1;\n    model.extend = ext > 0 ? ext : 1;\n    model.maxId = -1;\n    model.typeArray = new Uint8Array(sz);\n    model.locationArray = new Uint32Array(sz);\n  };\n  /**\n   * Add a cell at specified id.\n   */\n\n\n  publicAPI.insertCell = function (cellId, type, loc) {\n    model.typeArray[cellId] = type;\n    model.locationArray[cellId] = loc;\n\n    if (cellId > model.maxId) {\n      model.maxId = cellId;\n    }\n  };\n  /**\n   * Add a cell to the object in the next available slot.\n   */\n\n\n  publicAPI.insertNextCell = function (type, loc) {\n    publicAPI.insertCell(++model.maxId, type, loc);\n    return model.maxId;\n  };\n  /**\n   * Specify a group of cell types. This version is provided to maintain\n   * backwards compatibility and does a copy of the cellLocations\n   */\n\n\n  publicAPI.setCellTypes = function (ncells, cellTypes, cellLocations) {\n    model.size = ncells;\n    model.typeArray = cellTypes;\n    model.locationArray = cellLocations;\n    model.maxId = ncells - 1;\n  };\n  /**\n   * Return the location of the cell in the associated vtkCellArray.\n   */\n\n\n  publicAPI.getCellLocation = function (cellId) {\n    return model.locationArray[cellId];\n  };\n  /**\n   * Delete cell by setting to nullptr cell type.\n   */\n\n\n  publicAPI.deleteCell = function (cellId) {\n    model.typeArray[cellId] = CellType.VTK_EMPTY_CELL;\n  };\n  /**\n   * Return the number of types in the list.\n   */\n\n\n  publicAPI.getNumberOfTypes = function () {\n    return model.maxId + 1;\n  };\n  /**\n   * Return true if type specified is contained in list; false otherwise.\n   */\n\n\n  publicAPI.isType = function (type) {\n    var numTypes = publicAPI.getNumberOfTypes();\n\n    for (var i = 0; i < numTypes; ++i) {\n      if (type === publicAPI.getCellType(i)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Add the type specified to the end of the list. Range checking is performed.\n   */\n\n\n  publicAPI.insertNextType = function (type) {\n    return publicAPI.insertNextCell(type, -1);\n  };\n  /**\n   * Return the type of cell.\n   */\n\n\n  publicAPI.getCellType = function (cellId) {\n    return model.typeArray[cellId];\n  };\n  /**\n   * Reclaim any extra memory.\n   */\n  // TODO: publicAPI.squeeze = () =>  {};\n\n  /**\n   * Initialize object without releasing memory.\n   */\n\n\n  publicAPI.reset = function () {\n    model.maxId = -1;\n  };\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n\n\n  publicAPI.deepCopy = function (src) {\n    publicAPI.allocate(src.getSize(), src.getExtend());\n    model.typeArray.set(src.getTypeArray());\n    model.locationArray.set(src.getLocationArray());\n    model.maxId = src.getMaxId();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // typeArray: null, // pointer to types array\n  // locationArray: null;   // pointer to array of offsets\n  size: 0,\n  // allocated size of data\n  maxId: -1,\n  // maximum index inserted thus far\n  extend: 1000 // grow array by this point\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['size', 'maxId', 'extend']);\n  macro.getArray(publicAPI, model, ['typeArray', 'locationArray']);\n  vtkCellTypes(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCellTypes'); // ----------------------------------------------------------------------------\n\nvar vtkCellTypes$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkCellTypes$1 as default, extend, newInstance };\n", "var IntersectionState = {\n  NO_INTERSECTION: 0,\n  YES_INTERSECTION: 1,\n  ON_LINE: 2\n};\nvar Constants = {\n  IntersectionState: IntersectionState\n};\n\nexport { IntersectionState, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './Line/Constants.js';\nimport vtkCell from './Cell.js';\nimport { d as dot, f as distance2BetweenPoints, s as solveLinearSystem } from '../Core/Math/index.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar IntersectionState = Constants.IntersectionState; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction distanceToLine(x, p1, p2) {\n  var closestPoint = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var outObj = {\n    t: Number.MIN_VALUE,\n    distance: 0\n  };\n  var p21 = [];\n  var closest; // Determine appropriate vector\n\n  p21[0] = p2[0] - p1[0];\n  p21[1] = p2[1] - p1[1];\n  p21[2] = p2[2] - p1[2]; // Get parametric location\n\n  var num = p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);\n  var denom = dot(p21, p21); // trying to avoid an expensive fabs\n\n  var tolerance = 1e-5 * num;\n\n  if (denom !== 0.0) {\n    outObj.t = num / denom;\n  }\n\n  if (tolerance < 0.0) {\n    tolerance = -tolerance;\n  }\n\n  if (-tolerance < denom && denom < tolerance) {\n    closest = p1;\n  } else if (denom <= 0.0 || outObj.t < 0.0) {\n    // If parametric coordinate is within 0<=p<=1, then the point is closest to\n    // the line.  Otherwise, it's closest to a point at the end of the line.\n    closest = p1;\n  } else if (outObj.t > 1.0) {\n    closest = p2;\n  } else {\n    closest = p21;\n    p21[0] = p1[0] + outObj.t * p21[0];\n    p21[1] = p1[1] + outObj.t * p21[1];\n    p21[2] = p1[2] + outObj.t * p21[2];\n  }\n\n  if (closestPoint) {\n    closestPoint[0] = closest[0];\n    closestPoint[1] = closest[1];\n    closestPoint[2] = closest[2];\n  }\n\n  outObj.distance = distance2BetweenPoints(closest, x);\n  return outObj;\n}\n\nfunction intersection(a1, a2, b1, b2, u, v) {\n  var a21 = [];\n  var b21 = [];\n  var b1a1 = [];\n  u[0] = 0.0;\n  v[0] = 0.0; // Determine line vectors.\n\n  a21[0] = a2[0] - a1[0];\n  a21[1] = a2[1] - a1[1];\n  a21[2] = a2[2] - a1[2];\n  b21[0] = b2[0] - b1[0];\n  b21[1] = b2[1] - b1[1];\n  b21[2] = b2[2] - b1[2];\n  b1a1[0] = b1[0] - a1[0];\n  b1a1[1] = b1[1] - a1[1];\n  b1a1[2] = b1[2] - a1[2]; // Compute the system (least squares) matrix.\n\n  var A = [];\n  A[0] = [dot(a21, a21), -dot(a21, b21)];\n  A[1] = [A[0][1], dot(b21, b21)]; // Compute the least squares system constant term.\n\n  var c = [];\n  c[0] = dot(a21, b1a1);\n  c[1] = -dot(b21, b1a1); // Solve the system of equations\n\n  if (solveLinearSystem(A, c, 2) === 0) {\n    // The lines are colinear. Therefore, one of the four endpoints is the\n    // point of closest approach\n    var minDist = Number.MAX_VALUE;\n    var p = [a1, a2, b1, b2];\n    var l1 = [b1, b1, a1, a1];\n    var l2 = [b2, b2, a2, a2];\n    var uv1 = [v[0], v[0], u[0], u[0]];\n    var uv2 = [u[0], u[0], v[0], v[0]];\n    var obj;\n\n    for (var i = 0; i < 4; i++) {\n      obj = distanceToLine(p[i], l1[i], l2[i]);\n\n      if (obj.distance < minDist) {\n        minDist = obj.distance;\n        uv1[i] = obj.t;\n        uv2[i] = i % 2;\n      }\n    }\n\n    return IntersectionState.ON_LINE;\n  }\n\n  u[0] = c[0];\n  v[0] = c[1]; // Check parametric coordinates for intersection.\n\n  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {\n    return IntersectionState.YES_INTERSECTION;\n  }\n\n  return IntersectionState.NO_INTERSECTION;\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  distanceToLine: distanceToLine,\n  intersection: intersection\n}; // ----------------------------------------------------------------------------\n// vtkLine methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLine(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLine');\n\n  function isBetweenPoints(t) {\n    return t >= 0.0 && t <= 1.0;\n  }\n\n  publicAPI.getCellDimension = function () {\n    return 1;\n  };\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, x, pcoords) {\n    var outObj = {\n      intersect: 0,\n      t: Number.MAX_VALUE,\n      subId: 0,\n      betweenPoints: null\n    };\n    pcoords[1] = 0.0;\n    pcoords[2] = 0.0;\n    var projXYZ = [];\n    var a1 = [];\n    var a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n    var u = [];\n    var v = [];\n    var intersect = intersection(p1, p2, a1, a2, u, v);\n    outObj.t = u[0];\n    outObj.betweenPoints = isBetweenPoints(outObj.t);\n    pcoords[0] = v[0];\n\n    if (intersect === IntersectionState.YES_INTERSECTION) {\n      // make sure we are within tolerance\n      for (var i = 0; i < 3; i++) {\n        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);\n      }\n\n      if (distance2BetweenPoints(x, projXYZ) <= tol * tol) {\n        outObj.intersect = 1;\n        return outObj;\n      }\n    } else {\n      var outDistance; // check to see if it lies within tolerance\n      // one of the parametric coords must be outside 0-1\n\n      if (outObj.t < 0.0) {\n        outDistance = distanceToLine(p1, a1, a2, x);\n\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 0.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p1\n\n          return outObj;\n        }\n\n        return outObj;\n      }\n\n      if (outObj.t > 1.0) {\n        outDistance = distanceToLine(p2, a1, a2, x);\n\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 1.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p2\n\n          return outObj;\n        }\n\n        return outObj;\n      }\n\n      if (pcoords[0] < 0.0) {\n        pcoords[0] = 0.0;\n        outDistance = distanceToLine(a1, p1, p2, x);\n        outObj.t = outDistance.t;\n\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n\n        return outObj;\n      }\n\n      if (pcoords[0] > 1.0) {\n        pcoords[0] = 1.0;\n        outDistance = distanceToLine(a2, p1, p2, x);\n        outObj.t = outDistance.t;\n\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n\n        return outObj;\n      }\n    }\n\n    return outObj;\n  };\n\n  publicAPI.evaluatePosition = function (x, closestPoint, subId, pcoords, dist2, weights) {}; // virtual\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkCell.extend(publicAPI, model, initialValues);\n  vtkLine(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLine'); // ----------------------------------------------------------------------------\n\nvar vtkLine$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkLine$1 as default, extend, newInstance };\n", "import vtk from '../../vtk.js';\nimport macro from '../../macros.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkPoints from '../Core/Points.js';\n\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet'); // Create empty points\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getNumberOfPoints = function () {\n    return model.points.getNumberOfPoints();\n  };\n\n  publicAPI.getBounds = function () {\n    return model.points.getBounds();\n  };\n\n  publicAPI.computeBounds = function () {\n    publicAPI.getBounds();\n  };\n\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// points: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']); // Object specific methods\n\n  vtkPointSet(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPointSet'); // ----------------------------------------------------------------------------\n\nvar vtkPointSet$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkPointSet$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkCell from './Cell.js';\nimport { d as dot, j as cross, l as normalize, m as multiplyAccumulate, f as distance2BetweenPoints, o as determinant2x2 } from '../Core/Math/index.js';\nimport vtkLine from './Line.js';\nimport vtkPlane from './Plane.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction computeNormalDirection(v1, v2, v3, n) {\n  // order is important!!! maintain consistency with triangle vertex order\n  var ax = v3[0] - v2[0];\n  var ay = v3[1] - v2[1];\n  var az = v3[2] - v2[2];\n  var bx = v1[0] - v2[0];\n  var by = v1[1] - v2[1];\n  var bz = v1[2] - v2[2];\n  n[0] = ay * bz - az * by;\n  n[1] = az * bx - ax * bz;\n  n[2] = ax * by - ay * bx;\n}\n\nfunction computeNormal(v1, v2, v3, n) {\n  computeNormalDirection(v1, v2, v3, n);\n  var length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);\n\n  if (length !== 0.0) {\n    n[0] /= length;\n    n[1] /= length;\n    n[2] /= length;\n  }\n}\n\nfunction intersectWithTriangle(p1, q1, r1, p2, q2, r2) {\n  var tolerance = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1e-6;\n  var coplanar = false;\n  var pt1 = [];\n  var pt2 = [];\n  var surfaceId = [];\n  var n1 = [];\n  var n2 = []; // Compute supporting plane normals.\n\n  computeNormal(p1, q1, r1, n1);\n  computeNormal(p2, q2, r2, n2);\n  var s1 = -dot(n1, p1);\n  var s2 = -dot(n2, p2); // Compute signed distances of points p1, q1, r1 from supporting\n  // plane of second triangle.\n\n  var dist1 = [dot(n2, p1) + s2, dot(n2, q1) + s2, dot(n2, r1) + s2]; // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n\n  if (dist1[0] * dist1[1] > tolerance && dist1[0] * dist1[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 1!\");\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    };\n  } // Do the same for p2, q2, r2 and supporting plane of first\n  // triangle.\n\n\n  var dist2 = [dot(n1, p2) + s1, dot(n1, q2) + s1, dot(n1, r2) + s1]; // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n\n  if (dist2[0] * dist2[1] > tolerance && dist2[0] * dist2[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 2!\");\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    };\n  } // Check for coplanarity of the supporting planes.\n\n\n  if (Math.abs(n1[0] - n2[0]) < 1e-9 && Math.abs(n1[1] - n2[1]) < 1e-9 && Math.abs(n1[2] - n2[2]) < 1e-9 && Math.abs(s1 - s2) < 1e-9) {\n    coplanar = true; // vtkDebugMacro(<<\"Coplanar!\");\n\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    };\n  } // There are more efficient ways to find the intersection line (if\n  // it exists), but this is clear enough.\n\n\n  var pts1 = [p1, q1, r1];\n  var pts2 = [p2, q2, r2]; // Find line of intersection (L = p + t*v) between two planes.\n\n  var n1n2 = dot(n1, n2);\n  var a = (s1 - s2 * n1n2) / (n1n2 * n1n2 - 1.0);\n  var b = (s2 - s1 * n1n2) / (n1n2 * n1n2 - 1.0);\n  var p = [a * n1[0] + b * n2[0], a * n1[1] + b * n2[1], a * n1[2] + b * n2[2]];\n  var v = cross(n1, n2, []);\n  normalize(v);\n  var index1 = 0;\n  var index2 = 0;\n  var t1 = [];\n  var t2 = [];\n  var ts1 = 50;\n  var ts2 = 50;\n\n  for (var i = 0; i < 3; i++) {\n    var id1 = i;\n    var id2 = (i + 1) % 3; // Find t coordinate on line of intersection between two planes.\n\n    var val1 = vtkPlane.intersectWithLine(pts1[id1], pts1[id2], p2, n2);\n\n    if (val1.intersection && val1.t > 0 - tolerance && val1.t < 1 + tolerance) {\n      if (val1.t < 1 + tolerance && val1.t > 1 - tolerance) {\n        ts1 = index1;\n      }\n\n      t1[index1++] = dot(val1.x, v) - dot(p, v);\n    }\n\n    var val2 = vtkPlane.intersectWithLine(pts2[id1], pts2[id2], p1, n1);\n\n    if (val2.intersection && val2.t > 0 - tolerance && val2.t < 1 + tolerance) {\n      if (val2.t < 1 + tolerance && val2.t > 1 - tolerance) {\n        ts2 = index2;\n      }\n\n      t2[index2++] = dot(val2.x, v) - dot(p, v);\n    }\n  } // If the value of the index is greater than 2, the intersecting point\n  // actually is intersected by all three edges. In this case, set the two\n  // edges to the two edges where the intersecting point is not the end point\n\n\n  if (index1 > 2) {\n    index1--; // swap\n\n    var t12 = t1[2];\n    t1[2] = t1[ts1];\n    t1[ts1] = t12;\n  }\n\n  if (index2 > 2) {\n    index2--;\n    var t22 = t2[2];\n    t2[2] = t2[ts2];\n    t2[ts2] = t22;\n  } // Check if only one edge or all edges intersect the supporting\n  // planes intersection.\n\n\n  if (index1 !== 2 || index2 !== 2) {\n    // vtkDebugMacro(<<\"Only one edge intersecting!\");\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    };\n  } // Check for NaNs\n\n\n  if (Number.isNaN(t1[0]) || Number.isNaN(t1[1]) || Number.isNaN(t2[0]) || Number.isNaN(t2[1])) {\n    // vtkWarningMacro(<<\"NaNs!\");\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    };\n  }\n\n  if (t1[0] > t1[1]) {\n    // swap\n    var t11 = t1[1];\n    t1[1] = t1[0];\n    t1[0] = t11;\n  }\n\n  if (t2[0] > t2[1]) {\n    // swap\n    var t21 = t2[1];\n    t2[1] = t2[0];\n    t2[0] = t21;\n  } // Handle the different interval configuration cases.\n\n\n  var tt1;\n  var tt2;\n\n  if (t1[1] < t2[0] || t2[1] < t1[0]) {\n    // vtkDebugMacro(<<\"No Overlap!\");\n    return {\n      intersect: false,\n      coplanar: coplanar,\n      pt1: pt1,\n      pt2: pt2,\n      surfaceId: surfaceId\n    }; // No overlap\n  }\n\n  if (t1[0] < t2[0]) {\n    if (t1[1] < t2[1]) {\n      // First point on surface 2, second point on surface 1\n      surfaceId[0] = 2;\n      surfaceId[1] = 1;\n      tt1 = t2[0];\n      tt2 = t1[1];\n    } else {\n      // Both points belong to lines on surface 2\n      surfaceId[0] = 2;\n      surfaceId[1] = 2;\n      tt1 = t2[0];\n      tt2 = t2[1];\n    }\n  } // t1[0] >= t2[0]\n  else if (t1[1] < t2[1]) {\n    // Both points belong to lines on surface 1\n    surfaceId[0] = 1;\n    surfaceId[1] = 1;\n    tt1 = t1[0];\n    tt2 = t1[1];\n  } else {\n    // First point on surface 1, second point on surface 2\n    surfaceId[0] = 1;\n    surfaceId[1] = 2;\n    tt1 = t1[0];\n    tt2 = t2[1];\n  } // Create actual intersection points.\n\n\n  multiplyAccumulate(p, v, tt1, pt1);\n  multiplyAccumulate(p, v, tt2, pt2);\n  return {\n    intersect: true,\n    coplanar: coplanar,\n    pt1: pt1,\n    pt2: pt2,\n    surfaceId: surfaceId\n  };\n} // ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n\nvar STATIC = {\n  computeNormalDirection: computeNormalDirection,\n  computeNormal: computeNormal,\n  intersectWithTriangle: intersectWithTriangle\n}; // ----------------------------------------------------------------------------\n// vtkTriangle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTriangle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTriangle');\n\n  publicAPI.getCellDimension = function () {\n    return 2;\n  };\n\n  publicAPI.intersectWithLine = function (p1, p2, tol, x, pcoords) {\n    var outObj = {\n      subId: 0,\n      t: Number.MAX_VALUE,\n      intersect: 0,\n      betweenPoints: false\n    };\n    pcoords[2] = 0.0;\n    var closestPoint = [];\n    var tol2 = tol * tol; // Get normal for triangle\n\n    var pt1 = [];\n    var pt2 = [];\n    var pt3 = [];\n    model.points.getPoint(0, pt1);\n    model.points.getPoint(1, pt2);\n    model.points.getPoint(2, pt3);\n    var n = [];\n    var weights = [];\n    computeNormal(pt1, pt2, pt3, n);\n\n    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {\n      // Intersect plane of triangle with line\n      var plane = vtkPlane.intersectWithLine(p1, p2, pt1, n);\n      outObj.betweenPoints = plane.betweenPoints;\n      outObj.t = plane.t;\n      x[0] = plane.x[0];\n      x[1] = plane.x[1];\n      x[2] = plane.x[2];\n\n      if (!plane.intersection) {\n        pcoords[0] = 0.0;\n        pcoords[1] = 0.0;\n        outObj.intersect = 0;\n        return outObj;\n      } // Evaluate position\n\n\n      var inside = publicAPI.evaluatePosition(x, closestPoint, pcoords, weights);\n\n      if (inside.evaluation >= 0) {\n        if (inside.dist2 <= tol2) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n\n        outObj.intersect = inside.evaluation;\n        return outObj;\n      }\n    } // Normals are null, so the triangle is degenerated and\n    // we still need to check intersection between line and\n    // the longest edge.\n\n\n    var dist2Pt1Pt2 = distance2BetweenPoints(pt1, pt2);\n    var dist2Pt2Pt3 = distance2BetweenPoints(pt2, pt3);\n    var dist2Pt3Pt1 = distance2BetweenPoints(pt3, pt1);\n\n    if (!model.line) {\n      model.line = vtkLine.newInstance();\n    }\n\n    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {\n      model.line.getPoints().setPoint(0, pt1);\n      model.line.getPoints().setPoint(1, pt2);\n    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {\n      model.line.getPoints().setPoint(0, pt2);\n      model.line.getPoints().setPoint(1, pt3);\n    } else {\n      model.line.getPoints().setPoint(0, pt3);\n      model.line.getPoints().setPoint(1, pt1);\n    }\n\n    var intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);\n    outObj.betweenPoints = intersectLine.betweenPoints;\n    outObj.t = intersectLine.t;\n\n    if (intersectLine.intersect) {\n      var pt3Pt1 = [];\n      var pt3Pt2 = [];\n      var pt3X = []; // Compute r and s manually, using dot and norm.\n\n      for (var i = 0; i < 3; i++) {\n        pt3Pt1[i] = pt1[i] - pt3[i];\n        pt3Pt2[i] = pt2[i] - pt3[i];\n        pt3X[i] = x[i] - pt3[i];\n      }\n\n      pcoords[0] = dot(pt3X, pt3Pt1) / dist2Pt3Pt1;\n      pcoords[1] = dot(pt3X, pt3Pt2) / dist2Pt2Pt3;\n      outObj.intersect = 1;\n      return outObj;\n    }\n\n    pcoords[0] = 0.0;\n    pcoords[1] = 0.0;\n    outObj.intersect = 0;\n    return outObj;\n  };\n\n  publicAPI.evaluatePosition = function (x, closestPoint, pcoords, weights) {\n    // will return obj\n    var outObj = {\n      subId: 0,\n      dist2: 0,\n      evaluation: -1\n    };\n    var i;\n    var j;\n    var pt1 = [];\n    var pt2 = [];\n    var pt3 = [];\n    var n = [];\n    var fabsn;\n    var rhs = [];\n    var c1 = [];\n    var c2 = [];\n    var det = 0;\n    var idx = 0;\n    var indices = [];\n    var dist2Point;\n    var dist2Line1;\n    var dist2Line2;\n    var closest = [];\n    var closestPoint1 = [];\n    var closestPoint2 = [];\n    var cp = [];\n    outObj.subId = 0;\n    pcoords[2] = 0.0; // Get normal for triangle, only the normal direction is needed, i.e. the\n    // normal need not be normalized (unit length)\n    //\n\n    model.points.getPoint(1, pt1);\n    model.points.getPoint(2, pt2);\n    model.points.getPoint(0, pt3);\n    computeNormalDirection(pt1, pt2, pt3, n); // Project point to plane\n\n    vtkPlane.generalizedProjectPoint(x, pt1, n, cp); // Construct matrices.  Since we have over determined system, need to find\n    // which 2 out of 3 equations to use to develop equations. (Any 2 should\n    // work since we've projected point to plane.)\n\n    var maxComponent = 0.0;\n\n    for (i = 0; i < 3; i++) {\n      // trying to avoid an expensive call to fabs()\n      if (n[i] < 0) {\n        fabsn = -n[i];\n      } else {\n        fabsn = n[i];\n      }\n\n      if (fabsn > maxComponent) {\n        maxComponent = fabsn;\n        idx = i;\n      }\n    }\n\n    for (j = 0, i = 0; i < 3; i++) {\n      if (i !== idx) {\n        indices[j++] = i;\n      }\n    }\n\n    for (i = 0; i < 2; i++) {\n      rhs[i] = cp[indices[i]] - pt3[indices[i]];\n      c1[i] = pt1[indices[i]] - pt3[indices[i]];\n      c2[i] = pt2[indices[i]] - pt3[indices[i]];\n    }\n\n    det = determinant2x2(c1, c2);\n\n    if (det === 0.0) {\n      pcoords[0] = 0.0;\n      pcoords[1] = 0.0;\n      outObj.evaluation = -1;\n      return outObj;\n    }\n\n    pcoords[0] = determinant2x2(rhs, c2) / det;\n    pcoords[1] = determinant2x2(c1, rhs) / det; // Okay, now find closest point to element\n\n    weights[0] = 1 - (pcoords[0] + pcoords[1]);\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n\n    if (weights[0] >= 0.0 && weights[0] <= 1.0 && weights[1] >= 0.0 && weights[1] <= 1.0 && weights[2] >= 0.0 && weights[2] <= 1.0) {\n      // projection distance\n      if (closestPoint) {\n        outObj.dist2 = distance2BetweenPoints(cp, x);\n        closestPoint[0] = cp[0];\n        closestPoint[1] = cp[1];\n        closestPoint[2] = cp[2];\n      }\n\n      outObj.evaluation = 1;\n    } else {\n      var t;\n\n      if (closestPoint) {\n        if (weights[1] < 0.0 && weights[2] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt3);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt3, pt2, t, closestPoint2);\n\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt3;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[2] < 0.0 && weights[0] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt1);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt1;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[1] < 0.0 && weights[0] < 0.0) {\n          dist2Point = distance2BetweenPoints(x, pt2);\n          dist2Line1 = vtkLine.distanceToLine(x, pt2, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt2;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[0] < 0.0) {\n          var lineDistance = vtkLine.distanceToLine(x, pt1, pt2, closestPoint);\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[1] < 0.0) {\n          var _lineDistance = vtkLine.distanceToLine(x, pt2, pt3, closestPoint);\n\n          outObj.dist2 = _lineDistance.distance;\n        } else if (weights[2] < 0.0) {\n          var _lineDistance2 = vtkLine.distanceToLine(x, pt1, pt3, closestPoint);\n\n          outObj.dist2 = _lineDistance2.distance;\n        }\n      }\n\n      outObj.evaluation = 0;\n    }\n\n    return outObj;\n  };\n\n  publicAPI.evaluateLocation = function (pcoords, x, weights) {\n    var p0 = [];\n    var p1 = [];\n    var p2 = [];\n    model.points.getPoint(0, p0);\n    model.points.getPoint(1, p1);\n    model.points.getPoint(2, p2);\n    var u3 = 1.0 - pcoords[0] - pcoords[1];\n\n    for (var i = 0; i < 3; i++) {\n      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];\n    }\n\n    weights[0] = u3;\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n  };\n\n  publicAPI.getParametricDistance = function (pcoords) {\n    var pDist;\n    var pDistMax = 0.0;\n    var pc = [];\n    pc[0] = pcoords[0];\n    pc[1] = pcoords[1];\n    pc[2] = 1.0 - pcoords[0] - pcoords[1];\n\n    for (var i = 0; i < 3; i++) {\n      if (pc[i] < 0.0) {\n        pDist = -pc[i];\n      } else if (pc[i] > 1.0) {\n        pDist = pc[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n\n    return pDistMax;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkCell.extend(publicAPI, model, initialValues);\n  vtkTriangle(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkTriangle'); // ----------------------------------------------------------------------------\n\nvar vtkTriangle$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkTriangle$1 as default, extend, newInstance };\n", "var POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];\nvar Constants = {\n  POLYDATA_FIELDS: POLYDATA_FIELDS\n};\n\nexport { POLYDATA_FIELDS, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtk from '../../vtk.js';\nimport vtkCellArray from '../Core/CellArray.js';\nimport vtkCellLinks from './CellLinks.js';\nimport vtkCellTypes from './CellTypes.js';\nimport vtkLine from './Line.js';\nimport vtkPointSet from './PointSet.js';\nimport vtkTriangle from './Triangle.js';\nimport { CellType } from './CellTypes/Constants.js';\nimport { POLYDATA_FIELDS } from './PolyData/Constants.js';\n\nvar _CELL_FACTORY;\nvar vtkWarningMacro = macro.vtkWarningMacro;\nvar CELL_FACTORY = (_CELL_FACTORY = {}, _defineProperty(_CELL_FACTORY, CellType.VTK_LINE, vtkLine), _defineProperty(_CELL_FACTORY, CellType.VTK_POLY_LINE, vtkLine), _defineProperty(_CELL_FACTORY, CellType.VTK_TRIANGLE, vtkTriangle), _CELL_FACTORY); // ----------------------------------------------------------------------------\n// vtkPolyData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyData');\n\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter) {\n      return letter.toUpperCase();\n    }).replace(/\\s+/g, '');\n  } // build empty cell arrays and set methods\n\n\n  POLYDATA_FIELDS.forEach(function (type) {\n    publicAPI[\"getNumberOf\".concat(camelize(type))] = function () {\n      return model[type].getNumberOfCells();\n    };\n\n    if (!model[type]) {\n      model[type] = vtkCellArray.newInstance();\n    } else {\n      model[type] = vtk(model[type]);\n    }\n  });\n\n  publicAPI.getNumberOfCells = function () {\n    return POLYDATA_FIELDS.reduce(function (num, cellType) {\n      return num + model[cellType].getNumberOfCells();\n    }, 0);\n  };\n\n  var superShallowCopy = publicAPI.shallowCopy;\n\n  publicAPI.shallowCopy = function (other) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    superShallowCopy(other, debug);\n    POLYDATA_FIELDS.forEach(function (type) {\n      model[type] = vtkCellArray.newInstance();\n      model[type].shallowCopy(other.getReferenceByName(type));\n    });\n  };\n\n  publicAPI.buildCells = function () {\n    // here are the number of cells we have\n    var nVerts = publicAPI.getNumberOfVerts();\n    var nLines = publicAPI.getNumberOfLines();\n    var nPolys = publicAPI.getNumberOfPolys();\n    var nStrips = publicAPI.getNumberOfStrips(); // pre-allocate the space we need\n\n    var nCells = nVerts + nLines + nPolys + nStrips;\n    var types = new Uint8Array(nCells);\n    var pTypes = types;\n    var locs = new Uint32Array(nCells);\n    var pLocs = locs; // record locations and type of each cell.\n    // verts\n\n    if (nVerts) {\n      var nextCellPts = 0;\n      model.verts.getCellSizes().forEach(function (numCellPts, index) {\n        pLocs[index] = nextCellPts;\n        pTypes[index] = numCellPts > 1 ? CellType.VTK_POLY_VERTEX : CellType.VTK_VERTEX;\n        nextCellPts += numCellPts + 1;\n      });\n      pLocs = pLocs.subarray(nVerts);\n      pTypes = pTypes.subarray(nVerts);\n    } // lines\n\n\n    if (nLines) {\n      var _nextCellPts = 0;\n      model.lines.getCellSizes().forEach(function (numCellPts, index) {\n        pLocs[index] = _nextCellPts;\n        pTypes[index] = numCellPts > 2 ? CellType.VTK_POLY_LINE : CellType.VTK_LINE;\n\n        if (numCellPts === 1) {\n          vtkWarningMacro('Building VTK_LINE ', index, ' with only one point, but VTK_LINE needs at least two points. Check the input.');\n        }\n\n        _nextCellPts += numCellPts + 1;\n      });\n      pLocs = pLocs.subarray(nLines);\n      pTypes = pTypes.subarray(nLines);\n    } // polys\n\n\n    if (nPolys) {\n      var _nextCellPts2 = 0;\n      model.polys.getCellSizes().forEach(function (numCellPts, index) {\n        pLocs[index] = _nextCellPts2;\n\n        switch (numCellPts) {\n          case 3:\n            pTypes[index] = CellType.VTK_TRIANGLE;\n            break;\n\n          case 4:\n            pTypes[index] = CellType.VTK_QUAD;\n            break;\n\n          default:\n            pTypes[index] = CellType.VTK_POLYGON;\n            break;\n        }\n\n        if (numCellPts < 3) {\n          vtkWarningMacro('Building VTK_TRIANGLE ', index, ' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.');\n        }\n\n        _nextCellPts2 += numCellPts + 1;\n      });\n      pLocs += pLocs.subarray(nPolys);\n      pTypes += pTypes.subarray(nPolys);\n    } // strips\n\n\n    if (nStrips) {\n      var _nextCellPts3 = 0;\n      pTypes.fill(CellType.VTK_TRIANGLE_STRIP, 0, nStrips);\n      model.strips.getCellSizes().forEach(function (numCellPts, index) {\n        pLocs[index] = _nextCellPts3;\n        _nextCellPts3 += numCellPts + 1;\n      });\n    } // set up the cell types data structure\n\n\n    model.cells = vtkCellTypes.newInstance();\n    model.cells.setCellTypes(nCells, types, locs);\n  };\n  /**\n   * Create upward links from points to cells that use each point. Enables\n   * topologically complex queries.\n   */\n\n\n  publicAPI.buildLinks = function () {\n    var initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (model.cells === undefined) {\n      publicAPI.buildCells();\n    }\n\n    model.links = vtkCellLinks.newInstance();\n\n    if (initialSize > 0) {\n      model.links.allocate(initialSize);\n    } else {\n      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());\n    }\n\n    model.links.buildLinks(publicAPI);\n  };\n\n  publicAPI.getCellType = function (cellId) {\n    return model.cells.getCellType(cellId);\n  };\n\n  publicAPI.getCellPoints = function (cellId) {\n    var cellType = publicAPI.getCellType(cellId);\n    var cells = null;\n\n    switch (cellType) {\n      case CellType.VTK_VERTEX:\n      case CellType.VTK_POLY_VERTEX:\n        cells = model.verts;\n        break;\n\n      case CellType.VTK_LINE:\n      case CellType.VTK_POLY_LINE:\n        cells = model.lines;\n        break;\n\n      case CellType.VTK_TRIANGLE:\n      case CellType.VTK_QUAD:\n      case CellType.VTK_POLYGON:\n        cells = model.polys;\n        break;\n\n      case CellType.VTK_TRIANGLE_STRIP:\n        cells = model.strips;\n        break;\n\n      default:\n        cells = null;\n        return {\n          type: 0,\n          cellPointIds: null\n        };\n    }\n\n    var loc = model.cells.getCellLocation(cellId);\n    var cellPointIds = cells.getCell(loc);\n    return {\n      cellType: cellType,\n      cellPointIds: cellPointIds\n    };\n  };\n\n  publicAPI.getPointCells = function (ptId) {\n    return model.links.getCells(ptId);\n  };\n\n  publicAPI.getCellEdgeNeighbors = function (cellId, point1, point2) {\n    var link1 = model.links.getLink(point1);\n    var link2 = model.links.getLink(point2);\n    return link1.cells.filter(function (cell) {\n      return cell !== cellId && link2.cells.indexOf(cell) !== -1;\n    });\n  };\n  /**\n   * If you know the type of cell, you may provide it to improve performances.\n   */\n\n\n  publicAPI.getCell = function (cellId) {\n    var cellHint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var cellInfo = publicAPI.getCellPoints(cellId);\n    var cell = cellHint || CELL_FACTORY[cellInfo.cellType].newInstance();\n    cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);\n    return cell;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// verts: null,\n  // lines: null,\n  // polys: null,\n  // strips: null,\n  // cells: null,\n  // links: null,\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkPointSet.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['cells', 'links']);\n  macro.setGet(publicAPI, model, ['verts', 'lines', 'polys', 'strips']); // Object specific methods\n\n  vtkPolyData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkPolyData'); // ----------------------------------------------------------------------------\n\nvar vtkPolyData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { CELL_FACTORY, vtkPolyData$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkProperty from './Property.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkDebugMacro = macro.vtkDebugMacro; // ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor'); // Capture 'parentClass' api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getActors = function () {\n    return publicAPI;\n  };\n\n  publicAPI.getIsOpaque = function () {\n    if (model.forceOpaque) {\n      return true;\n    }\n\n    if (model.forceTranslucent) {\n      return false;\n    } // make sure we have a property\n\n\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n\n    var isOpaque = model.property.getOpacity() >= 1.0; // are we using an opaque texture, if any?\n\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent()); // are we using an opaque scalar array, if any?\n\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  publicAPI.hasTranslucentPolygonalGeometry = function () {\n    if (model.mapper === null) {\n      return false;\n    } // make sure we have a property\n\n\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    } // is this actor opaque ?\n\n\n    return !publicAPI.getIsOpaque();\n  };\n\n  publicAPI.makeProperty = vtkProperty.newInstance;\n\n  publicAPI.getProperty = function () {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n\n    return model.property;\n  };\n\n  publicAPI.getBounds = function () {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n\n    var bds = model.mapper.getBounds();\n\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n\n    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      var bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      var tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(function (pt) {\n        return vec3.transformMat4(pt, pt, tmp4);\n      });\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(function (d, i) {\n        return i % 2 === 0 ? bbox.reduce(function (a, b) {\n          return a > b[i / 2] ? b[i / 2] : a;\n        }, d) : bbox.reduce(function (a, b) {\n          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;\n        }, d);\n      });\n      model.boundsMTime.modified();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = function () {\n    var mt = superClass.getMTime();\n\n    if (model.property !== null) {\n      var time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    if (model.backfaceProperty !== null) {\n      var _time = model.backfaceProperty.getMTime();\n\n      mt = _time > mt ? _time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = function () {\n    var mt = model.mtime;\n\n    if (model.mapper !== null) {\n      var time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n\n    return mt;\n  };\n\n  publicAPI.getSupportsSelection = function () {\n    return model.mapper ? model.mapper.getSupportsSelection() : false;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n  forceOpaque: false,\n  forceTranslucent: false,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']); // Object methods\n\n  vtkActor(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkActor'); // ----------------------------------------------------------------------------\n\nvar vtkActor$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkActor$1 as default, extend, newInstance };\n", "import vtkAbstractMapper from './AbstractMapper.js';\nimport { u as uninitializeBounds } from '../../Common/Core/Math/index.js';\n\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper3D(publicAPI, model) {\n  publicAPI.getBounds = function () {\n    return 0;\n  };\n\n  publicAPI.getBounds = function (bounds) {\n    publicAPI.getBounds();\n\n    for (var i = 0; i < 6; i++) {\n      bounds[i] = model.bounds[i];\n    }\n  };\n\n  publicAPI.getCenter = function () {\n    publicAPI.getBounds();\n\n    for (var i = 0; i < 3; i++) {\n      model.center[i] = (model.bounds[2 * i + 1] + model.bounds[2 * i]) / 2.0;\n    }\n\n    return model.center.slice();\n  };\n\n  publicAPI.getLength = function () {\n    var diff = 0.0;\n    var l = 0.0;\n    publicAPI.getBounds();\n\n    for (var i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      l += diff * diff;\n    }\n\n    return Math.sqrt(l);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  center: [0, 0, 0]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n\n  if (!model.bounds) {\n    uninitializeBounds(model.bounds);\n  }\n\n  if (!model.center) {\n    model.center = [0.0, 0.0, 0.0];\n  }\n\n  vtkAbstractMapper3D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper3D$1 = {\n  extend: extend\n};\n\nexport { vtkAbstractMapper3D$1 as default, extend };\n", "import macro from '../../macros.js';\nimport { i as isNan, h as hsv2rgb } from './Math/index.js';\nimport vtkScalarsToColors from './ScalarsToColors.js';\nimport { ScalarMappingTarget } from './ScalarsToColors/Constants.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar BELOW_RANGE_COLOR_INDEX = 0;\nvar ABOVE_RANGE_COLOR_INDEX = 1;\nvar NAN_COLOR_INDEX = 2; // ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable'); //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n\n  publicAPI.isOpaque = function () {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      var opaque = true;\n\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n\n      for (var i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n\n    return model.opaqueFlag;\n  };\n\n  publicAPI.usingLogScale = function () {\n    return false;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getNumberOfAvailableColors = function () {\n    return model.table.length;\n  }; //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n\n\n  publicAPI.linearIndexLookup = function (v, p) {\n    var dIndex = 0;\n\n    if (v < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (v > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (v + p.shift) * p.scale; // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n\n    return Math.floor(dIndex);\n  };\n\n  publicAPI.linearLookup = function (v, table, p) {\n    var index = 0;\n\n    if (isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n\n    var offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  };\n\n  publicAPI.indexedLookupFunction = function (v, table, p) {\n    var index = publicAPI.getAnnotatedValueIndexInternal(v);\n\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n\n    var offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.lookupShiftAndScale = function (range, p) {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  }; // Public API methods\n\n\n  publicAPI.mapScalarsThroughTable = function (input, output, outFormat, inputOffset) {\n    var lookupFunc = publicAPI.linearLookup;\n\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n\n    var trange = publicAPI.getMappingRange();\n    var p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n    var alpha = publicAPI.getAlpha();\n    var length = input.getNumberOfTuples();\n    var inIncr = input.getNumberOfComponents();\n    var outputV = output.getData();\n    var inputV = input.getData();\n\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (var i = 0; i < length; i++) {\n          var cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (var _i = 0; _i < length; _i++) {\n          var _cptr = lookupFunc(inputV[_i * inIncr + inputOffset], model.table, p);\n\n          outputV[_i * 4] = _cptr[0];\n          outputV[_i * 4 + 1] = _cptr[1];\n          outputV[_i * 4 + 2] = _cptr[2];\n          outputV[_i * 4 + 3] = Math.floor(_cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n\n  };\n\n  publicAPI.forceBuild = function () {\n    var hinc = 0.0;\n    var sinc = 0.0;\n    var vinc = 0.0;\n    var ainc = 0.0;\n    var maxIndex = model.numberOfColors - 1;\n\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n\n    var hsv = [];\n    var rgba = [];\n\n    for (var i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n      hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc; //  case VTK_RAMP_LINEAR:\n\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n\n    publicAPI.buildSpecialColors();\n    model.buildTime.modified();\n  };\n\n  publicAPI.setTable = function (table) {\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return;\n    }\n\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return;\n    }\n\n    model.numberOfColors = table.getNumberOfTuples();\n    var data = table.getData();\n\n    for (var i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n  };\n\n  publicAPI.buildSpecialColors = function () {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    var numberOfColors = model.numberOfColors;\n    var tptr = model.table;\n    var base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4; // Below range color\n\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    } // Above range color\n\n\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    } // Always use NanColor\n\n\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n\n  publicAPI.build = function () {\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\n      publicAPI.forceBuild();\n    }\n  };\n\n  if (model.table.length > 0) {\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  alpha: 1.0 // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkScalarsToColors.extend(publicAPI, model, initialValues); // Internal objects initialization\n\n  if (!model.table) {\n    model.table = [];\n  }\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, {\n    mtime: 0\n  });\n  model.insertTime = {};\n  macro.obj(model.insertTime, {\n    mtime: 0\n  }); // Create get-only macros\n\n  macro.get(publicAPI, model, ['buildTime']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']); // Create set macros for array (needs to know size)\n\n  macro.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4); // Create get macros for array\n\n  macro.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkLookupTable(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLookupTable'); // ----------------------------------------------------------------------------\n\nvar vtkLookupTable$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkLookupTable$1 as default, extend, newInstance };\n", "var resolveCoincidentTopologyPolygonOffsetFaces = 1;\nvar resolveCoincidentTopology = 0;\nvar RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];\nfunction getResolveCoincidentTopologyPolygonOffsetFaces() {\n  return resolveCoincidentTopologyPolygonOffsetFaces;\n}\nfunction setResolveCoincidentTopologyPolygonOffsetFaces(value) {\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\n}\nfunction getResolveCoincidentTopology() {\n  return resolveCoincidentTopology;\n}\nfunction setResolveCoincidentTopology() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  resolveCoincidentTopology = mode;\n}\nfunction setResolveCoincidentTopologyToDefault() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\nfunction setResolveCoincidentTopologyToOff() {\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\n}\nfunction setResolveCoincidentTopologyToPolygonOffset() {\n  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET\n}\nfunction getResolveCoincidentTopologyAsString() {\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\n}\nvar otherStaticMethods = {\n  getResolveCoincidentTopologyAsString: getResolveCoincidentTopologyAsString,\n  getResolveCoincidentTopologyPolygonOffsetFaces: getResolveCoincidentTopologyPolygonOffsetFaces,\n  getResolveCoincidentTopology: getResolveCoincidentTopology,\n  setResolveCoincidentTopology: setResolveCoincidentTopology,\n  setResolveCoincidentTopologyPolygonOffsetFaces: setResolveCoincidentTopologyPolygonOffsetFaces,\n  setResolveCoincidentTopologyToDefault: setResolveCoincidentTopologyToDefault,\n  setResolveCoincidentTopologyToOff: setResolveCoincidentTopologyToOff,\n  setResolveCoincidentTopologyToPolygonOffset: setResolveCoincidentTopologyToPolygonOffset\n};\n\nexport { RESOLVE_COINCIDENT_TOPOLOGY_MODE, otherStaticMethods as default, getResolveCoincidentTopology, getResolveCoincidentTopologyAsString, getResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopology, setResolveCoincidentTopologyPolygonOffsetFaces, setResolveCoincidentTopologyToDefault, setResolveCoincidentTopologyToOff, setResolveCoincidentTopologyToPolygonOffset };\n", "import otherStaticMethods from './Static.js';\nimport macro from '../../../macros.js';\n\n/* eslint-disable arrow-body-style */\n\nfunction addCoincidentTopologyMethods(publicAPI, model, nameList) {\n  nameList.forEach(function (item) {\n    publicAPI[\"get\".concat(item.method)] = function () {\n      return model[item.key];\n    };\n\n    publicAPI[\"set\".concat(item.method)] = function (factor, offset) {\n      model[item.key] = {\n        factor: factor,\n        offset: offset\n      };\n    };\n  });\n}\n\nvar CATEGORIES = ['Polygon', 'Line', 'Point']; // CoincidentTopology static methods ------------------------------------------\n\nvar staticOffsetModel = {\n  Polygon: {\n    factor: 2,\n    offset: 0\n  },\n  Line: {\n    factor: 1,\n    offset: -1\n  },\n  Point: {\n    factor: 0,\n    offset: -2\n  }\n};\nvar staticOffsetAPI = {};\naddCoincidentTopologyMethods(staticOffsetAPI, staticOffsetModel, CATEGORIES.map(function (key) {\n  return {\n    key: key,\n    method: \"ResolveCoincidentTopology\".concat(key, \"OffsetParameters\")\n  };\n}));\n\nfunction implementCoincidentTopologyMethods(publicAPI, model) {\n  if (model.resolveCoincidentTopology === undefined) {\n    model.resolveCoincidentTopology = false;\n  }\n\n  macro.setGet(publicAPI, model, ['resolveCoincidentTopology']); // Relative methods\n\n  model.topologyOffset = {\n    Polygon: {\n      factor: 0,\n      offset: 0\n    },\n    Line: {\n      factor: 0,\n      offset: 0\n    },\n    Point: {\n      factor: 0,\n      offset: 0\n    }\n  }; // Add Static methods to our instance\n\n  Object.keys(otherStaticMethods).forEach(function (methodName) {\n    publicAPI[methodName] = otherStaticMethods[methodName];\n  });\n  Object.keys(staticOffsetAPI).forEach(function (methodName) {\n    publicAPI[methodName] = staticOffsetAPI[methodName];\n  });\n  addCoincidentTopologyMethods(publicAPI, model.topologyOffset, CATEGORIES.map(function (key) {\n    return {\n      key: key,\n      method: \"RelativeCoincidentTopology\".concat(key, \"OffsetParameters\")\n    };\n  }));\n\n  publicAPI.getCoincidentTopologyPolygonOffsetParameters = function () {\n    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyPolygonOffsetParameters();\n    var localValue = publicAPI.getRelativeCoincidentTopologyPolygonOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n\n  publicAPI.getCoincidentTopologyLineOffsetParameters = function () {\n    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyLineOffsetParameters();\n    var localValue = publicAPI.getRelativeCoincidentTopologyLineOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n\n  publicAPI.getCoincidentTopologyPointOffsetParameter = function () {\n    var globalValue = staticOffsetAPI.getResolveCoincidentTopologyPointOffsetParameters();\n    var localValue = publicAPI.getRelativeCoincidentTopologyPointOffsetParameters();\n    return {\n      factor: globalValue.factor + localValue.factor,\n      offset: globalValue.offset + localValue.offset\n    };\n  };\n}\n\nvar CoincidentTopologyHelper = {\n  implementCoincidentTopologyMethods: implementCoincidentTopologyMethods,\n  staticOffsetAPI: staticOffsetAPI,\n  otherStaticMethods: otherStaticMethods,\n  CATEGORIES: CATEGORIES\n};\n\nexport { CATEGORIES, CoincidentTopologyHelper as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkAbstractMapper3D from './AbstractMapper3D.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkLookupTable from '../../Common/Core/LookupTable.js';\nimport { N as createUninitializedBounds, i as isNan } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors/Constants.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\nimport Constants from './Mapper/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar staticOffsetAPI = CoincidentTopologyHelper.staticOffsetAPI,\n    otherStaticMethods = CoincidentTopologyHelper.otherStaticMethods;\nvar ColorMode = Constants.ColorMode,\n    ScalarMode = Constants.ScalarMode,\n    GetArray = Constants.GetArray;\nvar VectorMode = vtkScalarsToColors.VectorMode;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes; // ----------------------------------------------------------------------------\n\nfunction notImplemented(method) {\n  return function () {\n    return macro.vtkErrorMacro(\"vtkMapper::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkMapper methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMapper');\n\n  publicAPI.getBounds = function () {\n    var input = publicAPI.getInputData();\n\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n\n      model.bounds = input.getBounds();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.setForceCompileOnly = function (v) {\n    model.forceCompileOnly = v; // make sure we do NOT call modified()\n  };\n\n  publicAPI.createDefaultLookupTable = function () {\n    model.lookupTable = vtkLookupTable.newInstance();\n  };\n\n  publicAPI.getColorModeAsString = function () {\n    return macro.enumToString(ColorMode, model.colorMode);\n  };\n\n  publicAPI.setColorModeToDefault = function () {\n    return publicAPI.setColorMode(0);\n  };\n\n  publicAPI.setColorModeToMapScalars = function () {\n    return publicAPI.setColorMode(1);\n  };\n\n  publicAPI.setColorModeToDirectScalars = function () {\n    return publicAPI.setColorMode(2);\n  };\n\n  publicAPI.getScalarModeAsString = function () {\n    return macro.enumToString(ScalarMode, model.scalarMode);\n  };\n\n  publicAPI.setScalarModeToDefault = function () {\n    return publicAPI.setScalarMode(0);\n  };\n\n  publicAPI.setScalarModeToUsePointData = function () {\n    return publicAPI.setScalarMode(1);\n  };\n\n  publicAPI.setScalarModeToUseCellData = function () {\n    return publicAPI.setScalarMode(2);\n  };\n\n  publicAPI.setScalarModeToUsePointFieldData = function () {\n    return publicAPI.setScalarMode(3);\n  };\n\n  publicAPI.setScalarModeToUseCellFieldData = function () {\n    return publicAPI.setScalarMode(4);\n  };\n\n  publicAPI.setScalarModeToUseFieldData = function () {\n    return publicAPI.setScalarMode(5);\n  };\n\n  publicAPI.getAbstractScalars = function (input, scalarMode, arrayAccessMode, arrayId, arrayName) {\n    // make sure we have an input\n    if (!input || !model.scalarVisibility) {\n      return {\n        scalars: null,\n        cellFLag: false\n      };\n    }\n\n    var scalars = null;\n    var cellFlag = false; // get and scalar data according to scalar mode\n\n    if (scalarMode === ScalarMode.DEFAULT) {\n      scalars = input.getPointData().getScalars();\n\n      if (!scalars) {\n        scalars = input.getCellData().getScalars();\n        cellFlag = true;\n      }\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\n      scalars = input.getPointData().getScalars();\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\n      scalars = input.getCellData().getScalars();\n      cellFlag = true;\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\n      var pd = input.getPointData();\n\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = pd.getArrayByIndex(arrayId);\n      } else {\n        scalars = pd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\n      var cd = input.getCellData();\n      cellFlag = true;\n\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = cd.getArrayByIndex(arrayId);\n      } else {\n        scalars = cd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\n      var fd = input.getFieldData();\n\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = fd.getArrayByIndex(arrayId);\n      } else {\n        scalars = fd.getArrayByName(arrayName);\n      }\n    }\n\n    return {\n      scalars: scalars,\n      cellFlag: cellFlag\n    };\n  };\n\n  publicAPI.mapScalars = function (input, alpha) {\n    var scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\n\n    if (!scalars) {\n      model.colorCoordinates = null;\n      model.colorTextureMap = null;\n      model.colorMapColors = null;\n      return;\n    } // we want to only recompute when something has changed\n\n\n    var toString = \"\".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);\n    if (model.colorBuildString === toString) return;\n\n    if (!model.useLookupTableScalarRange) {\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\n    } // Decide between texture color or vertex color.\n    // Cell data always uses vertex color.\n    // Only point data can use both texture and vertex coloring.\n\n\n    if (publicAPI.canUseTextureMapForColoring(input)) {\n      publicAPI.mapScalarsToTexture(scalars, alpha);\n    } else {\n      model.colorCoordinates = null;\n      model.colorTextureMap = null;\n      var lut = publicAPI.getLookupTable();\n\n      if (lut) {\n        // Ensure that the lookup table is built\n        lut.build();\n        model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\n      }\n    }\n\n    model.colorBuildString = \"\".concat(publicAPI.getMTime()).concat(scalars.getMTime()).concat(alpha);\n  }; //-----------------------------------------------------------------------------\n\n\n  publicAPI.scalarToTextureCoordinate = function (scalarValue, // Input scalar\n  rangeMin, // range[0]\n  invRangeWidth) {\n    // 1/(range[1]-range[0])\n    var texCoordS = 0.5; // Scalar value is arbitrary when NaN\n\n    var texCoordT = 1.0; // 1.0 in t coordinate means NaN\n\n    if (!isNan(scalarValue)) {\n      // 0.0 in t coordinate means not NaN.  So why am I setting it to 0.49?\n      // Because when you are mapping scalars and you have a NaN adjacent to\n      // anything else, the interpolation everywhere should be NaN.  Thus, I\n      // want the NaN color everywhere except right on the non-NaN neighbors.\n      // To simulate this, I set the t coord for the real numbers close to\n      // the threshold so that the interpolation almost immediately looks up\n      // the NaN value.\n      texCoordT = 0.49;\n      texCoordS = (scalarValue - rangeMin) * invRangeWidth; // Some implementations apparently don't handle relatively large\n      // numbers (compared to the range [0.0, 1.0]) very well. In fact,\n      // values above 1122.0f appear to cause texture wrap-around on\n      // some systems even when edge clamping is enabled. Why 1122.0f? I\n      // don't know. For safety, we'll clamp at +/- 1000. This will\n      // result in incorrect images when the texture value should be\n      // above or below 1000, but I don't have a better solution.\n\n      if (texCoordS > 1000.0) {\n        texCoordS = 1000.0;\n      } else if (texCoordS < -1000.0) {\n        texCoordS = -1000.0;\n      }\n    }\n\n    return {\n      texCoordS: texCoordS,\n      texCoordT: texCoordT\n    };\n  }; //-----------------------------------------------------------------------------\n\n\n  publicAPI.createColorTextureCoordinates = function (input, output, numScalars, numComps, component, range, tableRange, tableNumberOfColors, useLogScale) {\n    // We have to change the range used for computing texture\n    // coordinates slightly to accommodate the special above- and\n    // below-range colors that are the first and last texels,\n    // respectively.\n    var scalarTexelWidth = (range[1] - range[0]) / tableNumberOfColors;\n    var paddedRange = [];\n    paddedRange[0] = range[0] - scalarTexelWidth;\n    paddedRange[1] = range[1] + scalarTexelWidth;\n    var invRangeWidth = 1.0 / (paddedRange[1] - paddedRange[0]);\n    var outputV = output.getData();\n    var inputV = input.getData();\n    var count = 0;\n    var outputCount = 0;\n\n    if (component < 0 || component >= numComps) {\n      for (var scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\n        var sum = 0;\n\n        for (var compIdx = 0; compIdx < numComps; ++compIdx) {\n          sum += inputV[count] * inputV[count];\n          count++;\n        }\n\n        var magnitude = Math.sqrt(sum);\n\n        if (useLogScale) {\n          magnitude = vtkLookupTable.applyLogScale(magnitude, tableRange, range);\n        }\n\n        var outputs = publicAPI.scalarToTextureCoordinate(magnitude, paddedRange[0], invRangeWidth);\n        outputV[outputCount] = outputs.texCoordS;\n        outputV[outputCount + 1] = outputs.texCoordT;\n        outputCount += 2;\n      }\n    } else {\n      count += component;\n\n      for (var _scalarIdx = 0; _scalarIdx < numScalars; ++_scalarIdx) {\n        var inputValue = inputV[count];\n\n        if (useLogScale) {\n          inputValue = vtkLookupTable.applyLogScale(inputValue, tableRange, range);\n        }\n\n        var _outputs = publicAPI.scalarToTextureCoordinate(inputValue, paddedRange[0], invRangeWidth);\n\n        outputV[outputCount] = _outputs.texCoordS;\n        outputV[outputCount + 1] = _outputs.texCoordT;\n        outputCount += 2;\n        count += numComps;\n      }\n    }\n  };\n\n  publicAPI.mapScalarsToTexture = function (scalars, alpha) {\n    var range = model.lookupTable.getRange();\n    var useLogScale = model.lookupTable.usingLogScale();\n\n    if (useLogScale) {\n      // convert range to log.\n      vtkLookupTable.getLogRange(range, range);\n    }\n\n    var origAlpha = model.lookupTable.getAlpha(); // Get rid of vertex color array.  Only texture or vertex coloring\n    // can be active at one time.  The existence of the array is the\n    // signal to use that technique.\n\n    model.colorMapColors = null; // If the lookup table has changed, then recreate the color texture map.\n    // Set a new lookup table changes this->MTime.\n\n    if (model.colorTextureMap == null || publicAPI.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getAlpha() !== alpha) {\n      model.lookupTable.setAlpha(alpha);\n      model.colorTextureMap = null; // Get the texture map from the lookup table.\n      // Create a dummy ramp of scalars.\n      // In the future, we could extend vtkScalarsToColors.\n\n      model.lookupTable.build();\n      var numberOfColors = model.lookupTable.getNumberOfAvailableColors();\n\n      if (numberOfColors > 4094) {\n        numberOfColors = 4094;\n      }\n\n      numberOfColors += 2;\n      var k = (range[1] - range[0]) / (numberOfColors - 1 - 2);\n      var newArray = new Float64Array(numberOfColors * 2);\n\n      for (var i = 0; i < numberOfColors; ++i) {\n        newArray[i] = range[0] + i * k - k; // minus k to start at below range color\n\n        if (useLogScale) {\n          newArray[i] = Math.pow(10.0, newArray[i]);\n        }\n      } // Dimension on NaN.\n\n\n      for (var _i = 0; _i < numberOfColors; ++_i) {\n        newArray[_i + numberOfColors] = NaN;\n      }\n\n      model.colorTextureMap = vtkImageData.newInstance();\n      model.colorTextureMap.setExtent(0, numberOfColors - 1, 0, 1, 0, 0);\n      var tmp = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: newArray\n      });\n      model.colorTextureMap.getPointData().setScalars(model.lookupTable.mapScalars(tmp, model.colorMode, 0));\n      model.lookupTable.setAlpha(origAlpha);\n    } // Create new coordinates if necessary.\n    // Need to compare lookup table in case the range has changed.\n\n\n    if (!model.colorCoordinates || publicAPI.getMTime() > model.colorCoordinates.getMTime() || publicAPI.getInputData(0).getMTime() > model.colorCoordinates.getMTime() || model.lookupTable.getMTime() > model.colorCoordinates.getMTime()) {\n      // Get rid of old colors\n      model.colorCoordinates = null; // Now create the color texture coordinates.\n\n      var numComps = scalars.getNumberOfComponents();\n      var num = scalars.getNumberOfTuples(); // const fArray = new FloatArray(num * 2);\n\n      model.colorCoordinates = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        values: new Float32Array(num * 2)\n      });\n      var scalarComponent = model.lookupTable.getVectorComponent(); // Although I like the feature of applying magnitude to single component\n      // scalars, it is not how the old MapScalars for vertex coloring works.\n\n      if (model.lookupTable.getVectorMode() === VectorMode.MAGNITUDE && scalars.getNumberOfComponents() > 1) {\n        scalarComponent = -1;\n      }\n\n      publicAPI.createColorTextureCoordinates(scalars, model.colorCoordinates, num, numComps, scalarComponent, range, model.lookupTable.getRange(), model.colorTextureMap.getPointData().getScalars().getNumberOfTuples() / 2 - 2, useLogScale);\n    }\n  };\n\n  publicAPI.getIsOpaque = function () {\n    var lut = publicAPI.getLookupTable();\n\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      return lut.isOpaque();\n    }\n\n    return true;\n  };\n\n  publicAPI.canUseTextureMapForColoring = function (input) {\n    if (!model.interpolateScalarsBeforeMapping) {\n      return false; // user doesn't want us to use texture maps at all.\n    } // index color does not use textures\n\n\n    if (model.lookupTable && model.lookupTable.getIndexedLookup()) {\n      return false;\n    }\n\n    var gasResult = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);\n    var scalars = gasResult.scalars;\n\n    if (!scalars) {\n      // no scalars on this dataset, we don't care if texture is used at all.\n      return false;\n    }\n\n    if (gasResult.cellFlag) {\n      return false; // cell data colors, don't use textures.\n    }\n\n    if (model.colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || model.colorMode === ColorMode.DIRECT_SCALARS) {\n      // Don't use texture is direct coloring using RGB unsigned chars is\n      // requested.\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.clearColorArrays = function () {\n    model.colorMapColors = null;\n    model.colorCoordinates = null;\n    model.colorTextureMap = null;\n  };\n\n  publicAPI.getLookupTable = function () {\n    if (!model.lookupTable) {\n      publicAPI.createDefaultLookupTable();\n    }\n\n    return model.lookupTable;\n  };\n\n  publicAPI.getMTime = function () {\n    var mt = model.mtime;\n\n    if (model.lookupTable !== null) {\n      var time = model.lookupTable.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getPrimitiveCount = function () {\n    var input = publicAPI.getInputData();\n    var pcount = {\n      points: input.getPoints().getNumberOfValues() / 3,\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getLines().getNumberOfCells()\n    };\n    return pcount;\n  };\n\n  publicAPI.acquireInvertibleLookupTable = notImplemented('AcquireInvertibleLookupTable');\n  publicAPI.valueToColor = notImplemented('ValueToColor');\n  publicAPI.colorToValue = notImplemented('ColorToValue');\n  publicAPI.useInvertibleColorFor = notImplemented('UseInvertibleColorFor');\n  publicAPI.clearInvertibleColor = notImplemented('ClearInvertibleColor');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  colorMapColors: null,\n  // Same as this->Colors\n  static: false,\n  lookupTable: null,\n  scalarVisibility: true,\n  scalarRange: [0, 1],\n  useLookupTableScalarRange: false,\n  colorMode: 0,\n  scalarMode: 0,\n  arrayAccessMode: 1,\n  // By_NAME\n  renderTime: 0,\n  colorByArrayName: null,\n  fieldDataTupleId: -1,\n  interpolateScalarsBeforeMapping: false,\n  colorCoordinates: null,\n  colorTextureMap: null,\n  forceCompileOnly: 0,\n  useInvertibleColors: false,\n  invertibleScalars: null,\n  viewSpecificProperties: null,\n  customShaderAttributes: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkAbstractMapper3D.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['colorCoordinates', 'colorMapColors', 'colorTextureMap']);\n  macro.setGet(publicAPI, model, ['colorByArrayName', 'arrayAccessMode', 'colorMode', 'fieldDataTupleId', 'interpolateScalarsBeforeMapping', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO\n  ]);\n  macro.setGetArray(publicAPI, model, ['scalarRange'], 2);\n\n  if (!model.viewSpecificProperties) {\n    model.viewSpecificProperties = {};\n  }\n\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model); // Object methods\n\n  vtkMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkMapper'); // ----------------------------------------------------------------------------\n\nvar vtkMapper$1 = _objectSpread(_objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, staticOffsetAPI), otherStaticMethods), Constants);\n\nexport { vtkMapper$1 as default, extend, newInstance };\n", "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}", "/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "module.exports = require(\"regenerator-runtime\");\n", "import macro from '../../macros.js';\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n\n  publicAPI.getOperation = function () {\n    return model.currentOperation;\n  };\n\n  publicAPI.setCurrentOperation = function (val) {\n    model.currentOperation = val;\n    model.currentTraverseOperation = \"traverse\".concat(macro.capitalize(model.currentOperation));\n  };\n\n  publicAPI.getTraverseOperation = function () {\n    return model.currentTraverseOperation;\n  }; // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n\n\n  publicAPI.traverse = function (viewNode) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent;\n    model.preDelegateOperations.forEach(function (val) {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach(function (val) {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach(function (val) {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, ['delegates', 'currentParent', 'preDelegateOperations', 'postDelegateOperations']); // Object methods\n\n  vtkRenderPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderPass'); // ----------------------------------------------------------------------------\n\nvar vtkRenderPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderPass$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\n\nvar Representation = vtkProperty.Representation;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n\nfunction translucentShaderReplacement(shaders) {\n  var substituteRes = vtkShaderProgram.substitute(shaders.Fragment, '//VTK::RenderPassFragmentShader::Impl', \"\\n      float weight = gl_FragData[0].a * pow(max(1.1 - gl_FragCoord.z, 0.0), 2.0);\\n      gl_FragData[0] = vec4(gl_FragData[0].rgb*weight, gl_FragData[0].a);\\n      gl_FragData[1].r = weight;\\n    \", false);\n  shaders.Fragment = substituteRes.result;\n}\n\nvar oitpFragTemplate = \"//VTK::System::Dec\\n\\nin vec2 tcoord;\\n\\nuniform sampler2D translucentRTexture;\\nuniform sampler2D translucentRGBATexture;\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvoid main()\\n{\\n  vec4 t1Color = texture(translucentRGBATexture, tcoord);\\n  float t2Color = texture(translucentRTexture, tcoord).r;\\n  gl_FragData[0] = vec4(t1Color.rgb/max(t2Color,0.01), 1.0 - t1Color.a);\\n}\\n\";\n\nfunction vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLOrderIndependentTranslucentPass'); // build vertices etc\n\n  publicAPI.createVertexBuffer = function () {\n    // 4 corner points in clipping space in order (x, y, z) where z is always set to -1\n    // prettier-ignore\n    var ptsArray = new Float32Array([-1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]); // 4 corresponding corner points in texture space in order (x, y)\n\n    var tcoordArray = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]); // a square defined as cell relation ship in order (cell_size, v1, v2, v3, v4)\n\n    var cellArray = new Uint16Array([4, 0, 1, 3, 2]);\n    var points = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: ptsArray\n    });\n    points.setName('points');\n    var tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoordArray\n    });\n    tcoords.setName('tcoords');\n    var cells = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: cellArray\n    });\n    model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n      points: points,\n      tcoords: tcoords,\n      cellOffset: 0\n    });\n    model.VBOBuildTime.modified();\n  };\n\n  publicAPI.createFramebuffer = function (viewNode) {\n    var _model$framebuffer;\n\n    var size = viewNode.getSize();\n    var gl = viewNode.getContext();\n    model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n    model.framebuffer.setOpenGLRenderWindow(viewNode);\n\n    (_model$framebuffer = model.framebuffer).create.apply(_model$framebuffer, _toConsumableArray(size));\n\n    model.framebuffer.saveCurrentBindingsAndBuffers();\n    model.framebuffer.bind();\n    model.translucentRGBATexture = vtkOpenGLTexture.newInstance();\n    model.translucentRGBATexture.setInternalFormat(gl.RGBA16F);\n    model.translucentRGBATexture.setFormat(gl.RGBA);\n    model.translucentRGBATexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRGBATexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRGBATexture.create2DFromRaw(size[0], size[1], 4, 'Float32Array', null);\n    model.translucentRTexture = vtkOpenGLTexture.newInstance();\n    model.translucentRTexture.setInternalFormat(gl.R16F);\n    model.translucentRTexture.setFormat(gl.RED);\n    model.translucentRTexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRTexture.create2DFromRaw(size[0], size[1], 1, 'Float32Array', null);\n    model.translucentZTexture = vtkOpenGLTexture.newInstance();\n    model.translucentZTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentZTexture.createDepthFromRaw(size[0], size[1], 'Float32Array', null);\n    model.framebuffer.setColorBuffer(model.translucentRGBATexture, 0);\n    model.framebuffer.setColorBuffer(model.translucentRTexture, 1);\n    model.framebuffer.setDepthBuffer(model.translucentZTexture);\n  };\n\n  publicAPI.createCopyShader = function (viewNode) {\n    model.copyShader = viewNode.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'attribute vec2 tcoordTC;', 'varying vec2 tcoord;', 'void main() { tcoord = tcoordTC; gl_Position = vertexDC; }'].join('\\n'), oitpFragTemplate, '');\n  };\n\n  publicAPI.createVBO = function (viewNode) {\n    var gl = viewNode.getContext();\n    model.tris.setOpenGLRenderWindow(viewNode);\n    publicAPI.createVertexBuffer();\n    var program = model.copyShader; // prepare the vertex and triangle data for the image plane to render to\n\n    model.tris.getCABO().bind();\n\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 3, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'tcoordTC', model.tris.getCABO().getTCoordOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 2, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n  };\n\n  publicAPI.traverse = function (viewNode, renNode, forwardPass) {\n    if (model.deleted) {\n      return;\n    }\n\n    var size = viewNode.getSize();\n    var gl = viewNode.getContext();\n\n    if (gl === null) {\n      // nothing to do -> no render context\n      // traverse delegate passes -> has to be done in order for the vtk render-pipeline to work correctly\n      model.delegates.forEach(function (val) {\n        val.traverse(viewNode, publicAPI);\n      });\n      return;\n    } // if we lack the webgl2 and half floatsupport just do\n    // basic alpha blending\n\n\n    if (!viewNode.getWebgl2() || !gl.getExtension('EXT_color_buffer_half_float') && !gl.getExtension('EXT_color_buffer_float')) {\n      console.log('fallback');\n      publicAPI.setCurrentOperation('translucentPass');\n      renNode.traverse(publicAPI);\n      return;\n    } // prepare framebuffer // allocate framebuffer if needed and bind it\n\n\n    if (model.framebuffer === null) {\n      publicAPI.createFramebuffer(viewNode);\n    } else {\n      var fbSize = model.framebuffer.getSize();\n\n      if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.releaseGraphicsResources();\n        model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n        model.translucentRTexture.releaseGraphicsResources(viewNode);\n        model.translucentZTexture.releaseGraphicsResources(viewNode);\n        publicAPI.createFramebuffer(viewNode);\n      } else {\n        // store framebuffer bindings to restore them later\n        model.framebuffer.saveCurrentBindingsAndBuffers();\n        model.framebuffer.bind();\n      }\n    }\n\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\n    gl.clearBufferfv(gl.DEPTH, 0, [1.0]);\n    gl.colorMask(false, false, false, false); // rerender the opaque pass to set the depth buffer\n    // TODO remove when webgl1 is deprecated and instead\n    // have the forward pass use a texture backed zbuffer\n\n    if (forwardPass.getOpaqueActorCount() > 0) {\n      forwardPass.setCurrentOperation('opaquePass');\n      renNode.traverse(forwardPass);\n    }\n\n    gl.colorMask(true, true, true, true);\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n    gl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 0.0]);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND); // basic gist is we accumulate color into RGB We compute final opacity\n    // into A We store accumulated opacity into R of the R texture.\n\n    gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA); // now do the translucent rendering\n\n    publicAPI.setCurrentOperation('translucentPass');\n    renNode.traverse(publicAPI);\n    gl.drawBuffers([gl.NONE]);\n    model.framebuffer.restorePreviousBindingsAndBuffers(); // gl.drawBuffers([gl.BACK]);\n    // make sure the copy shader is ready\n\n    if (model.copyShader === null) {\n      publicAPI.createCopyShader(viewNode);\n    } else {\n      viewNode.getShaderCache().readyShaderProgram(model.copyShader);\n    } // make sure we have a VAO\n\n\n    if (!model.copyVAO) {\n      model.copyVAO = vtkVertexArrayObject.newInstance();\n      model.copyVAO.setOpenGLRenderWindow(viewNode);\n    }\n\n    model.copyVAO.bind(); // make sure the VBO is up to date\n\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime()) {\n      publicAPI.createVBO(viewNode);\n    }\n\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.depthMask(false);\n    gl.depthFunc(gl.ALWAYS);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]); // activate texture\n\n    model.translucentRGBATexture.activate();\n    model.copyShader.setUniformi('translucentRGBATexture', model.translucentRGBATexture.getTextureUnit());\n    model.translucentRTexture.activate();\n    model.copyShader.setUniformi('translucentRTexture', model.translucentRTexture.getTextureUnit()); // render quad\n\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    gl.depthMask(true);\n    gl.depthFunc(gl.LEQUAL);\n    model.translucentRGBATexture.deactivate();\n    model.translucentRTexture.deactivate();\n  };\n\n  publicAPI.getShaderReplacement = function () {\n    return translucentShaderReplacement;\n  };\n\n  publicAPI.releaseGraphicsResources = function (viewNode) {\n    if (model.framebuffer) {\n      model.framebuffer.releaseGraphicsResources(viewNode);\n      model.framebuffer = null;\n    }\n\n    if (model.translucentRGBATexture) {\n      model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n      model.translucentRGBATexture = null;\n    }\n\n    if (model.translucentRTexture) {\n      model.translucentRTexture.releaseGraphicsResources(viewNode);\n      model.translucentRTexture = null;\n    }\n\n    if (model.translucentZTexture) {\n      model.translucentZTexture.releaseGraphicsResources(viewNode);\n      model.translucentZTexture = null;\n    }\n\n    if (model.copyVAO) {\n      model.copyVAO.releaseGraphicsResources(viewNode);\n      model.copyVAO = null;\n    }\n\n    if (model.copyShader) {\n      model.copyShader.releaseGraphicsResources(viewNode);\n      model.copyShader = null;\n    }\n\n    if (model.tris) {\n      model.tris.releaseGraphicsResources(viewNode);\n      model.tris = null;\n    }\n\n    publicAPI.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  framebuffer: null,\n  copyShader: null,\n  tris: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  macro.get(publicAPI, model, ['framebuffer']); // Object methods\n\n  vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLOrderIndependentTranslucentPass'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLOrderIndependentTranslucentPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkOpenGLOrderIndependentTranslucentPass$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkOpenGLOrderIndependentTranslucentPass from './OrderIndependentTranslucentPass.js';\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (viewNode) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent; // build\n\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n    var numlayers = viewNode.getRenderable().getNumberOfLayers(); // iterate over renderers\n\n    var renderers = viewNode.getChildren();\n\n    for (var i = 0; i < numlayers; i++) {\n      for (var index = 0; index < renderers.length; index++) {\n        var renNode = renderers[index];\n        var ren = viewNode.getRenderable().getRenderers()[index];\n\n        if (ren.getDraw() && ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumeCount = 0;\n          model.overlayActorCount = 0;\n          publicAPI.setCurrentOperation('queryPass');\n          renNode.traverse(publicAPI); // do we need to capture a zbuffer?\n\n          if (model.opaqueActorCount > 0 && model.volumeCount > 0 || model.depthRequested) {\n            var size = viewNode.getFramebufferSize(); // make sure the framebuffer is setup\n\n            if (model.framebuffer === null) {\n              model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n            }\n\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\n            model.framebuffer.saveCurrentBindingsAndBuffers();\n            var fbSize = model.framebuffer.getSize();\n\n            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n              model.framebuffer.create(size[0], size[1]);\n              model.framebuffer.populateFramebuffer();\n            }\n\n            model.framebuffer.bind();\n            publicAPI.setCurrentOperation('opaqueZBufferPass');\n            renNode.traverse(publicAPI);\n            model.framebuffer.restorePreviousBindingsAndBuffers(); // reset now that we have done it\n\n            model.depthRequested = false;\n          }\n\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI);\n\n          if (model.opaqueActorCount > 0) {\n            publicAPI.setCurrentOperation('opaquePass');\n            renNode.traverse(publicAPI);\n          }\n\n          if (model.translucentActorCount > 0) {\n            if (!model.translucentPass) {\n              model.translucentPass = vtkOpenGLOrderIndependentTranslucentPass.newInstance();\n            }\n\n            model.translucentPass.traverse(viewNode, renNode, publicAPI);\n          }\n\n          if (model.volumeCount > 0) {\n            publicAPI.setCurrentOperation('volumePass');\n            renNode.traverse(publicAPI);\n          }\n\n          if (model.overlayActorCount > 0) {\n            publicAPI.setCurrentOperation('overlayPass');\n            renNode.traverse(publicAPI);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.getZBufferTexture = function () {\n    if (model.framebuffer) {\n      return model.framebuffer.getColorTexture();\n    }\n\n    return null;\n  };\n\n  publicAPI.requestDepth = function () {\n    model.depthRequested = true;\n  };\n\n  publicAPI.incrementOpaqueActorCount = function () {\n    return model.opaqueActorCount++;\n  };\n\n  publicAPI.incrementTranslucentActorCount = function () {\n    return model.translucentActorCount++;\n  };\n\n  publicAPI.incrementVolumeCount = function () {\n    return model.volumeCount++;\n  };\n\n  publicAPI.incrementOverlayActorCount = function () {\n    return model.overlayActorCount++;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumeCount: 0,\n  overlayActorCount: 0,\n  framebuffer: null,\n  depthRequested: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['framebuffer', 'opaqueActorCount', 'translucentActorCount', 'volumeCount']); // Object methods\n\n  vtkForwardPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkForwardPass'); // ----------------------------------------------------------------------------\n\nvar vtkForwardPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkForwardPass$1 as default, extend, newInstance };\n", "var PassTypes = {\n  MIN_KNOWN_PASS: 0,\n  ACTOR_PASS: 0,\n  COMPOSITE_INDEX_PASS: 1,\n  ID_LOW24: 2,\n  MAX_KNOWN_PASS: 2\n};\nvar Constants = {\n  PassTypes: PassTypes\n};\n\nexport { PassTypes, Constants as default };\n", "import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nvar FieldAssociations = vtkDataSet.FieldAssociations; // ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector'); // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.selectAsync = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderer, fx1, fy1, fx2, fy2) {\n      var srcData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n\n            case 2:\n              srcData = _context2.sent;\n\n              if (!srcData) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", srcData.generateSelection(fx1, fy1, fx2, fy2));\n\n            case 5:\n              return _context2.abrupt(\"return\", []);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x6, _x7, _x8, _x9, _x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']); // Object methods\n\n  vtkHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkHardwareSelector$1 as default, extend, newInstance };\n", "/**\n * The (primary) property that describes the content of a selection\n * node's data. Other auxiliary description properties follow.\n * GLOBALIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * PEDIGREEIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * VALUES means the the selection list contains values from an\n * arbitrary attribute array (ignores any globalids attribute)\n * INDICES means that the selection list contains indexes into the\n * cell or point arrays.\n * FRUSTUM means the set of points and cells inside a frustum\n * LOCATIONS means the set of points and cells near a set of positions\n * THRESHOLDS means the points and cells with values within a set of ranges\n * getContentType() returns -1 if the content type is not set.\n */\n// Specify how data arrays can be used by data objects\nvar SelectionContent = {\n  GLOBALIDS: 0,\n  PEDIGREEIDS: 1,\n  VALUES: 2,\n  INDICES: 3,\n  FRUSTUM: 4,\n  LOCATIONS: 5,\n  THRESHOLDS: 6,\n  BLOCKS: 7,\n  QUERY: 8\n};\nvar SelectionField = {\n  CELL: 0,\n  POINT: 1,\n  FIELD: 2,\n  VERTEX: 3,\n  EDGE: 4,\n  ROW: 5\n};\nvar Constants = {\n  SelectionContent: SelectionContent,\n  SelectionField: SelectionField\n};\n\nexport { SelectionContent, SelectionField, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './SelectionNode/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkSelectionNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSelectionNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSelectionNode');\n\n  publicAPI.getBounds = function () {\n    return model.points.getBounds();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  contentType: -1,\n  fieldType: -1,\n  properties: null,\n  selectionList: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  model.properties = {};\n  macro.setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']); // Object specific methods\n\n  vtkSelectionNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSelectionNode'); // ----------------------------------------------------------------------------\n\nvar vtkSelectionNode$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkSelectionNode$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport Constants from './HardwareSelector/Constants.js';\nimport vtkHardwareSelector$1 from '../Core/HardwareSelector.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkSelectionNode from '../../Common/DataModel/SelectionNode.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar PassTypes = Constants.PassTypes;\nvar SelectionContent = vtkSelectionNode.SelectionContent,\n    SelectionField = vtkSelectionNode.SelectionField;\nvar FieldAssociations = vtkDataSet.FieldAssociations;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar idOffset = 1;\n\nfunction getInfoHash(info) {\n  return \"\".concat(info.propID, \" \").concat(info.compositeID);\n}\n\nfunction convert(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n\n  var offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  var rgb = [];\n  rgb[0] = pb[offset];\n  rgb[1] = pb[offset + 1];\n  rgb[2] = pb[offset + 2];\n  var val = rgb[2];\n  val *= 256;\n  val += rgb[1];\n  val *= 256;\n  val += rgb[0];\n  return val;\n}\n\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\n  // Base case\n  var maxDist = maxDistance < 0 ? 0 : maxDistance;\n\n  if (maxDist === 0) {\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n\n    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {\n      return null;\n    } // offset inDisplayPosition based on the lower-left-corner of the Area.\n\n\n    var displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];\n    var actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);\n\n    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {\n      // the pixel did not hit any actor.\n      return null;\n    }\n\n    var _info = {};\n    _info.valid = true;\n    _info.propID = actorid - idOffset;\n    _info.prop = buffdata.props[_info.propID];\n    var compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);\n\n    if (compositeID < 0 || compositeID > 0xffffff) {\n      compositeID = 0;\n    }\n\n    _info.compositeID = compositeID - idOffset;\n\n    if (buffdata.captureZValues) {\n      var offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;\n      _info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;\n      _info.displayPosition = inDisplayPosition;\n    }\n\n    return _info;\n  } // Iterate over successively growing boxes.\n  // They recursively call the base case to handle single pixels.\n\n\n  var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n  var curPos = [0, 0];\n  var info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\n\n  if (info && info.valid) {\n    return info;\n  }\n\n  for (var dist = 1; dist < maxDist; ++dist) {\n    // Vertical sides of box.\n    for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n      curPos[1] = y;\n\n      if (dispPos[0] >= dist) {\n        curPos[0] = dispPos[0] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n\n      curPos[0] = dispPos[0] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        return info;\n      }\n    } // Horizontal sides of box.\n\n\n    for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n      curPos[0] = x;\n\n      if (dispPos[1] >= dist) {\n        curPos[1] = dispPos[1] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n\n      curPos[1] = dispPos[1] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        return info;\n      }\n    }\n  } // nothing hit.\n\n\n  outSelectedPosition[0] = inDisplayPosition[0];\n  outSelectedPosition[1] = inDisplayPosition[1];\n  return null;\n} //-----------------------------------------------------------------------------\n\n\nfunction convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {\n  var sel = [];\n  var count = 0;\n  dataMap.forEach(function (value, key) {\n    var child = vtkSelectionNode.newInstance();\n    child.setContentType(SelectionContent.INDICES);\n\n    switch (fieldassociation) {\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n        child.setFieldType(SelectionField.CELL);\n        break;\n\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n        child.setFieldType(SelectionField.POINT);\n        break;\n\n      default:\n        vtkErrorMacro('Unknown field association');\n    }\n\n    child.getProperties().propID = value.info.propID;\n    child.getProperties().prop = value.info.prop;\n    child.getProperties().compositeID = value.info.compositeID;\n    child.getProperties().pixelCount = value.pixelCount;\n\n    if (captureZValues) {\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\n      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);\n    }\n\n    child.setSelectionList(value.attributeIDs);\n    sel[count] = child;\n    count++;\n  });\n  return sel;\n} //----------------------------------------------------------------------------\n\n\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\n  var x1 = Math.floor(fx1);\n  var y1 = Math.floor(fy1);\n  var x2 = Math.floor(fx2);\n  var y2 = Math.floor(fy2);\n  var dataMap = new Map();\n  var outSelectedPosition = [0, 0];\n\n  for (var yy = y1; yy <= y2; yy++) {\n    for (var xx = x1; xx <= x2; xx++) {\n      var pos = [xx, yy];\n      var info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        var hash = getInfoHash(info);\n\n        if (!dataMap.has(hash)) {\n          dataMap.set(hash, {\n            info: info,\n            pixelCount: 1,\n            attributeIDs: [info.attributeID]\n          });\n        } else {\n          var dmv = dataMap.get(hash);\n          dmv.pixelCount++;\n\n          if (buffdata.captureZValues) {\n            if (info.zValue < dmv.info.zValue) {\n              dmv.info = info;\n            }\n          }\n\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n            dmv.attributeIDs.push(info.attributeID);\n          }\n        }\n      }\n    }\n  }\n\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);\n} // ----------------------------------------------------------------------------\n// vtkOpenGLHardwareSelector methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHardwareSelector'); //----------------------------------------------------------------------------\n\n  publicAPI.releasePixBuffers = function () {\n    model.pixBuffer = [];\n    model.zBuffer = null;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.beginSelection = function () {\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model.renderer);\n    model.maxAttributeId = 0;\n\n    var size = model._openGLRenderWindow.getSize();\n\n    if (!model.framebuffer) {\n      model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()\n\n      model.framebuffer.populateFramebuffer();\n    } else {\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      var fbSize = model.framebuffer.getSize();\n\n      if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()\n\n        model.framebuffer.populateFramebuffer();\n      } else {\n        model.framebuffer.bind();\n      }\n    }\n\n    model._openGLRenderer.clear();\n\n    model._openGLRenderer.setSelector(publicAPI);\n\n    model.hitProps = {};\n    model.props = [];\n    publicAPI.releasePixBuffers();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.endSelection = function () {\n    model.hitProps = {};\n\n    model._openGLRenderer.setSelector(null);\n\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n  };\n\n  publicAPI.preCapturePass = function () {};\n\n  publicAPI.postCapturePass = function () {}; //----------------------------------------------------------------------------\n\n\n  publicAPI.select = function () {\n    var sel = null;\n\n    if (publicAPI.captureBuffers()) {\n      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);\n      publicAPI.releasePixBuffers();\n    }\n\n    return sel;\n  };\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      var size, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // assign the renderer\n              model.renderer = renderer; // set area to all if no arguments provided\n\n              if (fx1 === undefined) {\n                size = model._openGLRenderWindow.getSize();\n                publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);\n              } else {\n                publicAPI.setArea(fx1, fy1, fx2, fy2);\n              } // just do capture buffers and package up the result\n\n\n              if (publicAPI.captureBuffers()) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 4:\n              result = {\n                area: _toConsumableArray(model.area),\n                pixBuffer: _toConsumableArray(model.pixBuffer),\n                captureZValues: model.captureZValues,\n                zBuffer: model.zBuffer,\n                props: _toConsumableArray(model.props),\n                fieldAssociation: model.fieldAssociation,\n                renderer: renderer,\n                openGLRenderWindow: model._openGLRenderWindow\n              };\n\n              result.generateSelection = function () {\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                return generateSelectionWithData.apply(void 0, [result].concat(args));\n              };\n\n              return _context.abrupt(\"return\", result);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //----------------------------------------------------------------------------\n\n\n  publicAPI.captureBuffers = function () {\n    if (!model.renderer || !model._openGLRenderWindow) {\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\n      return false;\n    }\n\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model.renderer); // todo revisit making selection part of core\n    // then we can do this in core\n\n    model._openGLRenderWindow.getRenderable().preRender(); // int rgba[4];\n    // rwin.getColorBufferSizes(rgba);\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\n    //   vtkErrorMacro(\"Color buffer depth must be at least 8 bit. \"\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\n    //   return false;\n    // }\n\n\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    }); // Initialize renderer for selection.\n    // change the renderer's background to black, which will indicate a miss\n\n    model.originalBackground = model.renderer.getBackgroundByReference();\n    model.renderer.setBackground(0.0, 0.0, 0.0);\n\n    var rpasses = model._openGLRenderWindow.getRenderPasses();\n\n    publicAPI.beginSelection();\n\n    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.COMPOSITE_INDEX_PASS; model.currentPass++) {\n      if (publicAPI.passRequired(model.currentPass)) {\n        publicAPI.preCapturePass(model.currentPass);\n\n        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          rpasses[0].requestDepth();\n\n          model._openGLRenderWindow.traverseAllPasses();\n        } else {\n          model._openGLRenderWindow.traverseAllPasses();\n        }\n\n        publicAPI.postCapturePass(model.currentPass);\n        publicAPI.savePixelBuffer(model.currentPass);\n      }\n    }\n\n    publicAPI.endSelection(); // restore original background\n\n    model.renderer.setBackground(model.originalBackground);\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    }); // restore image, not needed?\n    // model._openGLRenderWindow.traverseAllPasses();\n\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.passRequired = function (pass) {\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.savePixelBuffer = function (passNo) {\n    model.pixBuffer[passNo] = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n\n    if (passNo === PassTypes.ACTOR_PASS) {\n      if (model.captureZValues) {\n        var rpasses = model._openGLRenderWindow.getRenderPasses();\n\n        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          var fb = rpasses[0].getFramebuffer();\n          fb.saveCurrentBindingsAndBuffers();\n          fb.bind();\n          model.zBuffer = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n          fb.restorePreviousBindingsAndBuffers();\n        }\n      }\n\n      publicAPI.buildPropHitList(model.pixBuffer[passNo]);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.buildPropHitList = function (pixelbuffer) {\n    for (var yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\n      for (var xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\n        var val = convert(xx, yy, pixelbuffer, model.area);\n\n        if (val > 0) {\n          val--;\n\n          if (!(val in model.hitProps)) {\n            model.hitProps[val] = true;\n          }\n        }\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.renderProp = function (prop) {\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\n      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);\n      model.props.push(prop);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.renderCompositeIndex = function (index) {\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\n      publicAPI.setPropColorValueFromInt(index + idOffset);\n    }\n  }; //----------------------------------------------------------------------------\n  // TODO: make inline\n\n\n  publicAPI.renderAttributeId = function (attribid) {\n    if (attribid < 0) {\n      // negative attribid is valid. It happens when rendering higher order\n      // elements where new points are added for rendering smooth surfaces.\n      return;\n    }\n\n    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId; // if (model.currentPass < PassTypes.ID_LOW24) {\n    //   return; // useless...\n    // }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.passTypeToString = function (type) {\n    return macro.enumToString(PassTypes, type);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.isPropHit = function (id) {\n    return Boolean(model.hitProps[id]);\n  };\n\n  publicAPI.setPropColorValueFromInt = function (val) {\n    model.propColorValue[0] = val % 256 / 255.0;\n    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;\n    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;\n  }; // info has\n  //   valid\n  //   propId\n  //   prop\n  //   compositeID\n  //   attributeID\n  //----------------------------------------------------------------------------\n\n\n  publicAPI.getPixelInformation = function (inDisplayPosition, maxDistance, outSelectedPosition) {\n    // Base case\n    var maxDist = maxDistance < 0 ? 0 : maxDistance;\n\n    if (maxDist === 0) {\n      outSelectedPosition[0] = inDisplayPosition[0];\n      outSelectedPosition[1] = inDisplayPosition[1];\n\n      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {\n        return null;\n      } // offset inDisplayPosition based on the lower-left-corner of the Area.\n\n\n      var displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];\n      var actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);\n\n      if (actorid <= 0 || actorid - idOffset >= model.props.length) {\n        // the pixel did not hit any actor.\n        return null;\n      }\n\n      var _info2 = {};\n      _info2.valid = true;\n      _info2.propID = actorid - idOffset;\n      _info2.prop = model.props[_info2.propID];\n      var compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);\n\n      if (compositeID < 0 || compositeID > 0xffffff) {\n        compositeID = 0;\n      }\n\n      _info2.compositeID = compositeID - idOffset;\n\n      if (model.captureZValues) {\n        var offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;\n        _info2.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;\n        _info2.displayPosition = inDisplayPosition;\n      }\n\n      return _info2;\n    } // Iterate over successively growing boxes.\n    // They recursively call the base case to handle single pixels.\n\n\n    var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n    var curPos = [0, 0];\n    var info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);\n\n    if (info && info.valid) {\n      return info;\n    }\n\n    for (var dist = 1; dist < maxDist; ++dist) {\n      // Vertical sides of box.\n      for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n        curPos[1] = y;\n\n        if (dispPos[0] >= dist) {\n          curPos[0] = dispPos[0] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n          if (info && info.valid) {\n            return info;\n          }\n        }\n\n        curPos[0] = dispPos[0] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      } // Horizontal sides of box.\n\n\n      for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n        curPos[0] = x;\n\n        if (dispPos[1] >= dist) {\n          curPos[1] = dispPos[1] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n          if (info && info.valid) {\n            return info;\n          }\n        }\n\n        curPos[1] = dispPos[1] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n    } // nothing hit.\n\n\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    return null;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.generateSelection = function (fx1, fy1, fx2, fy2) {\n    var x1 = Math.floor(fx1);\n    var y1 = Math.floor(fy1);\n    var x2 = Math.floor(fx2);\n    var y2 = Math.floor(fy2);\n    var dataMap = new Map();\n    var outSelectedPosition = [0, 0];\n\n    for (var yy = y1; yy <= y2; yy++) {\n      for (var xx = x1; xx <= x2; xx++) {\n        var pos = [xx, yy];\n        var info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          var hash = getInfoHash(info);\n\n          if (!dataMap.has(hash)) {\n            dataMap.set(hash, {\n              info: info,\n              pixelCount: 1,\n              attributeIDs: [info.attributeID]\n            });\n          } else {\n            var dmv = dataMap.get(hash);\n            dmv.pixelCount++;\n\n            if (model.captureZValues) {\n              if (info.zValue < dmv.info.zValue) {\n                dmv.info = info;\n              }\n            }\n\n            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n              dmv.attributeIDs.push(info.attributeID);\n            }\n          }\n        }\n      }\n    }\n\n    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model.renderer, model._openGLRenderWindow);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.attach = function (w, r) {\n    model._openGLRenderWindow = w;\n    model.renderer = r;\n  }; // override\n\n\n  var superSetArea = publicAPI.setArea;\n\n  publicAPI.setArea = function () {\n    if (superSetArea.apply(void 0, arguments)) {\n      model.area[0] = Math.floor(model.area[0]);\n      model.area[1] = Math.floor(model.area[1]);\n      model.area[2] = Math.floor(model.area[2]);\n      model.area[3] = Math.floor(model.area[3]);\n      return true;\n    }\n\n    return false;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  area: undefined,\n  // _renderer: null,\n  // _openGLRenderWindow: null,\n  // _openGLRenderer: null,\n  currentPass: -1,\n  propColorValue: null,\n  props: null,\n  idOffset: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkHardwareSelector$1.extend(publicAPI, model, initialValues);\n  model.propColorValue = [0, 0, 0];\n  model.props = [];\n\n  if (!model.area) {\n    model.area = [0, 0, 0, 0];\n  }\n\n  macro.setGetArray(publicAPI, model, ['area'], 4);\n  macro.setGet(publicAPI, model, ['_renderer', 'currentPass', '_openGLRenderWindow']);\n  macro.setGetArray(publicAPI, model, ['propColorValue'], 3);\n  macro.moveToProtected(publicAPI, model, ['renderer', 'openGLRenderWindow']);\n  macro.event(publicAPI, model, 'event'); // Object methods\n\n  vtkOpenGLHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkHardwareSelector as default, extend, newInstance };\n", "(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n", "import Md5 from 'spark-md5';\nimport macro from '../../macros.js';\nimport vtkShaderProgram from './ShaderProgram.js';\n\nvar SET_GET_FIELDS = ['lastShaderBound', 'context', '_openGLRenderWindow']; // ----------------------------------------------------------------------------\n// vtkShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderCache');\n\n  publicAPI.replaceShaderValues = function (VSSource, FSSource, GSSource) {\n    // first handle renaming any Fragment shader inputs\n    // if we have a geometry shader. By default fragment shaders\n    // assume their inputs come from a Vertex Shader. When we\n    // have a Geometry shader we rename the frament shader inputs\n    // to come from the geometry shader\n    var nFSSource = FSSource;\n\n    if (GSSource.length > 0) {\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'VSOut', 'GSOut').result;\n    }\n\n    var gl2 = model._openGLRenderWindow.getWebgl2();\n\n    var fragDepthString = '\\n';\n    var version = '#version 100\\n';\n\n    if (gl2) {\n      version = '#version 300 es\\n' + '#define attribute in\\n' + '#define textureCube texture\\n' + '#define texture2D texture\\n' + '#define textureCubeLod textureLod\\n' + '#define texture2DLod textureLod\\n';\n    } else {\n      model.context.getExtension('OES_standard_derivatives');\n\n      if (model.context.getExtension('EXT_frag_depth')) {\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\n      }\n\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\n        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\\n' + '#define textureCubeLod textureCubeLodEXT\\n' + '#define texture2DLod texture2DLodEXT';\n      }\n    }\n\n    nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::System::Dec', [\"\".concat(version, \"\\n\"), gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    var nVSSource = vtkShaderProgram.substitute(VSSource, '//VTK::System::Dec', [\"\".concat(version, \"\\n\"), '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n\n    if (gl2) {\n      nVSSource = vtkShaderProgram.substitute(nVSSource, 'varying', 'out').result;\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'varying', 'in').result;\n      var shaderOutputs = '';\n      var outputCount = 0;\n\n      while (nFSSource.includes(\"gl_FragData[\".concat(outputCount, \"]\"))) {\n        nFSSource = vtkShaderProgram.substitute(nFSSource, \"gl_FragData\\\\[\".concat(outputCount, \"\\\\]\"), \"fragOutput\".concat(outputCount)).result;\n        shaderOutputs += \"layout(location = \".concat(outputCount, \") out vec4 fragOutput\").concat(outputCount, \";\\n\");\n        outputCount++;\n      }\n\n      nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::Output::Dec', shaderOutputs).result;\n    } // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\n    //   'gl_FragColor').result;\n\n\n    var nGSSource = vtkShaderProgram.substitute(GSSource, '//VTK::System::Dec', version).result;\n    return {\n      VSSource: nVSSource,\n      FSSource: nFSSource,\n      GSSource: nGSSource\n    };\n  }; // return NULL if there is an issue\n\n\n  publicAPI.readyShaderProgramArray = function (vertexCode, fragmentCode, geometryCode) {\n    var data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);\n    var shader = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);\n    return publicAPI.readyShaderProgram(shader);\n  };\n\n  publicAPI.readyShaderProgram = function (shader) {\n    if (!shader) {\n      return null;\n    } // compile if needed\n\n\n    if (!shader.getCompiled() && !shader.compileShader()) {\n      return null;\n    } // bind if needed\n\n\n    if (!publicAPI.bindShader(shader)) {\n      return null;\n    }\n\n    return shader;\n  };\n\n  publicAPI.getShaderProgram = function (vertexCode, fragmentCode, geometryCode) {\n    // compute the MD5 and the check the map\n    var hashInput = \"\".concat(vertexCode).concat(fragmentCode).concat(geometryCode);\n    var result = Md5.hash(hashInput); // does it already exist?\n\n    var loc = Object.keys(model.shaderPrograms).indexOf(result);\n\n    if (loc === -1) {\n      // create one\n      var sps = vtkShaderProgram.newInstance();\n      sps.setContext(model.context);\n      sps.getVertexShader().setSource(vertexCode);\n      sps.getFragmentShader().setSource(fragmentCode);\n\n      if (geometryCode) {\n        sps.getGeometryShader().setSource(geometryCode);\n      }\n\n      sps.setMd5Hash(result);\n      model.shaderPrograms[result] = sps;\n      return sps;\n    }\n\n    return model.shaderPrograms[result];\n  };\n\n  publicAPI.releaseGraphicsResources = function (win) {\n    // NOTE:\n    // In the current implementation as of October 26th, if a shader\n    // program is created by ShaderCache then it should make sure\n    // that it releases the graphics resources used by these programs.\n    // It is not wisely for callers to do that since then they would\n    // have to loop over all the programs were in use and invoke\n    // release graphics resources individually.\n    publicAPI.releaseCurrentShader();\n    Object.keys(model.shaderPrograms).map(function (key) {\n      return model.shaderPrograms[key];\n    }).forEach(function (sp) {\n      return sp.releaseGraphicsResources(win);\n    });\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    // release prior shader\n    if (model.astShaderBound) {\n      model.lastShaderBound.release();\n      model.lastShaderBound = null;\n    }\n  };\n\n  publicAPI.bindShader = function (shader) {\n    if (model.lastShaderBound === shader) {\n      return 1;\n    } // release prior shader\n\n\n    if (model.lastShaderBound) {\n      model.lastShaderBound.release();\n    }\n\n    shader.bind();\n    model.lastShaderBound = shader;\n    return 1;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  lastShaderBound: null,\n  shaderPrograms: null,\n  context: null // _openGLRenderWindow: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects\n\n  model.shaderPrograms = {}; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, SET_GET_FIELDS);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']); // Object methods\n\n  vtkShaderCache(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShaderCache'); // ----------------------------------------------------------------------------\n\nvar vtkShaderCache$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkShaderCache$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkOpenGLTextureUnitManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------\n  // Description:\n  // Delete the allocation table and check if it is not called before\n  // all the texture units have been released.\n\n  publicAPI.deleteTable = function () {\n    for (var i = 0; i < model.numberOfTextureUnits; ++i) {\n      if (model.textureUnits[i] === true) {\n        vtkErrorMacro('some texture units  were not properly released');\n      }\n    }\n\n    model.textureUnits = [];\n    model.numberOfTextureUnits = 0;\n  }; // ----------------------------------------------------------------------------\n\n\n  publicAPI.setContext = function (ctx) {\n    if (model.context !== ctx) {\n      if (model.context !== 0) {\n        publicAPI.deleteTable();\n      }\n\n      model.context = ctx;\n\n      if (model.context) {\n        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n\n        for (var i = 0; i < model.numberOfTextureUnits; ++i) {\n          model.textureUnits[i] = false;\n        }\n      }\n\n      publicAPI.modified();\n    }\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Reserve a texture unit. It returns its number.\n  // It returns -1 if the allocation failed (because there are no more\n  // texture units left).\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\n  // \\post allocated: result==-1 || this->IsAllocated(result)\n\n\n  publicAPI.allocate = function () {\n    for (var i = 0; i < model.numberOfTextureUnits; i++) {\n      if (!publicAPI.isAllocated(i)) {\n        model.textureUnits[i] = true;\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  publicAPI.allocateUnit = function (unit) {\n    if (publicAPI.isAllocated(unit)) {\n      return -1;\n    }\n\n    model.textureUnits[unit] = true;\n    return unit;\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Tell if texture unit `textureUnitId' is already allocated.\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n\n\n  publicAPI.isAllocated = function (textureUnitId) {\n    return model.textureUnits[textureUnitId];\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Release a texture unit.\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\n\n\n  publicAPI.free = function (val) {\n    model.textureUnits[val] = false;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  numberOfTextureUnits: 0,\n  textureUnits: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  model.textureUnits = []; // Build VTK API\n\n  macro.get(publicAPI, model, ['numberOfTextureUnits']);\n  macro.setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLTextureUnitManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------\n\nvar vtkTextureUnitManager = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkTextureUnitManager as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNode from './ViewNode.js';\n\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n\n  publicAPI.getViewNodeFactory = function () {\n    return null;\n  };\n\n  publicAPI.getAspectRatio = function () {\n    return model.size[0] / model.size[1];\n  };\n\n  publicAPI.getAspectRatioForRenderer = function (renderer) {\n    var viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n\n  publicAPI.isInViewport = function (x, y, viewport) {\n    var vCoords = viewport.getViewportByReference();\n    var size = publicAPI.getFramebufferSize();\n\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getViewportSize = function (viewport) {\n    var vCoords = viewport.getViewportByReference();\n    var size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n\n  publicAPI.getViewportCenter = function (viewport) {\n    var size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n\n  publicAPI.displayToNormalizedDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n\n  publicAPI.normalizedDisplayToDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n\n  publicAPI.worldToView = function (x, y, z, renderer) {\n    return renderer.worldToView(x, y, z);\n  };\n\n  publicAPI.viewToWorld = function (x, y, z, renderer) {\n    return renderer.viewToWorld(x, y, z);\n  };\n\n  publicAPI.worldToDisplay = function (x, y, z, renderer) {\n    var val = renderer.worldToView(x, y, z);\n    var dims = publicAPI.getViewportSize(renderer);\n    var val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    var val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n\n  publicAPI.displayToWorld = function (x, y, z, renderer) {\n    var val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    var val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    var dims = publicAPI.getViewportSize(renderer);\n    var val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n\n  publicAPI.normalizedDisplayToViewport = function (x, y, z, renderer) {\n    var vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    var coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n\n  publicAPI.viewportToNormalizedViewport = function (x, y, z, renderer) {\n    var size = publicAPI.getViewportSize(renderer);\n\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n\n    return [x, y, z];\n  };\n\n  publicAPI.normalizedViewportToViewport = function (x, y, z, renderer) {\n    var size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n\n  publicAPI.displayToLocalDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n\n  publicAPI.viewportToNormalizedDisplay = function (x, y, z, renderer) {\n    var vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    var x2 = x + vCoords[0] + 0.5;\n    var y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    macro.vtkErrorMacro('not implemented');\n    return undefined;\n  };\n\n  publicAPI.createSelector = function () {\n    macro.vtkErrorMacro('not implemented');\n    return undefined;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkRenderWindowViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };\n", "import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro,\n    vtkErrorMacro = macro.vtkErrorMacro;\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nvar DEFAULT_RESET_FACTORS = {\n  vr: {\n    rescaleFactor: 1.0,\n    translateZ: -0.7 // 0.7 m forward from the camera\n\n  },\n  ar: {\n    rescaleFactor: 0.25,\n    // scale down AR for viewing comfort by default\n    translateZ: -0.5 // 0.5 m forward from the camera\n\n  }\n};\n\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  var framebuffer = gl.createFramebuffer();\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); // check frame buffer status\n\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER); // clean up\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n} // ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\n\nvar GL_CONTEXT_COUNT = 0;\nvar GL_CONTEXT_LISTENERS = [];\n\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n} // ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // Auto update style\n\n\n  var previousSize = [0, 0];\n\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    } // ImageStream size\n\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n\n    model.containerSize = null;\n  }\n\n  publicAPI.onModified(updateWindow); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(function (child) {\n        child.setOpenGLRenderWindow(publicAPI);\n      });\n    }\n  };\n\n  publicAPI.initialize = function () {\n    if (!model.initialized) {\n      model.context = publicAPI.get3DContext();\n      model.textureUnitManager = vtkTextureUnitManager.newInstance();\n      model.textureUnitManager.setContext(model.context);\n      model.shaderCache.setContext(model.context); // initialize blending for transparency\n\n      var gl = model.context;\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.depthFunc(gl.LEQUAL);\n      gl.enable(gl.BLEND);\n      model.initialized = true;\n    }\n  };\n\n  publicAPI.makeCurrent = function () {\n    model.context.makeCurrent();\n  };\n\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n          width = _model$el$getBounding.width,\n          height = _model$el$getBounding.height;\n\n      model.containerSize = [width, height];\n    }\n\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = function () {\n    if (model.activeFramebuffer) {\n      return model.activeFramebuffer.getSize();\n    }\n\n    return model.size;\n  };\n\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    var pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n\n  publicAPI.get3DContext = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    var result = null; // Do we have webxr support\n\n    if (navigator.xr !== undefined && navigator.xr.isSessionSupported('immersive-vr')) {\n      publicAPI.invokeHaveVRDisplay();\n    }\n\n    var webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    } // prevent default context lost handler\n\n\n    model.canvas.addEventListener('webglcontextlost', function (event) {\n      event.preventDefault();\n    }, false);\n    model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false);\n    return result;\n  }; // Request an XR session on the user device with WebXR,\n  // typically in response to a user request such as a button press\n\n\n  publicAPI.startXR = function (isAR) {\n    if (navigator.xr === undefined) {\n      throw new Error('WebXR is not available');\n    }\n\n    model.xrSessionIsAR = isAR;\n    var sessionType = isAR ? 'immersive-ar' : 'immersive-vr';\n\n    if (!navigator.xr.isSessionSupported(sessionType)) {\n      if (isAR) {\n        throw new Error('Device does not support AR session');\n      } else {\n        throw new Error('VR display is not available');\n      }\n    }\n\n    if (model.xrSession === null) {\n      navigator.xr.requestSession(sessionType).then(publicAPI.enterXR, function () {\n        throw new Error('Failed to create XR session!');\n      });\n    } else {\n      throw new Error('XR Session already exists!');\n    }\n  }; // When an XR session is available, set up the XRWebGLLayer\n  // and request the first animation frame for the device\n\n\n  publicAPI.enterXR = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(xrSession) {\n      var gl, glLayer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              model.xrSession = xrSession;\n              model.oldCanvasSize = model.size.slice();\n\n              if (!(model.xrSession !== null)) {\n                _context.next = 15;\n                break;\n              }\n\n              gl = publicAPI.get3DContext();\n              _context.next = 6;\n              return gl.makeXRCompatible();\n\n            case 6:\n              glLayer = new global.XRWebGLLayer(model.xrSession, gl);\n              publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight);\n              model.xrSession.updateRenderState({\n                baseLayer: glLayer\n              });\n              model.xrSession.requestReferenceSpace('local').then(function (refSpace) {\n                model.xrReferenceSpace = refSpace;\n              });\n              publicAPI.resetXRScene();\n              model.renderable.getInteractor().switchToXRAnimation();\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              _context.next = 16;\n              break;\n\n            case 15:\n              throw new Error('Failed to enter VR with a null xrSession.');\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.resetXRScene = function () {\n    var inputRescaleFactor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESET_FACTORS.vr.rescaleFactor;\n    var inputTranslateZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RESET_FACTORS.vr.translateZ;\n    // Adjust world-to-physical parameters for different modalities\n    // Default parameter values are for VR (model.xrSessionIsAR == false)\n    var rescaleFactor = inputRescaleFactor;\n    var translateZ = inputTranslateZ;\n\n    if (model.xrSessionIsAR && rescaleFactor === DEFAULT_RESET_FACTORS.vr.rescaleFactor) {\n      // Scale down by default in AR\n      rescaleFactor = DEFAULT_RESET_FACTORS.ar.rescaleFactor;\n    }\n\n    if (model.xrSessionIsAR && translateZ === DEFAULT_RESET_FACTORS.vr.translateZ) {\n      // Default closer to the camera in AR\n      translateZ = DEFAULT_RESET_FACTORS.ar.translateZ;\n    }\n\n    var ren = model.renderable.getRenderers()[0];\n    ren.resetCamera();\n    var camera = ren.getActiveCamera();\n    var physicalScale = camera.getPhysicalScale();\n    var physicalTranslation = camera.getPhysicalTranslation();\n    physicalScale /= rescaleFactor;\n    translateZ *= physicalScale;\n    physicalTranslation[2] += translateZ;\n    camera.setPhysicalScale(physicalScale);\n    camera.setPhysicalTranslation(physicalTranslation);\n  };\n\n  publicAPI.stopXR = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var gl, ren;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(navigator.xr === undefined)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!(model.xrSession !== null)) {\n              _context2.next = 10;\n              break;\n            }\n\n            model.xrSession.cancelAnimationFrame(model.xrSceneFrame);\n            model.renderable.getInteractor().returnFromXRAnimation();\n            gl = publicAPI.get3DContext();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            _context2.next = 9;\n            return model.xrSession.end().catch(function (error) {\n              if (!(error instanceof DOMException)) {\n                throw error;\n              }\n            });\n\n          case 9:\n            model.xrSession = null;\n\n          case 10:\n            if (model.oldCanvasSize !== undefined) {\n              publicAPI.setSize.apply(publicAPI, _toConsumableArray(model.oldCanvasSize));\n            } // Reset to default canvas\n\n\n            ren = model.renderable.getRenderers()[0];\n            ren.getActiveCamera().setProjectionMatrix(null);\n            ren.resetCamera();\n            ren.setViewport(0.0, 0, 1.0, 1.0);\n            publicAPI.traverseAllPasses();\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  publicAPI.xrRender = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(t, frame) {\n      var xrSession, xrPose, gl, glLayer, ren;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              xrSession = frame.session;\n              model.renderable.getInteractor().updateXRGamepads(xrSession, frame, model.xrReferenceSpace);\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              xrPose = frame.getViewerPose(model.xrReferenceSpace);\n\n              if (xrPose) {\n                gl = publicAPI.get3DContext();\n\n                if (model.xrSessionIsAR && model.oldCanvasSize !== undefined) {\n                  gl.canvas.width = model.oldCanvasSize[0];\n                  gl.canvas.height = model.oldCanvasSize[1];\n                }\n\n                glLayer = xrSession.renderState.baseLayer;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.clear(gl.DEPTH_BUFFER_BIT); // get the first renderer\n\n                ren = model.renderable.getRenderers()[0]; // Do a render pass for each eye\n\n                xrPose.views.forEach(function (view) {\n                  var viewport = glLayer.getViewport(view);\n                  gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height); // TODO: Appropriate handling for AR passthrough on HMDs\n                  // with two eyes will require further investigation.\n\n                  if (!model.xrSessionIsAR) {\n                    if (view.eye === 'left') {\n                      ren.setViewport(0, 0, 0.5, 1.0);\n                    } else if (view.eye === 'right') {\n                      ren.setViewport(0.5, 0, 1.0, 1.0);\n                    } else {\n                      // No handling for non-eye viewport\n                      return;\n                    }\n                  }\n\n                  ren.getActiveCamera().computeViewParametersFromPhysicalMatrix(view.transform.inverse.matrix);\n                  ren.getActiveCamera().setProjectionMatrix(view.projectionMatrix);\n                  publicAPI.traverseAllPasses();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.restoreContext = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n\n  publicAPI.activateTexture = function (texture) {\n    // Only add if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n\n    var activeUnit = publicAPI.getTextureUnitManager().allocate();\n\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n\n    model._textureResourceIds.set(texture, activeUnit);\n\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n\n  publicAPI.deactivateTexture = function (texture) {\n    // Only deactivate if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      delete model._textureResourceIds.delete(texture);\n    }\n  };\n\n  publicAPI.getTextureUnitForTexture = function (texture) {\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    return -1;\n  };\n\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps, useFloat) {\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n\n            case 2:\n              return model.context.RG8;\n\n            case 3:\n              return model.context.RGB8;\n\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n\n        case VtkDataTypes.FLOAT:\n        default:\n          switch (numComps) {\n            case 1:\n              return model.context.R16F;\n\n            case 2:\n              return model.context.RG16F;\n\n            case 3:\n              return model.context.RGB16F;\n\n            case 4:\n            default:\n              return model.context.RGBA16F;\n          }\n\n      }\n    } // webgl1 only supports four types\n\n\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n\n      case 3:\n        return model.context.RGB;\n\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    var temporaryCanvas = document.createElement('canvas');\n    var temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0); // Get current client rect to place canvas\n\n    var mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    var renderWindow = model.renderable;\n    var renderers = renderWindow.getRenderers();\n    renderers.forEach(function (renderer) {\n      var viewProps = renderer.getViewProps();\n      viewProps.forEach(function (viewProp) {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          var container = viewProp.getContainer();\n          var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n          for (var i = 0; i < canvasList.length; i++) {\n            var currentCanvas = canvasList[i];\n            var boundingClientRect = currentCanvas.getBoundingClientRect();\n            var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    var screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref4$resetCamera = _ref4.resetCamera,\n        resetCamera = _ref4$resetCamera === void 0 ? false : _ref4$resetCamera,\n        _ref4$size = _ref4.size,\n        size = _ref4$size === void 0 ? null : _ref4$size,\n        _ref4$scale = _ref4.scale,\n        scale = _ref4$scale === void 0 ? 1 : _ref4$scale;\n\n    if (model.deleted) {\n      return null;\n    }\n\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref5) {\n                var restoreParamsFn = _ref5.restoreParamsFn,\n                    arg = _ref5.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n\n            model._screenshot.placeHolder.remove();\n\n            model._screenshot = null;\n          }\n\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref6) {\n              var resetCameraFn = _ref6.resetCameraFn,\n                  resetCameraArgs = _ref6.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n\n  publicAPI.getGLInformations = function () {\n    var gl = publicAPI.get3DContext();\n    var glTextureFloat = gl.getExtension('OES_texture_float');\n    var glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    var glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    var glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    var glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    var params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    var result = {};\n\n    while (params.length) {\n      var _params$pop = params.pop(),\n          _params$pop2 = _slicedToArray(_params$pop, 3),\n          label = _params$pop2[0],\n          key = _params$pop2[1],\n          value = _params$pop2[2];\n\n      if (key) {\n        result[key] = {\n          label: label,\n          value: value\n        };\n      }\n    }\n\n    return result;\n  };\n\n  publicAPI.traverseAllPasses = function () {\n    if (model.renderPasses) {\n      for (var index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n  };\n\n  publicAPI.disableCullFace = function () {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n\n  publicAPI.enableCullFace = function () {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n\n    model.viewStream = stream;\n\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.createSelector = function () {\n    var ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n\n  publicAPI.delete = macro.chain(publicAPI.delete, publicAPI.setViewStream, deleteGLContext);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  xrSession: null,\n  xrSessionIsAR: false,\n  xrReferenceSpace: null,\n  xrSupported: true,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%';\n  createGLContext();\n\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  } // Create internal bgImage\n\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI); // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'haveVRDisplay'); // Build VTK API\n\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'vrDisplay', 'useBackgroundImage', 'xrSupported']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen', // might want to make this not call modified as\n  // we change the active framebuffer a lot. Or maybe\n  // only mark modified if the size or depth\n  // of the buffer has changed\n  'activeFramebuffer']);\n  macro.setGetArray(publicAPI, model, ['size'], 2); // Object methods\n\n  vtkOpenGLRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend,\n  pushMonitorGLContextCount: pushMonitorGLContextCount,\n  popMonitorGLContextCount: popMonitorGLContextCount\n};\n\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };\n", "import { mat3, mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet, get } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes(); // we store textures and mapper\n\n      model.ogltextures = null;\n      model.activeTextures = null;\n\n      for (var index = 0; index < model.children.length; index++) {\n        var child = model.children[index];\n\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n\n  publicAPI.traverseOpaqueZBufferPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.activateTextures = function () {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n\n    model.activeTextures = [];\n\n    for (var index = 0; index < model.ogltextures.length; index++) {\n      var child = model.ogltextures[index];\n      child.render();\n\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass, renderPass) {\n    return publicAPI.opaquePass(prepass, renderPass);\n  };\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (var index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(false);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (var index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  publicAPI.getKeyMatrices = function () {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.keyMatrices.normalMatrix);\n      } else {\n        mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);\n        mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat3.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      }\n\n      model.keyMatrixTime.modified();\n    }\n\n    return model.keyMatrices;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  activeTextures: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  }; // Build VTK API\n\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']); // Object methods\n\n  vtkOpenGLActor(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkActor = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkActor', newInstance);\n\nexport { vtkActor as default, extend, newInstance };\n", "import { newInstance as newInstance$1, setGet, get } from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor2D'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes(); // we store textures and mapper\n\n      model.ogltextures = null;\n      model.activeTextures = null;\n\n      for (var index = 0; index < model.children.length; index++) {\n        var child = model.children[index];\n\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      renderPass.incrementOverlayActorCount();\n    }\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseOpaquePass = function (renderPass) {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  }; // we draw textures, then mapper, then post pass textures\n\n\n  publicAPI.traverseTranslucentPass = function (renderPass) {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.traverseOverlayPass = function (renderPass) {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.openGLRenderer.getSelector() && !model.renderable.getNestedPickable) {\n      return;\n    }\n\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.activateTextures = function () {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n\n    model.activeTextures = [];\n\n    for (var index = 0; index < model.ogltextures.length; index++) {\n      var child = model.ogltextures[index];\n      child.render();\n\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (var index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(false);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (var index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  }; // Renders myself\n\n\n  publicAPI.overlayPass = function (prepass, renderPass) {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (var index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  activeTextures: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Build VTK API\n\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']); // Object methods\n\n  vtkOpenGLActor2D(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkActor2D = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkActor2D', newInstance);\n\nexport { vtkActor2D as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, setGet, obj, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkHelper from './Helper.js';\nimport vtkMapper from '../Core/Mapper.js';\nimport { l as normalize, u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n/* eslint-disable no-lonely-if */\n\nvar primTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Tris: 2,\n  TriStrips: 3,\n  TrisEdges: 4,\n  TriStripsEdges: 5,\n  End: 6\n};\nvar Representation = vtkProperty.Representation,\n    Shading = vtkProperty.Shading;\nvar ScalarMode = vtkMapper.ScalarMode;\nvar Filter = vtkOpenGLTexture.Filter,\n    Wrap = vtkOpenGLTexture.Wrap;\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar StartEvent = {\n  type: 'StartEvent'\n};\nvar EndEvent = {\n  type: 'EndEvent'\n}; // ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper');\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');\n      model.openGLRenderer = model.openGLActor.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(model.openGLRenderer.getRenderable().getActiveCamera());\n    }\n  }; // Renders myself\n\n\n  publicAPI.translucentPass = function (prepass, renderPass) {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.opaqueZBufferPass = function (prepass) {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n\n  publicAPI.opaquePass = function (prepass) {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n\n  publicAPI.render = function () {\n    var ctx = model._openGLRenderWindow.getContext();\n\n    if (model.context !== ctx) {\n      model.context = ctx;\n\n      for (var i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n    }\n\n    var actor = model.openGLActor.getRenderable();\n    var ren = model.openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n\n  publicAPI.buildShaders = function (shaders, ren, actor) {\n    publicAPI.getShaderTemplate(shaders, ren, actor); // apply any renderPassReplacements\n\n    if (model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement(shaders);\n    } // user specified pre replacements\n\n\n    var openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;\n    var shaderReplacements = null;\n\n    if (openGLSpec) {\n      shaderReplacements = openGLSpec.ShaderReplacements;\n    }\n\n    if (shaderReplacements) {\n      for (var i = 0; i < shaderReplacements.length; i++) {\n        var currReplacement = shaderReplacements[i];\n\n        if (currReplacement.replaceFirst) {\n          var shaderType = currReplacement.shaderType;\n          var ssrc = shaders[shaderType];\n          var substituteRes = vtkShaderProgram.substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);\n          shaders[shaderType] = substituteRes.result;\n        }\n      }\n    }\n\n    publicAPI.replaceShaderValues(shaders, ren, actor); // user specified post replacements\n\n    if (shaderReplacements) {\n      for (var _i = 0; _i < shaderReplacements.length; _i++) {\n        var _currReplacement = shaderReplacements[_i];\n\n        if (!_currReplacement.replaceFirst) {\n          var _shaderType = _currReplacement.shaderType;\n          var _ssrc = shaders[_shaderType];\n\n          var _substituteRes = vtkShaderProgram.substitute(_ssrc, _currReplacement.originalValue, _currReplacement.replacementValue, _currReplacement.replaceAll);\n\n          shaders[_shaderType] = _substituteRes.result;\n        }\n      }\n    }\n  };\n\n  publicAPI.getShaderTemplate = function (shaders, ren, actor) {\n    var openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;\n    var vertexShaderCode = vtkPolyDataVS;\n\n    if (openGLSpecProp) {\n      var vertexSpecProp = openGLSpecProp.VertexShaderCode;\n\n      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {\n        vertexShaderCode = vertexSpecProp;\n      }\n    }\n\n    shaders.Vertex = vertexShaderCode;\n    var fragmentShaderCode = vtkPolyDataFS;\n\n    if (openGLSpecProp) {\n      var fragmentSpecProp = openGLSpecProp.FragmentShaderCode;\n\n      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {\n        fragmentShaderCode = fragmentSpecProp;\n      }\n    }\n\n    shaders.Fragment = fragmentShaderCode;\n    var geometryShaderCode = '';\n\n    if (openGLSpecProp) {\n      var geometrySpecProp = openGLSpecProp.GeometryShaderCode;\n\n      if (geometrySpecProp !== undefined) {\n        geometryShaderCode = geometrySpecProp;\n      }\n    }\n\n    shaders.Geometry = geometryShaderCode;\n  };\n\n  publicAPI.replaceShaderColor = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var GSSource = shaders.Geometry;\n    var FSSource = shaders.Fragment;\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity'); // create the material/color property declarations, and VS implementation\n    // these are always defined\n\n    var colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity', 'uniform vec3 ambientColorUniform;', 'uniform vec3 diffuseColorUniform;']; // add more for specular\n\n    if (lastLightComplexity) {\n      colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\n    } // now handle the more complex fragment shader implementation\n    // the following are always defined variables.  We start\n    // by assigning a default value from the uniform\n\n\n    var colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\n\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\n    }\n\n    colorImpl = colorImpl.concat(['  ambientColor = ambientColorUniform;', '  diffuseColor = diffuseColorUniform;', '  opacity = opacityUniform;']);\n\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\n    } // add scalar vertex coloring\n\n\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 scalarColor;', 'varying vec4 vertexColorVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput =  scalarColor;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\n    }\n\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;'])).result;\n    } else {\n      if (model.renderable.getInterpolateScalarsBeforeMapping() && model.renderable.getColorCoordinates() && !model.drawingEdges) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);', '  diffuseColor = texColor.rgb;', '  ambientColor = texColor.rgb;', '  opacity = opacity*texColor.a;'])).result;\n      } else {\n        if (actor.getBackfaceProperty() && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform float opacityUniformBF; // the fragment opacity', 'uniform float ambientIntensityBF; // the material ambient', 'uniform float diffuseIntensityBF; // the material diffuse', 'uniform vec3 ambientColorUniformBF; // ambient material color', 'uniform vec3 diffuseColorUniformBF; // diffuse material color']);\n\n          if (lastLightComplexity) {\n            colorDec = colorDec.concat(['uniform float specularIntensityBF; // the material specular intensity', 'uniform vec3 specularColorUniformBF; // intensity weighted color', 'uniform float specularPowerUniformBF;']);\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  specularColor = specularIntensityBF * specularColorUniformBF;', '  specularPower = specularPowerUniformBF;', '  opacity = opacityUniformBF; }']);\n          } else {\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  opacity = opacityUniformBF; }']);\n          }\n        }\n\n        if (model.haveCellScalars && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform samplerBuffer texture1;']);\n        }\n\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\n      }\n    }\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderLight = function (shaders, ren, actor) {\n    var FSSource = shaders.Fragment; // check for shadow maps\n\n    var shadowFactor = '';\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    var lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n    var sstring = [];\n\n    switch (lastLightComplexity) {\n      case 0:\n        // no lighting or RENDER_VALUES\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n\n      case 1:\n        // headlight\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  float df = max(0.0, normalVCVSOutput.z);', '  float sf = pow(df, specularPower);', '  vec3 diffuseL = df * diffuseColor;', '  vec3 specularL = sf * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n\n      case 2:\n        // light kit\n        for (var lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([\"uniform vec3 lightColor\".concat(lc, \";\"), \"uniform vec3 lightDirectionVC\".concat(lc, \"; // normalized\"), \"uniform vec3 lightHalfAngleVC\".concat(lc, \"; // normalized\")]);\n        }\n\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  float df;'];\n\n        for (var _lc = 0; _lc < lastLightCount; ++_lc) {\n          sstring = sstring.concat([\"  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC\".concat(_lc, \"));\"), \"  diffuseL += ((df\".concat(shadowFactor, \") * lightColor\").concat(_lc, \");\"), \"  if (dot(normalVCVSOutput, lightDirectionVC\".concat(_lc, \") < 0.0)\"), '    {', \"    float sf = pow( max(0.0, dot(lightHalfAngleVC\".concat(_lc, \",normalVCVSOutput)), specularPower);\"), \"    specularL += ((sf\".concat(shadowFactor, \") * lightColor\").concat(_lc, \");\"), '    }']);\n        }\n\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n\n      case 3:\n        // positional\n        for (var _lc2 = 0; _lc2 < lastLightCount; ++_lc2) {\n          sstring = sstring.concat([\"uniform vec3 lightColor\".concat(_lc2, \";\"), \"uniform vec3 lightDirectionVC\".concat(_lc2, \"; // normalized\"), \"uniform vec3 lightHalfAngleVC\".concat(_lc2, \"; // normalized\"), \"uniform vec3 lightPositionVC\".concat(_lc2, \";\"), \"uniform vec3 lightAttenuation\".concat(_lc2, \";\"), \"uniform float lightConeAngle\".concat(_lc2, \";\"), \"uniform float lightExponent\".concat(_lc2, \";\"), \"uniform int lightPositional\".concat(_lc2, \";\")]);\n        }\n\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  vec3 vertLightDirectionVC;', '  float attenuation;', '  float df;'];\n\n        for (var _lc3 = 0; _lc3 < lastLightCount; ++_lc3) {\n          sstring = sstring.concat(['  attenuation = 1.0;', \"  if (lightPositional\".concat(_lc3, \" == 0)\"), '    {', \"      vertLightDirectionVC = lightDirectionVC\".concat(_lc3, \";\"), '    }', '  else', '    {', \"    vertLightDirectionVC = vertexVC.xyz - lightPositionVC\".concat(_lc3, \";\"), '    float distanceVC = length(vertLightDirectionVC);', '    vertLightDirectionVC = normalize(vertLightDirectionVC);', '    attenuation = 1.0 /', \"      (lightAttenuation\".concat(_lc3, \".x\"), \"       + lightAttenuation\".concat(_lc3, \".y * distanceVC\"), \"       + lightAttenuation\".concat(_lc3, \".z * distanceVC * distanceVC);\"), '    // per OpenGL standard cone angle is 90 or less for a spot light', \"    if (lightConeAngle\".concat(_lc3, \" <= 90.0)\"), '      {', \"      float coneDot = dot(vertLightDirectionVC, lightDirectionVC\".concat(_lc3, \");\"), '      // if inside the cone', \"      if (coneDot >= cos(radians(lightConeAngle\".concat(_lc3, \")))\"), '        {', \"        attenuation = attenuation * pow(coneDot, lightExponent\".concat(_lc3, \");\"), '        }', '      else', '        {', '        attenuation = 0.0;', '        }', '      }', '    }', '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));', \"    diffuseL += ((df\".concat(shadowFactor, \") * lightColor\").concat(_lc3, \");\"), '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)', '      {', \"      float sf = attenuation*pow( max(0.0, dot(lightHalfAngleVC\".concat(_lc3, \",normalVCVSOutput)), specularPower);\"), \"    specularL += ((sf\".concat(shadowFactor, \") * lightColor\").concat(_lc3, \");\"), '    }']);\n        }\n\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n\n      default:\n        vtkErrorMacro('bad light complexity');\n    }\n\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderNormal = function (shaders, ren, actor) {\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    if (lastLightComplexity > 0) {\n      var VSSource = shaders.Vertex;\n      var GSSource = shaders.Geometry;\n      var FSSource = shaders.Fragment;\n\n      if (model.lastBoundBO.getCABO().getNormalOffset()) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * normalMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Dec', ['in vec3 normalVCVSOutput[];', 'out vec3 normalVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Impl', ['normalVCGSOutput = normalVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['varying vec3 normalVCVSOutput;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalVCVSOutput);', //  if (!gl_FrontFacing) does not work in intel hd4000 mac\n        //  if (int(gl_FrontFacing) == 0) does not work on mesa\n        '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n      } else {\n        if (model.haveCellNormals) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalMatrix *', '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);', '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n        } else {\n          if (publicAPI.getOpenGLMode(actor.getProperty().getRepresentation(), model.lastBoundBO.getPrimitiveType()) === model.context.LINES) {\n            // generate a normal for lines, it will be perpendicular to the line\n            // and maximally aligned with the camera view direction\n            // no clue if this is the best way to do this.\n            // the code below has been optimized a bit so what follows is\n            // an explanation of the basic approach. Compute the gradient of the line\n            // with respect to x and y, the the larger of the two\n            // cross that with the camera view direction. That gives a vector\n            // orthogonal to the camera view and the line. Note that the line and the camera\n            // view are probably not orthogonal. Which is why when we cross result that with\n            // the line gradient again we get a reasonable normal. It will be othogonal to\n            // the line (which is a plane but maximally aligned with the camera view.\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput;', '  if (abs(fdx.x) > 0.0)', '    { fdx = normalize(fdx); normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }', '  else { fdy = normalize(fdy); normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}']).result;\n          } else {\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform int cameraParallel;']).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', [// '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\n            // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\n            '  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['  fdx = normalize(fdx);', '  fdy = normalize(fdy);', '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));', // the code below is faster, but does not work on some devices\n            // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',\n            '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }', '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }']).result;\n          }\n        }\n      }\n\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var GSSource = shaders.Geometry;\n    var FSSource = shaders.Fragment; // for points make sure to add in the point size\n\n    if (actor.getProperty().getRepresentation() === Representation.POINTS || model.lastBoundBO.getPrimitiveType() === primTypes.Points) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', \"  gl_PointSize = \".concat(actor.getProperty().getPointSize(), \".0;\")], false).result;\n    } // do we need the vertex in the shader in View Coordinates\n\n\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    if (lastLightComplexity > 0) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vertexVCVSOutput = MCVCMatrix * vertexMC;', '  gl_Position = MCPCMatrix * vertexMC;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Dec', ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Impl', ['vertexVCGSOutput = vertexVCVSOutput[i];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;']).result;\n    } else {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderTCoord = function (shaders, ren, actor) {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      var VSSource = shaders.Vertex;\n      var GSSource = shaders.Geometry;\n      var FSSource = shaders.Fragment;\n\n      if (model.drawingEdges) {\n        return;\n      }\n\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result; // we only handle the first texture by default\n      // additional textures are activated and we set the uniform\n      // for the texture unit they are assigned to, but you have to\n      // add in the shader code to do something with them\n\n      var tus = model.openGLActor.getActiveTextures();\n      var tNumComp = 2;\n      var tcdim = 2;\n\n      if (tus && tus.length > 0) {\n        tNumComp = tus[0].getComponents();\n\n        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {\n          tcdim = 3;\n        }\n      }\n\n      if (model.renderable.getColorTextureMap()) {\n        tNumComp = model.renderable.getColorTextureMap().getPointData().getScalars().getNumberOfComponents();\n        tcdim = 2;\n      }\n\n      if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];', 'out vec2 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n\n        if (tus && tus.length >= 1) {\n          switch (tNumComp) {\n            case 1:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n              break;\n\n            case 2:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n              break;\n\n            default:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n          }\n        }\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec3 tcoordVCVSOutput[];', 'out vec3 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec3 tcoordVCVSOutput;', 'uniform samplerCube texture1;']).result;\n\n        switch (tNumComp) {\n          case 1:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n            break;\n\n          case 2:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n            break;\n\n          default:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n        }\n      }\n\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.replaceShaderClip = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var FSSource = shaders.Fragment;\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', \"uniform vec4 clipPlanes[\".concat(numClipPlanes, \"];\"), \"varying float clipDistancesVSOutput[\".concat(numClipPlanes, \"];\")]).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', [\"for (int planeNum = 0; planeNum < \".concat(numClipPlanes, \"; planeNum++)\"), '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', \"varying float clipDistancesVSOutput[\".concat(numClipPlanes, \"];\")]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', [\"for (int planeNum = 0; planeNum < \".concat(numClipPlanes, \"; planeNum++)\"), '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.getCoincidentParameters = function (ren, actor) {\n    // 1. ResolveCoincidentTopology is On and non zero for this primitive\n    // type\n    var cp = null;\n    var prop = actor.getProperty();\n\n    if (model.renderable.getResolveCoincidentTopology() || prop.getEdgeVisibility() && prop.getRepresentation() === Representation.SURFACE) {\n      var primType = model.lastBoundBO.getPrimitiveType();\n\n      if (primType === primTypes.Points || prop.getRepresentation() === Representation.POINTS) {\n        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();\n      } else if (primType === primTypes.Lines || prop.getRepresentation() === Representation.WIREFRAME) {\n        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();\n      } else if (primType === primTypes.Tris || primType === primTypes.TriStrips) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n      }\n\n      if (primType === primTypes.TrisEdges || primType === primTypes.TriStripsEdges) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n        cp.factor /= 2.0;\n        cp.offset /= 2.0;\n      }\n    } // hardware picking always offset due to saved zbuffer\n    // This gets you above the saved surface depth buffer.\n    // vtkHardwareSelector* selector = ren->GetSelector();\n    // if (selector &&\n    //     selector->GetFieldAssociation() == vtkDataObject::FIELD_ASSOCIATION_POINTS)\n    // {\n    //   offset -= 2.0;\n    //   return;\n    // }\n\n\n    return cp;\n  };\n\n  publicAPI.replaceShaderPicking = function (shaders, ren, actor) {\n    var FSSource = shaders.Fragment;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\n    shaders.Fragment = FSSource;\n  };\n\n  publicAPI.replaceShaderValues = function (shaders, ren, actor) {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderNormal(shaders, ren, actor);\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n\n    if (model.haveSeenDepthRequest) {\n      var FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n      shaders.Fragment = FSSource;\n    }\n  };\n\n  publicAPI.getNeedToRebuildShaders = function (cellBO, ren, actor) {\n    var lightComplexity = 0;\n    var numberOfLights = 0;\n    var primType = cellBO.getPrimitiveType();\n    var poly = model.currentInput; // different algo from C++ as of 5/2019\n\n    var needLighting = false;\n    var pointNormals = poly.getPointData().getNormals();\n    var cellNormals = poly.getCellData().getNormals();\n    var flat = actor.getProperty().getInterpolation() === Shading.FLAT;\n    var representation = actor.getProperty().getRepresentation();\n    var mode = publicAPI.getOpenGLMode(representation, primType); // 1) all surfaces need lighting\n\n    if (mode === model.context.TRIANGLES) {\n      needLighting = true; // 2) all cell normals without point normals need lighting\n    } else if (cellNormals && !pointNormals) {\n      needLighting = true; // 3) Phong + pointNormals need lighting\n    } else if (!flat && pointNormals) {\n      needLighting = true; // 4) Phong Lines need lighting\n    } else if (!flat && mode === model.context.LINES) {\n      needLighting = true;\n    } // 5) everything else is unlit\n    // do we need lighting?\n\n\n    if (actor.getProperty().getLighting() && needLighting) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      var lights = ren.getLightsByReference();\n\n      for (var index = 0; index < lights.length; ++index) {\n        var light = lights[index];\n        var status = light.getSwitch();\n\n        if (status > 0) {\n          numberOfLights++;\n\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n\n        if (lightComplexity === 1 && (numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\n          lightComplexity = 2;\n        }\n\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      }\n    }\n\n    var needRebuild = false;\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    var lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n\n    if (lastLightComplexity !== lightComplexity || lastLightCount !== numberOfLights) {\n      model.lastBoundBO.set({\n        lastLightComplexity: lightComplexity\n      }, true);\n      model.lastBoundBO.set({\n        lastLightCount: numberOfLights\n      }, true);\n      needRebuild = true;\n    } // has the render pass shader replacement changed? Two options\n\n\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n      model.lastRenderPassShaderReplacement = null;\n    }\n\n    if (model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement = model.currentRenderPass.getShaderReplacement();\n      needRebuild = true;\n    } // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n\n\n    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getProgram() === 0 || cellBO.getShaderSourceTime().getMTime() < publicAPI.getMTime() || cellBO.getShaderSourceTime().getMTime() < actor.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() || needRebuild) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = function (cellBO, ren, actor) {\n    model.lastBoundBO = cellBO; // has something changed that would require us to recreate the shader?\n\n    if (publicAPI.getNeedToRebuildShaders(cellBO, ren, actor)) {\n      var shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      publicAPI.buildShaders(shaders, ren, actor); // compile and bind the program if needed\n\n      var newShader = model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO\n\n\n      if (newShader !== cellBO.getProgram()) {\n        cellBO.setProgram(newShader); // reset the VAO as the shader has changed\n\n        cellBO.getVAO().releaseGraphicsResources();\n      }\n\n      cellBO.getShaderSourceTime().modified();\n    } else {\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(cellBO.getProgram());\n    }\n\n    cellBO.getVAO().bind();\n    publicAPI.setMapperShaderParameters(cellBO, ren, actor);\n    publicAPI.setPropertyShaderParameters(cellBO, ren, actor);\n    publicAPI.setCameraShaderParameters(cellBO, ren, actor);\n    publicAPI.setLightingShaderParameters(cellBO, ren, actor);\n    var listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\n\n    if (listCallbacks) {\n      listCallbacks.forEach(function (object) {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('normalMC') && cellBO.getCABO().getNormalOffset() && lastLightComplexity > 0) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'normalMC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting normalMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('normalMC');\n      }\n\n      model.renderable.getCustomShaderAttributes().forEach(function (attrName, idx) {\n        if (cellBO.getProgram().isAttributeUsed(\"\".concat(attrName, \"MC\"))) {\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), \"\".concat(attrName, \"MC\"), cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\n            vtkErrorMacro(\"Error setting \".concat(attrName, \"MC in shader VAO.\"));\n          }\n        }\n      });\n\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('scalarColor') && cellBO.getCABO().getColorComponents()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'scalarColor', cellBO.getCABO().getColorOffset(), cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 4, true)) {\n          vtkErrorMacro('Error setting scalarColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('scalarColor');\n      }\n\n      cellBO.getAttributeUpdateTime().modified();\n    }\n\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      var numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      var planeEquations = [];\n      var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n      var mat = inverseShiftScaleMatrix ? mat4.copy(model.tmpMat4, actor.getMatrix()) : actor.getMatrix();\n\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n\n      for (var i = 0; i < numClipPlanes; i++) {\n        var planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(mat, i, planeEquation);\n\n        for (var j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\n    }\n\n    if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\n      cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n    }\n\n    var tus = model.openGLActor.getActiveTextures();\n\n    if (tus) {\n      for (var index = 0; index < tus.length; ++index) {\n        var tex = tus[index];\n        var texUnit = tex.getTextureUnit();\n        var tname = \"texture\".concat(texUnit + 1);\n\n        if (cellBO.getProgram().isUniformUsed(tname)) {\n          cellBO.getProgram().setUniformi(tname, texUnit);\n        }\n      }\n    } // handle depth requests\n\n\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    } // handle coincident\n\n\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      var cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset); // cfactor isn't always used when coffset is.\n\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n\n    var selector = model.openGLRenderer.getSelector();\n    cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\n    cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n  };\n\n  publicAPI.setLightingShaderParameters = function (cellBO, ren, actor) {\n    // for unlit and headlight there are no lighting parameters\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    if (lastLightComplexity < 2) {\n      return;\n    }\n\n    var program = cellBO.getProgram(); // bind some light settings\n\n    var numberOfLights = 0;\n    var lights = ren.getLightsByReference();\n\n    for (var index = 0; index < lights.length; ++index) {\n      var light = lights[index];\n      var status = light.getSwitch();\n\n      if (status > 0.0) {\n        var dColor = light.getColorByReference();\n        var intensity = light.getIntensity();\n        model.lightColor[0] = dColor[0] * intensity;\n        model.lightColor[1] = dColor[1] * intensity;\n        model.lightColor[2] = dColor[2] * intensity; // get required info from light\n\n        var ld = light.getDirection();\n        var transform = ren.getActiveCamera().getViewMatrix();\n\n        var newLightDirection = _toConsumableArray(ld);\n\n        if (light.lightTypeIsSceneLight()) {\n          newLightDirection[0] = transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];\n          newLightDirection[1] = transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];\n          newLightDirection[2] = transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];\n          normalize(newLightDirection);\n        }\n\n        model.lightDirection[0] = newLightDirection[0];\n        model.lightDirection[1] = newLightDirection[1];\n        model.lightDirection[2] = newLightDirection[2];\n        model.lightHalfAngle[0] = -model.lightDirection[0];\n        model.lightHalfAngle[1] = -model.lightDirection[1];\n        model.lightHalfAngle[2] = -model.lightDirection[2] + 1.0;\n        normalize(model.lightDirection);\n        program.setUniform3fArray(\"lightColor\".concat(numberOfLights), model.lightColor);\n        program.setUniform3fArray(\"lightDirectionVC\".concat(numberOfLights), model.lightDirection);\n        program.setUniform3fArray(\"lightHalfAngleVC\".concat(numberOfLights), model.lightHalfAngle);\n        numberOfLights++;\n      }\n    } // we are done unless we have positional lights\n\n\n    if (lastLightComplexity < 3) {\n      return;\n    } // for lightkit case there are some parameters to set\n\n\n    var cam = ren.getActiveCamera();\n    var viewTF = cam.getViewMatrix();\n    mat4.transpose(viewTF, viewTF);\n    numberOfLights = 0;\n\n    for (var _index = 0; _index < lights.length; ++_index) {\n      var _light = lights[_index];\n\n      var _status = _light.getSwitch();\n\n      if (_status > 0.0) {\n        var lp = _light.getTransformedPosition();\n\n        var np = new Float64Array(3);\n        vec3.transformMat4(np, lp, viewTF);\n        program.setUniform3fArray(\"lightAttenuation\".concat(numberOfLights), _light.getAttenuationValuesByReference());\n        program.setUniformi(\"lightPositional\".concat(numberOfLights), _light.getPositional());\n        program.setUniformf(\"lightExponent\".concat(numberOfLights), _light.getExponent());\n        program.setUniformf(\"lightConeAngle\".concat(numberOfLights), _light.getConeAngle());\n        program.setUniform3fArray(\"lightPositionVC\".concat(numberOfLights), [np[0], np[1], np[2]]);\n        numberOfLights++;\n      }\n    }\n  };\n\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce(function (res, matrix, index) {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n\n  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram(); // [WMVP]C == {world, model, view, projection} coordinates\n    // E.g., WCPC == world to projection coordinate transformation\n\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n    var cam = ren.getActiveCamera();\n    var camm = model.openGLCamera.getKeyMatrixTime().getMTime();\n    var progm = program.getLastCameraMTime();\n    var shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    var inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n    var actorIsIdentity = actor.getIsIdentity();\n    var actMats = actorIsIdentity ? {\n      mcwc: null,\n      normalMatrix: null\n    } : model.openGLActor.getKeyMatrices();\n    program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n\n    if (program.isUniformUsed('MCVCMatrix')) {\n      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n\n    if (program.isUniformUsed('normalMatrix')) {\n      program.setUniformMatrix3x3('normalMatrix', safeMatrixMultiply([keyMats.normalMatrix, actMats.normalMatrix], mat3, model.tmpMat3));\n    }\n\n    if (progm !== camm) {\n      if (program.isUniformUsed('cameraParallel')) {\n        program.setUniformi('cameraParallel', cam.getParallelProjection());\n      }\n\n      program.setLastCameraMTime(camm);\n    }\n\n    if (!actorIsIdentity) {\n      // reset the cam mtime as actor modified the shader values\n      program.setLastCameraMTime(0);\n    }\n  };\n\n  publicAPI.setPropertyShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    var ppty = actor.getProperty();\n    var opacity = ppty.getOpacity();\n    var aColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getAmbientColorByReference();\n    var dColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getDiffuseColorByReference();\n    var aIntensity = model.drawingEdges ? 1.0 : ppty.getAmbient();\n    var dIntensity = model.drawingEdges ? 0.0 : ppty.getDiffuse();\n    var sIntensity = model.drawingEdges ? 0.0 : ppty.getSpecular();\n    var specularPower = ppty.getSpecularPower();\n    program.setUniformf('opacityUniform', opacity);\n    program.setUniform3fArray('ambientColorUniform', aColor);\n    program.setUniform3fArray('diffuseColorUniform', dColor);\n    program.setUniformf('ambient', aIntensity);\n    program.setUniformf('diffuse', dIntensity); // we are done unless we have lighting\n\n    var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    if (lastLightComplexity < 1) {\n      return;\n    }\n\n    var sColor = ppty.getSpecularColorByReference();\n    program.setUniform3fArray('specularColorUniform', sColor);\n    program.setUniformf('specularPowerUniform', specularPower);\n    program.setUniformf('specular', sIntensity); // now set the backface properties if we have them\n\n    if (program.isUniformUsed('ambientIntensityBF')) {\n      ppty = actor.getBackfaceProperty();\n      opacity = ppty.getOpacity();\n      aColor = ppty.getAmbientColor();\n      aIntensity = ppty.getAmbient();\n      dColor = ppty.getDiffuseColor();\n      dIntensity = ppty.getDiffuse();\n      sColor = ppty.getSpecularColor();\n      sIntensity = ppty.getSpecular();\n      program.setUniformf('ambientIntensityBF', aIntensity);\n      program.setUniformf('diffuseIntensityBF', dIntensity);\n      program.setUniformf('opacityUniformBF', opacity);\n      program.setUniform3fArray('ambientColorUniformBF', aColor);\n      program.setUniform3fArray('diffuseColorUniformBF', dColor); // we are done unless we have lighting\n\n      if (lastLightComplexity < 1) {\n        return;\n      }\n\n      program.setUniformf('specularIntensityBF', sIntensity);\n      program.setUniform3fArray('specularColorUniformBF', sColor);\n      program.setUniformf('specularPowerUniformBF', specularPower);\n    }\n  };\n\n  publicAPI.renderPieceStart = function (ren, actor) {\n    model.primitiveIDOffset = 0;\n\n    if (model.openGLRenderer.getSelector()) {\n      switch (model.openGLRenderer.getSelector().getCurrentPass()) {\n        default:\n          model.openGLRenderer.getSelector().renderProp(actor);\n      }\n    } // make sure the BOs are up to date\n\n\n    publicAPI.updateBufferObjects(ren, actor); // If we are coloring by texture, then load the texture map.\n    // Use Map as indicator, because texture hangs around.\n\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.activate();\n    } // Bind the OpenGL, this is shared between the different primitive/cell types.\n\n\n    model.lastBoundBO = null;\n  };\n\n  publicAPI.renderPieceDraw = function (ren, actor) {\n    var representation = actor.getProperty().getRepresentation();\n    var gl = model.context;\n    var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n    gl.lineWidth(actor.getProperty().getLineWidth()); // for every primitive type\n\n    for (var i = primTypes.Start; i < primTypes.End; i++) {\n      // if there are entries\n      var cabo = model.primitives[i].getCABO();\n\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges = drawSurfaceWithEdges && (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);\n        var mode = publicAPI.getOpenGLMode(representation, i);\n\n        if (!model.drawingEdges || !model.renderDepth) {\n          publicAPI.updateShaders(model.primitives[i], ren, actor);\n          gl.drawArrays(mode, 0, cabo.getElementCount());\n        }\n\n        var stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);\n        model.primitiveIDOffset += cabo.getElementCount() / stride;\n      }\n    } // reset the line width\n\n\n    gl.lineWidth(1);\n  };\n\n  publicAPI.getOpenGLMode = function (rep, type) {\n    if (rep === Representation.POINTS || type === primTypes.Points) {\n      return model.context.POINTS;\n    }\n\n    if (rep === Representation.WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {\n      return model.context.LINES;\n    }\n\n    return model.context.TRIANGLES;\n  };\n\n  publicAPI.renderPieceFinish = function (ren, actor) {\n    if (model.LastBoundBO) {\n      model.LastBoundBO.getVAO().release();\n    }\n\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.deactivate();\n    }\n  };\n\n  publicAPI.renderPiece = function (ren, actor) {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n    publicAPI.invokeEvent(StartEvent);\n\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    } // if there are no points then we are done\n\n\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    } // apply faceCulling\n\n\n    var gl = model.context;\n    var backfaceCulling = actor.getProperty().getBackfaceCulling();\n    var frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n\n    if (!backfaceCulling && !frontfaceCulling) {\n      model._openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model._openGLRenderWindow.enableCullFace();\n\n      gl.cullFace(gl.FRONT);\n    } else {\n      model._openGLRenderWindow.enableCullFace();\n\n      gl.cullFace(gl.BACK);\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.computeBounds = function (ren, actor) {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.bounds);\n      return;\n    }\n\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n\n  publicAPI.updateBufferObjects = function (ren, actor) {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    var vmtime = model.VBOBuildTime.getMTime();\n\n    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    var poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    var c = model.renderable.getColorMapColors();\n    model.haveCellScalars = false;\n    var scalarMode = model.renderable.getScalarMode();\n\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n        model.haveCellScalars = true;\n      }\n    } // Do we have normals?\n\n\n    var n = actor.getProperty().getInterpolation() !== Shading.FLAT ? poly.getPointData().getNormals() : null;\n\n    if (n === null && poly.getCellData().getNormals()) {\n      model.haveCellNormals = true;\n      n = poly.getCellData().getNormals();\n    } // rebuild the VBO if the data has changed we create a string for the VBO what\n    // can change the VBO? points normals tcoords colors so what can change those?\n    // the input data is clearly one as it can change all four items tcoords may\n    // haveTextures or not colors may change based on quite a few mapping\n    // parameters in the mapper\n\n\n    var representation = actor.getProperty().getRepresentation();\n    var tcoords = poly.getPointData().getTCoords();\n\n    if (!model.openGLActor.getActiveTextures()) {\n      tcoords = null;\n    } // handle color mapping via texture\n\n\n    if (model.renderable.getColorCoordinates()) {\n      tcoords = model.renderable.getColorCoordinates();\n\n      if (!model.internalColorTexture) {\n        model.internalColorTexture = vtkOpenGLTexture.newInstance();\n      }\n\n      var tex = model.internalColorTexture; // the following 4 lines allow for NPOT textures\n\n      tex.setMinificationFilter(Filter.NEAREST);\n      tex.setMagnificationFilter(Filter.NEAREST);\n      tex.setWrapS(Wrap.CLAMP_TO_EDGE);\n      tex.setWrapT(Wrap.CLAMP_TO_EDGE);\n      tex.setOpenGLRenderWindow(model._openGLRenderWindow);\n      var input = model.renderable.getColorTextureMap();\n      var ext = input.getExtent();\n      var inScalars = input.getPointData().getScalars();\n      tex.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n      tex.activate();\n      tex.sendParameters();\n      tex.deactivate();\n    }\n\n    var toString = \"\".concat(poly.getMTime(), \"A\").concat(representation, \"B\").concat(poly.getMTime()) + \"C\".concat(n ? n.getMTime() : 1, \"D\").concat(c ? c.getMTime() : 1) + \"E\".concat(actor.getProperty().getEdgeVisibility()) + \"F\".concat(tcoords ? tcoords.getMTime() : 1);\n\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      var points = poly.getPoints();\n      var options = {\n        points: points,\n        normals: n,\n        tcoords: tcoords,\n        colors: c,\n        cellOffset: 0,\n        haveCellScalars: model.haveCellScalars,\n        haveCellNormals: model.haveCellNormals,\n        customAttributes: model.renderable.getCustomShaderAttributes().map(function (arrayName) {\n          return poly.getPointData().getArrayByName(arrayName);\n        })\n      };\n      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);\n      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);\n      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);\n      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);\n      var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE; // if we have edge visibility build the edge VBOs\n\n      if (drawSurfaceWithEdges) {\n        model.primitives[primTypes.TrisEdges].getCABO().createVBO(poly.getPolys(), 'polys', Representation.WIREFRAME, {\n          points: points,\n          normals: n,\n          tcoords: null,\n          colors: null,\n          cellOffset: 0,\n          haveCellScalars: false,\n          haveCellNormals: false\n        });\n        model.primitives[primTypes.TriStripsEdges].getCABO().createVBO(poly.getStrips(), 'strips', Representation.WIREFRAME, {\n          points: points,\n          normals: n,\n          tcoords: null,\n          colors: null,\n          cellOffset: 0,\n          haveCellScalars: false,\n          haveCellNormals: false\n        });\n      } else {\n        // otherwise free them\n        model.primitives[primTypes.TrisEdges].releaseGraphicsResources(model._openGLRenderWindow);\n        model.primitives[primTypes.TriStripsEdges].releaseGraphicsResources(model._openGLRenderWindow);\n      }\n\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null,\n  tmpMat4: null,\n  ambientColor: [],\n  // used internally\n  diffuseColor: [],\n  // used internally\n  specularColor: [],\n  // used internally\n  lightColor: [],\n  // used internally\n  lightHalfAngle: [],\n  // used internally\n  lightDirection: [],\n  // used internally\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  model.primitives = [];\n  model.primTypes = primTypes;\n  model.tmpMat3 = mat3.identity(new Float64Array(9));\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n\n  for (var i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set({\n      lastLightComplexity: 0,\n      lastLightCount: 0,\n      lastSelectionPass: false\n    }, true);\n  } // Build VTK API\n\n\n  setGet(publicAPI, model, ['context']);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  }); // Object methods\n\n  vtkOpenGLPolyDataMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLPolyDataMapper'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLPolyDataMapper$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  primTypes: primTypes\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkMapper', newInstance);\n\nexport { vtkOpenGLPolyDataMapper$1 as default, extend, newInstance, primTypes };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { mat3, mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkBufferObject from './BufferObject.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkOpenGLPolyDataMapper from './PolyDataMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar Representation = vtkProperty.Representation;\nvar ObjectType = vtkBufferObject.ObjectType;\nvar PassTypes = vtkHardwareSelector.PassTypes;\nvar StartEvent = {\n  type: 'StartEvent'\n};\nvar EndEvent = {\n  type: 'EndEvent'\n}; // ----------------------------------------------------------------------------\n// vtkOpenGLSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLGlyph3DMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLGlyph3DMapper'); // Capture 'parentClass' api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.renderPiece = function (ren, actor) {\n    publicAPI.invokeEvent(StartEvent);\n\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n\n    model.currentInput = model.renderable.getInputData(1);\n    publicAPI.invokeEvent(EndEvent);\n\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    } // if there are no points then we are done\n\n\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    } // apply faceCulling\n\n\n    var gl = model.context;\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.hardwareSupport = true;\n      model.extension = null;\n    } else if (!model.extension) {\n      model.extension = model.context.getExtension('ANGLE_instanced_arrays');\n      model.hardwareSupport = !!model.extension;\n    } // to test without extension support uncomment the next two lines\n    // model.extension = null;\n    // model.hardwareSupport = !!model.extension;\n\n\n    var backfaceCulling = actor.getProperty().getBackfaceCulling();\n    var frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n\n    if (!backfaceCulling && !frontfaceCulling) {\n      model._openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model._openGLRenderWindow.enableCullFace();\n\n      gl.cullFace(gl.FRONT);\n    } else {\n      model._openGLRenderWindow.enableCullFace();\n\n      gl.cullFace(gl.BACK);\n    }\n\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n\n  publicAPI.multiply4x4WithOffset = function (out, a, b, off) {\n    var a00 = a[0];\n    var a01 = a[1];\n    var a02 = a[2];\n    var a03 = a[3];\n    var a10 = a[4];\n    var a11 = a[5];\n    var a12 = a[6];\n    var a13 = a[7];\n    var a20 = a[8];\n    var a21 = a[9];\n    var a22 = a[10];\n    var a23 = a[11];\n    var a30 = a[12];\n    var a31 = a[13];\n    var a32 = a[14];\n    var a33 = a[15]; // Cache only the current line of the second matrix\n\n    var b0 = b[off];\n    var b1 = b[off + 1];\n    var b2 = b[off + 2];\n    var b3 = b[off + 3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 4];\n    b1 = b[off + 5];\n    b2 = b[off + 6];\n    b3 = b[off + 7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 8];\n    b1 = b[off + 9];\n    b2 = b[off + 10];\n    b3 = b[off + 11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[off + 12];\n    b1 = b[off + 13];\n    b2 = b[off + 14];\n    b3 = b[off + 15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  };\n\n  publicAPI.replaceShaderNormal = function (shaders, ren, actor) {\n    if (model.hardwareSupport) {\n      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n      if (lastLightComplexity > 0) {\n        var VSSource = shaders.Vertex;\n\n        if (model.lastBoundBO.getCABO().getNormalOffset()) {\n          VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'attribute mat3 gNormal;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\n          VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * gNormal * normalMC;']).result;\n        }\n\n        shaders.Vertex = VSSource;\n      }\n    }\n\n    superClass.replaceShaderNormal(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderColor = function (shaders, ren, actor) {\n    if (model.hardwareSupport && model.renderable.getColorArray()) {\n      var VSSource = shaders.Vertex;\n      var GSSource = shaders.Geometry;\n      var FSSource = shaders.Fragment;\n      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity'); // create the material/color property declarations, and VS implementation\n      // these are always defined\n\n      var colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity']; // add more for specular\n\n      if (lastLightComplexity) {\n        colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\n      } // now handle the more complex fragment shader implementation\n      // the following are always defined variables.  We start\n      // by assigning a default value from the uniform\n\n\n      var colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\n\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\n      }\n\n      colorImpl = colorImpl.concat(['  opacity = opacityUniform;']);\n\n      if (lastLightComplexity) {\n        colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\n      }\n\n      if (!model.drawingEdges) {\n        colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 gColor;', 'varying vec4 vertexColorVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput = gColor;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\n        colorImpl = colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;']);\n      }\n\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n\n    superClass.replaceShaderColor(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {\n    if (model.hardwareSupport) {\n      var VSSource = shaders.Vertex; // do we need the vertex in the shader in View Coordinates\n\n      var lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n      if (lastLightComplexity > 0) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', 'vertexVCVSOutput = MCVCMatrix * gVertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['attribute mat4 gMatrix;', 'uniform mat4 MCPCMatrix;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vec4 gVertexMC = gMatrix * vertexMC;', '  gl_Position = MCPCMatrix * gVertexMC;']).result;\n      }\n\n      shaders.Vertex = VSSource;\n    }\n\n    superClass.replaceShaderPositionVC(shaders, ren, actor);\n  };\n\n  publicAPI.replaceShaderPicking = function (shaders, ren, actor) {\n    if (model.hardwareSupport) {\n      var FSSource = shaders.Fragment;\n      var VSSource = shaders.Vertex;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Dec', ['attribute vec3 mapperIndexVS;', 'varying vec3 mapperIndexVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Impl', '  mapperIndexVSOutput = mapperIndexVS;').result;\n      shaders.Vertex = VSSource;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['varying vec3 mapperIndexVSOutput;', 'uniform vec3 mapperIndex;', 'uniform int picking;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', ['  vec4 pickColor = picking == 2 ? vec4(mapperIndexVSOutput,1.0) : vec4(mapperIndex,1.0);', '  gl_FragData[0] = picking != 0 ? pickColor : gl_FragData[0];']).result;\n      shaders.Fragment = FSSource;\n    } else {\n      superClass.replaceShaderPicking(shaders, ren, actor);\n    }\n  };\n\n  publicAPI.updateGlyphShaderParameters = function (normalMatrixUsed, mcvcMatrixUsed, cellBO, carray, garray, narray, p, selector) {\n    var program = cellBO.getProgram();\n\n    if (normalMatrixUsed) {\n      var a = model.normalMatrix;\n      var b = narray;\n      var ofs = p * 9;\n      var out = model.tmpMat3;\n      var a00 = a[0];\n      var a01 = a[1];\n      var a02 = a[2];\n      var a10 = a[3];\n      var a11 = a[4];\n      var a12 = a[5];\n      var a20 = a[6];\n      var a21 = a[7];\n      var a22 = a[8];\n      var b00 = b[ofs];\n      var b01 = b[ofs + 1];\n      var b02 = b[ofs + 2];\n      var b10 = b[ofs + 3];\n      var b11 = b[ofs + 4];\n      var b12 = b[ofs + 5];\n      var b20 = b[ofs + 6];\n      var b21 = b[ofs + 7];\n      var b22 = b[ofs + 8];\n      out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n      out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n      out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n      out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n      out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n      out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n      out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n      out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n      out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n      program.setUniformMatrix3x3('normalMatrix', model.tmpMat3);\n    }\n\n    publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcpcMatrix, garray, p * 16);\n    program.setUniformMatrix('MCPCMatrix', model.tmpMat4);\n\n    if (mcvcMatrixUsed) {\n      publicAPI.multiply4x4WithOffset(model.tmpMat4, model.mcvcMatrix, garray, p * 16);\n      program.setUniformMatrix('MCVCMatrix', model.tmpMat4);\n    } // set color\n\n\n    if (carray) {\n      var cdata = carray.getData();\n      model.tmpColor[0] = cdata[p * 4] / 255.0;\n      model.tmpColor[1] = cdata[p * 4 + 1] / 255.0;\n      model.tmpColor[2] = cdata[p * 4 + 2] / 255.0;\n      program.setUniform3fArray('ambientColorUniform', model.tmpColor);\n      program.setUniform3fArray('diffuseColorUniform', model.tmpColor);\n    }\n\n    if (selector) {\n      program.setUniform3fArray('mapperIndex', selector.getPropColorValue());\n    }\n  };\n\n  publicAPI.renderPieceDraw = function (ren, actor) {\n    var representation = actor.getProperty().getRepresentation();\n    var gl = model.context;\n    var drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE; // [WMVP]C == {world, model, view, projection} coordinates\n    // E.g., WCPC == world to projection coordinate transformation\n\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n    var actMats = model.openGLActor.getKeyMatrices(); // precompute the actor+camera mats once\n\n    mat3.multiply(model.normalMatrix, keyMats.normalMatrix, actMats.normalMatrix);\n    mat4.multiply(model.mcpcMatrix, keyMats.wcpc, actMats.mcwc);\n    mat4.multiply(model.mcvcMatrix, keyMats.wcvc, actMats.mcwc);\n    var garray = model.renderable.getMatrixArray();\n    var narray = model.renderable.getNormalArray();\n    var carray = model.renderable.getColorArray();\n    var numPts = garray.length / 16;\n    var compositePass = false;\n\n    if (model.openGLRenderer.getSelector()) {\n      if (model.openGLRenderer.getSelector().getCurrentPass() === PassTypes.COMPOSITE_INDEX_PASS) {\n        compositePass = true;\n      }\n    } // for every primitive type\n\n\n    for (var i = model.primTypes.Start; i < model.primTypes.End; i++) {\n      // if there are entries\n      var cabo = model.primitives[i].getCABO();\n\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges = drawSurfaceWithEdges && (i === model.primTypes.TrisEdges || i === model.primTypes.TriStripsEdges);\n        publicAPI.updateShaders(model.primitives[i], ren, actor);\n        var program = model.primitives[i].getProgram();\n        var mode = publicAPI.getOpenGLMode(representation, i);\n        var normalMatrixUsed = program.isUniformUsed('normalMatrix');\n        var mcvcMatrixUsed = program.isUniformUsed('MCVCMatrix');\n\n        if (model.hardwareSupport) {\n          if (model.extension) {\n            model.extension.drawArraysInstancedANGLE(mode, 0, cabo.getElementCount(), numPts);\n          } else {\n            gl.drawArraysInstanced(mode, 0, cabo.getElementCount(), numPts);\n          }\n        } else {\n          // draw the array multiple times with different cam matrix\n          for (var p = 0; p < numPts; ++p) {\n            if (compositePass) {\n              model.openGLRenderer.getSelector().renderCompositeIndex(p);\n            }\n\n            publicAPI.updateGlyphShaderParameters(normalMatrixUsed, mcvcMatrixUsed, model.primitives[i], carray, garray, narray, p, compositePass ? model.openGLRenderer.getSelector() : null);\n            gl.drawArrays(mode, 0, cabo.getElementCount());\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    if (cellBO.getCABO().getElementCount() && (model.glyphBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (cellBO.getProgram().isAttributeUsed('gMatrix')) {\n        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.matrixBuffer, 'gMatrix', 0, 64, model.context.FLOAT, 4, false, 1)) {\n          vtkErrorMacro('Error setting gMatrix in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gMatrix');\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('gNormal')) {\n        if (!cellBO.getVAO().addAttributeMatrixWithDivisor(cellBO.getProgram(), model.normalBuffer, 'gNormal', 0, 36, model.context.FLOAT, 3, false, 1)) {\n          vtkErrorMacro('Error setting gNormal in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gNormal');\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('gColor')) {\n        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.colorBuffer, 'gColor', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {\n          vtkErrorMacro('Error setting gColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('gColor');\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('mapperIndexVS')) {\n        if (!cellBO.getVAO().addAttributeArrayWithDivisor(cellBO.getProgram(), model.pickBuffer, 'mapperIndexVS', 0, 4, model.context.UNSIGNED_BYTE, 4, true, 1, false)) {\n          vtkErrorMacro('Error setting mapperIndexVS in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('mapperIndexVS');\n      }\n\n      superClass.setMapperShaderParameters(cellBO, ren, actor);\n      cellBO.getAttributeUpdateTime().modified();\n      return;\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.getNeedToRebuildBufferObjects = function (ren, actor) {\n    model.renderable.buildArrays(); // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n\n    var vmtime = model.VBOBuildTime.getMTime();\n\n    if (vmtime < model.renderable.getBuildTime().getMTime()) {\n      return true;\n    }\n\n    return superClass.getNeedToRebuildBufferObjects(ren, actor);\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    if (model.hardwareSupport) {\n      // update the buffer objects if needed\n      var garray = model.renderable.getMatrixArray();\n      var narray = model.renderable.getNormalArray();\n      var carray = model.renderable.getColorArray();\n\n      if (!model.matrixBuffer) {\n        model.matrixBuffer = vtkBufferObject.newInstance();\n        model.matrixBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.normalBuffer = vtkBufferObject.newInstance();\n        model.normalBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.colorBuffer = vtkBufferObject.newInstance();\n        model.colorBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n        model.pickBuffer = vtkBufferObject.newInstance();\n        model.pickBuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n\n      if (model.renderable.getBuildTime().getMTime() > model.glyphBOBuildTime.getMTime()) {\n        model.matrixBuffer.upload(garray, ObjectType.ARRAY_BUFFER);\n        model.normalBuffer.upload(narray, ObjectType.ARRAY_BUFFER);\n\n        if (carray) {\n          model.colorBuffer.upload(carray.getData(), ObjectType.ARRAY_BUFFER);\n        } else {\n          model.colorBuffer.releaseGraphicsResources();\n        }\n\n        var numPts = garray.length / 16;\n        var parray = new Uint8Array(4 * numPts);\n\n        for (var i = 0; i < numPts; ++i) {\n          var value = i + 1;\n          var offset = i * 4;\n          parray[offset] = value % 256;\n          value -= parray[offset];\n          value /= 256;\n          parray[offset + 1] = value % 256;\n          value -= parray[offset + 1];\n          value /= 256;\n          parray[offset + 2] = value % 256;\n          parray[offset + 3] = 255;\n        }\n\n        model.pickBuffer.upload(parray, ObjectType.ARRAY_BUFFER);\n        model.glyphBOBuildTime.modified();\n      }\n    }\n\n    return superClass.buildBufferObjects(ren, actor);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  normalMatrix: null,\n  mcpcMatrix: null,\n  mcwcMatrix: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues);\n  model.tmpMat3 = mat3.identity(new Float64Array(9));\n  model.normalMatrix = mat3.identity(new Float64Array(9));\n  model.mcpcMatrix = mat4.identity(new Float64Array(16));\n  model.mcvcMatrix = mat4.identity(new Float64Array(16));\n  model.tmpColor = [];\n  model.glyphBOBuildTime = {};\n  obj(model.glyphBOBuildTime, {\n    mtime: 0\n  }); // Object methods\n\n  vtkOpenGLGlyph3DMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLGlyph3DMapper'); // ----------------------------------------------------------------------------\n\nvar vtkGlyph3DMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkGlyph3DMapper', newInstance);\n\nexport { vtkGlyph3DMapper as default, extend, newInstance };\n", "import { mat3, mat4 } from 'gl-matrix';\nimport { newInstance as newInstance$1, obj, setGet, get, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nvar vtkErrorMacro = vtkErrorMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLSkybox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSkybox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSkybox'); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      var ren = model.openGLRenderer.getRenderable();\n      model.openGLCamera = model.openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n    }\n  };\n\n  publicAPI.queryPass = function (prepass, renderPass) {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n\n      renderPass.incrementOpaqueActorCount();\n    }\n  };\n\n  publicAPI.opaquePass = function (prepass, renderPass) {\n    if (prepass && !model.openGLRenderer.getSelector()) {\n      publicAPI.updateBufferObjects();\n      model.context.depthMask(true);\n\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.tris.getProgram());\n\n      model.openGLTexture.render(model._openGLRenderWindow);\n      var texUnit = model.openGLTexture.getTextureUnit();\n      model.tris.getProgram().setUniformi('sbtexture', texUnit);\n      var ren = model.openGLRenderer.getRenderable();\n      var keyMats = model.openGLCamera.getKeyMatrices(ren);\n      var imat = new Float64Array(16);\n      mat4.invert(imat, keyMats.wcpc);\n      model.tris.getProgram().setUniformMatrix('IMCPCMatrix', imat);\n\n      if (model.lastFormat === 'box') {\n        var camPos = ren.getActiveCamera().getPosition();\n        model.tris.getProgram().setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);\n      }\n\n      model.tris.getVAO().bind(); // draw polygons\n\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n      model.openGLTexture.deactivate();\n    }\n  };\n\n  publicAPI.updateBufferObjects = function () {\n    // build the VBO if needed, only happens once\n    if (!model.tris.getCABO().getElementCount()) {\n      var ptsArray = new Float32Array(12);\n\n      for (var i = 0; i < 4; i++) {\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = 1.0;\n      }\n\n      var points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      var cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      var cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points: points,\n        cellOffset: 0\n      });\n    } // update the program?\n\n\n    if (model.renderable.getFormat() !== model.lastFormat) {\n      model.lastFormat = model.renderable.getFormat();\n\n      if (model.lastFormat === 'box') {\n        // we invert Y below because opengl is messed up!\n        // Cube Maps have been specified to follow the RenderMan\n        // specification (for whatever reason), and RenderMan\n        // assumes the images' origin being in the upper left,\n        // contrary to the usual OpenGL behaviour of having the\n        // image origin in the lower left. That's why things get\n        // swapped in the Y direction. It totally breaks with the usual\n        // OpenGL semantics and doesn't make sense at all.\n        // But now we're stuck with it.  From\n        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping\n        //\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(\"//VTK::System::Dec\\n             attribute vec3 vertexMC;\\n             uniform mat4 IMCPCMatrix;\\n             varying vec3 TexCoords;\\n             void main () {\\n              gl_Position = vec4(vertexMC.xyz, 1.0);\\n              vec4 wpos = IMCPCMatrix * gl_Position;\\n              TexCoords = wpos.xyz/wpos.w;\\n             }\", \"//VTK::System::Dec\\n             //VTK::Output::Dec\\n             varying vec3 TexCoords;\\n             uniform samplerCube sbtexture;\\n             uniform vec3 camPos;\\n             void main () {\\n               // skybox looks from inside out\\n               // which means we have to adjust\\n               // our tcoords. Otherwise text would\\n               // be flipped\\n               vec3 tc = normalize(TexCoords - camPos);\\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\\n               {\\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\\n               }\\n               else\\n               {\\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\\n               }\\n               gl_FragData[0] = textureCube(sbtexture, tc);\\n             }\", ''));\n      }\n\n      if (model.lastFormat === 'background') {\n        // maps the texture to the window\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(\"//VTK::System::Dec\\n             attribute vec3 vertexMC;\\n             uniform mat4 IMCPCMatrix;\\n             varying vec2 TexCoords;\\n             void main () {\\n              gl_Position = vec4(vertexMC.xyz, 1.0);\\n              vec4 wpos = IMCPCMatrix * gl_Position;\\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\\n             }\", \"//VTK::System::Dec\\n             //VTK::Output::Dec\\n             varying vec2 TexCoords;\\n             uniform sampler2D sbtexture;\\n             void main () {\\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\\n             }\", ''));\n      }\n\n      model.tris.getShaderSourceTime().modified();\n      model.tris.getVAO().bind();\n\n      if (!model.tris.getVAO().addAttributeArray(model.tris.getProgram(), model.tris.getCABO(), 'vertexMC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n        vtkErrorMacro('Error setting vertexMC in shader VAO.');\n      }\n    } // set/update the texture map if needed\n\n\n    var tmaps = model.renderable.getTextures();\n\n    if (!tmaps.length) {\n      vtkErrorMacro('vtkSkybox requires a texture map');\n    }\n\n    if (model.openGLTexture.getRenderable() !== tmaps[0]) {\n      model.openGLTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.openGLTexture.setRenderable(tmaps[0]);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.tris = vtkHelper.newInstance();\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  }; // Build VTK API\n\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']); // Object methods\n\n  vtkOpenGLSkybox(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkSkybox = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkSkybox', newInstance);\n\nexport { vtkSkybox as default, extend, newInstance };\n", "var vtkSphereMapperVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkSphereMapperVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// this shader implements imposters in OpenGL for Spheres\\n\\nattribute vec4 vertexMC;\\nattribute vec2 offsetMC;\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\nuniform mat3 normalMatrix; // transform model coordinate directions to view coordinates\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\nvarying vec4 vertexVCVSOutput;\\nvarying float radiusVCVSOutput;\\nvarying vec3 centerVCVSOutput;\\n\\nuniform int cameraParallel;\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  // compute the projected vertex position\\n  vertexVCVSOutput = MCVCMatrix * vertexMC;\\n  centerVCVSOutput = vertexVCVSOutput.xyz;\\n  radiusVCVSOutput = length(offsetMC)*0.5;\\n\\n  // make the triangle face the camera\\n  if (cameraParallel == 0)\\n    {\\n    vec3 dir = normalize(-vertexVCVSOutput.xyz);\\n    vec3 base2 = normalize(cross(dir,vec3(1.0,0.0,0.0)));\\n    vec3 base1 = cross(base2,dir);\\n    vertexVCVSOutput.xyz = vertexVCVSOutput.xyz + offsetMC.x*base1 + offsetMC.y*base2;\\n    }\\n  else\\n    {\\n    // add in the offset\\n    vertexVCVSOutput.xy = vertexVCVSOutput.xy + offsetMC;\\n    }\\n\\n  gl_Position = VCPCMatrix * vertexVCVSOutput;\\n}\\n\";\n\nexport { vtkSphereMapperVS as v };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { mat4 } from 'gl-matrix';\nimport { ObjectType } from './BufferObject/Constants.js';\nimport { newInstance as newInstance$1, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkBufferObject from './BufferObject.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkOpenGLPolyDataMapper from './PolyDataMapper.js';\nimport { v as vtkSphereMapperVS } from './glsl/vtkSphereMapperVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = vtkErrorMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLSphereMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSphereMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSphereMapper'); // Capture 'parentClass' api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getShaderTemplate = function (shaders, ren, actor) {\n    shaders.Vertex = vtkSphereMapperVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var FSSource = shaders.Fragment;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 VCPCMatrix;\\n', 'uniform mat4 MCVCMatrix;']).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result; // we create vertexVC below, so turn off the default\n    // implementation\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;\\n']).result; // for lights kit and positional the VCPC matrix is already defined\n    // so don't redefine it\n\n    var replacement = ['uniform float invertedDepth;\\n', 'uniform int cameraParallel;\\n', 'varying float radiusVCVSOutput;\\n', 'varying vec3 centerVCVSOutput;\\n', 'uniform mat4 VCPCMatrix;\\n'];\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', replacement).result;\n    var fragString = '';\n\n    if (model.context.getExtension('EXT_frag_depth')) {\n      fragString = 'gl_FragDepthEXT = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      fragString = 'gl_FragDepth = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', [// compute the eye position and unit direction\n    '  vec3 EyePos;\\n', '  vec3 EyeDir;\\n', '  if (cameraParallel != 0) {\\n', '    EyePos = vec3(vertexVC.x, vertexVC.y, vertexVC.z + 3.0*radiusVCVSOutput);\\n', '    EyeDir = vec3(0.0,0.0,-1.0); }\\n', '  else {\\n', '    EyeDir = vertexVC.xyz;\\n', '    EyePos = vec3(0.0,0.0,0.0);\\n', '    float lengthED = length(EyeDir);\\n', '    EyeDir = normalize(EyeDir);\\n', // we adjust the EyePos to be closer if it is too far away\n    // to prevent floating point precision noise\n    '    if (lengthED > radiusVCVSOutput*3.0) {\\n', '      EyePos = vertexVC.xyz - EyeDir*3.0*radiusVCVSOutput; }\\n', '    }\\n', // translate to Sphere center\n    '  EyePos = EyePos - centerVCVSOutput;\\n', // scale to radius 1.0\n    '  EyePos = EyePos/radiusVCVSOutput;\\n', // find the intersection\n    '  float b = 2.0*dot(EyePos,EyeDir);\\n', '  float c = dot(EyePos,EyePos) - 1.0;\\n', '  float d = b*b - 4.0*c;\\n', '  vec3 normalVCVSOutput = vec3(0.0,0.0,1.0);\\n', '  if (d < 0.0) { discard; }\\n', '  else {\\n', '    float t = (-b - invertedDepth*sqrt(d))*0.5;\\n', // compute the normal, for unit sphere this is just\n    // the intersection point\n    '    normalVCVSOutput = invertedDepth*normalize(EyePos + t*EyeDir);\\n', // compute the intersection point in VC\n    '    vertexVC.xyz = normalVCVSOutput*radiusVCVSOutput + centerVCVSOutput;\\n', '    }\\n', // compute the pixel's depth\n    // ' normalVCVSOutput = vec3(0,0,1);\\n'\n    '  vec4 pos = VCPCMatrix * vertexVC;\\n', fragString]).result; // Strip out the normal line -- the normal is computed as part of the depth\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', '').result;\n\n    if (model.haveSeenDepthRequest) {\n      // special depth impl\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float computedZ = (pos.z / pos.w + 1.0) / 2.0;', 'float iz = floor(computedZ * 65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    superClass.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime()) && cellBO.getProgram().isAttributeUsed('offsetMC')) {\n      if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'offsetMC', 12, // 12:this->VBO->ColorOffset+sizeof(float)\n      cellBO.getCABO().getStride(), model.context.FLOAT, 2, false)) {\n        vtkErrorMacro(\"Error setting 'offsetMC' in shader VAO.\");\n      }\n    }\n\n    if (cellBO.getProgram().isUniformUsed('invertedDepth')) {\n      cellBO.getProgram().setUniformf('invertedDepth', model.invert ? -1.0 : 1.0);\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    var cam = ren.getActiveCamera();\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n\n    if (program.isUniformUsed('VCPCMatrix')) {\n      program.setUniformMatrix('VCPCMatrix', keyMats.vcpc);\n    }\n\n    if (program.isUniformUsed('MCVCMatrix')) {\n      if (!actor.getIsIdentity()) {\n        var actMats = model.openGLActor.getKeyMatrices();\n        var tmp4 = new Float64Array(16);\n        mat4.multiply(tmp4, keyMats.wcvc, actMats.mcwc);\n        program.setUniformMatrix('MCVCMatrix', tmp4);\n      } else {\n        program.setUniformMatrix('MCVCMatrix', keyMats.wcvc);\n      }\n    }\n\n    if (program.isUniformUsed('cameraParallel')) {\n      cellBO.getProgram().setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n  };\n\n  publicAPI.getOpenGLMode = function (rep, type) {\n    return model.context.TRIANGLES;\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    var poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    var c = model.renderable.getColorMapColors();\n    var vbo = model.primitives[model.primTypes.Tris].getCABO();\n    var pointData = poly.getPointData();\n    var points = poly.getPoints();\n    var numPoints = points.getNumberOfPoints();\n    var pointArray = points.getData();\n    var pointSize = 5; // x,y,z,orientation1,orientation2\n\n    var scales = null;\n\n    if (model.renderable.getScaleArray() != null && pointData.hasArray(model.renderable.getScaleArray())) {\n      scales = pointData.getArray(model.renderable.getScaleArray()).getData();\n    }\n\n    var colorData = null;\n    var colorComponents = 0;\n    var packedUCVBO = null;\n\n    if (c) {\n      colorComponents = c.getNumberOfComponents();\n      vbo.setColorOffset(0);\n      vbo.setColorBOStride(4);\n      colorData = c.getData();\n      packedUCVBO = new Uint8Array(3 * numPoints * 4);\n\n      if (!vbo.getColorBO()) {\n        vbo.setColorBO(vtkBufferObject.newInstance());\n      }\n\n      vbo.getColorBO().setOpenGLRenderWindow(model._openGLRenderWindow);\n    } else if (vbo.getColorBO()) {\n      vbo.setColorBO(null);\n    }\n\n    vbo.setColorComponents(colorComponents);\n    var packedVBO = new Float32Array(pointSize * numPoints * 3);\n    vbo.setStride(pointSize * 4);\n    var cos30 = Math.cos(radiansFromDegrees(30.0));\n    var pointIdx = 0;\n    var colorIdx = 0; //\n    // Generate points and point data for sides\n    //\n\n    var vboIdx = 0;\n    var ucIdx = 0;\n\n    for (var i = 0; i < numPoints; ++i) {\n      var radius = model.renderable.getRadius();\n\n      if (scales) {\n        radius = scales[i];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = -2.0 * radius * cos30;\n      packedVBO[vboIdx++] = -radius;\n\n      if (colorData) {\n        colorIdx = i * colorComponents;\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = 2.0 * radius * cos30;\n      packedVBO[vboIdx++] = -radius;\n\n      if (colorData) {\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n\n      pointIdx = i * 3;\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = pointArray[pointIdx++];\n      packedVBO[vboIdx++] = 0.0;\n      packedVBO[vboIdx++] = 2.0 * radius;\n\n      if (colorData) {\n        packedUCVBO[ucIdx++] = colorData[colorIdx];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n        packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n      }\n    }\n\n    vbo.setElementCount(vboIdx / pointSize);\n    vbo.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n\n    if (c) {\n      vbo.getColorBO().upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n\n    model.VBOBuildTime.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkOpenGLSphereMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLSphereMapper'); // ----------------------------------------------------------------------------\n\nvar vtkSphereMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkSphereMapper', newInstance);\n\nexport { vtkSphereMapper as default, extend, newInstance };\n", "var vtkStickMapperVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkStickMapperVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// this shader implements imposters in OpenGL for Sticks\\n\\nattribute vec4 vertexMC;\\nattribute vec3 orientMC;\\nattribute vec4 offsetMC;\\nattribute float radiusMC;\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n//VTK::Picking::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\nuniform mat3 normalMatrix; // transform model coordinate directions to view coordinates\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\nvarying vec4 vertexVCVSOutput;\\nvarying float radiusVCVSOutput;\\nvarying float lengthVCVSOutput;\\nvarying vec3 centerVCVSOutput;\\nvarying vec3 orientVCVSOutput;\\n\\nuniform int cameraParallel;\\n\\nvoid main()\\n{\\n  //VTK::Picking::Impl\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  vertexVCVSOutput = MCVCMatrix * vertexMC;\\n  centerVCVSOutput = vertexVCVSOutput.xyz;\\n  radiusVCVSOutput = radiusMC;\\n  lengthVCVSOutput = length(orientMC);\\n  orientVCVSOutput = normalMatrix * normalize(orientMC);\\n\\n  // make sure it is pointing out of the screen\\n  if (orientVCVSOutput.z < 0.0)\\n    {\\n    orientVCVSOutput = -orientVCVSOutput;\\n    }\\n\\n  // make the basis\\n  vec3 xbase;\\n  vec3 ybase;\\n  vec3 dir = vec3(0.0,0.0,1.0);\\n  if (cameraParallel == 0)\\n    {\\n    dir = normalize(-vertexVCVSOutput.xyz);\\n    }\\n  if (abs(dot(dir,orientVCVSOutput)) == 1.0)\\n    {\\n    xbase = normalize(cross(vec3(0.0,1.0,0.0),orientVCVSOutput));\\n    ybase = cross(xbase,orientVCVSOutput);\\n    }\\n  else\\n    {\\n    xbase = normalize(cross(orientVCVSOutput,dir));\\n    ybase = cross(orientVCVSOutput,xbase);\\n    }\\n\\n  vec3 offsets = offsetMC.xyz*2.0-1.0;\\n  vertexVCVSOutput.xyz = vertexVCVSOutput.xyz +\\n    radiusVCVSOutput*offsets.x*xbase +\\n    radiusVCVSOutput*offsets.y*ybase +\\n    0.5*lengthVCVSOutput*offsets.z*orientVCVSOutput;\\n\\n  gl_Position = VCPCMatrix * vertexVCVSOutput;\\n}\\n\";\n\nexport { vtkStickMapperVS as v };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { mat4, mat3 } from 'gl-matrix';\nimport { ObjectType } from './BufferObject/Constants.js';\nimport { newInstance as newInstance$1, vtkErrorMacro as vtkErrorMacro$1 } from '../../macros.js';\nimport vtkBufferObject from './BufferObject.js';\nimport { v as vtkStickMapperVS } from './glsl/vtkStickMapperVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkOpenGLPolyDataMapper from './PolyDataMapper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar vtkErrorMacro = vtkErrorMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLStickMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLStickMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLStickMapper'); // Capture 'parentClass' api for internal use\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getShaderTemplate = function (shaders, ren, actor) {\n    shaders.Vertex = vtkStickMapperVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n\n  publicAPI.replaceShaderValues = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex;\n    var FSSource = shaders.Fragment;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 VCPCMatrix;\\n', 'uniform mat4 MCVCMatrix;']).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', 'varying vec4 vertexVCVSOutput;').result; // we create vertexVC below, so turn off the default\n    // implementation\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Impl', '  vec4 vertexVC = vertexVCVSOutput;\\n').result; // for lights kit and positional the VCPC matrix is already defined\n    // so don't redefine it\n\n    var replacement = ['uniform int cameraParallel;\\n', 'varying float radiusVCVSOutput;\\n', 'varying vec3 orientVCVSOutput;\\n', 'varying float lengthVCVSOutput;\\n', 'varying vec3 centerVCVSOutput;\\n', 'uniform mat4 VCPCMatrix;\\n'];\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', replacement).result;\n    var fragString = '';\n\n    if (model.context.getExtension('EXT_frag_depth')) {\n      fragString = '  gl_FragDepthEXT = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    }\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      fragString = 'gl_FragDepth = (pos.z / pos.w + 1.0) / 2.0;\\n';\n    } // see https://www.cl.cam.ac.uk/teaching/1999/AGraphHCI/SMAG/node2.html\n\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', [// compute the eye position and unit direction\n    '  vec3 EyePos;\\n', '  vec3 EyeDir;\\n', '  if (cameraParallel != 0) {\\n', '    EyePos = vec3(vertexVC.x, vertexVC.y, vertexVC.z + 3.0*radiusVCVSOutput);\\n', '    EyeDir = vec3(0.0,0.0,-1.0); }\\n', '  else {\\n', '    EyeDir = vertexVC.xyz;\\n', '    EyePos = vec3(0.0,0.0,0.0);\\n', '    float lengthED = length(EyeDir);\\n', '    EyeDir = normalize(EyeDir);\\n', // we adjust the EyePos to be closer if it is too far away\n    // to prevent floating point precision noise\n    '    if (lengthED > radiusVCVSOutput*3.0) {\\n', '      EyePos = vertexVC.xyz - EyeDir*3.0*radiusVCVSOutput; }\\n', '    }\\n', // translate to Stick center\n    '  EyePos = EyePos - centerVCVSOutput;\\n', // rotate to new basis\n    // base1, base2, orientVC\n    '  vec3 base1;\\n', '  if (abs(orientVCVSOutput.z) < 0.99) {\\n', '    base1 = normalize(cross(orientVCVSOutput,vec3(0.0,0.0,1.0))); }\\n', '  else {\\n', '    base1 = normalize(cross(orientVCVSOutput,vec3(0.0,1.0,0.0))); }\\n', '  vec3 base2 = cross(orientVCVSOutput,base1);\\n', '  EyePos = vec3(dot(EyePos,base1),dot(EyePos,base2),dot(EyePos,orientVCVSOutput));\\n', '  EyeDir = vec3(dot(EyeDir,base1),dot(EyeDir,base2),dot(EyeDir,orientVCVSOutput));\\n', // scale by radius\n    '  EyePos = EyePos/radiusVCVSOutput;\\n', // find the intersection\n    '  float a = EyeDir.x*EyeDir.x + EyeDir.y*EyeDir.y;\\n', '  float b = 2.0*(EyePos.x*EyeDir.x + EyePos.y*EyeDir.y);\\n', '  float c = EyePos.x*EyePos.x + EyePos.y*EyePos.y - 1.0;\\n', '  float d = b*b - 4.0*a*c;\\n', '  vec3 normalVCVSOutput = vec3(0.0,0.0,1.0);\\n', '  if (d < 0.0) { discard; }\\n', '  else {\\n', '    float t =  (-b - sqrt(d))/(2.0*a);\\n', '    float tz = EyePos.z + t*EyeDir.z;\\n', '    vec3 iPoint = EyePos + t*EyeDir;\\n', '    if (abs(iPoint.z)*radiusVCVSOutput > lengthVCVSOutput*0.5) {\\n', // test for end cap\n    '      float t2 = (-b + sqrt(d))/(2.0*a);\\n', '      float tz2 = EyePos.z + t2*EyeDir.z;\\n', '      if (tz2*radiusVCVSOutput > lengthVCVSOutput*0.5 || tz*radiusVCVSOutput < -0.5*lengthVCVSOutput) { discard; }\\n', '      else {\\n', '        normalVCVSOutput = orientVCVSOutput;\\n', '        float t3 = (lengthVCVSOutput*0.5/radiusVCVSOutput - EyePos.z)/EyeDir.z;\\n', '        iPoint = EyePos + t3*EyeDir;\\n', '        vertexVC.xyz = radiusVCVSOutput*(iPoint.x*base1 + iPoint.y*base2 + iPoint.z*orientVCVSOutput) + centerVCVSOutput;\\n', '        }\\n', '      }\\n', '    else {\\n', // The normal is the iPoint.xy rotated back into VC\n    '      normalVCVSOutput = iPoint.x*base1 + iPoint.y*base2;\\n', // rescale rerotate and translate\n    '      vertexVC.xyz = radiusVCVSOutput*(normalVCVSOutput + iPoint.z*orientVCVSOutput) + centerVCVSOutput;\\n', '      }\\n', '    }\\n', //    '  vec3 normalVC = vec3(0.0,0.0,1.0);\\n'\n    // compute the pixel's depth\n    '  vec4 pos = VCPCMatrix * vertexVC;\\n', fragString]).result; // Strip out the normal line -- the normal is computed as part of the depth\n\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', '').result;\n\n    if (model.haveSeenDepthRequest) {\n      // special depth impl\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float computedZ = (pos.z / pos.w + 1.0) / 2.0;', 'float iz = floor(computedZ * 65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n    superClass.replaceShaderValues(shaders, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = function (cellBO, ren, actor) {\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      if (cellBO.getProgram().isAttributeUsed('orientMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'orientMC', 12, // after X Y Z\n        cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro(\"Error setting 'orientMC' in shader VAO.\");\n        }\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('offsetMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'offsetMC', 0, cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 3, true)) {\n          vtkErrorMacro(\"Error setting 'offsetMC' in shader VAO.\");\n        }\n      }\n\n      if (cellBO.getProgram().isAttributeUsed('radiusMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'radiusMC', 24, // X Y Z OX OY OZ\n        cellBO.getCABO().getStride(), model.context.FLOAT, 1, false)) {\n          vtkErrorMacro(\"Error setting 'radiusMC' in shader VAO.\");\n        }\n      }\n    }\n\n    superClass.setMapperShaderParameters(cellBO, ren, actor);\n  };\n\n  publicAPI.setCameraShaderParameters = function (cellBO, ren, actor) {\n    var program = cellBO.getProgram();\n    var cam = ren.getActiveCamera();\n    var keyMats = model.openGLCamera.getKeyMatrices(ren);\n\n    if (program.isUniformUsed('VCPCMatrix')) {\n      program.setUniformMatrix('VCPCMatrix', keyMats.vcpc);\n    }\n\n    if (!actor.getIsIdentity()) {\n      var actMats = model.openGLActor.getKeyMatrices();\n\n      if (program.isUniformUsed('MCVCMatrix')) {\n        var tmp4 = new Float64Array(16);\n        mat4.multiply(tmp4, keyMats.wcvc, actMats.mcwc);\n        program.setUniformMatrix('MCVCMatrix', tmp4);\n      }\n\n      if (program.isUniformUsed('normalMatrix')) {\n        var anorms = new Float64Array(9);\n        mat3.multiply(anorms, keyMats.normalMatrix, actMats.normalMatrix);\n        program.setUniformMatrix3x3('normalMatrix', anorms);\n      }\n    } else {\n      if (program.isUniformUsed('MCVCMatrix')) {\n        program.setUniformMatrix('MCVCMatrix', keyMats.wcvc);\n      }\n\n      if (program.isUniformUsed('normalMatrix')) {\n        program.setUniformMatrix3x3('normalMatrix', keyMats.normalMatrix);\n      }\n    }\n\n    if (program.isUniformUsed('cameraParallel')) {\n      cellBO.getProgram().setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n  };\n\n  publicAPI.getOpenGLMode = function (rep, type) {\n    return model.context.TRIANGLES;\n  };\n\n  publicAPI.buildBufferObjects = function (ren, actor) {\n    var poly = model.currentInput;\n\n    if (poly === null) {\n      return;\n    }\n\n    model.renderable.mapScalars(poly, 1.0);\n    var c = model.renderable.getColorMapColors();\n    var vbo = model.primitives[model.primTypes.Tris].getCABO();\n    var pointData = poly.getPointData();\n    var points = poly.getPoints();\n    var numPoints = points.getNumberOfPoints();\n    var pointArray = points.getData();\n    var pointSize = 3; // x,y,z\n    // three more floats for orientation + 1 for radius\n\n    pointSize += 4;\n    var colorData = null;\n    var colorComponents = 0;\n    vbo.setColorBOStride(4);\n\n    if (!vbo.getColorBO()) {\n      vbo.setColorBO(vtkBufferObject.newInstance());\n    }\n\n    vbo.getColorBO().setOpenGLRenderWindow(model._openGLRenderWindow);\n\n    if (c) {\n      colorComponents = c.getNumberOfComponents();\n      vbo.setColorOffset(4);\n      colorData = c.getData();\n      vbo.setColorBOStride(8);\n    }\n\n    vbo.setColorComponents(colorComponents);\n    vbo.setStride(pointSize * 4); // Create a buffer, and copy the data over.\n\n    var packedVBO = new Float32Array(pointSize * numPoints * 12);\n    var packedUCVBO = new Uint8Array(12 * numPoints * (colorData ? 8 : 4));\n    var scales = null;\n    var orientationArray = null; //\n    // Generate points and point data for sides\n    //\n\n    if (model.renderable.getScaleArray() != null && pointData.hasArray(model.renderable.getScaleArray())) {\n      scales = pointData.getArray(model.renderable.getScaleArray()).getData();\n    }\n\n    if (model.renderable.getOrientationArray() != null && pointData.hasArray(model.renderable.getOrientationArray())) {\n      orientationArray = pointData.getArray(model.renderable.getOrientationArray()).getData();\n    } else {\n      vtkErrorMacro(['Error setting orientationArray.\\n', 'You have to specify the stick orientation']);\n    } // Vertices\n    // 013 - 032 - 324 - 453\n    //\n    //       _.4---_.5\n    //    .-*   .-*\n    //   2-----3\n    //   |    /|\n    //   |   / |\n    //   |  /  |\n    //   | /   |\n    //   |/    |\n    //   0-----1\n    //\n    // coord for each points\n    // 0: 000\n    // 1: 100\n    // 2: 001\n    // 3: 101\n    // 4: 011\n    // 5: 111\n    // prettier-ignore\n\n\n    var verticesArray = [0, 1, 3, 0, 3, 2, 2, 3, 5, 2, 5, 4];\n    var pointIdx = 0;\n    var colorIdx = 0;\n    var vboIdx = 0;\n    var ucIdx = 0;\n\n    for (var i = 0; i < numPoints; ++i) {\n      var length = model.renderable.getLength();\n      var radius = model.renderable.getRadius();\n\n      if (scales) {\n        length = scales[i * 2];\n        radius = scales[i * 2 + 1];\n      }\n\n      for (var j = 0; j < verticesArray.length; ++j) {\n        pointIdx = i * 3;\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        packedVBO[vboIdx++] = pointArray[pointIdx++];\n        pointIdx = i * 3;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = orientationArray[pointIdx++] * length;\n        packedVBO[vboIdx++] = radius;\n        packedUCVBO[ucIdx++] = 255 * (verticesArray[j] % 2);\n        packedUCVBO[ucIdx++] = verticesArray[j] >= 4 ? 255 : 0;\n        packedUCVBO[ucIdx++] = verticesArray[j] >= 2 ? 255 : 0;\n        packedUCVBO[ucIdx++] = 255;\n        colorIdx = i * colorComponents;\n\n        if (colorData) {\n          packedUCVBO[ucIdx++] = colorData[colorIdx];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 1];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 2];\n          packedUCVBO[ucIdx++] = colorData[colorIdx + 3];\n        }\n      }\n    }\n\n    vbo.setElementCount(vboIdx / pointSize);\n    vbo.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n    vbo.getColorBO().upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    model.VBOBuildTime.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkOpenGLPolyDataMapper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkOpenGLStickMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLStickMapper'); // ----------------------------------------------------------------------------\n\nvar vtkStickMapper = {\n  newInstance: newInstance,\n  extend: extend\n}; // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkStickMapper', newInstance);\n\nexport { vtkStickMapper as default, extend, newInstance };\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/macros\"), require(\"@kitware/vtk.js/Rendering/Core/Camera\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Rendering/Core/Volume\"), require(\"@kitware/vtk.js/Rendering/Profiles/Volume\"), require(\"@kitware/vtk.js/Common/DataModel/ImageData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"), require(\"@kitware/vtk.js/Rendering/Core/Renderer\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Camera\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"), require(\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Volume\"), require(\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"), require(\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"), require(\"@kitware/vtk.js/Common/Core/DataArray/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/Property/Constants\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\", \"gl-matrix\", \"@kitware/vtk.js/macros\", \"@kitware/vtk.js/Rendering/Core/Camera\", \"@kitware/vtk.js/Common/Core/Math\", \"@kitware/vtk.js/Rendering/Core/Volume\", \"@kitware/vtk.js/Rendering/Profiles/Volume\", \"@kitware/vtk.js/Common/DataModel/ImageData\", \"@kitware/vtk.js/Common/Core/DataArray\", \"@kitware/vtk.js/Rendering/OpenGL/Texture\", \"@kitware/vtk.js/Rendering/Core/VolumeMapper\", \"@kitware/vtk.js/Common/Core/MatrixBuilder\", \"@kitware/vtk.js/Rendering/Core/Renderer\", \"@kitware/vtk.js/Rendering/Core/RenderWindow\", \"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\", \"@kitware/vtk.js/Common/Core/Points\", \"@kitware/vtk.js/Common/DataModel/PolyData\", \"@kitware/vtk.js/Rendering/Core/Actor\", \"@kitware/vtk.js/Rendering/Core/Mapper\", \"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\", \"@kitware/vtk.js/Rendering/OpenGL/Actor\", \"@kitware/vtk.js/Rendering/OpenGL/Actor2D\", \"@kitware/vtk.js/Rendering/OpenGL/Camera\", \"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\", \"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\", \"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\", \"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\", \"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\", \"@kitware/vtk.js/Rendering/OpenGL/Renderer\", \"@kitware/vtk.js/Rendering/OpenGL/Skybox\", \"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\", \"@kitware/vtk.js/Rendering/OpenGL/StickMapper\", \"@kitware/vtk.js/Rendering/OpenGL/Volume\", \"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\", \"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\", \"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\", \"@kitware/vtk.js/Common/Core/DataArray/Constants\", \"@kitware/vtk.js/Rendering/Core/Property/Constants\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone3D\"] = factory(require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/macros\"), require(\"@kitware/vtk.js/Rendering/Core/Camera\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Rendering/Core/Volume\"), require(\"@kitware/vtk.js/Rendering/Profiles/Volume\"), require(\"@kitware/vtk.js/Common/DataModel/ImageData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"), require(\"@kitware/vtk.js/Rendering/Core/Renderer\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Camera\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"), require(\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Volume\"), require(\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"), require(\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"), require(\"@kitware/vtk.js/Common/Core/DataArray/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/Property/Constants\"));\n\telse\n\t\troot[\"cornerstone3D\"] = factory(root[\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"], root[\"window\"], root[\"@kitware/vtk.js/macros\"], root[\"@kitware/vtk.js/Rendering/Core/Camera\"], root[\"@kitware/vtk.js/Common/Core/Math\"], root[\"@kitware/vtk.js/Rendering/Core/Volume\"], root[\"@kitware/vtk.js/Rendering/Profiles/Volume\"], root[\"@kitware/vtk.js/Common/DataModel/ImageData\"], root[\"@kitware/vtk.js/Common/Core/DataArray\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Texture\"], root[\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"], root[\"@kitware/vtk.js/Common/Core/MatrixBuilder\"], root[\"@kitware/vtk.js/Rendering/Core/Renderer\"], root[\"@kitware/vtk.js/Rendering/Core/RenderWindow\"], root[\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"], root[\"@kitware/vtk.js/Common/Core/Points\"], root[\"@kitware/vtk.js/Common/DataModel/PolyData\"], root[\"@kitware/vtk.js/Rendering/Core/Actor\"], root[\"@kitware/vtk.js/Rendering/Core/Mapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Actor\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Camera\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"], root[\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"], root[\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Volume\"], root[\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"], root[\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"], root[\"@kitware/vtk.js/Common/Core/DataArray/Constants\"], root[\"@kitware/vtk.js/Rendering/Core/Property/Constants\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__468__, __WEBPACK_EXTERNAL_MODULE__976__, __WEBPACK_EXTERNAL_MODULE__197__, __WEBPACK_EXTERNAL_MODULE__821__, __WEBPACK_EXTERNAL_MODULE__807__, __WEBPACK_EXTERNAL_MODULE__739__, __WEBPACK_EXTERNAL_MODULE__215__, __WEBPACK_EXTERNAL_MODULE__283__, __WEBPACK_EXTERNAL_MODULE__785__, __WEBPACK_EXTERNAL_MODULE__953__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__847__, __WEBPACK_EXTERNAL_MODULE__281__, __WEBPACK_EXTERNAL_MODULE__329__, __WEBPACK_EXTERNAL_MODULE__673__, __WEBPACK_EXTERNAL_MODULE__348__, __WEBPACK_EXTERNAL_MODULE__70__, __WEBPACK_EXTERNAL_MODULE__474__, __WEBPACK_EXTERNAL_MODULE__610__, __WEBPACK_EXTERNAL_MODULE__21__, __WEBPACK_EXTERNAL_MODULE__643__, __WEBPACK_EXTERNAL_MODULE__128__, __WEBPACK_EXTERNAL_MODULE__664__, __WEBPACK_EXTERNAL_MODULE__973__, __WEBPACK_EXTERNAL_MODULE__394__, __WEBPACK_EXTERNAL_MODULE__582__, __WEBPACK_EXTERNAL_MODULE__482__, __WEBPACK_EXTERNAL_MODULE__343__, __WEBPACK_EXTERNAL_MODULE__363__, __WEBPACK_EXTERNAL_MODULE__982__, __WEBPACK_EXTERNAL_MODULE__130__, __WEBPACK_EXTERNAL_MODULE__298__, __WEBPACK_EXTERNAL_MODULE__398__, __WEBPACK_EXTERNAL_MODULE__388__, __WEBPACK_EXTERNAL_MODULE__120__, __WEBPACK_EXTERNAL_MODULE__395__, __WEBPACK_EXTERNAL_MODULE__948__, __WEBPACK_EXTERNAL_MODULE__478__) {\nreturn ", "module.exports = require(\"regenerator-runtime\");\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "module.exports = __WEBPACK_EXTERNAL_MODULE__785__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__948__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__807__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__847__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__348__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__283__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__70__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__474__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__821__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__610__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__478__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__329__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__673__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__281__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__739__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__9__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__468__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__643__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__128__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__664__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__973__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__394__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__582__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__482__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__343__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__21__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__363__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__982__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__130__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__298__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__953__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__395__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__398__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__388__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__215__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__120__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__197__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__976__;", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();", "__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }", "// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};", "/**\n * Cornerstone Core events\n */\nenum Events {\n  /**\n   * ERROR CODES\n   */\n\n  /**\n   * Error that is thrown when the ImageCache exceeds its max cache size.\n   * This can happen for both volumes and stack images.\n   */\n  CACHE_SIZE_EXCEEDED = 'CACHE_SIZE_EXCEEDED',\n  /**\n   * Happens if an image (either a single image in stack viewport) or a slice\n   * of a volume fails to load by the image/volume loaders.\n   */\n  IMAGE_LOAD_ERROR = 'IMAGE_LOAD_ERROR',\n\n  /**\n   * Triggers on the HTML element when the viewport camera changes.\n   *\n   * Make use of {@link EventTypes.CameraModifiedEvent | CameraModified Event Type } for typing your event listeners for CAMERA_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.CameraModifiedEventDetail | CameraModified Event Detail }\n   */\n  CAMERA_MODIFIED = 'CORNERSTONE_CAMERA_MODIFIED',\n  /**\n   * Triggers on the HTML element when viewport modifies its VOI\n   *\n   * Make use of {@link EventTypes.VoiModifiedEvent | VoiModified Event Type } for typing your event listeners for VOI_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.VoiModifiedEventDetail | VoiModified Event Detail }\n   */\n  VOI_MODIFIED = 'CORNERSTONE_VOI_MODIFIED',\n  /**\n   * Triggers on the eventTarget when the element is disabled\n   *\n   * Make use of {@link EventTypes.ElementDisabledEvent | ElementDisabled Event Type } for typing your event listeners for ELEMENT_DISABLED event,\n   * and see what event detail is included in {@link EventTypes.ElementDisabledEventDetail | ElementDisabled Event Detail }\n   */\n  ELEMENT_DISABLED = 'CORNERSTONE_ELEMENT_DISABLED',\n  /**\n   * Triggers on the eventTarget when the element is enabled\n   *\n   * Make use of {@link EventTypes.ElementEnabledEvent | ElementEnabled Event Type } for typing your event listeners for ELEMENT_ENABLED event,\n   * and see what event detail is included in {@link EventTypes.ElementEnabledEventDetail | ElementEnabled Event Detail }\n   */\n  ELEMENT_ENABLED = 'CORNERSTONE_ELEMENT_ENABLED',\n  /**\n   * Triggers on the element when the image in the element has been rendered\n   *\n   * Make use of {@link EventTypes.ImageRenderedEvent | ImageRendered Event Type } for typing your event listeners for IMAGE_RENDERED event,\n   * and see what event detail is included in {@link EventTypes.ImageRenderedEventDetail | ImageRendered Event Detail }\n   */\n  IMAGE_RENDERED = 'CORNERSTONE_IMAGE_RENDERED',\n  /**\n   * Triggers on the eventTarget when the image volume data is modified. This happens\n   * in the streamingImageLoader when each frame is loaded and inserted into a volume.\n   *\n   *\n   * Make use of {@link EventTypes.ImageVolumeModifiedEvent | ImageVolumeModified Event Type } for typing your event listeners for IMAGE_VOLUME_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.ImageVolumeModifiedEventDetail | ImageVolumeModified Event Detail }\n   */\n  IMAGE_VOLUME_MODIFIED = 'CORNERSTONE_IMAGE_VOLUME_MODIFIED',\n  /**\n   * Triggers on the eventTarget when the image has successfully loaded by imageLoaders\n   *\n   * Make use of {@link EventTypes.ImageLoadedEvent | ImageLoaded Event Type } for typing your event listeners for IMAGE_LOADED event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadedEventDetail | ImageLoaded Event Detail }\n   */\n  IMAGE_LOADED = 'CORNERSTONE_IMAGE_LOADED',\n  /**\n   * Triggers on the eventTarget when the image has failed loading by imageLoaders\n   *\n   * Make use of {@link EventTypes.ImageLoadedFailedEvent | ImageLoadedFailed Event Type } for typing your event listeners for IMAGE_LOADED_FAILED event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadedFailedEventDetail | ImageLoadedFailed Event Detail }\n   */\n  IMAGE_LOAD_FAILED = 'CORNERSTONE_IMAGE_LOAD_FAILED',\n  /**\n   * Triggers on the eventTarget when the volume has successfully loaded by volumeLoaders\n   *\n   * Make use of {@link EventTypes.VolumeLoadedEvent | VolumeLoaded Event Type } for typing your event listeners for VOLUME_LOADED event,\n   * and see what event detail is included in {@link EventTypes.VolumeLoadedEventDetail | VolumeLoaded Event Detail }\n   */\n  VOLUME_LOADED = 'CORNERSTONE_VOLUME_LOADED',\n  /**\n   * Triggers on the eventTarget when the image has failed loading by volumeLoaders\n   *\n   * Make use of {@link EventTypes.VolumeLoadedFailedEvent | VolumeLoadedFailed Event Type } for typing your event listeners for VOLUME_LOADED_FAILED event,\n   * and see what event detail is included in {@link EventTypes.VolumeLoadedFailedEventDetail | VolumeLoadedFailed Event Detail }\n   */\n  VOLUME_LOADED_FAILED = 'CORNERSTONE_VOLUME_LOADED_FAILED',\n  /**\n   * Triggers on the eventTarget when an image is added to the image cache\n   *\n   * Make use of {@link EventTypes.ImageCacheImageAddedEvent | ImageCacheAdded Event Type } for typing your event listeners for IMAGE_CACHE_ADDED event,\n   * and see what event detail is included in {@link EventTypes.ImageCacheImageAddedEventDetail | ImageCacheAdded Event Detail }\n   */\n  IMAGE_CACHE_IMAGE_ADDED = 'CORNERSTONE_IMAGE_CACHE_IMAGE_ADDED',\n  /**\n   * Triggers on the eventTarget when an image is removed from the image cache\n   *\n   * Make use of {@link EventTypes.ImageCacheImageRemovedEvent | ImageCacheRemoved Event Type } for typing your event listeners for IMAGE_CACHE_REMOVED event,\n   * and see what event detail is included in {@link EventTypes.ImageCacheImageRemovedEventDetail | ImageCacheRemoved Event Detail }\n   */\n  IMAGE_CACHE_IMAGE_REMOVED = 'CORNERSTONE_IMAGE_CACHE_IMAGE_REMOVED',\n  /**\n   * Triggers on the eventTarget when a volume is added to the volume cache\n   *\n   * Make use of {@link EventTypes.VolumeCacheVolumeAddedEvent | VolumeCacheAdded Event Type } for typing your event listeners for VOLUME_CACHE_ADDED event,\n   * and see what event detail is included in {@link EventTypes.VolumeCacheVolumeAddedEventDetail | VolumeCacheAdded Event Detail }\n   */\n  VOLUME_CACHE_VOLUME_ADDED = 'CORNERSTONE_VOLUME_CACHE_VOLUME_ADDED',\n  /**\n   * Triggers on the eventTarget when a volume is removed from the volume cache\n   *\n   * Make use of {@link EventTypes.VolumeCacheVolumeRemovedEvent | VolumeCacheRemoved Event Type } for typing your event listeners for VOLUME_CACHE_REMOVED event,\n   * and see what event detail is included in {@link EventTypes.VolumeCacheVolumeRemovedEventDetail | VolumeCacheRemoved Event Detail }\n   */\n  VOLUME_CACHE_VOLUME_REMOVED = 'CORNERSTONE_VOLUME_CACHE_VOLUME_REMOVED',\n  /**\n   * Triggers on the element when a new image is set on the stackViewport\n   *\n   * Make use of {@link EventTypes.StackNewImageEvent | StackNewImage Event Type } for typing your event listeners for STACK_NEW_IMAGE event,\n   * and see what event detail is included in {@link EventTypes.StackNewImageEventDetail | StackNewImage Event Detail }\n   */\n  STACK_NEW_IMAGE = 'CORNERSTONE_STACK_NEW_IMAGE',\n  /**\n   * Triggers on the element when the viewport's image has calibrated its pixel spacings\n   *\n   * Make use of {@link EventTypes.ImageSpacingCalibratedEvent | ImageSpacingCalibrated Event Type } for typing your event listeners for IMAGE_SPACING_CALIBRATED event,\n   * and see what event detail is included in {@link EventTypes.ImageSpacingCalibratedEventDetail | ImageSpacingCalibrated Event Detail }\n   */\n  IMAGE_SPACING_CALIBRATED = 'CORNERSTONE_IMAGE_SPACING_CALIBRATED',\n  /**\n   * Triggers on the eventTarget when there is a progress in the image load process. Note: this event\n   * is being used in the Cornerstone-WADO-Image-Loader repository. See {@link https://github.com/cornerstonejs/cornerstoneWADOImageLoader/blob/master/src/imageLoader/internal/xhrRequest.js | here}\n   *\n   * Make use of {@link EventTypes.ImageLoadProgress | ImageLoadProgress Event Type } for typing your event listeners for IMAGE_LOAD_PROGRESS event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadProgressEventDetail | ImageLoadProgress Event Detail }\n   */\n  IMAGE_LOAD_PROGRESS = 'CORNERSTONE_IMAGE_LOAD_PROGRESS',\n  // IMAGE_CACHE_FULL = 'CORNERSTONE_IMAGE_CACHE_FULL',\n  // PRE_RENDER = 'CORNERSTONE_PRE_RENDER',\n  // ELEMENT_RESIZED = 'CORNERSTONE_ELEMENT_RESIZED',\n}\n\nexport default Events;\n", "/**\n * Request types for requesting images from the imageLoadPoolManager\n */\nenum RequestType {\n  /** Highest priority for loading*/\n  Interaction = 'interaction',\n  /** Second highest priority for loading*/\n  Thumbnail = 'thumbnail',\n  /** Lowest priority for loading*/\n  Prefetch = 'prefetch',\n}\n\nexport default RequestType;\n", "/**\n * ViewportType enum for cornerstone-render which defines the type of viewport.\n * It can be either STACK, PERSPECTIVE, ORTHOGRAPHIC.\n */\nenum ViewportType {\n  /**\n   * - Suitable for rendering a stack of images, that might or might not belong to the same image.\n   * - Stack can include 2D images of different shapes, size and direction\n   */\n  STACK = 'stack',\n  /**\n   * - Suitable for rendering a volumetric data which is considered as one 3D image.\n   * - Having a VolumeViewport enables Multi-planar reformation or reconstruction (MPR) by design, in which you can visualize the volume from various different orientations without addition of performance costs.\n   */\n  ORTHOGRAPHIC = 'orthographic',\n  /** Perspective Viewport: Not Implemented yet */\n  PERSPECTIVE = 'perspective',\n}\n\nexport default ViewportType;\n", "/**\n * Interpolation types for image rendering\n */\nenum InterpolationType {\n  /** nearest neighbor interpolation */\n  NEAREST,\n  /** linear interpolation - Default */\n  LINEAR,\n  /** */\n  FAST_LINEAR,\n}\n\nexport default InterpolationType;\n", "import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = vtkConstants;\n\n/**\n * Enums for blendModes for viewport images based on vtk.js\n *\n * It should be noted that if crosshairs are enabled and can modify the slab thickness,\n * then it will not show any difference unless MAXIMUM_INTENSITY_BLEND is set on the viewport\n * as the blend.\n */\nenum BlendModes {\n  /** composite blending - suitable for compositing multiple images */\n  COMPOSITE = BlendMode.COMPOSITE,\n  /** maximum intensity projection */\n  MAXIMUM_INTENSITY_BLEND = BlendMode.MAXIMUM_INTENSITY_BLEND,\n  /** minimum intensity projection */\n  MINIMUM_INTENSITY_BLEND = BlendMode.MINIMUM_INTENSITY_BLEND,\n  /** average intensity projection */\n  AVERAGE_INTENSITY_BLEND = BlendMode.AVERAGE_INTENSITY_BLEND,\n}\n\nexport default BlendModes;\n", "import { Orientation, Point3 } from '../types';\n\n/**\n * Convenient reference values often used to set a specific orientation\n * when using RenderingEngine's setViewports method.\n *\n * @remarks\n * Each constant is an object with two properties.\n * - `viewUp` - An array of three floating point numbers describing a vector\n *  that represents the up direction for the view.\n * - `sliceNormal` - The direction of the projection\n *\n * These values may make slightly more sense when we peel back the curtains of\n * our solution and look at the camera that's leveraging these values.\n *\n * see [Axial vs Sagittal vs Coronal](https://faculty.washington.edu/chudler/slice.html)\n * see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_Camera.html | VTK.js: Rendering_Core_Camera}\n *\n * @example\n * Using ORIENTATION constant to set a viewport to use an Axial orientation\n *\n * ```javascript\n * renderingEngine.setViewports([\n *  {\n *    viewportId: 'a-viewport-uid',\n *    type: ViewportType.ORTHOGRAPHIC,\n *    element: document.querySelector('div'),\n *    defaultOptions: {\n *      // \uD83D\uDC47 Leveraging our reference constant\n *      orientation: ORIENTATION.AXIAL,\n *      background: [1, 0, 0],\n *    },\n *  }]);\n * ```\n */\nconst ORIENTATION: Record<string, Orientation> = {\n  AXIAL: {\n    sliceNormal: <Point3>[0, 0, -1],\n    viewUp: <Point3>[0, -1, 0],\n  },\n  SAGITTAL: {\n    sliceNormal: <Point3>[1, 0, 0],\n    viewUp: <Point3>[0, 0, 1],\n  },\n  CORONAL: {\n    sliceNormal: <Point3>[0, 1, 0],\n    viewUp: <Point3>[0, 0, 1],\n  },\n};\n\nObject.freeze(ORIENTATION);\n\nexport default ORIENTATION;\n", "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}", "function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "import macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLTexture from '@kitware/vtk.js/Rendering/OpenGL/Texture';\n\n/**\n * vtkStreamingOpenGLTexture - A dervied class of the core vtkOpenGLTexture.\n * This class has methods to update the texture memory on the GPU slice by slice\n * in an efficient yet GPU-architecture friendly manner.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLTexture(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLTexture');\n\n  const superCreate3DFilterableFromRaw = publicAPI.create3DFilterableFromRaw;\n\n  publicAPI.create3DFilterableFromRaw = (\n    width,\n    height,\n    depth,\n    numComps,\n    dataType,\n    data\n  ) => {\n    model.inputDataType = dataType;\n    model.inputNumComps = numComps;\n\n    superCreate3DFilterableFromRaw(\n      width,\n      height,\n      depth,\n      numComps,\n      dataType,\n      data\n    );\n  };\n\n  /**\n   * This function updates the GPU texture memory to match the current\n   * representation of data held in RAM.\n   *\n   * @param {Float32Array|Uint8Array} data The data array which has been updated.\n   */\n  publicAPI.update3DFromRaw = (data) => {\n    const { updatedFrames } = model;\n\n    if (!updatedFrames.length) {\n      return;\n    }\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    let bytesPerVoxel;\n    let TypedArrayConstructor;\n\n    if (data instanceof Uint8Array) {\n      bytesPerVoxel = 1;\n      TypedArrayConstructor = Uint8Array;\n    } else if (data instanceof Int16Array) {\n      bytesPerVoxel = 2;\n      TypedArrayConstructor = Int16Array;\n    } else if (data instanceof Float32Array) {\n      bytesPerVoxel = 4;\n      TypedArrayConstructor = Float32Array;\n    } else {\n      throw new Error(`No support for given TypedArray.`);\n    }\n\n    for (let i = 0; i < updatedFrames.length; i++) {\n      if (updatedFrames[i]) {\n        model.fillSubImage3D(data, i, bytesPerVoxel, TypedArrayConstructor);\n      }\n    }\n\n    // Reset updatedFrames\n    model.updatedFrames = [];\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  /**\n   * This function updates the GPU texture memory to match the current\n   * representation of data held in RAM.\n   *\n   * @param {Float32Array|Uint8Array} data The data array which has been updated.\n   * @param {number} frameIndex The frame to load in.\n   * @param {number} BytesPerVoxel The number of bytes per voxel in the data, so we don't have to constantly\n   * check the array type.\n   * @param {object} TypedArrayConstructor The constructor for the array type. Again so we don't have to constantly check.\n   */\n  model.fillSubImage3D = (\n    data,\n    frameIndex,\n    bytesPerVoxel,\n    TypedArrayConstructor\n  ) => {\n    const buffer = data.buffer;\n\n    const frameLength = model.width * model.height;\n    const frameLengthInBytes = frameLength * model.components * bytesPerVoxel;\n\n    const zOffset = frameIndex * frameLengthInBytes;\n    const rowLength = model.width * model.components;\n\n    const gl = model.context;\n\n    /**\n     * It appears that the implementation of texSubImage3D uses 2D textures to do the texture copy if\n     * MAX_TEXTURE_SIZE is greater than MAX_TEXTURE_SIZE_3D. As such if you make a single block too big\n     * the transfer messes up cleanly and you render a black box or some data if you are lucky.\n     *\n     * This block-size based on 2D texture size seems like the safest approach that should work on most systems.\n     *\n     * There are certainly further optimizations that could be done here, we can do bigger chunks with other systems\n     * But we need to find the _exact_ criteria. And then its not even guaranteed it'll be much faster.\n     */\n    const MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    let blockHeight = Math.floor(\n      (bytesPerVoxel * MAX_TEXTURE_SIZE) / model.width\n    );\n\n    // Cap to actual frame height:\n    blockHeight = Math.min(blockHeight, model.height);\n\n    const multiRowBlockLength = rowLength * blockHeight;\n    const multiRowBlockLengthInBytes = multiRowBlockLength * bytesPerVoxel;\n\n    const normalBlocks = Math.floor(model.height / blockHeight);\n\n    const lastBlockHeight = model.height % blockHeight;\n    const multiRowLastBlockLength = rowLength * lastBlockHeight;\n\n    // Perform most blocks.\n    for (let block = 0; block < normalBlocks; block++) {\n      const yOffset = block * blockHeight;\n\n      // Dataview of block\n      const dataView = new TypedArrayConstructor(\n        buffer,\n        zOffset + block * multiRowBlockLengthInBytes,\n        multiRowBlockLength\n      );\n\n      gl.texSubImage3D(\n        model.target, // target\n        0, // mipMap level (always zero)\n        0, // xOffset\n        yOffset, // yOffset\n        frameIndex,\n        model.width,\n        blockHeight, //model.height,\n        1, // numFramesInBlock,\n        model.format,\n        model.openGLDataType,\n        dataView\n      );\n    }\n\n    // perform last block if present\n\n    if (lastBlockHeight !== 0) {\n      const yOffset = normalBlocks * blockHeight;\n\n      // Dataview of last block\n      const dataView = new TypedArrayConstructor(\n        buffer,\n        zOffset + normalBlocks * multiRowBlockLengthInBytes,\n        multiRowLastBlockLength\n      );\n\n      gl.texSubImage3D(\n        model.target, // target\n        0, // mipMap level (always zero)\n        0, // xOffset\n        yOffset, // yOffset\n        frameIndex,\n        model.width,\n        lastBlockHeight, //model.height,\n        1, // numFramesInBlock,\n        model.format,\n        model.openGLDataType,\n        dataView\n      );\n    }\n  };\n\n  publicAPI.getTextureParameters = () => {\n    return {\n      width: model.width,\n      height: model.height,\n      depth: model.depth,\n      numComps: model.inputNumComps,\n      dataType: model.inputDataType,\n    };\n  };\n\n  /**\n   * Called when a frame is loaded so that on next render we know which data to load in.\n   * @param {number} frameIndex The frame to load in.\n   */\n  publicAPI.setUpdatedFrame = (frameIndex) => {\n    model.updatedFrames[frameIndex] = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  updatedFrames: [],\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkOpenGLTexture.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkStreamingOpenGLTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLTexture'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "import { vtkStreamingOpenGLTexture } from '../../RenderingEngine/vtkClasses';\nimport { IVolume, Metadata, Point3, IImageVolume } from '../../types';\n\n/** The base class for volume data. It includes the volume metadata\n * and the volume data along with the loading status.\n */\nexport class ImageVolume implements IImageVolume {\n  /** Read-only unique identifier for the volume */\n  readonly volumeId: string;\n  /** Dimensions of the volume */\n  dimensions: Point3;\n  /** volume direction in world space */\n  direction: Float32Array;\n  /** volume metadata */\n  metadata: Metadata;\n  /** volume origin, Note this is an opinionated origin for the volume */\n  origin: Point3;\n  /** volume scalar data  */\n  scalarData: Float32Array | Uint8Array;\n  /** volume scaling parameters if it contains scaled data */\n  scaling?: {\n    PET?: {\n      // @TODO: Do these values exist?\n      SUVlbmFactor?: number;\n      SUVbsaFactor?: number;\n      // accessed in ProbeTool\n      suvbwToSuvlbm?: number;\n      suvbwToSuvbsa?: number;\n    };\n  };\n  /** volume size in bytes */\n  sizeInBytes?: number; // Seems weird to pass this in? Why not grab it from scalarData.byteLength\n  /** volume spacing in 3d world space */\n  spacing: Point3;\n  /** volume number of voxels */\n  numVoxels: number;\n  /** volume image data */\n  imageData?: any;\n  /** open gl texture for the volume */\n  vtkOpenGLTexture: any; // No good way of referencing vtk classes as they aren't classes.\n  /** load status object for the volume */\n  loadStatus?: Record<string, any>;\n  /** optional image ids for the volume if it is made of separated images */\n  imageIds?: Array<string>;\n  /** optional reference volume id if the volume is derived from another volume */\n  referencedVolumeId?: string;\n\n  constructor(props: IVolume) {\n    this.volumeId = props.volumeId;\n    this.metadata = props.metadata;\n    this.dimensions = props.dimensions;\n    this.spacing = props.spacing;\n    this.origin = props.origin;\n    this.direction = props.direction;\n    this.imageData = props.imageData;\n    this.scalarData = props.scalarData;\n    this.sizeInBytes = props.sizeInBytes;\n    this.vtkOpenGLTexture = vtkStreamingOpenGLTexture.newInstance();\n    this.numVoxels =\n      this.dimensions[0] * this.dimensions[1] * this.dimensions[2];\n\n    if (props.scaling) {\n      this.scaling = props.scaling;\n    }\n\n    if (props.referencedVolumeId) {\n      this.referencedVolumeId = props.referencedVolumeId;\n    }\n  }\n}\n\nexport default ImageVolume;\n", "/**\n * EventTarget - Provides the [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget) interface\n */\nclass CornerstoneEventTarget implements EventTarget {\n  private listeners;\n\n  constructor() {\n    this.listeners = {};\n  }\n\n  public reset() {\n    this.listeners = {};\n  }\n\n  public addEventListener(type, callback) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(callback);\n  }\n\n  public removeEventListener(type, callback) {\n    if (!this.listeners[type]) {\n      return;\n    }\n\n    const stack = this.listeners[type];\n    const stackLength = stack.length;\n\n    for (let i = 0; i < stackLength; i++) {\n      if (stack[i] === callback) {\n        stack.splice(i, 1);\n\n        return;\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    if (!this.listeners[event.type]) {\n      //console.warn(`Skipping dispatch since there are no listeners for ${event.type}`);\n      return;\n    }\n\n    const stack = this.listeners[event.type].slice();\n    const stackLength = stack.length;\n\n    for (let i = 0; i < stackLength; i++) {\n      stack[i].call(this, event);\n    }\n\n    return !event.defaultPrevented;\n  }\n}\nconst eventTarget = new CornerstoneEventTarget();\n\nexport default eventTarget;\n", "import eventTarget from '../eventTarget';\n\n/**\n * Small utility to trigger a custom event for a given EventTarget.\n *\n * @example\n *\n * ```javascript\n * triggerEvent(element, Events.IMAGE_RENDERED, { element })\n * ```\n * or it can trigger event on the eventTarget itself\n *\n * ```javascript\n * triggerEvent(eventTarget, CSTOOLS_EVENTS.ANNOTATION_MODIFIED, { viewportId, annotationUID })\n * ```\n *\n * @param el - The element or EventTarget to trigger the event upon\n * @param type - The event type name\n * @param detail - The event detail to be sent\n * @returns false if event is cancelable and at least one of the event handlers\n * which received event called Event.preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(\n  el: EventTarget = eventTarget,\n  type: string,\n  detail: unknown = null\n): boolean {\n  if (!type) {\n    throw new Error('Event type was not defined');\n  }\n\n  const event = new CustomEvent(type, {\n    detail,\n    cancelable: true,\n  });\n\n  return el.dispatchEvent(event);\n}\n", "/**\n * Removes the data loader scheme from the imageId\n *\n * @param imageId - Image ID\n * @returns imageId without the data loader scheme\n */\nexport default function imageIdToURI(imageId: string): string {\n  const colonIndex = imageId.indexOf(':');\n  return imageId.substring(colonIndex + 1);\n}\n", "import {\n  ICache,\n  IImage,\n  IImageVolume,\n  IImageLoadObject,\n  IVolumeLoadObject,\n  ICachedImage,\n  ICachedVolume,\n  EventTypes,\n} from '../types';\nimport { triggerEvent, imageIdToURI } from '../utilities';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\n\nconst MAX_CACHE_SIZE_1GB = 1073741824;\n\n/**\n * This module deals with Caching of images and volumes\n * The cache has two main components: a volatile portion for images and a\n * non-volatile portion for volumes. Individual 2D images are volatile and\n * will be replaced by new images hitting the cache. When you allocate volumes,\n * these are non-volatile and reserve a block of memory from the cache.\n * Volumes must be released manually.\n * We will have a shared block of memory allocated for the entire cache, e.g. 1GB\n * which will be shared for images and volumes.\n *\n * **When a new image is added:**\n * We check if there is enough unallocated + volatile space for the single image\n *\n * if so\n * - We allocate the image in image cache, and if necessary oldest images\n * are decached to match the maximumCacheSize criteria\n * - If a volume contains that imageId, copy it over using TypedArray's set method.\n * If no volumes contain the imageId, the image is fetched by image loaders\n *\n * If not (cache is mostly/completely full with volumes)\n * - throw that the cache does not have enough working space to allocate the image\n *\n *\n * **When a new volume is added:**\n * Check if there is enough unallocated + volatile space to allocate the volume:\n *\n * If so:\n * - Decache oldest images which won't be included in this volume until\n * we have enough free space for the volume\n * - If not enough space from previous space, decache images that will be included\n * in the volume until we have enough free space (These will need to be re-fetched,\n * but we must do this not to straddle over the given memory limit, even for a\n * short time, as this may crash the app)\n * - At this point, if any of the frames (indexed by imageId) are present in the volatile\n * image cache, copy these over to the volume now\n *\n * If not (cache is mostly/completely full with volumes),\n * - throw that the cache does not have enough working space to allocate the volume.\n *\n */\nclass Cache implements ICache {\n  private readonly _imageCache: Map<string, ICachedImage>; // volatile space\n  private readonly _volumeCache: Map<string, ICachedVolume>; // non-volatile space\n  private _imageCacheSize: number;\n  private _volumeCacheSize: number;\n  private _maxCacheSize: number;\n\n  constructor() {\n    this._imageCache = new Map();\n    this._volumeCache = new Map();\n    this._imageCacheSize = 0;\n    this._volumeCacheSize = 0;\n    this._maxCacheSize = MAX_CACHE_SIZE_1GB; // Default 1GB\n  }\n\n  /**\n   * Set the maximum cache Size\n   *\n   * Maximum cache size should be set before adding the data; otherwise, it\n   * will throw an error.\n   *\n   * @param newMaxCacheSize -  new maximum cache size\n   *\n   */\n  public setMaxCacheSize = (newMaxCacheSize: number): void => {\n    if (!newMaxCacheSize || typeof newMaxCacheSize !== 'number') {\n      const errorMessage = `New max cacheSize ${this._maxCacheSize} should be defined and should be a number.`;\n      throw new Error(errorMessage);\n    }\n\n    this._maxCacheSize = newMaxCacheSize;\n  };\n\n  /**\n   * Checks if there is enough space in the cache for requested byte size\n   *\n   * It throws error, if the sum of volatile (image) cache and unallocated cache\n   * is less than the requested byteLength\n   *\n   * @param byteLength - byte length of requested byte size\n   *\n   * @returns - boolean indicating if there is enough space in the cache\n   */\n  public isCacheable = (byteLength: number): boolean => {\n    const unallocatedSpace = this.getBytesAvailable();\n    const imageCacheSize = this._imageCacheSize;\n    const availableSpace = unallocatedSpace + imageCacheSize;\n\n    return availableSpace > byteLength;\n  };\n\n  /**\n   * Returns maximum CacheSize allowed\n   *\n   * @returns maximum allowed cache size\n   */\n  public getMaxCacheSize = (): number => this._maxCacheSize;\n\n  /**\n   * Returns current size of the cache\n   *\n   * @returns current size of the cache\n   */\n  public getCacheSize = (): number =>\n    this._imageCacheSize + this._volumeCacheSize;\n\n  /**\n   * Returns the unallocated size of the cache\n   *\n   */\n  public getBytesAvailable(): number {\n    return this.getMaxCacheSize() - this.getCacheSize();\n  }\n\n  /**\n   * Deletes the imageId from the image cache\n   *\n   * @param imageId - imageId\n   *\n   */\n  private _decacheImage = (imageId: string) => {\n    const { imageLoadObject } = this._imageCache.get(imageId);\n\n    // Cancel any in-progress loading\n    if (imageLoadObject.cancel) {\n      imageLoadObject.cancel();\n    }\n\n    if (imageLoadObject.decache) {\n      imageLoadObject.decache();\n    }\n\n    this._imageCache.delete(imageId);\n  };\n\n  /**\n   * Deletes the volumeId from the volume cache\n   *\n   * @param volumeId - volumeId\n   *\n   */\n  private _decacheVolume = (volumeId: string) => {\n    const cachedVolume = this._volumeCache.get(volumeId);\n    const { volumeLoadObject } = cachedVolume;\n\n    // Cancel any in-progress loading\n    if (volumeLoadObject.cancel) {\n      volumeLoadObject.cancel();\n    }\n\n    if (volumeLoadObject.decache) {\n      volumeLoadObject.decache();\n    }\n\n    // Clear texture memory (it will probably only be released at garbage collection of the DOM element, but might as well try)\n    // TODO We need to actually check if this particular scalar is used.\n    // TODO: Put this in the volume loader's decache function?\n    /*if (volume && volume.vtkOpenGLTexture) {\n      volume.vtkOpenGLTexture.releaseGraphicsResources()\n    }*/\n\n    this._volumeCache.delete(volumeId);\n  };\n\n  /**\n   * Deletes all the images and volumes in the cache\n   *\n   * Relevant events are fired for each decached image (IMAGE_CACHE_IMAGE_REMOVED) and\n   * the decached volume (VOLUME_CACHE_VOLUME_REMOVED).\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param numBytes - number of bytes\n   *\n   * @returns available number of bytes\n   */\n  public purgeCache = (): void => {\n    const imageIterator = this._imageCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: imageId, done } = imageIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n    }\n\n    const volumeIterator = this._volumeCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: volumeId, done } = volumeIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeVolumeLoadObject(volumeId);\n\n      triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, {\n        volumeId,\n      });\n    }\n  };\n\n  /**\n   * Purges the cache if necessary based on the requested number of bytes\n   *\n   * 1) it sorts the volatile (image) cache based on the most recent used images\n   * and starts purging from the oldest ones.\n   * Note: for a volume, if the volume-related image Ids is provided, it starts\n   * by purging the none-related image Ids (those that are not related to the\n   * current volume)\n   * 2) For a volume, if we purge all images that won't be included in this volume and still\n   * don't have enough unallocated space, purge images that will be included\n   * in this volume until we have enough space. These will need to be\n   * re-fetched, but we must do this not to straddle over the given memory\n   * limit, even for a short time, as this may crash the application.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param numBytes - Number of bytes for the image/volume that is\n   * going to be stored inside the cache\n   * @param volumeImageIds - list of imageIds that correspond to the\n   * volume whose numberOfBytes we want to store in the cache.\n   * @returns bytesAvailable or undefined in purging cache\n   * does not successfully make enough space for the requested number of bytes\n   */\n  public decacheIfNecessaryUntilBytesAvailable(\n    numBytes: number,\n    volumeImageIds?: Array<string>\n  ): number | undefined {\n    let bytesAvailable = this.getBytesAvailable();\n\n    // If max cache size has not been exceeded, do nothing\n    if (bytesAvailable >= numBytes) {\n      return bytesAvailable;\n    }\n\n    let cachedImages = Array.from(this._imageCache.values());\n\n    // Cache size has been exceeded, create list of images sorted by timeStamp\n    // So we can purge the least recently used image\n    function compare(a, b) {\n      if (a.timeStamp > b.timeStamp) {\n        return 1;\n      }\n      if (a.timeStamp < b.timeStamp) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    cachedImages.sort(compare);\n    let cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    let imageIdsToPurge = cachedImageIds;\n\n    // if we are making space for a volume, we start by purging the imageIds\n    // that are not related to the volume\n    if (volumeImageIds) {\n      imageIdsToPurge = cachedImageIds.filter(\n        (id) => !volumeImageIds.includes(id)\n      );\n    }\n\n    // Remove images (that are not related to the volume) from volatile cache\n    // until the requested number of bytes become available\n    for (const imageId of imageIdsToPurge) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Remove the imageIds (both volume related and not related)\n    cachedImages = Array.from(this._imageCache.values());\n    cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    // Remove volume-image Ids from volatile cache until the requested number of bytes\n    // become available\n    for (const imageId of cachedImageIds) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Technically we should not reach here, since isCacheable will throw an\n    // error if unallocated + volatile (image) cache cannot fit the upcoming\n    // number of bytes\n  }\n\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedImage object and put it inside the imageCache for\n   * the imageId. After the imageLoadObject promise resolves to an image,\n   * it: 1) adds the image into the correct CachedImage object 2) increments the\n   * cache size, 3) triggers IMAGE_CACHE_IMAGE_ADDED  4) Purge the cache if\n   * necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache and decache them one by one until the cache\n   * size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_ADDED\n   * @fires Events.CACHE_SIZE_EXCEEDED if the cache size exceeds the maximum\n   *\n   * @param imageId - ImageId for the image\n   * @param imageLoadObject - The object that is loading or loaded the image\n   */\n  public putImageLoadObject(\n    imageId: string,\n    imageLoadObject: IImageLoadObject\n  ): Promise<any> {\n    if (imageId === undefined) {\n      throw new Error('putImageLoadObject: imageId must not be undefined');\n    }\n\n    if (imageLoadObject.promise === undefined) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.promise must not be undefined'\n      );\n    }\n\n    if (this._imageCache.has(imageId)) {\n      throw new Error('putImageLoadObject: imageId already in cache');\n    }\n\n    if (\n      imageLoadObject.cancel &&\n      typeof imageLoadObject.cancel !== 'function'\n    ) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.cancel must be a function'\n      );\n    }\n\n    const cachedImage: ICachedImage = {\n      loaded: false,\n      imageId,\n      sharedCacheKey: undefined, // The sharedCacheKey for this imageId.  undefined by default\n      imageLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._imageCache.set(imageId, cachedImage);\n\n    return imageLoadObject.promise\n      .then((image: IImage) => {\n        if (!this._imageCache.get(imageId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (image.sizeInBytes === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes must not be undefined'\n          );\n        }\n        if (image.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes is not a number'\n          );\n        }\n\n        // check if there is enough space in unallocated + image Cache\n        if (!this.isCacheable(image.sizeInBytes)) {\n          throw new Error(Events.CACHE_SIZE_EXCEEDED);\n        }\n\n        // if there is, decache if necessary\n        this.decacheIfNecessaryUntilBytesAvailable(image.sizeInBytes);\n\n        cachedImage.loaded = true;\n        cachedImage.image = image;\n        cachedImage.sizeInBytes = image.sizeInBytes;\n        this._incrementImageCacheSize(cachedImage.sizeInBytes);\n\n        const eventDetails: EventTypes.ImageCacheImageAddedEventDetail = {\n          image: cachedImage,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_ADDED, eventDetails);\n\n        cachedImage.sharedCacheKey = image.sharedCacheKey;\n      })\n      .catch((error) => {\n        // console.warn(error)\n        this._imageCache.delete(imageId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given imageId\n   *\n   * @param imageId - Image ID\n   * @returns IImageLoadObject\n   */\n  public getImageLoadObject(imageId: string): IImageLoadObject {\n    if (imageId === undefined) {\n      throw new Error('getImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached image\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.imageLoadObject;\n  }\n\n  /**\n   * Returns the volume that contains the requested imageId. It will check the\n   * imageIds inside the volume to find a match.\n   *\n   * @param imageId - ImageId\n   * @returns - Volume object\n   */\n  public getVolumeContainingImageId(imageId: string): {\n    volume: IImageVolume;\n    imageIdIndex: number;\n  } {\n    const volumeIds = Array.from(this._volumeCache.keys());\n    const imageIdToUse = imageIdToURI(imageId);\n\n    for (const volumeId of volumeIds) {\n      const cachedVolume = this._volumeCache.get(volumeId);\n\n      if (!cachedVolume.volume) {\n        return;\n      }\n\n      let { imageIds } = cachedVolume.volume;\n\n      if (!imageIds || imageIds.length === 0) {\n        continue;\n      }\n\n      imageIds = imageIds.map((id) => imageIdToURI(id));\n\n      const imageIdIndex = imageIds.indexOf(imageIdToUse);\n      if (imageIdIndex > -1) {\n        return { volume: cachedVolume.volume, imageIdIndex };\n      }\n    }\n  }\n\n  /**\n   * Returns the cached image from the imageCache for the requested imageId.\n   * It first strips the imageId to remove the data loading scheme.\n   *\n   * @param imageId - Image ID\n   * @returns cached image\n   */\n  public getCachedImageBasedOnImageURI(imageId: string): any {\n    const imageIdToUse = imageIdToURI(imageId);\n    const imageIdsInCache = Array.from(this._imageCache.keys());\n\n    const foundImageId = imageIdsInCache.find(\n      (id) => id.indexOf(imageIdToUse) !== -1\n    );\n\n    return this._imageCache.get(foundImageId);\n  }\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedVolume object and put it inside the volumeCache for\n   * the volumeId. After the volumeLoadObject promise resolves to a volume,\n   * it: 1) adds the volume into the correct CachedVolume object inside volumeCache\n   * 2) increments the cache size, 3) triggers VOLUME_CACHE_VOLUME_ADDED  4) Purge\n   * the cache if necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache (not volumeCache) and decache them one by one\n   * until the cache size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_ADDED\n   *\n   * @param volumeId - volumeId of the volume\n   * @param volumeLoadObject - The object that is loading or loaded the volume\n   */\n  public putVolumeLoadObject(\n    volumeId: string,\n    volumeLoadObject: IVolumeLoadObject\n  ): Promise<any> {\n    if (volumeId === undefined) {\n      throw new Error('putVolumeLoadObject: volumeId must not be undefined');\n    }\n    if (volumeLoadObject.promise === undefined) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.promise must not be undefined'\n      );\n    }\n    if (this._volumeCache.has(volumeId)) {\n      throw new Error(\n        `putVolumeLoadObject: volumeId:${volumeId} already in cache`\n      );\n    }\n    if (\n      volumeLoadObject.cancel &&\n      typeof volumeLoadObject.cancel !== 'function'\n    ) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.cancel must be a function'\n      );\n    }\n\n    // todo: @Erik there are two loaded flags, one inside cachedVolume and the other\n    // inside the volume.loadStatus.loaded, the actual all pixelData loaded is the\n    // loadStatus one. This causes confusion\n    const cachedVolume: ICachedVolume = {\n      loaded: false,\n      volumeId,\n      volumeLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._volumeCache.set(volumeId, cachedVolume);\n\n    return volumeLoadObject.promise\n      .then((volume: IImageVolume) => {\n        if (!this._volumeCache.get(volumeId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (volume.sizeInBytes === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes must not be undefined'\n          );\n        }\n        if (volume.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes is not a number'\n          );\n        }\n\n        // this.isCacheable is called at the volume loader, before requesting\n        // the images of the volume\n\n        this.decacheIfNecessaryUntilBytesAvailable(\n          volume.sizeInBytes,\n          // @ts-ignore: // todo ImageVolume does not have imageIds\n          volume.imageIds\n        );\n\n        // cachedVolume.loaded = true\n        cachedVolume.volume = volume;\n        cachedVolume.sizeInBytes = volume.sizeInBytes;\n        this._incrementVolumeCacheSize(cachedVolume.sizeInBytes);\n\n        const eventDetails: EventTypes.VolumeCacheVolumeAddedEventDetail = {\n          volume: cachedVolume,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.VOLUME_CACHE_VOLUME_ADDED,\n          eventDetails\n        );\n      })\n      .catch((error) => {\n        this._volumeCache.delete(volumeId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns IVolumeLoadObject\n   */\n  public getVolumeLoadObject = (volumeId: string): IVolumeLoadObject => {\n    if (volumeId === undefined) {\n      throw new Error('getVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volumeLoadObject;\n  };\n\n  /**\n   * Returns the volume associated with the volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns Volume\n   */\n  public getVolume = (volumeId: string): IImageVolume => {\n    if (volumeId === undefined) {\n      throw new Error('getVolume: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volume;\n  };\n\n  /**\n   * Removes the image loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param imageId - Image ID\n   */\n  public removeImageLoadObject = (imageId: string): void => {\n    if (imageId === undefined) {\n      throw new Error('removeImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      throw new Error(\n        'removeImageLoadObject: imageId was not present in imageCache'\n      );\n    }\n\n    this._incrementImageCacheSize(-cachedImage.sizeInBytes);\n\n    const eventDetails = {\n      imageId,\n    };\n\n    triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, eventDetails);\n    this._decacheImage(imageId);\n  };\n\n  /**\n   * Removes the volume loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param imageId - ImageId\n   */\n  public removeVolumeLoadObject = (volumeId: string): void => {\n    if (volumeId === undefined) {\n      throw new Error('removeVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      throw new Error(\n        'removeVolumeLoadObject: volumeId was not present in volumeCache'\n      );\n    }\n\n    this._incrementVolumeCacheSize(-cachedVolume.sizeInBytes);\n\n    const eventDetails = {\n      volume: cachedVolume,\n      volumeId,\n    };\n\n    triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, eventDetails);\n    this._decacheVolume(volumeId);\n  };\n\n  /**\n   * Increases the image cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  private _incrementImageCacheSize = (increment: number) => {\n    this._imageCacheSize += increment;\n  };\n\n  /**\n   * Increases the cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  private _incrementVolumeCacheSize = (increment: number) => {\n    this._volumeCacheSize += increment;\n  };\n}\n\nconst cache = new Cache();\nexport default cache;\nexport { Cache }; // for documentation\n", "// prettier-ignore\n// @ts-nocheck\n/**\n * Generates a unique id that has limited chance of collision\n *\n * @see {@link https://stackoverflow.com/a/2117523/1867984|StackOverflow: Source}\n * @returns a v4 compliant GUID\n */\nexport default function uuidv4(): string {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n}\n", "import '@kitware/vtk.js/Rendering/Profiles/Volume';\n\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport { ImageVolume } from './cache/classes/ImageVolume';\nimport type * as Types from './types';\nimport cache from './cache/cache';\nimport Events from './enums/Events';\nimport eventTarget from './eventTarget';\nimport triggerEvent from './utilities/triggerEvent';\nimport { uuidv4 } from './utilities';\nimport { Point3, Metadata, EventTypes } from './types';\n\ninterface VolumeLoaderOptions {\n  imageIds: Array<string>;\n}\n\ninterface DerivedVolumeOptions {\n  volumeId: string;\n  targetBuffer?: {\n    type: 'Float32Array' | 'Uint8Array';\n  };\n}\ninterface LocalVolumeOptions {\n  scalarData: Float32Array | Uint8Array;\n  metadata: Metadata;\n  dimensions: Point3;\n  spacing: Point3;\n  origin: Point3;\n  direction: Float32Array;\n}\n\nfunction createInternalVTKRepresentation({\n  dimensions,\n  metadata,\n  spacing,\n  direction,\n  origin,\n  scalarData,\n}): vtkImageDataType {\n  const { PhotometricInterpretation } = metadata;\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: numComponents,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  return imageData;\n}\n\n/**\n * This module deals with VolumeLoaders and loading volumes\n */\n\nconst volumeLoaders = {};\n\nlet unknownVolumeLoader;\n\n/**\n * Load a volume using a registered Cornerstone Volume Loader.\n *\n * The volume loader that is used will be\n * determined by the volume loader scheme matching against the volumeId.\n *\n * @param volumeId - A Cornerstone Volume Object's volumeId\n * @param options - Options to be passed to the Volume Loader. Options\n * contain the ImageIds that is passed to the loader\n *\n * @returns An Object which can be used to act after a volume is loaded or loading fails\n *\n */\nfunction loadVolumeFromVolumeLoader(\n  volumeId: string,\n  options: VolumeLoaderOptions\n): Types.IVolumeLoadObject {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  const loader = volumeLoaders[scheme];\n\n  if (loader === undefined || loader === null) {\n    if (unknownVolumeLoader !== undefined) {\n      return unknownVolumeLoader(volumeId, options);\n    }\n\n    throw new Error(\n      'loadVolumeFromVolumeLoader: no volume loader for volumeId'\n    );\n  }\n\n  const volumeLoadObject = loader(volumeId, options);\n\n  // Broadcast a volume loaded event once the image is loaded\n  volumeLoadObject.promise.then(\n    function (volume) {\n      triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    },\n    function (error) {\n      const errorObject: EventTypes.VolumeLoadedFailedEventDetail = {\n        volumeId,\n        error,\n      };\n\n      triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    }\n  );\n\n  return volumeLoadObject;\n}\n\n/**\n * Loads a volume given a volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions = { imageIds: [] }\n): Promise<Types.IImageVolume> {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  return volumeLoadObject.promise.then((volume: Types.IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\n\n/**\n * Loads an image given an volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred. The image is stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns Volume Loader Object\n */\nexport async function createAndCacheVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions\n): Promise<Record<string, any>> {\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolume: parameter volumeId must not be undefined'\n    );\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  volumeLoadObject.promise.then((volume: Types.IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch((err) => {\n    throw err;\n  });\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Based on a referencedVolumeId, it will build and cache a new volume. If\n * no scalarData is specified in the options, an empty derived volume will be\n * created that matches the image metadata of the referenceVolume. If scalarData\n * is given, it will be used to generate the intensity values for the derivedVolume.\n * Finally, it will save the volume in the cache.\n * @param referencedVolumeId - the volumeId from which the new volume will get its metadata\n * @param options - DerivedVolumeOptions {uid: derivedVolumeUID, targetBuffer: { type: FLOAT32Array | Uint8Array}, scalarData: if provided}\n *\n * @returns ImageVolume\n */\nexport function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): ImageVolume {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n\n  if (!referencedVolume) {\n    throw new Error(\n      `Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`\n    );\n  }\n\n  let { volumeId } = options;\n  const { targetBuffer } = options;\n\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const { metadata, dimensions, spacing, origin, direction, scalarData } =\n    referencedVolume;\n  const scalarLength = scalarData.length;\n\n  let numBytes, TypedArray;\n\n  // If target buffer is provided\n  if (targetBuffer) {\n    if (targetBuffer.type === 'Float32Array') {\n      numBytes = scalarLength * 4;\n      TypedArray = Float32Array;\n    } else if (targetBuffer.type === 'Uint8Array') {\n      numBytes = scalarLength;\n      TypedArray = Uint8Array;\n    } else {\n      throw new Error('TargetBuffer should be Float32Array or Uint8Array');\n    }\n  } else {\n    // Use float32 if no targetBuffer is provided\n    numBytes = scalarLength * 4;\n    TypedArray = Float32Array;\n  }\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const volumeScalarData = new TypedArray(scalarLength);\n\n  // Todo: handle more than one component for segmentation (RGB)\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData,\n  });\n\n  const derivedImageData = vtkImageData.newInstance();\n\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    referencedVolumeId,\n  });\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Creates and cache a volume based on a set of provided properties including\n * dimensions, spacing, origin, direction, metadata, scalarData. It should be noted that\n * scalarData should be provided for this function to work. If a volume with the same\n * Id exists in the cache it returns it immediately.\n * @param options -  { scalarData, metadata, dimensions, spacing, origin, direction }\n * @param volumeId - Id of the generated volume\n *\n * @returns ImageVolume\n */\nexport function createLocalVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): ImageVolume {\n  const { scalarData, metadata, dimensions, spacing, origin, direction } =\n    options;\n\n  if (\n    !scalarData ||\n    !(scalarData instanceof Uint8Array || scalarData instanceof Float32Array)\n  ) {\n    throw new Error(\n      'To use createLocalVolume you should pass scalarData of type Uint8Array or Float32Array'\n    );\n  }\n\n  // Todo: handle default values for spacing, origin, direction if not provided\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return cachedVolume;\n  }\n\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n  });\n\n  if (preventCache) {\n    return derivedVolume;\n  }\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Registers an volumeLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this volume loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param volumeLoader - A Cornerstone Volume Loader function\n */\nexport function registerVolumeLoader(\n  scheme: string,\n  volumeLoader: Types.VolumeLoaderFn\n): void {\n  volumeLoaders[scheme] = volumeLoader;\n}\n\n/**\n * Registers a new unknownVolumeLoader and returns the previous one\n *\n * @param volumeLoader - A Cornerstone Volume Loader\n *\n * @returns The previous Unknown Volume Loader\n */\nexport function registerUnknownVolumeLoader(\n  volumeLoader: Types.VolumeLoaderFn\n): Types.VolumeLoaderFn | undefined {\n  const oldVolumeLoader = unknownVolumeLoader;\n\n  unknownVolumeLoader = volumeLoader;\n\n  return oldVolumeLoader;\n}\n", "import macro from '@kitware/vtk.js/macros';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\n\n/**\n * vtkSharedVolumeMapper - A derived class of the core vtkVolumeMapper class\n * the scalar texture in as an argument. This is so we can share the same texture\n * memory across different mappers/actors, so we don't duplicate memory usage.\n *\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n * @hidden\n */\nfunction vtkSharedVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkSharedVolumeMapper');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  scalarTexture: null,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkVolumeMapper.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['scalarTexture']);\n\n  // Object methods\n  vtkSharedVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSharedVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "import { vtkSharedVolumeMapper } from '../vtkClasses';\n\n/**\n * Given an imageData and a vtkOpenGLTexture, it creates a \"shared\" vtk volume mapper\n * from which various volume actors can be created.\n *\n * @param imageData - the vtkImageData object that contains the data to\n * render.\n * @param vtkOpenGLTexture - The vtkOpenGLTexture that will be used to render\n * the volume.\n * @returns The volume mapper.\n */\nexport default function createVolumeMapper(\n  imageData: any,\n  vtkOpenGLTexture: any\n): any {\n  const volumeMapper = vtkSharedVolumeMapper.newInstance();\n\n  volumeMapper.setInputData(imageData);\n\n  const spacing = imageData.getSpacing();\n  // Set the sample distance to half the mean length of one side. This is where the divide by 6 comes from.\n  // https://github.com/Kitware/VTK/blob/6b559c65bb90614fb02eb6d1b9e3f0fca3fe4b0b/Rendering/VolumeOpenGL2/vtkSmartVolumeMapper.cxx#L344\n  const sampleDistance = (spacing[0] + spacing[1] + spacing[2]) / 6;\n\n  // This is to allow for good pixel level image quality.\n  volumeMapper.setMaximumSamplesPerRay(4000);\n\n  volumeMapper.setSampleDistance(sampleDistance);\n\n  volumeMapper.setScalarTexture(vtkOpenGLTexture);\n\n  return volumeMapper;\n}\n", "import { VolumeActor } from './../../types/IActor';\nimport vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\nimport { loadVolume } from '../../volumeLoader';\n//@ts-ignore\nimport createVolumeMapper from './createVolumeMapper';\nimport BlendModes from '../../enums/BlendModes';\n\ninterface createVolumeActorInterface {\n  volumeId: string;\n  callback?: ({ volumeActor: any, volumeId: string }) => void;\n  blendMode?: BlendModes;\n}\n\n/**\n * Given a volumeId, it creates a vtk volume actor and returns it. If\n * callback is provided, it will be called with the volume actor and the\n * volumeId. If blendMode is provided, it will be set on the volume actor.\n *\n * @param props - createVolumeActorInterface\n * @returns A promise that resolves to a VolumeActor.\n */\nasync function createVolumeActor(\n  props: createVolumeActorInterface\n): Promise<VolumeActor> {\n  const { volumeId, callback, blendMode } = props;\n\n  const imageVolume = await loadVolume(volumeId);\n\n  if (!imageVolume) {\n    throw new Error(\n      `imageVolume with id: ${imageVolume.volumeId} does not exist`\n    );\n  }\n\n  const { imageData, vtkOpenGLTexture } = imageVolume;\n\n  const volumeMapper = createVolumeMapper(imageData, vtkOpenGLTexture);\n\n  if (blendMode) {\n    volumeMapper.setBlendMode(blendMode);\n  }\n\n  const volumeActor = vtkVolume.newInstance();\n  volumeActor.setMapper(volumeMapper);\n\n  if (callback) {\n    callback({ volumeActor, volumeId });\n  }\n\n  return volumeActor;\n}\n\nexport default createVolumeActor;\n", "const VIEWPORT_ELEMENT = 'viewport-element';\nconst CANVAS_CSS_CLASS = 'cornerstone-canvas';\n\n/**\n * Create a canvas and append it to the element\n *\n * @param element - An HTML Element\n * @returns canvas - A Canvas DOM element\n */\nfunction createCanvas(element: Element | HTMLDivElement): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n\n  canvas.style.position = 'absolute';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.classList.add(CANVAS_CSS_CLASS);\n  element.appendChild(canvas);\n\n  return canvas;\n}\n\n/**\n * Creates and internal div that will contain canvas and SVG layer as children\n * @param element - An HTML Element\n * @returns div Cornerstone internal div that will include the canvas and SVG\n * as its children\n */\nexport function createViewportElement(element: HTMLDivElement): HTMLDivElement {\n  const div = document.createElement('div');\n  div.style.position = 'relative';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  div.classList.add(VIEWPORT_ELEMENT);\n  element.appendChild(div);\n\n  return div;\n}\n\n/**\n * Create a canvas or returns the one that already exists for a given element.\n * It first checks if the element has a canvas, if not it creates one and returns it.\n *\n * @param element - An HTML Element\n * @returns canvas a Canvas DOM element\n */\nexport default function getOrCreateCanvas(\n  element: HTMLDivElement\n): HTMLCanvasElement {\n  const canvasSelector = `canvas.${CANVAS_CSS_CLASS}`;\n  const viewportElement = `div.${VIEWPORT_ELEMENT}`;\n\n  // Internal div with `relative` positioning to enable absolute positioning\n  // of the canvas and svg layer.\n  const internalDiv =\n    element.querySelector(viewportElement) || createViewportElement(element);\n\n  return internalDiv.querySelector(canvasSelector) || createCanvas(internalDiv);\n}\n", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import type { IRenderingEngine } from './RenderingEngine';\n\nconst cache = {};\n\nconst renderingEngineCache = {\n  /**\n   * Returns the `RenderingEngine` instance with the given `id`.\n   *\n   * @param id - The `id` of the `RenderingEngine` instance to fetch.\n   * @returns The `RenderingEngine` instance.\n   */\n  get: (id: string): IRenderingEngine => {\n    return cache[id];\n  },\n  /**\n   * Adds the `RenderingEngine` instance to the cache.\n   *\n   * @param re - The `RenderingEngine` to add.\n   */\n  set: (re: IRenderingEngine): void => {\n    const renderingEngineId = re.id;\n\n    cache[renderingEngineId] = re;\n  },\n  /**\n   * Deletes the `RenderingEngine` instance from the cache.\n   *\n   * @param id - The `id` of the `RenderingEngine` instance to delete.\n   * @returns True if the delete was successful.\n   */\n  delete: (id: string) => {\n    return delete cache[id];\n  },\n\n  getAll: (): Array<IRenderingEngine> => {\n    const renderingEngineIds = Object.keys(cache);\n    const renderingEngines = renderingEngineIds.map((id) => cache[id]);\n\n    return renderingEngines;\n  },\n};\n\nexport default renderingEngineCache;\n", "import { mat3, mat4, vec3 } from 'gl-matrix';\nimport macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport { Filter } from '@kitware/vtk.js/Rendering/OpenGL/Texture/Constants';\nimport { VtkDataTypes } from '@kitware/vtk.js/Common/Core/DataArray/Constants';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport { Representation } from '@kitware/vtk.js/Rendering/Core/Property/Constants';\nimport { BlendMode } from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { vtkWarningMacro } = macro;\n/**\n * vtkStreamingOpenGLVolumeMapper - A dervied class of the core vtkOpenGLVolumeMapper class.\n * This class  replaces the buildBufferObjects function so that we progressively upload our textures\n * into GPU memory using the new methods on vtkStreamingOpenGLTexture.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLVolumeMapper');\n\n  /**\n   * buildBufferObjects - A fork of vtkOpenGLVolumeMapper's buildBufferObjects method.\n   * This fork performs most of the same actions, but builds the textures progressively using\n   * vtkStreamingOpenGLTexture's methods, and also prevents recomputation of the texture for each\n   * vtkStreamingOpenGLVolumeMapper using the texture.\n   *\n   *\n   * @param {*} ren The renderer.\n   * @param {*} actor The actor to build the buffer objects for.\n   */\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n\n    const scalars = image.getPointData() && image.getPointData().getScalars();\n    if (!scalars) {\n      return;\n    }\n\n    const vprop = actor.getProperty();\n\n    if (!model.jitterTexture.getHandle()) {\n      const oTable = new Uint8Array(32 * 32);\n      for (let i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(\n        32,\n        32,\n        1,\n        VtkDataTypes.UNSIGNED_CHAR,\n        oTable\n      );\n    }\n\n    const numComp = scalars.getNumberOfComponents();\n    const iComps = vprop.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n\n    // rebuild opacity tfun?\n    let toString = `${vprop.getMTime()}`;\n    if (model.opacityTextureString !== toString) {\n      const oWidth = 1024;\n      const oSize = oWidth * 2 * numIComps;\n      const ofTable = new Float32Array(oSize);\n      const tmpTable = new Float32Array(oWidth);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const ofun = vprop.getScalarOpacity(c);\n        const opacityFactor =\n          model.renderable.getSampleDistance() /\n          vprop.getScalarOpacityUnitDistance(c);\n\n        const oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1);\n        // adjust for sample distance etc\n        for (let i = 0; i < oWidth; ++i) {\n          ofTable[c * oWidth * 2 + i] =\n            1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\n          ofTable[c * oWidth * 2 + i + oWidth] = ofTable[c * oWidth * 2 + i];\n        }\n      }\n\n      model.opacityTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n\n      // use float texture where possible because we really need the resolution\n      // for this table. Errors in low values of opacity accumulate to\n      // visible artifacts. High values of opacity quickly terminate without\n      // artifacts.\n      if (\n        model._openGLRenderWindow.getWebgl2() ||\n        (model.context.getExtension('OES_texture_float') &&\n          model.context.getExtension('OES_texture_float_linear'))\n      ) {\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.FLOAT,\n          ofTable\n        );\n      } else {\n        const oTable = new Uint8Array(oSize);\n        for (let i = 0; i < oSize; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.UNSIGNED_CHAR,\n          oTable\n        );\n      }\n      model.opacityTextureString = toString;\n    }\n\n    // rebuild color tfun?\n    toString = `${vprop.getMTime()}`;\n\n    if (model.colorTextureString !== toString) {\n      const cWidth = 1024;\n      const cSize = cWidth * 2 * numIComps * 3;\n      const cTable = new Uint8Array(cSize);\n      const tmpTable = new Float32Array(cWidth * 3);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const cfun = vprop.getRGBTransferFunction(c);\n        const cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n          cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n        }\n      }\n\n      model.colorTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n\n      model.colorTexture.create2DFromRaw(\n        cWidth,\n        2 * numIComps,\n        3,\n        VtkDataTypes.UNSIGNED_CHAR,\n        cTable\n      );\n      model.colorTextureString = toString;\n    }\n\n    // rebuild the scalarTexture if the data has changed\n    toString = `${image.getMTime()}`;\n\n    if (model.scalarTextureString !== toString) {\n      // Build the textures\n      const dims = image.getDimensions();\n\n      const previousTextureParameters =\n        model.scalarTexture.getTextureParameters();\n\n      const dataType = image.getPointData().getScalars().getDataType();\n      const data = image.getPointData().getScalars().getData();\n\n      let shouldReset = true;\n\n      if (\n        previousTextureParameters.dataType &&\n        previousTextureParameters.dataType === dataType\n      ) {\n        const previousTextureSize =\n          previousTextureParameters.width *\n          previousTextureParameters.height *\n          previousTextureParameters.depth *\n          previousTextureParameters.numComps;\n        if (data.length === previousTextureSize) {\n          shouldReset = false;\n        }\n      }\n\n      if (shouldReset) {\n        model.scalarTexture.releaseGraphicsResources(model._openGLRenderWindow);\n        model.scalarTexture.resetFormatAndType();\n\n        model.scalarTexture.create3DFilterableFromRaw(\n          dims[0],\n          dims[1],\n          dims[2],\n          numComp,\n          scalars.getDataType(),\n          scalars.getData(),\n          model.renderable.getPreferSizeOverAccuracy()\n        );\n      } else {\n        model.scalarTexture.deactivate();\n        model.scalarTexture.update3DFromRaw(data);\n      }\n\n      model.scalarTextureString = toString;\n    }\n\n    if (!model.tris.getCABO().getElementCount()) {\n      // build the CABO\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = (i % 2) * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = -1.0;\n      }\n\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray,\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray,\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0,\n      });\n    }\n\n    model.VBOBuildTime.modified();\n  };\n\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const cam = model.openGLCamera.getRenderable();\n    const blendMode = actor.getMapper().getBlendMode();\n    const slabThickness = cam.getSlabThickness();\n    const crange = cam.getClippingRange();\n\n    const defaultSlabThickness = null;\n    const cameraMidpoint = (crange[1] + crange[0]) * 0.5;\n    // if not equal to tiny slab thickness (i.e. it is defined as an actual\n    // intended value), use slab thickness instead of clipping range\n    if (\n      blendMode !== BlendMode.COMPOSITE_BLEND &&\n      slabThickness !== defaultSlabThickness\n    ) {\n      crange[0] = cameraMidpoint - slabThickness;\n      crange[1] = cameraMidpoint + slabThickness;\n      cam.setSlabThicknessActive(true);\n    } else {\n      cam.setSlabThicknessActive(false);\n    }\n\n    program.setUniformf('camThick', crange[1] - crange[0]);\n    program.setUniformf('camNear', crange[0]);\n    program.setUniformf('camFar', crange[1]);\n\n    // // [WMVP]C == {world, model, view, projection} coordinates\n    // // E.g., WCPC == world to projection coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const actMats = model.openGLVolume.getKeyMatrices();\n    mat4.multiply(model.modelToView, keyMats.wcvc, actMats.mcwc);\n\n    const bounds = model.currentInput.getBounds();\n    const spc = model.currentInput.getSpacing();\n    const dims = model.currentInput.getDimensions();\n\n    // compute the viewport bounds of the volume\n    // we will only render those fragments.\n    const pos = new Float64Array(3);\n    const dir = new Float64Array(3);\n    let dcxmin = 1.0;\n    let dcxmax = -1.0;\n    let dcymin = 1.0;\n    let dcymax = -1.0;\n\n    for (let i = 0; i < 8; ++i) {\n      vec3.set(\n        pos,\n        bounds[i % 2],\n        bounds[2 + (Math.floor(i / 2) % 2)],\n        bounds[4 + Math.floor(i / 4)]\n      );\n      vec3.transformMat4(pos, pos, model.modelToView);\n      if (!cam.getParallelProjection()) {\n        vec3.normalize(dir, pos);\n\n        // now find the projection of this point onto a\n        // nearZ distance plane. Since the camera is at 0,0,0\n        // in VC the ray is just t*pos and\n        // t is -nearZ/dir.z\n        // intersection becomes pos.x/pos.z\n        const t = -crange[0] / pos[2];\n        vec3.scale(pos, dir, t);\n      }\n      // now convert to DC\n      vec3.transformMat4(pos, pos, keyMats.vcpc);\n\n      dcxmin = Math.min(pos[0], dcxmin);\n      dcxmax = Math.max(pos[0], dcxmax);\n      dcymin = Math.min(pos[1], dcymin);\n      dcymax = Math.max(pos[1], dcymax);\n    }\n\n    program.setUniformf('dcxmin', dcxmin);\n    program.setUniformf('dcxmax', dcxmax);\n    program.setUniformf('dcymin', dcymin);\n    program.setUniformf('dcymax', dcymax);\n\n    if (program.isUniformUsed('cameraParallel')) {\n      program.setUniformi('cameraParallel', cam.getParallelProjection());\n    }\n\n    const ext = model.currentInput.getSpatialExtent();\n    const vsize = new Float64Array(3);\n    vec3.set(\n      vsize,\n      (ext[1] - ext[0]) * spc[0],\n      (ext[3] - ext[2]) * spc[1],\n      (ext[5] - ext[4]) * spc[2]\n    );\n    program.setUniform3f('vSpacing', spc[0], spc[1], spc[2]);\n\n    vec3.set(pos, ext[0], ext[2], ext[4]);\n\n    model.currentInput.indexToWorldVec3(pos, pos);\n\n    vec3.transformMat4(pos, pos, model.modelToView);\n\n    program.setUniform3f('vOriginVC', pos[0], pos[1], pos[2]);\n\n    // apply the image directions\n    const i2wmat4 = model.currentInput.getIndexToWorld();\n    mat4.multiply(model.idxToView, model.modelToView, i2wmat4);\n\n    mat3.multiply(\n      model.idxNormalMatrix,\n      keyMats.normalMatrix,\n      actMats.normalMatrix\n    );\n    mat3.multiply(\n      model.idxNormalMatrix,\n      model.idxNormalMatrix,\n      model.currentInput.getDirection()\n    );\n\n    const maxSamples =\n      vec3.length(vsize) / model.renderable.getSampleDistance();\n    if (maxSamples > model.renderable.getMaximumSamplesPerRay()) {\n      vtkWarningMacro(`The number of steps required ${Math.ceil(\n        maxSamples\n      )} is larger than the\n        specified maximum number of steps ${model.renderable.getMaximumSamplesPerRay()}.\n        Please either change the\n        volumeMapper sampleDistance or its maximum number of samples.`);\n    }\n\n    const vctoijk = new Float64Array(3);\n\n    vec3.set(vctoijk, 1.0, 1.0, 1.0);\n    vec3.divide(vctoijk, vctoijk, vsize);\n    program.setUniform3f('vVCToIJK', vctoijk[0], vctoijk[1], vctoijk[2]);\n    program.setUniform3i('volumeDimensions', dims[0], dims[1], dims[2]);\n\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      const volInfo = model.scalarTexture.getVolumeInfo();\n      program.setUniformf('texWidth', model.scalarTexture.getWidth());\n      program.setUniformf('texHeight', model.scalarTexture.getHeight());\n      program.setUniformi('xreps', volInfo.xreps);\n      program.setUniformi('xstride', volInfo.xstride);\n      program.setUniformi('ystride', volInfo.ystride);\n    }\n\n    // map normals through normal matrix\n    // then use a point on the plane to compute the distance\n    const normal = new Float64Array(3);\n    const pos2 = new Float64Array(3);\n    for (let i = 0; i < 6; ++i) {\n      switch (i) {\n        case 1:\n          vec3.set(normal, -1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 2:\n          vec3.set(normal, 0.0, 1.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 3:\n          vec3.set(normal, 0.0, -1.0, 0.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 4:\n          vec3.set(normal, 0.0, 0.0, 1.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n        case 5:\n          vec3.set(normal, 0.0, 0.0, -1.0);\n          vec3.set(pos2, ext[0], ext[2], ext[4]);\n          break;\n        case 0:\n        default:\n          vec3.set(normal, 1.0, 0.0, 0.0);\n          vec3.set(pos2, ext[1], ext[3], ext[5]);\n          break;\n      }\n      vec3.transformMat3(normal, normal, model.idxNormalMatrix);\n      vec3.transformMat4(pos2, pos2, model.idxToView);\n      const dist = -1.0 * vec3.dot(pos2, normal);\n\n      // we have the plane in view coordinates\n      // specify the planes in view coordinates\n      program.setUniform3f(`vPlaneNormal${i}`, normal[0], normal[1], normal[2]);\n      program.setUniformf(`vPlaneDistance${i}`, dist);\n\n      if (actor.getProperty().getUseLabelOutline()) {\n        const image = model.currentInput;\n        const worldToIndex = image.getWorldToIndex();\n\n        program.setUniformMatrix('vWCtoIDX', worldToIndex);\n\n        // Get the projection coordinate to world coordinate transformation matrix.\n        mat4.invert(model.projectionToWorld, keyMats.wcpc);\n        program.setUniformMatrix('PCWCMatrix', model.projectionToWorld);\n\n        const size = publicAPI.getRenderTargetSize();\n        const offset = publicAPI.getRenderTargetOffset();\n\n        program.setUniformf('vpWidth', size[0]);\n        program.setUniformf('vpHeight', size[1]);\n\n        // TODO: You need to use the fix/labelMapOutline branch or these\n        // won't be consumed by the shader\n        program.setUniformf('vpOffsetX', offset[0] / size[0]);\n        program.setUniformf('vpOffsetY', offset[1] / size[1]);\n      }\n    }\n\n    mat4.invert(model.projectionToView, keyMats.vcpc);\n    program.setUniformMatrix('PCVCMatrix', model.projectionToView);\n\n    // handle lighting values\n    switch (model.lastLightComplexity) {\n      default:\n      case 0: // no lighting, tcolor is fine as is\n        break;\n\n      case 1: // headlight\n      case 2: // light kit\n      case 3: {\n        // positional not implemented fallback to directional\n        // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n        let lightNum = 0;\n        const lightColor = [];\n        ren.getLights().forEach((light) => {\n          const status = light.getSwitch();\n          if (status > 0) {\n            const dColor = light.getColor();\n            const intensity = light.getIntensity();\n            lightColor[0] = dColor[0] * intensity;\n            lightColor[1] = dColor[1] * intensity;\n            lightColor[2] = dColor[2] * intensity;\n            program.setUniform3fArray(`lightColor${lightNum}`, lightColor);\n            const ldir = light.getDirection();\n            vec3.set(normal, ldir[0], ldir[1], ldir[2]);\n            vec3.transformMat3(normal, normal, keyMats.normalMatrix);\n            program.setUniform3f(\n              `lightDirectionVC${lightNum}`,\n              normal[0],\n              normal[1],\n              normal[2]\n            );\n            // camera DOP is 0,0,-1.0 in VC\n            const halfAngle = [\n              -0.5 * normal[0],\n              -0.5 * normal[1],\n              -0.5 * (normal[2] - 1.0),\n            ];\n            program.setUniform3fArray(`lightHalfAngleVC${lightNum}`, halfAngle);\n            lightNum++;\n          }\n        });\n        // mat3.transpose(keyMats.normalMatrix, keyMats.normalMatrix);\n      }\n    }\n  };\n\n  // publicAPI.getRenderTargetSize = () => {\n  //   // https://github.com/Kitware/vtk-js/blob/master/Sources/Rendering/OpenGL/VolumeMapper/index.js#L952\n  //   if (model.lastXYF > 1.43) {\n  //     const sz = model.framebuffer.getSize()\n  //     return [model.fvp[0] * sz[0], model.fvp[1] * sz[1]]\n  //   }\n\n  //   // This seems wrong, it assumes the renderWindow only has one renderer\n  //   // but I don't know if this stuff is correct...\n\n  //   const { usize, vsize } = model.openGLRenderer.getTiledSizeAndOrigin()\n\n  //   return [usize, vsize]\n  // }\n\n  // publicAPI.getRenderTargetSize = () => {\n  //   if (model._useSmallViewport) {\n  //     return [model._smallViewportWidth, model._smallViewportHeight]\n  //   }\n\n  //   return model._openGLRenderWindow.getFramebufferSize()\n  // }\n  publicAPI.getRenderTargetSize = () => {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n\n    const { usize, vsize } = model.openGLRenderer.getTiledSizeAndOrigin();\n\n    return [usize, vsize];\n  };\n\n  publicAPI.getRenderTargetOffset = () => {\n    const { lowerLeftU, lowerLeftV } =\n      model.openGLRenderer.getTiledSizeAndOrigin();\n\n    return [lowerLeftU, lowerLeftV];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkOpenGLVolumeMapper.extend(publicAPI, model, initialValues);\n\n  model.scalarTexture = initialValues.scalarTexture;\n  model.previousState = {};\n\n  // Object methods\n  vtkStreamingOpenGLVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLVolumeMapper'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "import macro from '@kitware/vtk.js/macros';\n// import vtkGenericWidgetRepresentation from '@kitware/vtk.js/Rendering/SceneGraph/GenericWidgetRepresentation'\nimport vtkOpenGLActor from '@kitware/vtk.js/Rendering/OpenGL/Actor';\nimport vtkOpenGLActor2D from '@kitware/vtk.js/Rendering/OpenGL/Actor2D';\nimport vtkOpenGLCamera from '@kitware/vtk.js/Rendering/OpenGL/Camera';\nimport vtkOpenGLGlyph3DMapper from '@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper';\nimport vtkOpenGLImageMapper from '@kitware/vtk.js/Rendering/OpenGL/ImageMapper';\nimport vtkOpenGLImageSlice from '@kitware/vtk.js/Rendering/OpenGL/ImageSlice';\nimport vtkOpenGLPixelSpaceCallbackMapper from '@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper';\nimport vtkOpenGLPolyDataMapper from '@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper';\nimport vtkOpenGLRenderer from '@kitware/vtk.js/Rendering/OpenGL/Renderer';\nimport vtkOpenGLSkybox from '@kitware/vtk.js/Rendering/OpenGL/Skybox';\nimport vtkOpenGLSphereMapper from '@kitware/vtk.js/Rendering/OpenGL/SphereMapper';\nimport vtkOpenGLStickMapper from '@kitware/vtk.js/Rendering/OpenGL/StickMapper';\nimport vtkOpenGLTexture from '@kitware/vtk.js/Rendering/OpenGL/Texture';\nimport vtkOpenGLVolume from '@kitware/vtk.js/Rendering/OpenGL/Volume';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport vtkViewNodeFactory from '@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory';\nimport vtkStreamingOpenGLVolumeMapper from './vtkStreamingOpenGLVolumeMapper';\n\n/**\n * vtkStreamingOpenGLViewNodeFactory - A fork of the vtkOpenGLViewNodeFactory,\n * so that we can inject our custom derived \"Streaming\" classes.\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkStreamingOpenGLViewNodeFactory');\n\n  /**\n   * createNode - fork of createNode from vtkOpenGLViewNodeFactory.\n   * This fork is required to inject the properties from model.getModelInitialValues.\n   *\n   * @param {object} dataObject An instance of a vtk.js class.\n   */\n  publicAPI.createNode = (dataObject) => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n\n    const initialValues = model.getModelInitialValues(dataObject);\n\n    const vn = model.overrides[className](initialValues);\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  /**\n   * getModelInitialValues - This function allows us to pass textures down from our\n   * vtkSharedVolumeMapper to new instances of vtkStreamingOpenGLVolumeMapper.\n   * The prevents us from sharing memory.\n   *\n   * TODO: It would be beneficial to push similar, but generalized, functionality\n   * back to vtk.js in the future.\n   *\n   * @param {object} dataObject An instance of a vtk.js class.\n   */\n  model.getModelInitialValues = (dataObject) => {\n    const initialValues = {};\n\n    const className = dataObject.getClassName();\n\n    if (className === 'vtkSharedVolumeMapper') {\n      initialValues.scalarTexture = dataObject.getScalarTexture();\n    }\n\n    return initialValues;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkStreamingOpenGLViewNodeFactory(publicAPI, model);\n\n  // Initialization\n  publicAPI.registerOverride('vtkActor', vtkOpenGLActor.newInstance);\n  publicAPI.registerOverride('vtkActor2D', vtkOpenGLActor2D.newInstance);\n  publicAPI.registerOverride('vtkCamera', vtkOpenGLCamera.newInstance);\n  publicAPI.registerOverride(\n    'vtkGlyph3DMapper',\n    vtkOpenGLGlyph3DMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkImageMapper',\n    vtkOpenGLImageMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkImageSlice', vtkOpenGLImageSlice.newInstance);\n  publicAPI.registerOverride('vtkMapper', vtkOpenGLPolyDataMapper.newInstance);\n  publicAPI.registerOverride(\n    'vtkPixelSpaceCallbackMapper',\n    vtkOpenGLPixelSpaceCallbackMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkRenderer', vtkOpenGLRenderer.newInstance);\n  publicAPI.registerOverride('vtkSkybox', vtkOpenGLSkybox.newInstance);\n  publicAPI.registerOverride(\n    'vtkSphereMapper',\n    vtkOpenGLSphereMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkStickMapper',\n    vtkOpenGLStickMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkTexture', vtkOpenGLTexture.newInstance);\n  publicAPI.registerOverride('vtkVolume', vtkOpenGLVolume.newInstance);\n  publicAPI.registerOverride(\n    'vtkVolumeMapper',\n    vtkOpenGLVolumeMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkSharedVolumeMapper',\n    vtkStreamingOpenGLVolumeMapper.newInstance\n  );\n  // publicAPI.registerOverride(\n  //   'vtkWidgetRepresentation',\n  //   vtkGenericWidgetRepresentation.newInstance\n  // )\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLViewNodeFactory'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "import macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLRenderWindow from '@kitware/vtk.js/Rendering/OpenGL/RenderWindow';\nimport vtkStreamingOpenGLViewNodeFactory from './vtkStreamingOpenGLViewNodeFactory';\n\n/**\n * vtkStreamingOpenGLRenderWindow - A dervied class of the core vtkOpenGLRenderWindow class.\n * The main purpose for this class extension is to add in our own node factory, so we can use\n * our extended \"streaming\" classes for progressive texture loading.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLRenderWindow(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLRenderWindow');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, initialValues);\n\n  vtkOpenGLRenderWindow.extend(publicAPI, model, initialValues);\n\n  model.myFactory = vtkStreamingOpenGLViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  // Object methods\n  vtkStreamingOpenGLRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLRenderWindow'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "import macro from '@kitware/vtk.js/macros';\nimport vtkStreamingOpenGLRenderWindow from './vtkStreamingOpenGLRenderWindow';\nimport vtkRenderer from '@kitware/vtk.js/Rendering/Core/Renderer';\nimport vtkRenderWindow from '@kitware/vtk.js/Rendering/Core/RenderWindow';\nimport vtkRenderWindowInteractor from '@kitware/vtk.js/Rendering/Core/RenderWindowInteractor';\n\n// Load basic classes for vtk() factory\nimport '@kitware/vtk.js/Common/Core/Points';\nimport '@kitware/vtk.js/Common/Core/DataArray';\nimport '@kitware/vtk.js/Common/DataModel/PolyData';\nimport '@kitware/vtk.js/Rendering/Core/Actor';\nimport '@kitware/vtk.js/Rendering/Core/Mapper';\n\n/**\n * vtkOffscreenMultiRenderWindow - A class to deal with offscreen renderering with multiple renderers.\n *\n * This class is based on the vtkGenericRenderWindow with two key differences:\n * - the vtkGenericRenderWindow had a renderer at the top level, with helpers to get it from the renderWindow.\n *   although you could add more renderers, this gave special status to the first viewport. Which was confusing.\n * - When checking the size of the container element we no longer check the client size, as the canvas is offscreen.\n * - We aren't using interactor styles, so don't set one up.\n *\n * Additionally this class has some new helpers to easily add/associate renderers to different viewportIds.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkOffscreenMultiRenderWindow(publicAPI, model) {\n  // Capture resize trigger method to remove from publicAPI\n  const invokeResize = publicAPI.invokeResize;\n  delete publicAPI.invokeResize;\n\n  // VTK renderWindow. No renderers set by default\n  model.renderWindow = vtkRenderWindow.newInstance();\n  model.rendererMap = {};\n\n  // OpenGLRenderWindow\n  model.openGLRenderWindow = vtkStreamingOpenGLRenderWindow.newInstance();\n  model.renderWindow.addView(model.openGLRenderWindow);\n\n  // Interactor\n  model.interactor = vtkRenderWindowInteractor.newInstance();\n  model.interactor.setView(model.openGLRenderWindow);\n  model.interactor.initialize();\n\n  publicAPI.addRenderer = ({ viewport, id, background }) => {\n    const renderer = vtkRenderer.newInstance({\n      viewport,\n      background: background || model.background,\n    });\n\n    model.renderWindow.addRenderer(renderer);\n    model.rendererMap[id] = renderer;\n  };\n\n  publicAPI.removeRenderer = (id) => {\n    const renderer = publicAPI.getRenderer(id);\n    model.renderWindow.removeRenderer(renderer);\n    delete model.rendererMap[id];\n  };\n\n  publicAPI.getRenderer = (id) => {\n    return model.rendererMap[id];\n  };\n\n  publicAPI.getRenderers = () => {\n    const { rendererMap } = model;\n\n    const renderers = Object.keys(rendererMap).map((id) => {\n      return { id, renderer: rendererMap[id] };\n    });\n\n    return renderers;\n  };\n\n  // Handle window resize\n  publicAPI.resize = () => {\n    if (model.container) {\n      // Don't use getBoundingClientRect() as in vtkGenericRenderWindow as is an offscreen canvas.\n      const { width, height } = model.container;\n\n      const devicePixelRatio = 1;\n      model.openGLRenderWindow.setSize(\n        Math.floor(width * devicePixelRatio),\n        Math.floor(height * devicePixelRatio)\n      );\n      invokeResize();\n      model.renderWindow.render();\n    }\n  };\n\n  // Handle DOM container relocation\n  publicAPI.setContainer = (el) => {\n    // Switch container\n    model.container = el;\n    model.openGLRenderWindow.setContainer(model.container);\n  };\n\n  // Properly release GL context\n  publicAPI.delete = macro.chain(\n    publicAPI.setContainer,\n    model.openGLRenderWindow.delete,\n    publicAPI.delete\n  );\n\n  publicAPI.resize();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  background: [0.0, 0.0, 0.0],\n  container: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, [\n    'renderWindow',\n    'openGLRenderWindow',\n    'interactor',\n    'container',\n  ]);\n  macro.event(publicAPI, model, 'resize');\n\n  // Object specific methods\n  vtkOffscreenMultiRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}", "import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}", "import cache, { Cache } from './cache';\nimport ImageVolume from './classes/ImageVolume';\n\nexport { ImageVolume, Cache };\nexport default cache;\n", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import { Point3, Plane } from '../types';\nimport { vec3, mat3 } from 'gl-matrix';\n\n/**\n * It calculates the intersection of a line and a plane.\n * Plane equation is Ax+By+Cz=D\n * @param p0 - [x,y,z] of the first point of the line\n * @param p1 - [x,y,z] of the second point of the line\n * @param plane - [A, B, C, D] Plane parameter: Ax+By+Cz=D\n * @returns - [X,Y,Z] coordinates of the intersection\n */\nfunction linePlaneIntersection(p0: Point3, p1: Point3, plane: Plane): Point3 {\n  const [x0, y0, z0] = p0;\n  const [x1, y1, z1] = p1;\n  const [A, B, C, D] = plane;\n  const a = x1 - x0;\n  const b = y1 - y0;\n  const c = z1 - z0;\n  const t = (-1 * (A * x0 + B * y0 + C * z0 - D)) / (A * a + B * b + C * c);\n  const X = a * t + x0;\n  const Y = b * t + y0;\n  const Z = c * t + z0;\n\n  return [X, Y, Z];\n}\n\n/**\n * It returns the plane equation defined by a point and a normal vector.\n * @param normal - normal vector\n * @param point - a point on the plane\n * @returns - [A, B,C, D] of plane equation A*X + B*Y + C*Z = D\n */\nfunction planeEquation(normal: Point3, point: Point3 | vec3): Plane {\n  const [A, B, C] = normal;\n  const D = A * point[0] + B * point[1] + C * point[2];\n  return [A, B, C, D];\n}\n\n/**\n * Computes the intersection of three planes in 3D space with equations:\n * A1*X + B1*Y + C1*Z = D1\n * A2*X + B2*Y + C2*Z = D2\n * A3*X + B3*Y + C3*Z = D3\n * @returns - [x, y, z] the intersection in the world coordinate\n */\nfunction threePlaneIntersection(\n  firstPlane: Plane,\n  secondPlane: Plane,\n  thirdPlane: Plane\n): Point3 {\n  const [A1, B1, C1, D1] = firstPlane;\n  const [A2, B2, C2, D2] = secondPlane;\n  const [A3, B3, C3, D3] = thirdPlane;\n  const m0 = mat3.fromValues(A1, A2, A3, B1, B2, B3, C1, C2, C3);\n  const m1 = mat3.fromValues(D1, D2, D3, B1, B2, B3, C1, C2, C3);\n  const m2 = mat3.fromValues(A1, A2, A3, D1, D2, D3, C1, C2, C3);\n  const m3 = mat3.fromValues(A1, A2, A3, B1, B2, B3, D1, D2, D3);\n\n  // TODO: handle no intersection scenario\n  const x = mat3.determinant(m1) / mat3.determinant(m0);\n  const y = mat3.determinant(m2) / mat3.determinant(m0);\n  const z = mat3.determinant(m3) / mat3.determinant(m0);\n  return [x, y, z];\n}\n\nexport { linePlaneIntersection, planeEquation, threePlaneIntersection };\n", "import type { vtkCamera } from '@kitware/vtk.js/Rendering/Core/Camera';\nimport vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\n\nimport { vec3, mat4 } from 'gl-matrix';\nimport _cloneDeep from 'lodash.clonedeep';\n\nimport Events from '../enums/Events';\nimport ViewportType from '../enums/ViewportType';\nimport renderingEngineCache from './renderingEngineCache';\nimport { triggerEvent, planar } from '../utilities';\nimport type {\n  ICamera,\n  ActorEntry,\n  IRenderingEngine,\n  ViewportInputOptions,\n  Point2,\n  Point3,\n  FlipDirection,\n} from '../types';\nimport type { ViewportInput, IViewport } from '../types/IViewport';\nimport type { vtkSlabCamera } from './vtkClasses/vtkSlabCamera';\n\n/**\n * An object representing a single viewport, which is a camera\n * looking into a viewport, and an associated target output `HTMLDivElement`.\n * Viewport is a base class that can be extended to create a specific\n * viewport type. Both VolumeViewport and StackViewport are subclasses\n * of Viewport. Common logic for all viewports is contained in Viewport class\n * which is camera properties/methods, vtk.js actors, and other common\n * logic.\n */\nclass Viewport implements IViewport {\n  /** unique identifier for the viewport */\n  readonly id: string;\n  /** HTML element in DOM that is used for rendering the viewport */\n  readonly element: HTMLDivElement;\n  /** an internal canvas that is created on the provided HTML element */\n  readonly canvas: HTMLCanvasElement;\n  /** RenderingEngine id that the viewport belongs to */\n  readonly renderingEngineId: string;\n  /** Type of viewport */\n  readonly type: ViewportType;\n  protected flipHorizontal = false;\n  protected flipVertical = false;\n\n  /** sx of viewport on the offscreen canvas */\n  sx: number;\n  /** sy of viewport on the offscreen canvas */\n  sy: number;\n  /** sWidth of viewport on the offscreen canvas */\n  sWidth: number;\n  /** sHeight of viewport on the offscreen canvas */\n  sHeight: number;\n  /** a Map containing the actor uid and actors */\n  _actors: Map<string, any>;\n  /** Default options for the viewport which includes orientation, sliceNormal and backgroundColor */\n  readonly defaultOptions: any;\n  /** options for the viewport which includes orientation, sliceNormal and backgroundColor */\n  options: ViewportInputOptions;\n  private _suppressCameraModifiedEvents = false;\n  /** A flag representing if viewport methods should fire events or not */\n  readonly suppressEvents: boolean;\n\n  constructor(props: ViewportInput) {\n    this.id = props.id;\n    this.renderingEngineId = props.renderingEngineId;\n    this.type = props.type;\n    this.element = props.element;\n    this.canvas = props.canvas;\n    this.sx = props.sx;\n    this.sy = props.sy;\n    this.sWidth = props.sWidth;\n    this.sHeight = props.sHeight;\n    this._actors = new Map();\n    // Set data attributes for render events\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute(\n      'data-rendering-engine-uid',\n      this.renderingEngineId\n    );\n\n    this.defaultOptions = _cloneDeep(props.defaultOptions);\n    this.suppressEvents = props.defaultOptions.suppressEvents\n      ? props.defaultOptions.suppressEvents\n      : false;\n    this.options = _cloneDeep(props.defaultOptions);\n  }\n\n  getFrameOfReferenceUID: () => string;\n  canvasToWorld: (canvasPos: Point2) => Point3;\n  worldToCanvas: (worldPos: Point3) => Point2;\n  customRenderViewportToCanvas: () => unknown;\n  resize: () => void;\n  getProperties: () => void;\n\n  static get useCustomRenderingPipeline(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the rendering engine driving the `Viewport`.\n   *\n   * @returns The RenderingEngine instance.\n   */\n  public getRenderingEngine(): IRenderingEngine {\n    return renderingEngineCache.get(this.renderingEngineId);\n  }\n\n  /**\n   * Returns the `vtkRenderer` responsible for rendering the `Viewport`.\n   *\n   * @returns The `vtkRenderer` for the `Viewport`.\n   */\n  public getRenderer() {\n    const renderingEngine = this.getRenderingEngine();\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      throw new Error('Rendering engine has been destroyed');\n    }\n\n    return renderingEngine.offscreenMultiRenderWindow.getRenderer(this.id);\n  }\n\n  /**\n   * Renders the `Viewport` using the `RenderingEngine`.\n   */\n  public render(): void {\n    const renderingEngine = this.getRenderingEngine();\n\n    renderingEngine.renderViewport(this.id);\n  }\n\n  /**\n   * Sets new options and (TODO) applies them.\n   *\n   * @param options - The viewport options to set.\n   * @param immediate - If `true`, renders the viewport after the options are set.\n   */\n  public setOptions(options: ViewportInputOptions, immediate = false): void {\n    this.options = <ViewportInputOptions>_cloneDeep(options);\n\n    // TODO When this is needed we need to move the camera position.\n    // We can steal some logic from the tools we build to do this.\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Resets the options the `Viewport`'s `defaultOptions`\n   *\n   * @param immediate - If `true`, renders the viewport after the options are reset.\n   */\n  public reset(immediate = false) {\n    this.options = _cloneDeep(this.defaultOptions);\n\n    // TODO When this is needed we need to move the camera position.\n    // We can steal some logic from the tools we build to do this.\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  protected applyFlipTx = (worldPos: Point3): Point3 => {\n    const actor = this.getDefaultActor();\n\n    if (!actor) {\n      return worldPos;\n    }\n\n    const volumeActor = actor.volumeActor;\n    const mat = volumeActor.getMatrix();\n\n    const newPos = vec3.create();\n    const matT = mat4.create();\n    mat4.transpose(matT, mat);\n    vec3.transformMat4(newPos, worldPos, matT);\n\n    return [newPos[0], newPos[1], newPos[2]];\n  };\n\n  /**\n   * Flip the viewport on horizontal or vertical axis, this method\n   * works with vtk-js backed rendering pipeline.\n   *\n   * @param flipOptions - Flip options specifying the axis of flip\n   * @param flipOptions.flipHorizontal - Flip the viewport on horizontal axis\n   * @param flipOptions.flipVertical - Flip the viewport on vertical axis\n   */\n  protected flip({ flipHorizontal, flipVertical }: FlipDirection): void {\n    const imageData = this.getDefaultImageData();\n\n    if (!imageData) {\n      return;\n    }\n\n    let flipH = false;\n    let flipV = false;\n\n    if (\n      typeof flipHorizontal !== 'undefined' &&\n      ((flipHorizontal && !this.flipHorizontal) ||\n        (!flipHorizontal && this.flipHorizontal))\n    ) {\n      flipH = true;\n    }\n\n    if (\n      typeof flipVertical !== 'undefined' &&\n      ((flipVertical && !this.flipVertical) ||\n        (!flipVertical && this.flipVertical))\n    ) {\n      flipV = true;\n    }\n\n    if (!flipH && !flipV) {\n      return;\n    }\n\n    // In Cornerstone gpu rendering pipeline, the images are positioned\n    // in the space according to their origin, and direction (even StackViewport\n    // with one slice only). In order to flip the images, we need to flip them\n    // around their center axis (either horizontal or vertical). Since the images\n    // are positioned in the space according to their origin and direction, for a\n    // proper scaling (flipping), they should be transformed to the origin and\n    // then flipped. The following code does this transformation.\n\n    const origin = imageData.getOrigin();\n    const direction = imageData.getDirection();\n    const spacing = imageData.getSpacing();\n    const size = imageData.getDimensions();\n\n    const iVector = direction.slice(0, 3);\n    const jVector = direction.slice(3, 6);\n    const kVector = direction.slice(6, 9);\n\n    // finding the center of the image\n    const center = vec3.create();\n    vec3.scaleAndAdd(center, origin, iVector, (size[0] / 2.0) * spacing[0]);\n    vec3.scaleAndAdd(center, center, jVector, (size[1] / 2.0) * spacing[1]);\n    vec3.scaleAndAdd(center, center, kVector, (size[2] / 2.0) * spacing[2]);\n\n    let flipHTx, flipVTx;\n\n    const transformToOriginTx = vtkMatrixBuilder\n      .buildFromRadian()\n      .identity()\n      .translate(center[0], center[1], center[2])\n      .rotateFromDirections(jVector, [0, 1, 0])\n      .rotateFromDirections(iVector, [1, 0, 0]);\n\n    const transformBackFromOriginTx = vtkMatrixBuilder\n      .buildFromRadian()\n      .identity()\n      .rotateFromDirections([1, 0, 0], iVector)\n      .rotateFromDirections([0, 1, 0], jVector)\n      .translate(-center[0], -center[1], -center[2]);\n\n    if (flipH) {\n      this.flipHorizontal = flipHorizontal;\n      flipHTx = vtkMatrixBuilder\n        .buildFromRadian()\n        .multiply(transformToOriginTx.getMatrix())\n        .scale(-1, 1, 1)\n        .multiply(transformBackFromOriginTx.getMatrix());\n    }\n\n    if (flipV) {\n      this.flipVertical = flipVertical;\n      flipVTx = vtkMatrixBuilder\n        .buildFromRadian()\n        .multiply(transformToOriginTx.getMatrix())\n        .scale(1, -1, 1)\n        .multiply(transformBackFromOriginTx.getMatrix());\n    }\n\n    const actors = this.getActors();\n\n    actors.forEach((actor) => {\n      const volumeActor = actor.volumeActor;\n\n      const mat = volumeActor.getUserMatrix();\n\n      if (flipHTx) {\n        mat4.multiply(mat, mat, flipHTx.getMatrix());\n      }\n\n      if (flipVTx) {\n        mat4.multiply(mat, mat, flipVTx.getMatrix());\n      }\n\n      volumeActor.setUserMatrix(mat);\n\n      this.getRenderingEngine().render();\n    });\n\n    this.getRenderingEngine().render();\n  }\n\n  private getDefaultImageData(): any {\n    const actor = this.getDefaultActor();\n\n    if (actor) {\n      return actor.volumeActor.getMapper().getInputData();\n    }\n  }\n\n  /**\n   * Get the default actor\n   * @returns An actor entry.\n   */\n  public getDefaultActor(): ActorEntry {\n    return this.getActors()[0];\n  }\n\n  /**\n   * Get all the actors in the viewport\n   * @returns An array of ActorEntry objects.\n   */\n  public getActors(): Array<ActorEntry> {\n    return Array.from(this._actors.values());\n  }\n\n  /**\n   * Get an actor by its UID\n   * @param actorUID - The unique ID of the actor.\n   * @returns An ActorEntry object.\n   */\n  public getActor(actorUID: string): ActorEntry {\n    return this._actors.get(actorUID);\n  }\n\n  /**\n   * It removes all actors from the viewport and then adds the actors from the array.\n   * @param actors - An array of ActorEntry objects.\n   */\n  public setActors(actors: Array<ActorEntry>): void {\n    this.removeAllActors();\n    this.addActors(actors);\n  }\n\n  /**\n   * Remove the actor from the viewport\n   * @param actorUID - The unique identifier for the actor.\n   */\n  public removeActor(actorUID: string): void {\n    const actor = this.getActor(actorUID);\n    if (!actor) {\n      console.warn(`Actor ${actorUID} does not exist for this viewport`);\n      return;\n    }\n    const renderer = this.getRenderer();\n    renderer.removeViewProp(actor.volumeActor); // removeActor not implemented in vtk?\n    this._actors.delete(actorUID);\n  }\n\n  /**\n   * Remove the actors with the given UIDs from the viewport\n   * @param actorUIDs - An array of actor UIDs to remove.\n   */\n  public removeActors(actorUIDs: Array<string>): void {\n    actorUIDs.forEach((actorUID) => {\n      this.removeActor(actorUID);\n    });\n  }\n\n  /**\n   * Add a list of actors (actor entries) to the viewport\n   * @param actors - An array of ActorEntry objects.\n   */\n  public addActors(actors: Array<ActorEntry>): void {\n    actors.forEach((actor) => this.addActor(actor));\n  }\n\n  /**\n   * Add an actor to the viewport including its id, its volumeActor and slabThickness\n   * if defined\n   * @param actorEntry - ActorEntry\n   * @param actorEntry.uid - The unique identifier for the actor.\n   * @param actorEntry.volumeActor - The volume actor.\n   * @param actorEntry.slabThickness - The slab thickness.\n   */\n  public addActor(actorEntry: ActorEntry): void {\n    const { uid: actorUID, volumeActor } = actorEntry;\n    const renderingEngine = this.getRenderingEngine();\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      console.warn(\n        `Cannot add actor UID of ${actorUID} Rendering Engine has been destroyed`\n      );\n      return;\n    }\n\n    if (!actorUID || !volumeActor) {\n      throw new Error('Actors should have uid and vtk volumeActor properties');\n    }\n\n    const actor = this.getActor(actorUID);\n    if (actor) {\n      console.warn(`Actor ${actorUID} already exists for this viewport`);\n      return;\n    }\n\n    const renderer = this.getRenderer();\n    renderer.addActor(volumeActor);\n    this._actors.set(actorUID, Object.assign({}, actorEntry));\n  }\n\n  /**\n   * Remove all actors from the renderer\n   */\n  public removeAllActors(): void {\n    this.getRenderer().removeAllViewProps();\n    this._actors = new Map();\n    return;\n  }\n\n  /**\n   * Reset the camera to the default viewport camera without firing events\n   */\n  protected resetCameraNoEvent(): void {\n    this._suppressCameraModifiedEvents = true;\n    this.resetCamera();\n    this._suppressCameraModifiedEvents = false;\n  }\n\n  /**\n   * Sets the camera to the default viewport camera without firing events\n   * @param camera - The camera to use for the viewport.\n   */\n  protected setCameraNoEvent(camera: ICamera): void {\n    this._suppressCameraModifiedEvents = true;\n    this.setCamera(camera);\n    this._suppressCameraModifiedEvents = false;\n  }\n\n  /**\n   * Calculates the intersections between the volume's boundaries and the viewplane.\n   * 1) Determine the viewplane using the camera's ViewplaneNormal and focalPoint.\n   * 2) Using volumeBounds, calculate the line equation for the 3D volume's 12 edges.\n   * 3) Intersect each edge to the viewPlane and see whether the intersection point is inside the volume bounds.\n   * 4) Return list of intersection points\n   * It should be noted that intersection points may range from 3 to 6 points.\n   * Orthogonal views have four points of intersection.\n   *\n   * @param imageData - vtkImageData\n   * @param focalPoint - camera focal point\n   * @param normal - view plane normal\n   * @returns intersections list\n   */\n  private _getViewImageDataIntersections(imageData, focalPoint, normal) {\n    // Viewplane equation: Ax+By+Cz=D\n    const A = normal[0];\n    const B = normal[1];\n    const C = normal[2];\n    const D = A * focalPoint[0] + B * focalPoint[1] + C * focalPoint[2];\n\n    // Computing the edges of the 3D cube\n    const bounds = imageData.getBounds();\n    const edges = this._getEdges(bounds);\n\n    const intersections = [];\n\n    for (const edge of edges) {\n      // start point: [x0, y0, z0], end point: [x1, y1, z1]\n      const [[x0, y0, z0], [x1, y1, z1]] = edge;\n      // Check if the edge is parallel to plane\n      if (A * (x1 - x0) + B * (y1 - y0) + C * (z1 - z0) === 0) {\n        continue;\n      }\n      const intersectionPoint = planar.linePlaneIntersection(\n        [x0, y0, z0],\n        [x1, y1, z1],\n        [A, B, C, D]\n      );\n\n      if (this._isInBounds(intersectionPoint, bounds)) {\n        intersections.push(intersectionPoint);\n      }\n    }\n\n    return intersections;\n  }\n\n  /**\n   * Resets the camera based on the rendering volume(s) bounds. If\n   * resetPanZoomForViewPlane is false (default behavior), it places\n   * the focal point at the center of the volume (or slice); otherwise,\n   * only the camera zoom and camera Pan is reset for the current view.\n   * @param resetPanZoomForViewPlane - if true, it renders the center of the volume instead\n   * @returns boolean\n   */\n  protected resetCamera(resetPanZoomForViewPlane = false): boolean {\n    const renderer = this.getRenderer();\n    const previousCamera = _cloneDeep(this.getCamera());\n\n    const bounds = renderer.computeVisiblePropBounds();\n    const focalPoint = [0, 0, 0];\n    const imageData = this.getDefaultImageData();\n\n    // Todo: remove this, this is just for tests passing\n    if (imageData) {\n      const spc = imageData.getSpacing();\n\n      bounds[0] = bounds[0] + spc[0] / 2;\n      bounds[1] = bounds[1] - spc[0] / 2;\n      bounds[2] = bounds[2] + spc[1] / 2;\n      bounds[3] = bounds[3] - spc[1] / 2;\n      bounds[4] = bounds[4] + spc[2] / 2;\n      bounds[5] = bounds[5] - spc[2] / 2;\n    }\n\n    const activeCamera = this.getVtkActiveCamera();\n    const viewPlaneNormal = <Point3>activeCamera.getViewPlaneNormal();\n    const viewUp = <Point3>activeCamera.getViewUp();\n\n    // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n    // todo: parallel projection only\n    activeCamera.setViewAngle(90.0);\n\n    focalPoint[0] = (bounds[0] + bounds[1]) / 2.0;\n    focalPoint[1] = (bounds[2] + bounds[3]) / 2.0;\n    focalPoint[2] = (bounds[4] + bounds[5]) / 2.0;\n\n    if (imageData) {\n      const dimensions = imageData.getDimensions();\n      const middleIJK = dimensions.map((d) => Math.floor(d / 2));\n\n      const idx = [middleIJK[0], middleIJK[1], middleIJK[2]];\n      imageData.indexToWorld(idx, focalPoint);\n    }\n\n    const { widthWorld, heightWorld } =\n      this._getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal);\n\n    const canvasSize = [this.sWidth, this.sHeight];\n\n    const boundsAspectRatio = widthWorld / heightWorld;\n    const canvasAspectRatio = canvasSize[0] / canvasSize[1];\n\n    let radius;\n\n    if (boundsAspectRatio < canvasAspectRatio) {\n      // can fit full height, so use it.\n      radius = heightWorld / 2;\n    } else {\n      const scaleFactor = boundsAspectRatio / canvasAspectRatio;\n\n      radius = (heightWorld * scaleFactor) / 2;\n    }\n\n    //const angle = vtkMath.radiansFromDegrees(activeCamera.getViewAngle())\n    const parallelScale = 1.1 * radius;\n\n    let w1 = bounds[1] - bounds[0];\n    let w2 = bounds[3] - bounds[2];\n    let w3 = bounds[5] - bounds[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    radius = w1 + w2 + w3;\n\n    // If we have just a single point, pick a radius of 1.0\n    radius = radius === 0 ? 1.0 : radius;\n\n    // compute the radius of the enclosing sphere\n    radius = Math.sqrt(radius) * 0.5;\n\n    const distance = 1.1 * radius;\n    // const distance = radius / Math.sin(angle * 0.5)\n\n    // check view-up vector against view plane normal\n    if (Math.abs(vtkMath.dot(viewUp, viewPlaneNormal)) > 0.999) {\n      activeCamera.setViewUp(-viewUp[2], viewUp[0], viewUp[1]);\n    }\n\n    let focalPointToSet = focalPoint;\n\n    if (resetPanZoomForViewPlane && imageData) {\n      focalPointToSet = this._getFocalPointForViewPlaneReset(imageData);\n    }\n\n    activeCamera.setFocalPoint(\n      focalPointToSet[0],\n      focalPointToSet[1],\n      focalPointToSet[2]\n    );\n    activeCamera.setPosition(\n      focalPointToSet[0] + distance * viewPlaneNormal[0],\n      focalPointToSet[1] + distance * viewPlaneNormal[1],\n      focalPointToSet[2] + distance * viewPlaneNormal[2]\n    );\n\n    renderer.resetCameraClippingRange(bounds);\n\n    activeCamera.setParallelScale(parallelScale);\n\n    // update reasonable world to physical values\n    activeCamera.setPhysicalScale(radius);\n\n    // TODO: The PhysicalXXX stuff are used for VR only, do we need this?\n    activeCamera.setPhysicalTranslation(\n      -focalPointToSet[0],\n      -focalPointToSet[1],\n      -focalPointToSet[2]\n    );\n\n    // instead of setThicknessFromFocalPoint we should do it here\n    activeCamera.setClippingRange(distance, distance + 0.1);\n\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer,\n    };\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n\n    if (!this._suppressCameraModifiedEvents && !this.suppressEvents) {\n      const eventDetail = {\n        previousCamera: previousCamera,\n        camera: this.getCamera(),\n        canvas: this.canvas,\n        element: this.element,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n      };\n\n      // For crosshairs to adapt to new viewport size\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n\n    return true;\n  }\n\n  /**\n   * Because the focalPoint is always in the centre of the viewport,\n   * we must do planar computations if the frame (image \"slice\") is to be preserved.\n   * 1. Calculate the intersection of the view plane with the imageData\n   * which results in points of intersection (minimum of 3, maximum of 6)\n   * 2. Calculate average of the intersection points to get newFocalPoint\n   * 3. Set the new focalPoint\n   * @param imageData - imageData\n   * @returns focalPoint\n   */\n  private _getFocalPointForViewPlaneReset(imageData) {\n    // Todo: move some where else\n    const { focalPoint, viewPlaneNormal: normal } = this.getCamera();\n    const intersections = this._getViewImageDataIntersections(\n      imageData,\n      focalPoint,\n      normal\n    );\n\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\n    intersections.forEach(([point_x, point_y, point_z]) => {\n      x += point_x;\n      y += point_y;\n      z += point_z;\n    });\n\n    // Set the focal point on the average of the intersection points\n    return [\n      x / intersections.length,\n      y / intersections.length,\n      z / intersections.length,\n    ];\n  }\n\n  /**\n   * Gets the target output canvas for the `Viewport`.\n   *\n   * @returns an HTMLCanvasElement.\n   */\n  public getCanvas(): HTMLCanvasElement {\n    return <HTMLCanvasElement>this.canvas;\n  }\n  /**\n   * Gets the active vtkCamera for the viewport.\n   *\n   * @returns vtk driven camera\n   */\n  protected getVtkActiveCamera(): vtkCamera | vtkSlabCamera {\n    const renderer = this.getRenderer();\n\n    return renderer.getActiveCamera();\n  }\n\n  /**\n   * Get the camera's current state\n   * @returns The camera object.\n   */\n  public getCamera(): ICamera {\n    const vtkCamera = this.getVtkActiveCamera();\n\n    // TODO: Make sure these are deep copies.\n    let slabThickness;\n    // Narrowing down the type for typescript\n    if ('getSlabThickness' in vtkCamera) {\n      slabThickness = vtkCamera.getSlabThickness();\n    }\n\n    return {\n      viewUp: <Point3>vtkCamera.getViewUp(),\n      viewPlaneNormal: <Point3>vtkCamera.getViewPlaneNormal(),\n      clippingRange: <Point2>vtkCamera.getClippingRange(),\n      // TODO: I'm really not sure about this, it requires a calculation, and\n      // how useful is this without the renderer context?\n      // Lets add it back if we find we need it.\n      //compositeProjectionMatrix: vtkCamera.getCompositeProjectionMatrix(),\n      //\n      //\n      // Compensating for the flipped viewport. Since our method for flipping is\n      // flipping the actor matrix itself, the focal point won't change; therefore,\n      // we need to accommodate for this required change elsewhere\n      // vec3.sub(dir, viewport.applyFlipTx(focalPoint), point)\n      position: <Point3>this.applyFlipTx(vtkCamera.getPosition() as Point3),\n      focalPoint: <Point3>this.applyFlipTx(vtkCamera.getFocalPoint() as Point3),\n      // position: <Point3>vtkCamera.getPosition(),\n      // focalPoint: <Point3>vtkCamera.getFocalPoint(),\n      parallelProjection: vtkCamera.getParallelProjection(),\n      parallelScale: vtkCamera.getParallelScale(),\n      viewAngle: vtkCamera.getViewAngle(),\n      slabThickness,\n    };\n  }\n\n  /**\n   * Set the camera parameters\n   * @param cameraInterface - ICamera\n   */\n  public setCamera(cameraInterface: ICamera): void {\n    const vtkCamera = this.getVtkActiveCamera();\n    const previousCamera = _cloneDeep(this.getCamera());\n    const updatedCamera = Object.assign({}, previousCamera, cameraInterface);\n    const {\n      viewUp,\n      viewPlaneNormal,\n      clippingRange,\n      position,\n      focalPoint,\n      parallelScale,\n      viewAngle,\n      slabThickness,\n    } = cameraInterface;\n\n    if (viewUp !== undefined) {\n      vtkCamera.setViewUp(viewUp);\n    }\n\n    if (viewPlaneNormal !== undefined) {\n      vtkCamera.setDirectionOfProjection(\n        -viewPlaneNormal[0],\n        -viewPlaneNormal[1],\n        -viewPlaneNormal[2]\n      );\n    }\n\n    if (clippingRange !== undefined) {\n      vtkCamera.setClippingRange(clippingRange);\n    }\n\n    if (position !== undefined) {\n      vtkCamera.setPosition(...this.applyFlipTx(position));\n    }\n\n    if (focalPoint !== undefined) {\n      vtkCamera.setFocalPoint(...this.applyFlipTx(focalPoint));\n    }\n\n    if (parallelScale !== undefined) {\n      vtkCamera.setParallelScale(parallelScale);\n    }\n\n    if (viewAngle !== undefined) {\n      vtkCamera.setViewAngle(viewAngle);\n    }\n\n    if (slabThickness !== undefined && 'setSlabThickness' in vtkCamera) {\n      vtkCamera.setSlabThickness(slabThickness);\n    }\n\n    if (!this._suppressCameraModifiedEvents && !this.suppressEvents) {\n      const eventDetail = {\n        previousCamera,\n        camera: updatedCamera,\n        canvas: this.canvas,\n        element: this.element,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n      };\n\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n\n    if (this.type == ViewportType.PERSPECTIVE) {\n      const renderer = this.getRenderer();\n\n      renderer.resetCameraClippingRange();\n    }\n  }\n\n  private _getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal) {\n    const viewUpCorners = this._getCorners(bounds);\n    const viewRightCorners = this._getCorners(bounds);\n\n    let viewRight = vec3.create();\n\n    vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n    viewRight = [-viewRight[0], -viewRight[1], -viewRight[2]];\n\n    let transform = vtkMatrixBuilder\n      .buildFromDegree()\n      .identity()\n      .rotateFromDirections(viewUp, [1, 0, 0]);\n\n    viewUpCorners.forEach((pt) => transform.apply(pt));\n\n    // range is now maximum X distance\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const y = viewUpCorners[i][0];\n      if (y > maxY) {\n        maxY = y;\n      }\n      if (y < minY) {\n        minY = y;\n      }\n    }\n\n    transform = vtkMatrixBuilder\n      .buildFromDegree()\n      .identity()\n      .rotateFromDirections(viewRight, [1, 0, 0]);\n\n    viewRightCorners.forEach((pt) => transform.apply(pt));\n\n    // range is now maximum Y distance\n    let minX = Infinity;\n    let maxX = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const x = viewRightCorners[i][0];\n      if (x > maxX) {\n        maxX = x;\n      }\n      if (x < minX) {\n        minX = x;\n      }\n    }\n\n    return { widthWorld: maxX - minX, heightWorld: maxY - minY };\n  }\n\n  _getCorners(bounds: Array<number>): Array<number>[] {\n    return [\n      [bounds[0], bounds[2], bounds[4]],\n      [bounds[0], bounds[2], bounds[5]],\n      [bounds[0], bounds[3], bounds[4]],\n      [bounds[0], bounds[3], bounds[5]],\n      [bounds[1], bounds[2], bounds[4]],\n      [bounds[1], bounds[2], bounds[5]],\n      [bounds[1], bounds[3], bounds[4]],\n      [bounds[1], bounds[3], bounds[5]],\n    ];\n  }\n\n  /**\n   * Determines whether or not the 3D point position is inside the boundaries of the 3D imageData.\n   * @param point - 3D coordinate\n   * @param bounds - Bounds of the image\n   * @returns boolean\n   */\n  _isInBounds(point: Point3, bounds: number[]): boolean {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n    const [x, y, z] = point;\n    if (x < xMin || x > xMax || y < yMin || y > yMax || z < zMin || z > zMax) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Returns a list of edges for the imageData bounds, which are\n   * the cube edges in the case of volumeViewport edges.\n   * p1: front, bottom, left\n   * p2: front, top, left\n   * p3: back, bottom, left\n   * p4: back, top, left\n   * p5: front, bottom, right\n   * p6: front, top, right\n   * p7: back, bottom, right\n   * p8: back, top, right\n   * @param bounds - Bounds of the renderer\n   * @returns Edges of the containing bounds\n   */\n  _getEdges(bounds: Array<number>): Array<[number[], number[]]> {\n    const [p1, p2, p3, p4, p5, p6, p7, p8] = this._getCorners(bounds);\n    return [\n      [p1, p2],\n      [p1, p5],\n      [p1, p3],\n      [p2, p4],\n      [p2, p6],\n      [p3, p4],\n      [p3, p7],\n      [p4, p8],\n      [p5, p7],\n      [p5, p6],\n      [p6, p8],\n      [p7, p8],\n    ];\n  }\n}\n\nexport default Viewport;\n", "import macro from '@kitware/vtk.js/macros';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport { vec3, mat4 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\n\n/**\n * vtkSlabCamera - A dervied class of the core vtkCamera class\n *\n * This class adds a slabThickness parameter. The difference between this and\n * the regular thickness parameter is that the set method will not modify the\n * vtk camera range parameters.\n *\n * NOTE1: there is a 1:1 correspondence between a camera and a viewport.\n *\n * NOTE2: while the thickness is a property unique to the viewport/camera, the\n * blendMode is a property of a volume (which can be shared over multiple viewports)\n * and one viewport can have multiple volumes.\n *\n * NOTE3: In the case of thickness > 0.1, this customization is needed to\n * distinguish cases different BlendMode in the mapper shader. In fact, the same\n * shader is called over multiple volumes which can have different blend modes.\n * For example, if the blend mode is different from COMPOSITE and we\n * are rendering thin layers, the camera parameters in the shaders are derived\n * from the new slabThickness (which does not affect the vtk camera\n * clipping/range parameters).\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkSlabCamera(publicAPI, model) {\n  model.classHierarchy.push('vtkSlabCamera');\n\n  const tmpMatrix = mat4.create();\n\n  /**\n   * getProjectionMatrix - A fork of vtkCamera's getProjectionMatrix method.\n   * This fork performs most of the same actions, but if slabThicknessActive is\n   * true, then it uses the value of slabThickness for calculating the actual\n   * clipping range for the Z-buffer values that map to the near and far\n   * clipping planes.\n   */\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = mat4.create();\n\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n\n    mat4.identity(tmpMatrix);\n\n    let cRange0 = model.clippingRange[0];\n    let cRange1 = model.clippingRange[1];\n\n    if (model.slabThicknessActive) {\n      const cameraMidpoint =\n        (model.clippingRange[1] + model.clippingRange[0]) * 0.5;\n      cRange0 = cameraMidpoint - model.slabThickness;\n      cRange1 = cameraMidpoint + model.slabThickness;\n    }\n\n    const cWidth = cRange1 - cRange0;\n    const cRange = [\n      cRange0 + ((nearz + 1) * cWidth) / 2.0,\n      cRange0 + ((farz + 1) * cWidth) / 2.0,\n    ];\n\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(vtkMath.radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = cRange0 * tmp;\n        height = (cRange0 * tmp) / aspect;\n      } else {\n        width = cRange0 * tmp * aspect;\n        height = cRange0 * tmp;\n      }\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n\n      tmpMatrix[0] = (2.0 * znear) / (xmax - xmin);\n      tmpMatrix[5] = (2.0 * znear) / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = (-2.0 * znear * zfar) / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n\n    mat4.copy(result, tmpMatrix);\n\n    return result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slabThickness: null,\n  slabThicknessActive: false,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCamera.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['slabThickness', 'slabThicknessActive']);\n\n  // Object methods\n  vtkSlabCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSlabCamera');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n", "function e(e,t,r,n){return new(r||(r=Promise))((function(o,a){function i(e){try{d(n.next(e))}catch(e){a(e)}}function c(e){try{d(n.throw(e))}catch(e){a(e)}}function d(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,c)}d((n=n.apply(e,t||[])).next())}))}const t=[\"geforce 320m\",\"geforce 8600\",\"geforce 8600m gt\",\"geforce 8800 gs\",\"geforce 8800 gt\",\"geforce 9400\",\"geforce 9400m g\",\"geforce 9400m\",\"geforce 9600m gt\",\"geforce 9600m\",\"geforce fx go5200\",\"geforce gt 120\",\"geforce gt 130\",\"geforce gt 330m\",\"geforce gtx 285\",\"google swiftshader\",\"intel g41\",\"intel g45\",\"intel gma 4500mhd\",\"intel gma x3100\",\"intel hd 3000\",\"intel q45\",\"legacy\",\"mali-2\",\"mali-3\",\"mali-4\",\"quadro fx 1500\",\"quadro fx 4\",\"quadro fx 5\",\"radeon hd 2400\",\"radeon hd 2600\",\"radeon hd 4670\",\"radeon hd 4850\",\"radeon hd 4870\",\"radeon hd 5670\",\"radeon hd 5750\",\"radeon hd 6290\",\"radeon hd 6300\",\"radeon hd 6310\",\"radeon hd 6320\",\"radeon hd 6490m\",\"radeon hd 6630m\",\"radeon hd 6750m\",\"radeon hd 6770m\",\"radeon hd 6970m\",\"sgx 543\",\"sgx543\"];function r(e){return e=e.toLowerCase().replace(/^angle ?\\((.+)\\)*$/,\"$1\").replace(/\\s(\\d{1,2}gb|direct3d.+$)|\\(r\\)| \\([^)]+\\)$/g,\"\")}const n=\"undefined\"==typeof window,o=(()=>{if(n)return;const{userAgent:e,platform:t,maxTouchPoints:r}=window.navigator,o=/(iphone|ipod|ipad)/i.test(e),a=\"iPad\"===t||\"MacIntel\"===t&&r>0&&!window.MSStream;return{isIpad:a,isMobile:/android/i.test(e)||o||a,isSafari12:/Version\\/12.+Safari/.test(e)}})();function a(e,t,r){if(!r)return[t];const n=function(e){const t=\"\\n    precision highp float;\\n    attribute vec3 aPosition;\\n    varying float vvv;\\n    void main() {\\n      vvv = 0.31622776601683794;\\n      gl_Position = vec4(aPosition, 1.0);\\n    }\\n  \",r=\"\\n    precision highp float;\\n    varying float vvv;\\n    void main() {\\n      vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vvv;\\n      enc = fract(enc);\\n      enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\\n      gl_FragColor = enc;\\n    }\\n  \",n=e.createShader(35633),o=e.createShader(35632),a=e.createProgram();if(!(o&&n&&a))return;e.shaderSource(n,t),e.shaderSource(o,r),e.compileShader(n),e.compileShader(o),e.attachShader(a,n),e.attachShader(a,o),e.linkProgram(a),e.detachShader(a,n),e.detachShader(a,o),e.deleteShader(n),e.deleteShader(o),e.useProgram(a);const i=e.createBuffer();e.bindBuffer(34962,i),e.bufferData(34962,new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),35044);const c=e.getAttribLocation(a,\"aPosition\");e.vertexAttribPointer(c,3,5126,!1,0,0),e.enableVertexAttribArray(c),e.clearColor(1,1,1,1),e.clear(16384),e.viewport(0,0,1,1),e.drawArrays(4,0,3);const d=new Uint8Array(4);return e.readPixels(0,0,1,1,6408,5121,d),e.deleteProgram(a),e.deleteBuffer(i),d.join(\"\")}(e),a=\"801621810\",i=\"8016218135\",c=\"80162181161\",d=(null==o?void 0:o.isIpad)?[[\"a7\",c,12],[\"a8\",i,15],[\"a8x\",i,15],[\"a9\",i,15],[\"a9x\",i,15],[\"a10\",i,15],[\"a10x\",i,15],[\"a12\",a,15],[\"a12x\",a,15],[\"a12z\",a,15],[\"a14\",a,15],[\"m1\",a,15]]:[[\"a7\",c,12],[\"a8\",i,12],[\"a9\",i,15],[\"a10\",i,15],[\"a11\",a,15],[\"a12\",a,15],[\"a13\",a,15],[\"a14\",a,15]];let l;\"80162181255\"===n?l=d.filter((([,,e])=>e>=14)):(l=d.filter((([,e])=>e===n)),l.length||(l=d));return l.map((([e])=>`apple ${e} gpu`))}const i=[],c=[];function d(e,t){if(e===t)return 0;const r=e;e.length>t.length&&(e=t,t=r);let n=e.length,o=t.length;for(;n>0&&e.charCodeAt(~-n)===t.charCodeAt(~-o);)n--,o--;let a,d=0;for(;d<n&&e.charCodeAt(d)===t.charCodeAt(d);)d++;if(n-=d,o-=d,0===n)return o;let l,s,f=0,u=0,h=0;for(;u<n;)c[u]=e.charCodeAt(d+u),i[u]=++u;for(;h<o;)for(a=t.charCodeAt(d+h),l=h++,f=h,u=0;u<n;u++)s=a===c[u]?l:l+1,l=i[u],f=i[u]=l>f?s>f?f+1:s:s>l?l+1:s;return f}function l(e){return null!=e}class s extends Error{constructor(e){super(e),Object.setPrototypeOf(this,new.target.prototype)}}const f=({mobileTiers:i=[0,15,30,60],desktopTiers:c=[0,15,30,60],override:f={},glContext:u,failIfMajorPerformanceCaveat:h=!1,benchmarksURL:g=\"https://unpkg.com/detect-gpu@4.0.15/dist/benchmarks\"}={})=>e(void 0,void 0,void 0,(function*(){const p={};if(n)return{tier:0,type:\"SSR\"};const{isIpad:m=!!(null==o?void 0:o.isIpad),isMobile:v=!!(null==o?void 0:o.isMobile),screenSize:w=window.screen,loadBenchmarks:x=(t=>e(void 0,void 0,void 0,(function*(){const e=yield fetch(`${g}/${t}`).then((e=>e.json()));if(parseInt(e.shift().split(\".\")[0],10)<4)throw new s(\"Detect GPU benchmark data is out of date. Please update to version 4x\");return e})))}=f;let{renderer:A}=f;const P=(e,t,r,n,o)=>({device:o,fps:n,gpu:r,isMobile:v,tier:e,type:t});let b,S=\"\";if(A)A=r(A),b=[A];else{const e=u||function(e,t=!1){const r={alpha:!1,antialias:!1,depth:!1,failIfMajorPerformanceCaveat:t,powerPreference:\"high-performance\",stencil:!1};e&&delete r.powerPreference;const n=window.document.createElement(\"canvas\"),o=n.getContext(\"webgl\",r)||n.getContext(\"experimental-webgl\",r);return null!=o?o:void 0}(null==o?void 0:o.isSafari12,h);if(!e)return P(0,\"WEBGL_UNSUPPORTED\");const t=e.getExtension(\"WEBGL_debug_renderer_info\");if(t&&(A=e.getParameter(t.UNMASKED_RENDERER_WEBGL)),!A)return P(1,\"FALLBACK\");S=A,A=r(A),b=function(e,t,r){return\"apple gpu\"===t?a(e,t,r):[t]}(e,A,v)}const y=(yield Promise.all(b.map((t=>e(void 0,void 0,void 0,(function*(){var e;const r=(e=>{const t=v?[\"adreno\",\"apple\",\"mali-t\",\"mali\",\"nvidia\",\"powervr\"]:[\"intel\",\"apple\",\"amd\",\"radeon\",\"nvidia\",\"geforce\"];for(const r of t)if(e.includes(r))return r})(t);if(!r)return;const n=`${v?\"m\":\"d\"}-${r}${m?\"-ipad\":\"\"}.json`,o=p[n]=null!==(e=p[n])&&void 0!==e?e:x(n);let a;try{a=yield o}catch(e){if(e instanceof s)throw e;return}const i=function(e){var t;const r=(e=e.replace(/\\([^)]+\\)/,\"\")).match(/\\d+/)||e.match(/(\\W|^)([A-Za-z]{1,3})(\\W|$)/g);return null!==(t=null==r?void 0:r.join(\"\").replace(/\\W|amd/g,\"\"))&&void 0!==t?t:\"\"}(t);let c=a.filter((([,e])=>e===i));c.length||(c=a.filter((([e])=>e.includes(t))));const l=c.length;if(0===l)return;let f,[u,,,h]=l>1?c.map((e=>[e,d(t,e[0])])).sort((([,e],[,t])=>e-t))[0][0]:c[0],g=Number.MAX_VALUE;const{devicePixelRatio:A}=window,P=w.width*A*w.height*A;for(const e of h){const[t,r]=e,n=t*r,o=Math.abs(P-n);o<g&&(g=o,f=e)}if(!f)return;const[,,b,S]=f;return[g,b,u,S]})))))).filter(l).sort((([e=Number.MAX_VALUE,t],[r=Number.MAX_VALUE,n])=>e===r?t-n:e-r));if(!y.length){const e=t.find((e=>A.includes(e)));return e?P(0,\"BLOCKLISTED\",e):P(1,\"FALLBACK\",`${A} (${S})`)}const[,C,E,L]=y[0];if(-1===C)return P(0,\"BLOCKLISTED\",E,C,L);const M=v?i:c;let $=0;for(let e=0;e<M.length;e++)C>=M[e]&&($=e);return P($,\"BENCHMARK\",E,C,L)}));export{f as getGPUTier};\n//# sourceMappingURL=detect-gpu.esm.js.map\n", "import { getGPUTier } from 'detect-gpu';\n\nlet csRenderInitialized = false;\nlet useCPURendering = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL\nfunction hasActiveWebGLContext() {\n  // Create canvas element. The canvas is not added to the\n  // document itself, so it is never displayed in the\n  // browser window.\n  const canvas = document.createElement('canvas');\n  // Get WebGLRenderingContext from canvas element.\n  const gl =\n    canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n\n  // Report the result.\n  if (gl && gl instanceof WebGLRenderingContext) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Initialize the cornerstone-core. If the browser has a webgl context and\n * the detected gpu (by detect-gpu library) indicates the GPU is not low end we\n * will use webgl GPU rendering. Otherwise we will use cpu rendering.\n *\n * @param defaultConfiguration - A configuration object\n * @returns A promise that resolves to true cornerstone has been initialized successfully.\n * @category Initialization\n */\nasync function init(defaultConfiguration = {}): Promise<boolean> {\n  if (csRenderInitialized) {\n    return csRenderInitialized;\n  }\n\n  // detectGPU\n  const hasWebGLContext = hasActiveWebGLContext();\n  if (!hasWebGLContext) {\n    useCPURendering = true;\n    console.log('CornerstoneRender: GPU not detected, using CPU rendering');\n  } else {\n    const gpuTier = await getGPUTier();\n    console.log(\n      'CornerstoneRender: Using detect-gpu to get the GPU benchmark:',\n      gpuTier\n    );\n    if (gpuTier.tier < 1) {\n      console.log(\n        'CornerstoneRender: GPU is not powerful enough, using CPU rendering'\n      );\n      useCPURendering = true;\n    } else {\n      console.log('CornerstoneRender: using GPU rendering');\n    }\n  }\n  csRenderInitialized = true;\n  return csRenderInitialized;\n}\n\n/**\n * It sets the useCPURenderingOnlyForDebugOrTests variable to the status value.\n * This only should be used for debugging or tests. DO NOT USE IT IF YOU ARE NOT\n * SURE WHAT YOU ARE DOING.\n * @param status - boolean\n * @category Initialization\n *\n */\nfunction setUseCPURendering(status: boolean): void {\n  useCPURendering = status;\n  csRenderInitialized = true;\n}\n\n/**\n * Resets the cornerstone-core init state if it has been manually\n * initialized to force use the cpu rendering (e.g., for tests)\n * @category Initialization\n *\n */\nfunction resetUseCPURendering() {\n  useCPURendering = !hasActiveWebGLContext();\n}\n\n/**\n * Returns whether or not we are using CPU rendering.\n * @returns true if we are using CPU rendering.\n * @category Initialization\n *\n */\nfunction getShouldUseCPURendering(): boolean {\n  return useCPURendering;\n}\n\n/**\n *\n * Returns whether or not cornerstone-core has been initialized.\n * @returns true if the cornerstone render has been initialized.\n * @category Initialization\n *\n */\nfunction isCornerstoneInitialized(): boolean {\n  return csRenderInitialized;\n}\n\nexport {\n  init,\n  getShouldUseCPURendering,\n  isCornerstoneInitialized,\n  setUseCPURendering,\n  resetUseCPURendering,\n};\n", "import { vec3 } from 'gl-matrix';\n\nimport cache from '../cache';\nimport ViewportType from '../enums/ViewportType';\nimport Viewport from './Viewport';\nimport { createVolumeActor } from './helpers';\nimport { loadVolume } from '../volumeLoader';\nimport vtkSlabCamera from './vtkClasses/vtkSlabCamera';\nimport { getShouldUseCPURendering } from '../init';\nimport type { vtkSlabCamera as vtkSlabCameraType } from './vtkClasses/vtkSlabCamera';\nimport type {\n  Point2,\n  Point3,\n  IImageData,\n  IVolumeInput,\n  ActorEntry,\n  FlipDirection,\n} from '../types';\nimport type { ViewportInput } from '../types/IViewport';\nimport type IVolumeViewport from '../types/IVolumeViewport';\n\nconst EPSILON = 1e-3;\n\n/**\n * An object representing a VolumeViewport. VolumeViewports are used to render\n * 3D volumes from which various orientations can be viewed. Since VolumeViewports\n * use SharedVolumeMappers behind the scene, memory footprint of visualizations\n * of the same volume in different orientations is very small.\n *\n * For setting volumes on viewports you need to use {@link addVolumesToViewports}\n * which will add volumes to the specified viewports.\n */\nclass VolumeViewport extends Viewport implements IVolumeViewport {\n  useCPURendering = false;\n  private _FrameOfReferenceUID: string;\n\n  constructor(props: ViewportInput) {\n    super(props);\n\n    this.useCPURendering = getShouldUseCPURendering();\n\n    if (this.useCPURendering) {\n      throw new Error(\n        'VolumeViewports cannot be used whilst CPU Fallback Rendering is enabled.'\n      );\n    }\n\n    const renderer = this.getRenderer();\n\n    const camera = vtkSlabCamera.newInstance();\n    renderer.setActiveCamera(camera);\n\n    switch (this.type) {\n      case ViewportType.ORTHOGRAPHIC:\n        camera.setParallelProjection(true);\n        break;\n      case ViewportType.PERSPECTIVE:\n        camera.setParallelProjection(false);\n        break;\n      default:\n        throw new Error(`Unrecognized viewport type: ${this.type}`);\n    }\n\n    const { sliceNormal, viewUp } = this.defaultOptions.orientation;\n\n    camera.setDirectionOfProjection(\n      -sliceNormal[0],\n      -sliceNormal[1],\n      -sliceNormal[2]\n    );\n    camera.setViewUpFrom(viewUp);\n    camera.setFreezeFocalPoint(true);\n\n    this.resetCamera();\n  }\n\n  static get useCustomRenderingPipeline(): boolean {\n    return false;\n  }\n\n  /**\n   * Creates volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   * For each entry, if a `blendMode` and/or `slabThickness` is defined, this will be set on the actor's\n   * `VolumeMapper`.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async setVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false\n  ): Promise<void> {\n    const firstImageVolume = cache.getVolume(volumeInputArray[0].volumeId);\n\n    if (!firstImageVolume) {\n      throw new Error(\n        `imageVolume with id: ${firstImageVolume.volumeId} does not exist`\n      );\n    }\n\n    const FrameOfReferenceUID = firstImageVolume.metadata.FrameOfReferenceUID;\n\n    await this._isValidVolumeInputArray(volumeInputArray, FrameOfReferenceUID);\n\n    this._FrameOfReferenceUID = FrameOfReferenceUID;\n\n    const slabThicknessValues = [];\n    const volumeActors = [];\n\n    // One actor per volume\n    for (let i = 0; i < volumeInputArray.length; i++) {\n      const { volumeId, slabThickness, actorUID } = volumeInputArray[i];\n      const volumeActor = await createVolumeActor(volumeInputArray[i]);\n\n      // We cannot use only volumeId since then we cannot have for instance more\n      // than one representation of the same volume (since actors would have the\n      // same name, and we don't allow that) AND We cannot use only any uid, since\n      // we rely on the volume in the cache for mapper. So we prefer actorUID if\n      // it is defined, otherwise we use volumeId for the actor name.\n      const uid = actorUID || volumeId;\n      volumeActors.push({ uid, volumeActor, slabThickness });\n\n      if (\n        slabThickness !== undefined &&\n        !slabThicknessValues.includes(slabThickness)\n      ) {\n        slabThicknessValues.push(slabThickness);\n      }\n    }\n\n    if (slabThicknessValues.length > 1) {\n      console.warn(\n        'Currently slab thickness for intensity projections is tied to the camera, not per volume, using the largest of the two volumes for this viewport.'\n      );\n    }\n\n    this._setVolumeActors(volumeActors);\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Creates and adds volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async addVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false\n  ): Promise<void> {\n    const volumeActors = [];\n\n    await this._isValidVolumeInputArray(\n      volumeInputArray,\n      this._FrameOfReferenceUID\n    );\n\n    // One actor per volume\n    for (let i = 0; i < volumeInputArray.length; i++) {\n      const { volumeId, visibility, actorUID } = volumeInputArray[i];\n      const volumeActor = await createVolumeActor(volumeInputArray[i]);\n\n      if (visibility === false) {\n        volumeActor.setVisibility(false);\n      }\n\n      // We cannot use only volumeId since then we cannot have for instance more\n      // than one representation of the same volume (since actors would have the\n      // same name, and we don't allow that) AND We cannot use only any uid, since\n      // we rely on the volume in the cache for mapper. So we prefer actorUID if\n      // it is defined, otherwise we use volumeId for the actor name.\n      const uid = actorUID || volumeId;\n      volumeActors.push({ uid, volumeActor });\n    }\n\n    this.addActors(volumeActors);\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * It removes the volume actor from the Viewport. If the volume actor is not in\n   * the viewport, it does nothing.\n   * @param actorUIDs - Array of actor UIDs to remove. In case of simple volume it will\n   * be the volume Id, but in case of Segmentation it will be `{volumeId}-{representationType}`\n   * since the same volume can be rendered in multiple representations.\n   * @param immediate - If true, the Viewport will be rendered immediately\n   */\n  public removeVolumeActors(actorUIDs: Array<string>, immediate = false): void {\n    this.removeActors(actorUIDs);\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  private async _isValidVolumeInputArray(\n    volumeInputArray: Array<IVolumeInput>,\n    FrameOfReferenceUID: string\n  ): Promise<boolean> {\n    const numVolumes = volumeInputArray.length;\n\n    // Check all other volumes exist and have the same FrameOfReference\n    for (let i = 1; i < numVolumes; i++) {\n      const volumeInput = volumeInputArray[i];\n\n      const imageVolume = await loadVolume(volumeInput.volumeId);\n\n      if (!imageVolume) {\n        throw new Error(\n          `imageVolume with id: ${imageVolume.volumeId} does not exist`\n        );\n      }\n\n      if (FrameOfReferenceUID !== imageVolume.metadata.FrameOfReferenceUID) {\n        throw new Error(\n          `Volumes being added to viewport ${this.id} do not share the same FrameOfReferenceUID. This is not yet supported`\n        );\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Given a point in world coordinates, return the intensity at that point\n   * @param point - The point in world coordinates to get the intensity\n   * from.\n   * @returns The intensity value of the voxel at the given point.\n   */\n  public getIntensityFromWorld(point: Point3): number {\n    const volumeActor = this.getDefaultActor().volumeActor;\n    const imageData = volumeActor.getMapper().getInputData();\n\n    return imageData.getScalarValueFromWorld(point);\n  }\n\n  /**\n   * gets the visible bounds of the viewport in the world coordinate system\n   */\n  public getBounds(): number[] {\n    const renderer = this.getRenderer();\n    const bounds = renderer.computeVisiblePropBounds();\n    return bounds;\n  }\n\n  /**\n   * Flip the viewport along the desired axis\n   * @param flipDirection - FlipDirection\n   */\n  public flip(flipDirection: FlipDirection): void {\n    super.flip(flipDirection);\n  }\n\n  /**\n   * Reset the camera for the volume viewport\n   * @param resetPanZoomForViewPlane - only reset Pan and Zoom, if true,\n   * it renders the center of the volume instead\n   * viewport to the middle of the volume\n   */\n  public resetCamera(resetPanZoomForViewPlane = false): boolean {\n    return super.resetCamera(resetPanZoomForViewPlane);\n  }\n\n  public getFrameOfReferenceUID = (): string => {\n    return this._FrameOfReferenceUID;\n  };\n\n  /**\n   * Sets the slab thickness option in the `Viewport`'s `options`.\n   *\n   * @param slabThickness - The slab thickness to set.\n   */\n  public setSlabThickness(slabThickness: number): void {\n    this.setCamera({\n      slabThickness,\n    });\n  }\n\n  /**\n   * Gets the slab thickness option in the `Viewport`'s `options`.\n   *\n   * @returns slabThickness - The slab thickness.\n   */\n  public getSlabThickness(): number {\n    const { slabThickness } = this.getCamera();\n    return slabThickness;\n  }\n\n  /**\n   * Returns the image and its properties that is being shown inside the\n   * stack viewport. It returns, the image dimensions, image direction,\n   * image scalar data, vtkImageData object, metadata, and scaling (e.g., PET suvbw)\n   *\n   * @returns IImageData: {dimensions, direction, scalarData, vtkImageData, metadata, scaling}\n   */\n  public getImageData(): IImageData | undefined {\n    const actor = this.getDefaultActor();\n\n    if (!actor) {\n      return;\n    }\n\n    const { volumeActor } = actor;\n    const vtkImageData = volumeActor.getMapper().getInputData();\n    return {\n      dimensions: vtkImageData.getDimensions(),\n      spacing: vtkImageData.getSpacing(),\n      origin: vtkImageData.getOrigin(),\n      direction: vtkImageData.getDirection(),\n      scalarData: vtkImageData.getPointData().getScalars().getData(),\n      imageData: volumeActor.getMapper().getInputData(),\n      metadata: undefined,\n      scaling: undefined,\n    };\n  }\n\n  /**\n   * Currently only returning the flip direction of the viewport, Todo: should\n   * be like StackViewport to be able to return and also set other properties\n   * such as voi, invert, etc.\n   *\n   * @returns FlipDirection of the viewport\n   */\n  public getProperties = (): FlipDirection => {\n    return {\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical,\n    };\n  };\n\n  /**\n   * Attaches the volume actors to the viewport.\n   *\n   * @param volumeActorEntries - The volume actors to add the viewport.\n   *\n   * NOTE: overwrites the slab thickness value in the options if one of the actor has a higher value\n   */\n  private _setVolumeActors(volumeActorEntries: Array<ActorEntry>): void {\n    const renderer = this.getRenderer();\n\n    this.setActors(volumeActorEntries);\n    // volumeActorEntries.forEach((va) => renderer.addActor(va.volumeActor))\n\n    let slabThickness = null;\n    if (this.type === ViewportType.ORTHOGRAPHIC) {\n      volumeActorEntries.forEach((va) => {\n        if (va.slabThickness && va.slabThickness > slabThickness) {\n          slabThickness = va.slabThickness;\n        }\n      });\n\n      this.resetCamera();\n\n      const activeCamera = renderer.getActiveCamera();\n\n      // This is necessary to initialize the clipping range and it is not related\n      // to our custom slabThickness.\n      // activeCamera.setThicknessFromFocalPoint(0.1)\n      // This is necessary to give the slab thickness.\n      // NOTE: our custom camera implementation has an additional slab thickness\n      // values to handle MIP and non MIP volumes in the same viewport.\n      activeCamera.setSlabThickness(slabThickness);\n      activeCamera.setFreezeFocalPoint(true);\n    } else {\n      // Use default renderer resetCamera, fits bounding sphere of data.\n      renderer.resetCamera();\n\n      const activeCamera = renderer.getActiveCamera();\n\n      activeCamera.setFreezeFocalPoint(true);\n    }\n  }\n\n  /**\n   * canvasToWorld Returns the world coordinates of the given `canvasPos`\n   * projected onto the plane defined by the `Viewport`'s `vtkCamera`'s focal point\n   * and the direction of projection.\n   *\n   * @param canvasPos - The position in canvas coordinates.\n   * @returns The corresponding world coordinates.\n   * @public\n   */\n  public canvasToWorld = (canvasPos: Point2): Point3 => {\n    const vtkCamera = this.getVtkActiveCamera() as vtkSlabCameraType;\n\n    const slabThicknessActive = vtkCamera.getSlabThicknessActive();\n    // NOTE: this is necessary to disable our customization of getProjectionMatrix in the vtkSlabCamera,\n    // since getProjectionMatrix is used in vtk vtkRenderer.projectionToView. vtkRenderer.projectionToView is used\n    // in the volumeMapper (where we need our custom getProjectionMatrix) and in the coordinates transformations\n    // (where we don't need our custom getProjectionMatrix)\n    // TO DO: we should customize vtk to use our custom getProjectionMatrix only in the volumeMapper\n    vtkCamera.setSlabThicknessActive(false);\n\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = [canvasPos[0] + this.sx, canvasPos[1] + this.sy];\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    let worldCoord = openGLRenderWindow.displayToWorld(\n      displayCoord[0],\n      displayCoord[1],\n      0,\n      renderer\n    );\n\n    vtkCamera.setSlabThicknessActive(slabThicknessActive);\n\n    worldCoord = this.applyFlipTx(worldCoord);\n    return worldCoord;\n  };\n\n  /**\n   * Returns the canvas coordinates of the given `worldPos`\n   * projected onto the `Viewport`'s `canvas`.\n   *\n   * @param worldPos - The position in world coordinates.\n   * @returns The corresponding canvas coordinates.\n   * @public\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    const vtkCamera = this.getVtkActiveCamera() as vtkSlabCameraType;\n\n    const slabThicknessActive = vtkCamera.getSlabThicknessActive();\n    // NOTE: this is necessary to disable our customization of getProjectionMatrix in the vtkSlabCamera,\n    // since getProjectionMatrix is used in vtk vtkRenderer.projectionToView. vtkRenderer.projectionToView is used\n    // in the volumeMapper (where we need our custom getProjectionMatrix) and in the coordinates transformations\n    // (where we don't need our custom getProjectionMatrix)\n    // TO DO: we should customize vtk to use our custom getProjectionMatrix only in the volumeMapper\n    vtkCamera.setSlabThicknessActive(false);\n\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = openGLRenderWindow.worldToDisplay(\n      ...this.applyFlipTx(worldPos),\n      renderer\n    );\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const canvasCoord = <Point2>[\n      displayCoord[0] - this.sx,\n      displayCoord[1] - this.sy,\n    ];\n\n    vtkCamera.setSlabThicknessActive(slabThicknessActive);\n\n    return canvasCoord;\n  };\n\n  /**\n   * Uses viewport camera and volume actor to decide if the viewport\n   * is looking at the volume in the direction of acquisition (imageIds).\n   * If so, it uses the origin and focalPoint to calculate the slice index.\n   * Todo: This only works if the imageIds are properly sorted\n   *\n   * @returns The slice index\n   */\n  public getCurrentImageIdIndex = (): number | undefined => {\n    return this._getImageIdIndex();\n  };\n\n  /**\n   * Uses viewport camera and volume actor to decide if the viewport\n   * is looking at the volume in the direction of acquisition (imageIds).\n   * If so, it uses the origin and focalPoint to find which imageId is\n   * currently being viewed.\n   *\n   * @returns ImageId\n   */\n  public getCurrentImageId = (): string | undefined => {\n    const index = this._getImageIdIndex();\n\n    if (!index) {\n      return;\n    }\n\n    const { uid } = this.getDefaultActor();\n    const volume = cache.getVolume(uid);\n\n    if (!volume) {\n      return;\n    }\n\n    const imageIds = volume.imageIds;\n\n    return imageIds[index];\n  };\n\n  private _getImageIdIndex = () => {\n    const { viewPlaneNormal, focalPoint } = this.getCamera();\n\n    // Todo: handle scenario of fusion of multiple volumes\n    // we cannot only check number of actors, because we might have\n    // segmentations ...\n    const { direction, origin, spacing } = this.getImageData();\n\n    // get the last 3 components of the direction - axis normal\n    const dir = direction.slice(direction.length - 3);\n\n    const dot = Math.abs(\n      dir[0] * viewPlaneNormal[0] +\n        dir[1] * viewPlaneNormal[1] +\n        dir[2] * viewPlaneNormal[2]\n    );\n\n    // if dot is not 1 or -1 return null since it means\n    // viewport is not looking at the image acquisition plane\n    if (dot - 1 > EPSILON) {\n      return;\n    }\n\n    // how many steps are from the origin to the focal point in the\n    // normal direction\n    const spacingInNormal = spacing[2];\n    const sub = vec3.create();\n    vec3.sub(sub, focalPoint, origin);\n    const distance = vec3.dot(sub, viewPlaneNormal);\n\n    // divide by the spacing in the normal direction to get the\n    // number of steps, and subtract 1 to get the index\n    return Math.round(Math.abs(distance) / spacingInNormal);\n  };\n}\n\nexport default VolumeViewport;\n", "// This module defines a way to access various metadata about an imageId.  This layer of abstraction exists\n// So metadata can be provided in different ways (e.g. by parsing DICOM P10 or by a WADO-RS document)\n\nconst providers = [];\n\n/**\n * Adds a metadata provider with the specified priority\n * @param provider - Metadata provider function\n * @param priority - 0 is default/normal, > 0 is high, < 0 is low\n *\n * @category MetaData\n */\nexport function addProvider(\n  provider: (type: string, imageId: string) => { any },\n  priority = 0\n): void {\n  let i;\n\n  // Find the right spot to insert this provider based on priority\n  for (i = 0; i < providers.length; i++) {\n    if (providers[i].priority <= priority) {\n      break;\n    }\n  }\n\n  // Insert the decode task at position i\n  providers.splice(i, 0, {\n    priority,\n    provider,\n  });\n}\n\n/**\n * Removes the specified provider\n *\n * @param provider - Metadata provider function\n *\n * @category MetaData\n */\nexport function removeProvider(\n  provider: (type: string, imageId: string) => { any }\n): void {\n  for (let i = 0; i < providers.length; i++) {\n    if (providers[i].provider === provider) {\n      providers.splice(i, 1);\n\n      break;\n    }\n  }\n}\n\n/**\n * Removes all providers\n *\n * @category MetaData\n */\nexport function removeAllProviders(): void {\n  while (providers.length > 0) {\n    providers.pop();\n  }\n}\n\n/**\n * Gets metadata from the registered metadata providers.  Will call each one from highest priority to lowest\n * until one responds\n *\n * @param type -  The type of metadata requested from the metadata store\n * @param imageId - The Cornerstone Image Object's imageId\n *\n * @returns The metadata retrieved from the metadata store\n * @category MetaData\n */\nfunction getMetaData(type: string, imageId: string): any {\n  // Invoke each provider in priority order until one returns something\n  for (let i = 0; i < providers.length; i++) {\n    const result = providers[i].provider(type, imageId);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n}\n\nexport { getMetaData as get };\n", "/**\n * A utility that can be used to invert (in place) an RgbTransferFunction.\n *\n * @example\n * Grabbing a reference to the RGB Transfer function from the viewport:\n * ```\n * const rgbTransferFunction = viewport\n *   .getActor()\n *   .getProperty()\n *   .getRGBTransferFunction(0);\n *\n * rgbTransferFunction.setRange(0, 5);\n *\n * invertRgbTransferFunction(rgbTransferFunction);\n * ```\n *\n * @see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_ColorTransferFunction.html|VTK.js: ColorTransferFunction}\n * @param rgbTransferFunction\n */\nexport default function invertRgbTransferFunction(\n  rgbTransferFunction: any\n): void {\n  const size = rgbTransferFunction.getSize();\n\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    rgbTransferFunction.getNodeValue(index, nodeValue1);\n\n    nodeValue1[1] = 1 - nodeValue1[1];\n    nodeValue1[2] = 1 - nodeValue1[2];\n    nodeValue1[3] = 1 - nodeValue1[3];\n\n    rgbTransferFunction.setNodeValue(index, nodeValue1);\n  }\n}\n", "/**\n * Given a low and high window level, return the window width and window center\n * @param low - The low window level.\n * @param high - The high window level.\n * @returns a JavaScript object with two properties: windowWidth and windowCenter.\n */\nfunction toWindowLevel(\n  low: number,\n  high: number\n): {\n  windowWidth: number;\n  windowCenter: number;\n} {\n  const windowWidth = Math.abs(low - high);\n  const windowCenter = low + windowWidth / 2;\n\n  return { windowWidth, windowCenter };\n}\n\n/**\n * Given a window width and center, return the lower and upper bounds of the window\n * @param windowWidth - the width of the window in HU\n * @param windowCenter - The center of the window.\n * @returns a JavaScript object with two properties: lower and upper.\n */\nfunction toLowHighRange(\n  windowWidth: number,\n  windowCenter: number\n): {\n  lower: number;\n  upper: number;\n} {\n  const lower = windowCenter - windowWidth / 2.0;\n  const upper = windowCenter + windowWidth / 2.0;\n\n  return { lower, upper };\n}\n\nexport { toWindowLevel, toLowHighRange };\n", "/**\n * returns equal if the two arrays are identical within the\n * given tolerance.\n *\n * @param v1 - The first array of values\n * @param v2 - The second array of values.\n * @param tolerance - The acceptable tolerance, the default is 0.00001\n *\n * @returns True if the two values are within the tolerance levels.\n */\nexport default function isEqual(\n  v1: number[] | Float32Array,\n  v2: number[] | Float32Array,\n  tolerance = 1e-5\n): boolean {\n  if (v1.length !== v2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < v1.length; i++) {\n    if (Math.abs(v1[i] - v2[i]) > tolerance) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "/**\n * Use the performance.now() method if possible, and if not, use Date.now()\n *\n * @return {number} Time elapsed since the time origin\n * @memberof Polyfills\n */\nexport default function (): number {\n  if (window.performance) {\n    return performance.now();\n  }\n\n  return Date.now();\n}\n", "/* eslint no-bitwise: 0 */\n\n/**\n * Volume of Interest Lookup Table Function\n *\n * @typedef {Function} VOILUTFunction\n *\n * @param {Number} modalityLutValue\n * @returns {Number} transformed value\n * @memberof Objects\n */\n\n/**\n * @module: VOILUT\n */\n\n/**\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateLinearVOILUT(windowWidth: number, windowCenter: number) {\n  return function (modalityLutValue) {\n    return ((modalityLutValue - windowCenter) / windowWidth + 0.5) * 255.0;\n  };\n}\n\n/**\n * Generate a non-linear volume of interest lookup table\n *\n * @param {LUT} voiLUT Volume of Interest Lookup Table Object\n *\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateNonLinearVOILUT(voiLUT) {\n  // We don't trust the voiLUT.numBitsPerEntry, mainly thanks to Agfa!\n  const bitsPerEntry = Math.max(...voiLUT.lut).toString(2).length;\n  const shift = bitsPerEntry - 8;\n  const minValue = voiLUT.lut[0] >> shift;\n  const maxValue = voiLUT.lut[voiLUT.lut.length - 1] >> shift;\n  const maxValueMapped = voiLUT.firstValueMapped + voiLUT.lut.length - 1;\n\n  return function (modalityLutValue) {\n    if (modalityLutValue < voiLUT.firstValueMapped) {\n      return minValue;\n    } else if (modalityLutValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return voiLUT.lut[modalityLutValue - voiLUT.firstValueMapped] >> shift;\n  };\n}\n\n/**\n * Retrieve a VOI LUT mapping function given the current windowing settings\n * and the VOI LUT for the image\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @param {LUT} [voiLUT] Volume of Interest Lookup Table Object\n *\n * @return {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nexport default function (windowWidth: number, windowCenter: number, voiLUT) {\n  if (voiLUT) {\n    return generateNonLinearVOILUT(voiLUT);\n  }\n\n  return generateLinearVOILUT(windowWidth, windowCenter);\n}\n", "import {\n  CPUFallbackTransform,\n  Point2,\n  TransformMatrix2D,\n} from '../../../../types';\n\n// By Simon Sarris\n// Www.simonsarris.com\n// Sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    Var t = new Transform();\n//    T.rotate(5);\n//    Var m = t.m;\n//    Ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    Ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\nexport class Transform implements CPUFallbackTransform {\n  private m: TransformMatrix2D;\n\n  constructor() {\n    this.reset();\n  }\n\n  getMatrix(): TransformMatrix2D {\n    return this.m;\n  }\n\n  reset(): void {\n    this.m = [1, 0, 0, 1, 0, 0];\n  }\n\n  clone(): CPUFallbackTransform {\n    const transform = new Transform();\n\n    transform.m[0] = this.m[0];\n    transform.m[1] = this.m[1];\n    transform.m[2] = this.m[2];\n    transform.m[3] = this.m[3];\n    transform.m[4] = this.m[4];\n    transform.m[5] = this.m[5];\n\n    return transform;\n  }\n\n  multiply(matrix: TransformMatrix2D): void {\n    const m11 = this.m[0] * matrix[0] + this.m[2] * matrix[1];\n    const m12 = this.m[1] * matrix[0] + this.m[3] * matrix[1];\n\n    const m21 = this.m[0] * matrix[2] + this.m[2] * matrix[3];\n    const m22 = this.m[1] * matrix[2] + this.m[3] * matrix[3];\n\n    const dx = this.m[0] * matrix[4] + this.m[2] * matrix[5] + this.m[4];\n    const dy = this.m[1] * matrix[4] + this.m[3] * matrix[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n  }\n\n  invert(): void {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n  }\n\n  rotate(rad: number): void {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n  }\n\n  translate(x: number, y: number): void {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n  }\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n  }\n\n  transformPoint(point: Point2): Point2 {\n    const x = point[0];\n    const y = point[1];\n\n    return [\n      x * this.m[0] + y * this.m[2] + this.m[4],\n      x * this.m[1] + y * this.m[3] + this.m[5],\n    ];\n  }\n}\n", "import { Transform } from './transform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\n/**\n * Calculate the transform for a Cornerstone enabled element\n *\n * @param enabledElement - The Cornerstone Enabled Element\n * @param scale - The viewport scale\n * @returns The current transform\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  scale?: number\n): CPUFallbackTransform {\n  const transform = new Transform();\n\n  if (!enabledElement.viewport.displayedArea) {\n    return transform;\n  }\n\n  // Move to center of canvas\n  transform.translate(\n    enabledElement.canvas.width / 2,\n    enabledElement.canvas.height / 2\n  );\n\n  // Apply the rotation before scaling for non square pixels\n  const angle = enabledElement.viewport.rotation;\n\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  // Apply the scale\n  let widthScale = enabledElement.viewport.scale;\n  let heightScale = enabledElement.viewport.scale;\n\n  const width =\n    enabledElement.viewport.displayedArea.brhc.x -\n    (enabledElement.viewport.displayedArea.tlhc.x - 1);\n  const height =\n    enabledElement.viewport.displayedArea.brhc.y -\n    (enabledElement.viewport.displayedArea.tlhc.y - 1);\n\n  if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n    if (\n      enabledElement.image.rowPixelSpacing <\n      enabledElement.image.columnPixelSpacing\n    ) {\n      widthScale *=\n        enabledElement.image.columnPixelSpacing /\n        enabledElement.image.rowPixelSpacing;\n    } else if (\n      enabledElement.image.columnPixelSpacing <\n      enabledElement.image.rowPixelSpacing\n    ) {\n      heightScale *=\n        enabledElement.image.rowPixelSpacing /\n        enabledElement.image.columnPixelSpacing;\n    }\n  } else {\n    // These should be good for \"TRUE SIZE\" and \"MAGNIFY\"\n    widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n    heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n\n    if (\n      enabledElement.viewport.displayedArea.presentationSizeMode ===\n      'SCALE TO FIT'\n    ) {\n      // Fit TRUE IMAGE image (width/height) to window\n      const verticalScale =\n        enabledElement.canvas.height / (height * heightScale);\n      const horizontalScale =\n        enabledElement.canvas.width / (width * widthScale);\n\n      // Apply new scale\n      widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n\n      if (\n        enabledElement.viewport.displayedArea.rowPixelSpacing <\n        enabledElement.viewport.displayedArea.columnPixelSpacing\n      ) {\n        widthScale *=\n          enabledElement.viewport.displayedArea.columnPixelSpacing /\n          enabledElement.viewport.displayedArea.rowPixelSpacing;\n      } else if (\n        enabledElement.viewport.displayedArea.columnPixelSpacing <\n        enabledElement.viewport.displayedArea.rowPixelSpacing\n      ) {\n        heightScale *=\n          enabledElement.viewport.displayedArea.rowPixelSpacing /\n          enabledElement.viewport.displayedArea.columnPixelSpacing;\n      }\n    }\n  }\n\n  transform.scale(widthScale, heightScale);\n\n  // Unrotate to so we can translate unrotated\n  if (angle !== 0) {\n    transform.rotate((-angle * Math.PI) / 180);\n  }\n\n  // Apply the pan offset\n  transform.translate(\n    enabledElement.viewport.translation.x,\n    enabledElement.viewport.translation.y\n  );\n\n  // Rotate again so we can apply general scale\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  if (scale !== undefined) {\n    // Apply the font scale\n    transform.scale(scale, scale);\n  }\n\n  // Apply Flip if required\n  if (enabledElement.viewport.hflip) {\n    transform.scale(-1, 1);\n  }\n\n  if (enabledElement.viewport.vflip) {\n    transform.scale(1, -1);\n  }\n\n  // Move back from center of image\n  transform.translate(-width / 2, -height / 2);\n\n  return transform;\n}\n", "import calculateTransform from './calculateTransform';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Sets the canvas context transformation matrix to the pixel coordinate system.  This allows\n * geometry to be driven using the canvas context using coordinates in the pixel coordinate system\n * @param {EnabledElement} enabledElement The\n * @param {CanvasRenderingContext2D} context The CanvasRenderingContext2D for the enabledElement's Canvas\n * @param {Number} [scale] Optional scale to apply\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  context: CanvasRenderingContext2D,\n  scale?: number\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter enabledElement must not be undefined'\n    );\n  }\n  if (context === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter context must not be undefined'\n    );\n  }\n\n  const transform = calculateTransform(enabledElement, scale);\n  const m = transform.getMatrix();\n\n  context.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n}\n", "import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Determine whether or not an Enabled Element needs to be re-rendered.\n *\n * If the imageId has changed, or if any of the last rendered viewport\n * parameters have changed, this function will return true.\n *\n * @param enabledElement - An Enabled Element\n * @param image - An Image\n * @returns Whether - or not the Enabled Element needs to re-render its image\n */\nexport default function doesImageNeedToBeRendered(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): boolean {\n  const lastRenderedImageId = enabledElement.renderingTools.lastRenderedImageId;\n  const lastRenderedViewport =\n    enabledElement.renderingTools.lastRenderedViewport;\n\n  return (\n    image.imageId !== lastRenderedImageId ||\n    !lastRenderedViewport ||\n    lastRenderedViewport.windowCenter !==\n      enabledElement.viewport.voi.windowCenter ||\n    lastRenderedViewport.windowWidth !==\n      enabledElement.viewport.voi.windowWidth ||\n    lastRenderedViewport.invert !== enabledElement.viewport.invert ||\n    lastRenderedViewport.rotation !== enabledElement.viewport.rotation ||\n    lastRenderedViewport.hflip !== enabledElement.viewport.hflip ||\n    lastRenderedViewport.vflip !== enabledElement.viewport.vflip ||\n    lastRenderedViewport.modalityLUT !== enabledElement.viewport.modalityLUT ||\n    lastRenderedViewport.voiLUT !== enabledElement.viewport.voiLUT ||\n    lastRenderedViewport.colormap !== enabledElement.viewport.colormap\n  );\n}\n", "import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Sets size and clears canvas\n *\n * @param {Object} enabledElement Cornerstone Enabled Element\n * @param {Object} image Image to be rendered\n * @returns {void}\n * @memberof rendering\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): void {\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // Resize the canvas\n  renderCanvas.width = image.width;\n  renderCanvas.height = image.height;\n\n  const canvasContext = renderCanvas.getContext('2d');\n\n  // NOTE - we need to fill the render canvas with white pixels since we\n  // control the luminance using the alpha channel to improve rendering performance.\n  canvasContext.fillStyle = 'white';\n  canvasContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height);\n\n  const renderCanvasData = canvasContext.getImageData(\n    0,\n    0,\n    image.width,\n    image.height\n  );\n\n  enabledElement.renderingTools.renderCanvasContext = canvasContext;\n  enabledElement.renderingTools.renderCanvasData = renderCanvasData;\n}\n", "import {\n  CPUFallbackEnabledElement,\n  CPUFallbackRenderingTools,\n} from '../../../../types';\n\n/**\n * Saves the parameters of the last render into renderingTools, used later to decide if data can be reused.\n *\n * @param {Object} enabledElement Cornerstone EnabledElement\n * @returns {Object} enabledElement.renderingTools\n * @memberof rendering\n */\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackRenderingTools {\n  const imageId = enabledElement.image.imageId;\n  const viewport = enabledElement.viewport;\n  const isColor = enabledElement.image.color;\n\n  enabledElement.renderingTools.lastRenderedImageId = imageId;\n  enabledElement.renderingTools.lastRenderedIsColor = isColor;\n  enabledElement.renderingTools.lastRenderedViewport = {\n    windowCenter: viewport.voi.windowCenter,\n    windowWidth: viewport.voi.windowWidth,\n    invert: viewport.invert,\n    rotation: viewport.rotation,\n    hflip: viewport.hflip,\n    vflip: viewport.vflip,\n    modalityLUT: viewport.modalityLUT,\n    voiLUT: viewport.voiLUT,\n    colormap: viewport.colormap,\n  };\n\n  return enabledElement.renderingTools;\n}\n", "import now from './now';\nimport generateColorLut from './generateColorLut';\nimport storedColorPixelDataToCanvasImageData from './storedColorPixelDataToCanvasImageData';\nimport storedRGBAPixelDataToCanvasImageData from './storedRGBAPixelDataToCanvasImageData';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport {\n  IImage,\n  CPUFallbackViewport,\n  CPUFallbackEnabledElement,\n} from '../../../../types';\n\n/**\n * Generates an appropriate Look Up Table to render the given image with the given window width and level (specified in the viewport)\n * Uses an internal cache for performance\n *\n * @param {Object} image  The image to be rendered\n * @param {Object} viewport The viewport values used for rendering\n * @returns {Uint8ClampedArray} Look Up Table array.\n * @memberof rendering\n */\nfunction getLut(image: IImage, viewport: CPUFallbackViewport) {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    image.cachedLut.invert === viewport.invert\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateColorLut(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert\n  );\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n\n  return image.cachedLut.lutArray;\n}\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || !canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // The ww/wc is identity and not inverted - get a canvas with the image rendered into it for\n  // Fast drawing\n  if (\n    enabledElement.viewport.voi.windowWidth === 255 &&\n    enabledElement.viewport.voi.windowCenter === 128 &&\n    enabledElement.viewport.invert === false &&\n    image.getCanvas &&\n    image.getCanvas()\n  ) {\n    return image.getCanvas();\n  }\n\n  // Apply the lut to the stored pixel data onto the render canvas\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n  const colorLut = getLut(image, enabledElement.viewport);\n\n  image.stats = image.stats || {};\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  // The color image voi/invert has been modified - apply the lut to the underlying\n  // Pixel data and put it into the renderCanvas\n  if (image.rgba) {\n    storedRGBAPixelDataToCanvasImageData(\n      image,\n      colorLut,\n      renderCanvasData.data\n    );\n  } else {\n    storedColorPixelDataToCanvasImageData(\n      image,\n      colorLut,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to render a color image to an enabled element\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'renderColorImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error(\n      'renderColorImage: image must be loaded before it can be drawn'\n    );\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n", "import getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param voiLUT- A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function (\n  image: IImage,\n  windowWidth: number | number[],\n  windowCenter: number | number[],\n  invert: boolean,\n  voiLUT?: CPUFallbackLUT\n) {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n  const vlutfn = getVOILUT(\n    Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n    Array.isArray(windowCenter) ? windowCenter[0] : windowCenter,\n    voiLUT\n  );\n\n  if (invert === true) {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = 255 - vlutfn(storedValue);\n    }\n  } else {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = vlutfn(storedValue);\n    }\n  }\n\n  return lut;\n}\n", "import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored RGBA color pixel values to display pixel values using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n", "import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored color pixel values to display pixel values using a LUT.\n *\n * Note: Skips alpha value for any input image pixel data.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex] + -minPixelValue]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex]]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n", "import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++]]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n", "import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lutFunction: (value: number) => number,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  // const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n\n  while (storedPixelDataIndex < numPixels) {\n    canvasImageDataData[canvasImageDataIndex] = lutFunction(\n      pixelData[storedPixelDataIndex++]\n    ); // Alpha\n    canvasImageDataIndex += 4;\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n", "import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let pixelValue;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++]];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n", "/**\n * Check if two lookup tables match\n *\n * @param {LUT} a A lookup table function\n * @param {LUT} b Another lookup table function\n * @return {boolean} Whether or not they match\n * @memberof rendering\n */\nexport default function (a: any, b: any) {\n  // If undefined, they are equal\n  if (!a && !b) {\n    return true;\n  }\n  // If one is undefined, not equal\n  if (!a || !b) {\n    return false;\n  }\n\n  // Check the unique ids\n  return a.id === b.id;\n}\n", "import computeAutoVoi from './computeAutoVoi';\nimport lutMatches from './lutMatches';\nimport generateLut from './generateLut';\nimport { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Retrieve or generate a LUT Array for an Image and Viewport\n *\n * @param {Image} image An Image Object\n * @param {Viewport} viewport An Viewport Object\n * @param {Boolean} invalidated Whether or not the LUT data has been invalidated\n * (e.g. by a change to the windowWidth, windowCenter, or invert viewport parameters).\n * @return {Uint8ClampedArray} LUT Array\n * @memberof rendering\n */\nexport default function (\n  image: IImage,\n  viewport: CPUFallbackViewport,\n  invalidated: boolean\n): Uint8ClampedArray {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    lutMatches(image.cachedLut.modalityLUT, viewport.modalityLUT) &&\n    lutMatches(image.cachedLut.voiLUT, viewport.voiLUT) &&\n    image.cachedLut.invert === viewport.invert &&\n    invalidated !== true\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  computeAutoVoi(viewport, image);\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateLut(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert,\n    viewport.modalityLUT,\n    viewport.voiLUT\n  );\n\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n  image.cachedLut.voiLUT = viewport.voiLUT;\n  image.cachedLut.modalityLUT = viewport.modalityLUT;\n\n  return image.cachedLut.lutArray;\n}\n", "import type { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Computes the VOI to display all the pixels if no VOI LUT data (Window Width/Window Center or voiLUT) exists on the viewport object.\n *\n * @param viewport - Object containing the viewport properties\n * @param image - An Image loaded by a Cornerstone Image Loader\n */\nexport default function computeAutoVoi(\n  viewport: CPUFallbackViewport,\n  image: IImage\n): void {\n  if (hasVoi(viewport)) {\n    return;\n  }\n\n  const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n  const minVoi = image.minPixelValue * image.slope + image.intercept;\n  const ww = maxVoi - minVoi;\n  const wc = (maxVoi + minVoi) / 2;\n\n  if (viewport.voi === undefined) {\n    viewport.voi = {\n      windowWidth: ww,\n      windowCenter: wc,\n    };\n  } else {\n    viewport.voi.windowWidth = ww;\n    viewport.voi.windowCenter = wc;\n  }\n}\n\n/**\n * Check if viewport has voi LUT data\n * @param viewport - The viewport to check for voi LUT data\n * @returns true viewport has LUT data (Window Width/Window Center or voiLUT). Otherwise, false.\n */\nfunction hasVoi(viewport: CPUFallbackViewport): boolean {\n  const hasLut =\n    viewport.voiLUT && viewport.voiLUT.lut && viewport.voiLUT.lut.length > 0;\n\n  return (\n    hasLut ||\n    (viewport.voi.windowWidth !== undefined &&\n      viewport.voi.windowCenter !== undefined)\n  );\n}\n", "import getModalityLut from './getModalityLut';\nimport getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param modalityLUT - A modality Lookup Table\n * @param voiLUT - A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function (\n  image: IImage,\n  windowWidth: number,\n  windowCenter: number,\n  invert: boolean,\n  modalityLUT: CPUFallbackLUT,\n  voiLUT: CPUFallbackLUT\n): Uint8ClampedArray {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n\n  const mlutfn = getModalityLut(image.slope, image.intercept, modalityLUT);\n  const vlutfn = getVOILUT(windowWidth, windowCenter, voiLUT);\n\n  if (invert === true) {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = 255 - vlutfn(mlutfn(storedValue));\n    }\n  } else {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = vlutfn(mlutfn(storedValue));\n    }\n  }\n\n  return lut;\n}\n", "/**\n * Generates a linear modality transformation function\n *\n * See DICOM PS3.3 C.11.1 Modality LUT Module\n *\n * http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.11.html\n *\n * @param {Number} slope m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} intercept The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n\n Output units = m*SV + b.\n * @return {function(*): *} A linear modality LUT function. Given a stored pixel it returns the modality pixel value\n * @memberof Internal\n */\nfunction generateLinearModalityLUT(slope, intercept) {\n  return (storedPixelValue) => storedPixelValue * slope + intercept;\n}\n\nfunction generateNonLinearModalityLUT(modalityLUT) {\n  const minValue = modalityLUT.lut[0];\n  const maxValue = modalityLUT.lut[modalityLUT.lut.length - 1];\n  const maxValueMapped = modalityLUT.firstValueMapped + modalityLUT.lut.length;\n\n  return (storedPixelValue) => {\n    if (storedPixelValue < modalityLUT.firstValueMapped) {\n      return minValue;\n    } else if (storedPixelValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return modalityLUT.lut[storedPixelValue];\n  };\n}\n\n/**\n * Get the appropriate Modality LUT for the current situation.\n *\n * @param {Number} [slope] m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} [intercept] The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n * @param {Function} [modalityLUT] A modality LUT function. Given a stored pixel it returns the modality pixel value.\n *\n * @return {function(*): *} A modality LUT function. Given a stored pixel it returns the modality pixel value.\n * @memberof Internal\n */\nexport default function (\n  slope: number,\n  intercept: number,\n  modalityLUT: unknown\n) {\n  if (modalityLUT) {\n    return generateNonLinearModalityLUT(modalityLUT);\n  }\n\n  return generateLinearModalityLUT(slope, intercept);\n}\n", "import storedPixelDataToCanvasImageData from './storedPixelDataToCanvasImageData';\nimport storedPixelDataToCanvasImageDataPET from './storedPixelDataToCanvasImageDataPET';\nimport storedPixelDataToCanvasImageDataRGBA from './storedPixelDataToCanvasImageDataRGBA';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport getLut from './getLut';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport { IImage, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @param {Boolean} [useAlphaChannel = true] Will an alpha channel be used\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean,\n  useAlphaChannel = true\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  image.stats = image.stats || {};\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  let start = now();\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const { viewport } = enabledElement;\n\n  // If modality is 'PT' the resulting scaled image is floatting point, and\n  // we cannot create a lut for it (cannot have float indices). Therefore,\n  // we use a mapping function to get the voiLUT from the values by applying\n  // the windowLevel and windowWidth.\n  if (viewport.modality === 'PT') {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) =>\n        255 - (value - minimum) * collectedMultiplierTerms;\n    } else {\n      // Note, don't need to math.floor, that is dealt with by setting the value in the Uint8Array.\n      petVOILutFunction = (value) =>\n        (value - minimum) * collectedMultiplierTerms;\n    }\n\n    storedPixelDataToCanvasImageDataPET(\n      image,\n      petVOILutFunction,\n      renderCanvasData.data\n    );\n  } else {\n    // Get the lut to use\n    const lut = getLut(image, viewport, invalidated);\n\n    if (useAlphaChannel) {\n      storedPixelDataToCanvasImageData(image, lut, renderCanvasData.data);\n    } else {\n      storedPixelDataToCanvasImageDataRGBA(image, lut, renderCanvasData.data);\n    }\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a grayscale image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderGrayscaleImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n", "import { Point2, Point4, CPUFallbackLookupTable } from '../../../../types';\n\n// This code was created based on vtkLookupTable\n// http://www.vtk.org/doc/release/5.0/html/a01697.html\n// https://github.com/Kitware/VTK/blob/master/Common/Core/vtkLookupTable.cxx\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n/**\n * Converts an HSV  (Hue, Saturation, Value) color to RGB (Red, Green, Blue) color value\n * @param {Number} hue A number representing the hue color value\n * @param {any} sat A number representing the saturation color value\n * @param {any} val A number representing the value color value\n * @returns {Numberp[]} An RGB color array\n */\nfunction HSVToRGB(hue, sat, val) {\n  if (hue > 1) {\n    throw new Error('HSVToRGB expects hue < 1');\n  }\n\n  const rgb = [];\n\n  if (sat === 0) {\n    rgb[0] = val;\n    rgb[1] = val;\n    rgb[2] = val;\n\n    return rgb;\n  }\n\n  const hueCase = Math.floor(hue * 6);\n  const frac = 6 * hue - hueCase;\n  const lx = val * (1 - sat);\n  const ly = val * (1 - sat * frac);\n  const lz = val * (1 - sat * (1 - frac));\n\n  switch (hueCase) {\n    /* 0<hue<1/6 */\n    case 0:\n    case 6:\n      rgb[0] = val;\n      rgb[1] = lz;\n      rgb[2] = lx;\n      break;\n\n    /* 1/6<hue<2/6 */\n    case 1:\n      rgb[0] = ly;\n      rgb[1] = val;\n      rgb[2] = lx;\n      break;\n\n    /* 2/6<hue<3/6 */\n    case 2:\n      rgb[0] = lx;\n      rgb[1] = val;\n      rgb[2] = lz;\n      break;\n\n    /* 3/6<hue/4/6 */\n    case 3:\n      rgb[0] = lx;\n      rgb[1] = ly;\n      rgb[2] = val;\n      break;\n\n    /* 4/6<hue<5/6 */\n    case 4:\n      rgb[0] = lz;\n      rgb[1] = lx;\n      rgb[2] = val;\n      break;\n\n    /* 5/6<hue<1 */\n    case 5:\n      rgb[0] = val;\n      rgb[1] = lx;\n      rgb[2] = ly;\n      break;\n  }\n\n  return rgb;\n}\n\n/**\n * Maps a value to an index in the table\n * @param {Number} v A double value which table index will be returned.\n * @param {any} p An object that contains the Table \"Range\", the table \"MaxIndex\",\n * A \"Shift\" from first value in the table and the table \"Scale\" value\n * @returns {Number} The mapped index in the table\n * @memberof Colors\n */\nfunction linearIndexLookupMain(v, p) {\n  let dIndex;\n\n  // NOTE: Added Math.floor since values were not integers? Check VTK source\n  if (v < p.Range[0]) {\n    dIndex = p.MaxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n  } else if (v > p.Range[1]) {\n    dIndex = p.MaxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n  } else {\n    dIndex = (v + p.Shift) * p.Scale;\n  }\n\n  return Math.floor(dIndex);\n}\n\n/**\n * Maps scalar values into colors via a lookup table\n * LookupTable is an object that is used by mapper objects to map scalar values into rgba (red-green-blue-alpha transparency) color specification,\n * or rgba into scalar values. The color table can be created by direct insertion of color values, or by specifying hue, saturation, value, and alpha range and generating a table\n */\nclass LookupTable implements CPUFallbackLookupTable {\n  NumberOfColors: number;\n  Ramp: string;\n  TableRange: Point2;\n  HueRange: Point2;\n  SaturationRange: Point2;\n  ValueRange: Point2;\n  AlphaRange: Point2;\n  NaNColor: Point4;\n  BelowRangeColor: Point4;\n  UseBelowRangeColor: boolean;\n  AboveRangeColor: Point4;\n  UseAboveRangeColor: boolean;\n  InputRange: Point2;\n  Table: Point4[];\n\n  /**\n   * Creates a default linear LookupTable object with 256 colors.\n   */\n  constructor() {\n    this.NumberOfColors = 256;\n    this.Ramp = 'linear';\n    this.TableRange = [0, 255];\n    this.HueRange = [0, 0.66667];\n    this.SaturationRange = [1, 1];\n    this.ValueRange = [1, 1];\n    this.AlphaRange = [1, 1];\n    this.NaNColor = [128, 0, 0, 255];\n    this.BelowRangeColor = [0, 0, 0, 255];\n    this.UseBelowRangeColor = true;\n    this.AboveRangeColor = [255, 255, 255, 255];\n    this.UseAboveRangeColor = true;\n    this.InputRange = [0, 255];\n    this.Table = [];\n  }\n\n  /**\n   * Specify the number of values (i.e., colors) in the lookup table.\n   * @param {Number} number The number of colors in he LookupTable\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setNumberOfTableValues(number) {\n    this.NumberOfColors = number;\n  }\n\n  /**\n   * Set the shape of the table ramp to either 'linear', 'scurve' or 'sqrt'\n   * @param {String} ramp A string value representing the shape of the table. Allowed values are 'linear', 'scurve' or 'sqrt'\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setRamp(ramp) {\n    this.Ramp = ramp;\n  }\n\n  /**\n   * Sets the minimum/maximum scalar values for scalar mapping.\n   * Scalar values less than minimum range value are clamped to minimum range value.\n   * Scalar values greater than maximum range value are clamped to maximum range value.\n   * @param {Number} start A double representing the minimum scaler value of the LookupTable\n   * @param {any} end A double representing the maximum scaler value of the LookupTable\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setTableRange(start, end) {\n    this.TableRange[0] = start;\n    this.TableRange[1] = end;\n  }\n\n  /**\n   * Set the range in hue (using automatic generation). Hue ranges between [0,1].\n   * @param {Number} start A double representing the minimum hue value in a range. Min. is 0\n   * @param {Number} end A double representing the maximum hue value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setHueRange(start, end) {\n    this.HueRange[0] = start;\n    this.HueRange[1] = end;\n  }\n\n  /**\n   * Set the range in saturation (using automatic generation). Saturation ranges between [0,1].\n   * @param {Number} start A double representing the minimum Saturation value in a range. Min. is 0\n   * @param {Number} end A double representing the maximum Saturation value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setSaturationRange(start, end) {\n    this.SaturationRange[0] = start;\n    this.SaturationRange[1] = end;\n  }\n\n  /**\n   * Set the range in value (using automatic generation). Value ranges between [0,1].\n   * @param {Numeber } start A double representing the minimum value in a range. Min. is 0\n   * @param {Numeber} end A double representing the maximum value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setValueRange(start, end) {\n    // Set the range in value (using automatic generation). Value ranges between [0,1].\n    this.ValueRange[0] = start;\n    this.ValueRange[1] = end;\n  }\n\n  /**\n   * (Not Used) Sets the range of scalars which will be mapped.\n   * @param {Number} start the minimum scalar value in the range\n   * @param {Number} end the maximum scalar value in the range\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setRange(start, end) {\n    this.InputRange[0] = start;\n    this.InputRange[1] = end;\n  }\n\n  /**\n   * Set the range in alpha (using automatic generation). Alpha ranges from [0,1].\n   * @param {Number} start A double representing the minimum alpha value\n   * @param {Number} end A double representing the maximum alpha value\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setAlphaRange(start, end) {\n    // Set the range in alpha (using automatic generation). Alpha ranges from [0,1].\n    this.AlphaRange[0] = start;\n    this.AlphaRange[1] = end;\n  }\n\n  /**\n   * Map one value through the lookup table and return the color as an\n   * RGBA array of doubles between 0 and 1.\n   * @param {Number} scalar A double scalar value which will be mapped to a color in the LookupTable\n   * @returns {Number[]} An RGBA array of doubles between 0 and 1\n   * @memberof Colors\n   */\n  public getColor(scalar) {\n    return this.mapValue(scalar);\n  }\n\n  /**\n   * Generate lookup table from hue, saturation, value, alpha min/max values. Table is built from linear ramp of each value.\n   * @param {Boolean} force true to force the build of the LookupTable. Otherwie, false. This is useful if a lookup table has been defined manually\n   * (using SetTableValue) and then an application decides to rebuild the lookup table using the implicit process.\n   * @returns {void}\n   * @memberof Colors\n   */\n  public build(force) {\n    if (this.Table.length > 1 && !force) {\n      return;\n    }\n\n    // Clear the table\n    this.Table = [];\n\n    const maxIndex = this.NumberOfColors - 1;\n\n    let hinc, sinc, vinc, ainc;\n\n    if (maxIndex) {\n      hinc = (this.HueRange[1] - this.HueRange[0]) / maxIndex;\n      sinc = (this.SaturationRange[1] - this.SaturationRange[0]) / maxIndex;\n      vinc = (this.ValueRange[1] - this.ValueRange[0]) / maxIndex;\n      ainc = (this.AlphaRange[1] - this.AlphaRange[0]) / maxIndex;\n    } else {\n      hinc = sinc = vinc = ainc = 0.0;\n    }\n\n    for (let i = 0; i <= maxIndex; i++) {\n      const hue = this.HueRange[0] + i * hinc;\n      const sat = this.SaturationRange[0] + i * sinc;\n      const val = this.ValueRange[0] + i * vinc;\n      const alpha = this.AlphaRange[0] + i * ainc;\n\n      const rgb = HSVToRGB(hue, sat, val);\n      const c_rgba: Point4 = [0, 0, 0, 0];\n\n      switch (this.Ramp) {\n        case 'scurve':\n          c_rgba[0] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[0]) * Math.PI))\n          );\n          c_rgba[1] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[1]) * Math.PI))\n          );\n          c_rgba[2] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[2]) * Math.PI))\n          );\n          c_rgba[3] = Math.floor(alpha * 255);\n          break;\n        case 'linear':\n          c_rgba[0] = Math.floor(rgb[0] * 255 + 0.5);\n          c_rgba[1] = Math.floor(rgb[1] * 255 + 0.5);\n          c_rgba[2] = Math.floor(rgb[2] * 255 + 0.5);\n          c_rgba[3] = Math.floor(alpha * 255 + 0.5);\n          break;\n        case 'sqrt':\n          c_rgba[0] = Math.floor(Math.sqrt(rgb[0]) * 255 + 0.5);\n          c_rgba[1] = Math.floor(Math.sqrt(rgb[1]) * 255 + 0.5);\n          c_rgba[2] = Math.floor(Math.sqrt(rgb[2]) * 255 + 0.5);\n          c_rgba[3] = Math.floor(Math.sqrt(alpha) * 255 + 0.5);\n          break;\n        default:\n          throw new Error(`Invalid Ramp value (${this.Ramp})`);\n      }\n\n      this.Table.push(c_rgba);\n    }\n\n    this.buildSpecialColors();\n  }\n\n  /**\n   * Ensures the out-of-range colors (Below range and Above range) are set correctly.\n   * @returns {void}\n   * @memberof Colors\n   */\n  private buildSpecialColors() {\n    const numberOfColors = this.NumberOfColors;\n    const belowRangeColorIndex = numberOfColors + BELOW_RANGE_COLOR_INDEX;\n    const aboveRangeColorIndex = numberOfColors + ABOVE_RANGE_COLOR_INDEX;\n    const nanColorIndex = numberOfColors + NAN_COLOR_INDEX;\n\n    // Below range color\n    if (this.UseBelowRangeColor || numberOfColors === 0) {\n      this.Table[belowRangeColorIndex] = this.BelowRangeColor;\n    } else {\n      // Duplicate the first color in the table.\n      this.Table[belowRangeColorIndex] = this.Table[0];\n    }\n\n    // Above range color\n    if (this.UseAboveRangeColor || numberOfColors === 0) {\n      this.Table[aboveRangeColorIndex] = this.AboveRangeColor;\n    } else {\n      // Duplicate the last color in the table.\n      this.Table[aboveRangeColorIndex] = this.Table[numberOfColors - 1];\n    }\n\n    // Always use NanColor\n    this.Table[nanColorIndex] = this.NaNColor;\n  }\n\n  /**\n   * Similar to GetColor - Map one value through the lookup table and return the color as an\n   * RGBA array of doubles between 0 and 1.\n   * @param {Numeber} v A double scalar value which will be mapped to a color in the LookupTable\n   * @returns {Number[]} An RGBA array of doubles between 0 and 1\n   * @memberof Colors\n   */\n  private mapValue(v) {\n    const index = this.getIndex(v);\n\n    if (index < 0) {\n      return this.NaNColor;\n    } else if (index === 0) {\n      if (this.UseBelowRangeColor && v < this.TableRange[0]) {\n        return this.BelowRangeColor;\n      }\n    } else if (index === this.NumberOfColors - 1) {\n      if (this.UseAboveRangeColor && v > this.TableRange[1]) {\n        return this.AboveRangeColor;\n      }\n    }\n\n    return this.Table[index];\n  }\n\n  /**\n   * Return the table index associated with a particular value.\n   * @param {Number} v A double value which table index will be returned.\n   * @returns {Number} The index in the LookupTable\n   * @memberof Colors\n   */\n  private getIndex(v) {\n    const p = {\n      Range: [],\n      MaxIndex: this.NumberOfColors - 1,\n      Shift: -this.TableRange[0],\n      Scale: 1,\n    };\n\n    if (this.TableRange[1] <= this.TableRange[0]) {\n      p.Scale = Number.MAX_VALUE;\n    } else {\n      p.Scale = p.MaxIndex / (this.TableRange[1] - this.TableRange[0]);\n    }\n\n    p.Range[0] = this.TableRange[0];\n    p.Range[1] = this.TableRange[1];\n\n    // First, check whether we have a number...\n    if (isNaN(v)) {\n      // For backwards compatibility\n      return -1;\n    }\n\n    // Map to an index:\n    let index = linearIndexLookupMain(v, p);\n\n    // For backwards compatibility, if the index indicates an\n    // Out-of-range value, truncate to index range for in-range colors.\n    if (index === this.NumberOfColors + BELOW_RANGE_COLOR_INDEX) {\n      index = 0;\n    } else if (index === this.NumberOfColors + ABOVE_RANGE_COLOR_INDEX) {\n      index = this.NumberOfColors - 1;\n    }\n\n    return index;\n  }\n\n  /**\n   * Directly load color into lookup table. Use [0,1] double values for color component specification.\n   * Make sure that you've either used the Build() method or used SetNumberOfTableValues() prior to using this method.\n   * @param {Number} index The index in the LookupTable of where to insert the color value\n   * @param {Number[]} rgba An array of [0,1] double values for an RGBA color component\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setTableValue(index, rgba) {\n    // Check if it index, red, green, blue and alpha were passed as parameter\n    if (arguments.length === 5) {\n      rgba = Array.prototype.slice.call(arguments, 1);\n    }\n\n    // Check the index to make sure it is valid\n    if (index < 0) {\n      throw new Error(\n        `Can't set the table value for negative index (${index})`\n      );\n    }\n\n    if (index >= this.NumberOfColors) {\n      new Error(\n        `Index ${index} is greater than the number of colors ${this.NumberOfColors}`\n      );\n    }\n\n    this.Table[index] = rgba;\n\n    if (index === 0 || index === this.NumberOfColors - 1) {\n      // This is needed due to the way the special colors are stored in\n      // The internal table. If Above/BelowRangeColors are not used and\n      // The min/max colors are changed in the table with this member\n      // Function, then the colors used for values outside the range may\n      // Be incorrect. Calling this here ensures the out-of-range colors\n      // Are set correctly.\n      this.buildSpecialColors();\n    }\n  }\n}\n\nexport default LookupTable;\n", "import { CPUFallbackColormapsData } from '../../../../types';\n\n// Colormaps\n//\n// Hot Iron, PET, Hot Metal Blue and PET 20 Step are color palettes\n// Defined by the DICOM standard\n// http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_B.html\n//\n// All Linear Segmented Colormaps were copied from matplotlib\n// https://github.com/stefanv/matplotlib/blob/master/lib/matplotlib/_cm.py\n\nconst colormapsData: CPUFallbackColormapsData = {\n  hotIron: {\n    name: 'Hot Iron',\n    numOfColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [2, 0, 0, 255],\n      [4, 0, 0, 255],\n      [6, 0, 0, 255],\n      [8, 0, 0, 255],\n      [10, 0, 0, 255],\n      [12, 0, 0, 255],\n      [14, 0, 0, 255],\n      [16, 0, 0, 255],\n      [18, 0, 0, 255],\n      [20, 0, 0, 255],\n      [22, 0, 0, 255],\n      [24, 0, 0, 255],\n      [26, 0, 0, 255],\n      [28, 0, 0, 255],\n      [30, 0, 0, 255],\n      [32, 0, 0, 255],\n      [34, 0, 0, 255],\n      [36, 0, 0, 255],\n      [38, 0, 0, 255],\n      [40, 0, 0, 255],\n      [42, 0, 0, 255],\n      [44, 0, 0, 255],\n      [46, 0, 0, 255],\n      [48, 0, 0, 255],\n      [50, 0, 0, 255],\n      [52, 0, 0, 255],\n      [54, 0, 0, 255],\n      [56, 0, 0, 255],\n      [58, 0, 0, 255],\n      [60, 0, 0, 255],\n      [62, 0, 0, 255],\n      [64, 0, 0, 255],\n      [66, 0, 0, 255],\n      [68, 0, 0, 255],\n      [70, 0, 0, 255],\n      [72, 0, 0, 255],\n      [74, 0, 0, 255],\n      [76, 0, 0, 255],\n      [78, 0, 0, 255],\n      [80, 0, 0, 255],\n      [82, 0, 0, 255],\n      [84, 0, 0, 255],\n      [86, 0, 0, 255],\n      [88, 0, 0, 255],\n      [90, 0, 0, 255],\n      [92, 0, 0, 255],\n      [94, 0, 0, 255],\n      [96, 0, 0, 255],\n      [98, 0, 0, 255],\n      [100, 0, 0, 255],\n      [102, 0, 0, 255],\n      [104, 0, 0, 255],\n      [106, 0, 0, 255],\n      [108, 0, 0, 255],\n      [110, 0, 0, 255],\n      [112, 0, 0, 255],\n      [114, 0, 0, 255],\n      [116, 0, 0, 255],\n      [118, 0, 0, 255],\n      [120, 0, 0, 255],\n      [122, 0, 0, 255],\n      [124, 0, 0, 255],\n      [126, 0, 0, 255],\n      [128, 0, 0, 255],\n      [130, 0, 0, 255],\n      [132, 0, 0, 255],\n      [134, 0, 0, 255],\n      [136, 0, 0, 255],\n      [138, 0, 0, 255],\n      [140, 0, 0, 255],\n      [142, 0, 0, 255],\n      [144, 0, 0, 255],\n      [146, 0, 0, 255],\n      [148, 0, 0, 255],\n      [150, 0, 0, 255],\n      [152, 0, 0, 255],\n      [154, 0, 0, 255],\n      [156, 0, 0, 255],\n      [158, 0, 0, 255],\n      [160, 0, 0, 255],\n      [162, 0, 0, 255],\n      [164, 0, 0, 255],\n      [166, 0, 0, 255],\n      [168, 0, 0, 255],\n      [170, 0, 0, 255],\n      [172, 0, 0, 255],\n      [174, 0, 0, 255],\n      [176, 0, 0, 255],\n      [178, 0, 0, 255],\n      [180, 0, 0, 255],\n      [182, 0, 0, 255],\n      [184, 0, 0, 255],\n      [186, 0, 0, 255],\n      [188, 0, 0, 255],\n      [190, 0, 0, 255],\n      [192, 0, 0, 255],\n      [194, 0, 0, 255],\n      [196, 0, 0, 255],\n      [198, 0, 0, 255],\n      [200, 0, 0, 255],\n      [202, 0, 0, 255],\n      [204, 0, 0, 255],\n      [206, 0, 0, 255],\n      [208, 0, 0, 255],\n      [210, 0, 0, 255],\n      [212, 0, 0, 255],\n      [214, 0, 0, 255],\n      [216, 0, 0, 255],\n      [218, 0, 0, 255],\n      [220, 0, 0, 255],\n      [222, 0, 0, 255],\n      [224, 0, 0, 255],\n      [226, 0, 0, 255],\n      [228, 0, 0, 255],\n      [230, 0, 0, 255],\n      [232, 0, 0, 255],\n      [234, 0, 0, 255],\n      [236, 0, 0, 255],\n      [238, 0, 0, 255],\n      [240, 0, 0, 255],\n      [242, 0, 0, 255],\n      [244, 0, 0, 255],\n      [246, 0, 0, 255],\n      [248, 0, 0, 255],\n      [250, 0, 0, 255],\n      [252, 0, 0, 255],\n      [254, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 2, 0, 255],\n      [255, 4, 0, 255],\n      [255, 6, 0, 255],\n      [255, 8, 0, 255],\n      [255, 10, 0, 255],\n      [255, 12, 0, 255],\n      [255, 14, 0, 255],\n      [255, 16, 0, 255],\n      [255, 18, 0, 255],\n      [255, 20, 0, 255],\n      [255, 22, 0, 255],\n      [255, 24, 0, 255],\n      [255, 26, 0, 255],\n      [255, 28, 0, 255],\n      [255, 30, 0, 255],\n      [255, 32, 0, 255],\n      [255, 34, 0, 255],\n      [255, 36, 0, 255],\n      [255, 38, 0, 255],\n      [255, 40, 0, 255],\n      [255, 42, 0, 255],\n      [255, 44, 0, 255],\n      [255, 46, 0, 255],\n      [255, 48, 0, 255],\n      [255, 50, 0, 255],\n      [255, 52, 0, 255],\n      [255, 54, 0, 255],\n      [255, 56, 0, 255],\n      [255, 58, 0, 255],\n      [255, 60, 0, 255],\n      [255, 62, 0, 255],\n      [255, 64, 0, 255],\n      [255, 66, 0, 255],\n      [255, 68, 0, 255],\n      [255, 70, 0, 255],\n      [255, 72, 0, 255],\n      [255, 74, 0, 255],\n      [255, 76, 0, 255],\n      [255, 78, 0, 255],\n      [255, 80, 0, 255],\n      [255, 82, 0, 255],\n      [255, 84, 0, 255],\n      [255, 86, 0, 255],\n      [255, 88, 0, 255],\n      [255, 90, 0, 255],\n      [255, 92, 0, 255],\n      [255, 94, 0, 255],\n      [255, 96, 0, 255],\n      [255, 98, 0, 255],\n      [255, 100, 0, 255],\n      [255, 102, 0, 255],\n      [255, 104, 0, 255],\n      [255, 106, 0, 255],\n      [255, 108, 0, 255],\n      [255, 110, 0, 255],\n      [255, 112, 0, 255],\n      [255, 114, 0, 255],\n      [255, 116, 0, 255],\n      [255, 118, 0, 255],\n      [255, 120, 0, 255],\n      [255, 122, 0, 255],\n      [255, 124, 0, 255],\n      [255, 126, 0, 255],\n      [255, 128, 4, 255],\n      [255, 130, 8, 255],\n      [255, 132, 12, 255],\n      [255, 134, 16, 255],\n      [255, 136, 20, 255],\n      [255, 138, 24, 255],\n      [255, 140, 28, 255],\n      [255, 142, 32, 255],\n      [255, 144, 36, 255],\n      [255, 146, 40, 255],\n      [255, 148, 44, 255],\n      [255, 150, 48, 255],\n      [255, 152, 52, 255],\n      [255, 154, 56, 255],\n      [255, 156, 60, 255],\n      [255, 158, 64, 255],\n      [255, 160, 68, 255],\n      [255, 162, 72, 255],\n      [255, 164, 76, 255],\n      [255, 166, 80, 255],\n      [255, 168, 84, 255],\n      [255, 170, 88, 255],\n      [255, 172, 92, 255],\n      [255, 174, 96, 255],\n      [255, 176, 100, 255],\n      [255, 178, 104, 255],\n      [255, 180, 108, 255],\n      [255, 182, 112, 255],\n      [255, 184, 116, 255],\n      [255, 186, 120, 255],\n      [255, 188, 124, 255],\n      [255, 190, 128, 255],\n      [255, 192, 132, 255],\n      [255, 194, 136, 255],\n      [255, 196, 140, 255],\n      [255, 198, 144, 255],\n      [255, 200, 148, 255],\n      [255, 202, 152, 255],\n      [255, 204, 156, 255],\n      [255, 206, 160, 255],\n      [255, 208, 164, 255],\n      [255, 210, 168, 255],\n      [255, 212, 172, 255],\n      [255, 214, 176, 255],\n      [255, 216, 180, 255],\n      [255, 218, 184, 255],\n      [255, 220, 188, 255],\n      [255, 222, 192, 255],\n      [255, 224, 196, 255],\n      [255, 226, 200, 255],\n      [255, 228, 204, 255],\n      [255, 230, 208, 255],\n      [255, 232, 212, 255],\n      [255, 234, 216, 255],\n      [255, 236, 220, 255],\n      [255, 238, 224, 255],\n      [255, 240, 228, 255],\n      [255, 242, 232, 255],\n      [255, 244, 236, 255],\n      [255, 246, 240, 255],\n      [255, 248, 244, 255],\n      [255, 250, 248, 255],\n      [255, 252, 252, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  pet: {\n    name: 'PET',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 2, 1, 255],\n      [0, 4, 3, 255],\n      [0, 6, 5, 255],\n      [0, 8, 7, 255],\n      [0, 10, 9, 255],\n      [0, 12, 11, 255],\n      [0, 14, 13, 255],\n      [0, 16, 15, 255],\n      [0, 18, 17, 255],\n      [0, 20, 19, 255],\n      [0, 22, 21, 255],\n      [0, 24, 23, 255],\n      [0, 26, 25, 255],\n      [0, 28, 27, 255],\n      [0, 30, 29, 255],\n      [0, 32, 31, 255],\n      [0, 34, 33, 255],\n      [0, 36, 35, 255],\n      [0, 38, 37, 255],\n      [0, 40, 39, 255],\n      [0, 42, 41, 255],\n      [0, 44, 43, 255],\n      [0, 46, 45, 255],\n      [0, 48, 47, 255],\n      [0, 50, 49, 255],\n      [0, 52, 51, 255],\n      [0, 54, 53, 255],\n      [0, 56, 55, 255],\n      [0, 58, 57, 255],\n      [0, 60, 59, 255],\n      [0, 62, 61, 255],\n      [0, 65, 63, 255],\n      [0, 67, 65, 255],\n      [0, 69, 67, 255],\n      [0, 71, 69, 255],\n      [0, 73, 71, 255],\n      [0, 75, 73, 255],\n      [0, 77, 75, 255],\n      [0, 79, 77, 255],\n      [0, 81, 79, 255],\n      [0, 83, 81, 255],\n      [0, 85, 83, 255],\n      [0, 87, 85, 255],\n      [0, 89, 87, 255],\n      [0, 91, 89, 255],\n      [0, 93, 91, 255],\n      [0, 95, 93, 255],\n      [0, 97, 95, 255],\n      [0, 99, 97, 255],\n      [0, 101, 99, 255],\n      [0, 103, 101, 255],\n      [0, 105, 103, 255],\n      [0, 107, 105, 255],\n      [0, 109, 107, 255],\n      [0, 111, 109, 255],\n      [0, 113, 111, 255],\n      [0, 115, 113, 255],\n      [0, 117, 115, 255],\n      [0, 119, 117, 255],\n      [0, 121, 119, 255],\n      [0, 123, 121, 255],\n      [0, 125, 123, 255],\n      [0, 128, 125, 255],\n      [1, 126, 127, 255],\n      [3, 124, 129, 255],\n      [5, 122, 131, 255],\n      [7, 120, 133, 255],\n      [9, 118, 135, 255],\n      [11, 116, 137, 255],\n      [13, 114, 139, 255],\n      [15, 112, 141, 255],\n      [17, 110, 143, 255],\n      [19, 108, 145, 255],\n      [21, 106, 147, 255],\n      [23, 104, 149, 255],\n      [25, 102, 151, 255],\n      [27, 100, 153, 255],\n      [29, 98, 155, 255],\n      [31, 96, 157, 255],\n      [33, 94, 159, 255],\n      [35, 92, 161, 255],\n      [37, 90, 163, 255],\n      [39, 88, 165, 255],\n      [41, 86, 167, 255],\n      [43, 84, 169, 255],\n      [45, 82, 171, 255],\n      [47, 80, 173, 255],\n      [49, 78, 175, 255],\n      [51, 76, 177, 255],\n      [53, 74, 179, 255],\n      [55, 72, 181, 255],\n      [57, 70, 183, 255],\n      [59, 68, 185, 255],\n      [61, 66, 187, 255],\n      [63, 64, 189, 255],\n      [65, 63, 191, 255],\n      [67, 61, 193, 255],\n      [69, 59, 195, 255],\n      [71, 57, 197, 255],\n      [73, 55, 199, 255],\n      [75, 53, 201, 255],\n      [77, 51, 203, 255],\n      [79, 49, 205, 255],\n      [81, 47, 207, 255],\n      [83, 45, 209, 255],\n      [85, 43, 211, 255],\n      [86, 41, 213, 255],\n      [88, 39, 215, 255],\n      [90, 37, 217, 255],\n      [92, 35, 219, 255],\n      [94, 33, 221, 255],\n      [96, 31, 223, 255],\n      [98, 29, 225, 255],\n      [100, 27, 227, 255],\n      [102, 25, 229, 255],\n      [104, 23, 231, 255],\n      [106, 21, 233, 255],\n      [108, 19, 235, 255],\n      [110, 17, 237, 255],\n      [112, 15, 239, 255],\n      [114, 13, 241, 255],\n      [116, 11, 243, 255],\n      [118, 9, 245, 255],\n      [120, 7, 247, 255],\n      [122, 5, 249, 255],\n      [124, 3, 251, 255],\n      [126, 1, 253, 255],\n      [128, 0, 255, 255],\n      [130, 2, 252, 255],\n      [132, 4, 248, 255],\n      [134, 6, 244, 255],\n      [136, 8, 240, 255],\n      [138, 10, 236, 255],\n      [140, 12, 232, 255],\n      [142, 14, 228, 255],\n      [144, 16, 224, 255],\n      [146, 18, 220, 255],\n      [148, 20, 216, 255],\n      [150, 22, 212, 255],\n      [152, 24, 208, 255],\n      [154, 26, 204, 255],\n      [156, 28, 200, 255],\n      [158, 30, 196, 255],\n      [160, 32, 192, 255],\n      [162, 34, 188, 255],\n      [164, 36, 184, 255],\n      [166, 38, 180, 255],\n      [168, 40, 176, 255],\n      [170, 42, 172, 255],\n      [171, 44, 168, 255],\n      [173, 46, 164, 255],\n      [175, 48, 160, 255],\n      [177, 50, 156, 255],\n      [179, 52, 152, 255],\n      [181, 54, 148, 255],\n      [183, 56, 144, 255],\n      [185, 58, 140, 255],\n      [187, 60, 136, 255],\n      [189, 62, 132, 255],\n      [191, 64, 128, 255],\n      [193, 66, 124, 255],\n      [195, 68, 120, 255],\n      [197, 70, 116, 255],\n      [199, 72, 112, 255],\n      [201, 74, 108, 255],\n      [203, 76, 104, 255],\n      [205, 78, 100, 255],\n      [207, 80, 96, 255],\n      [209, 82, 92, 255],\n      [211, 84, 88, 255],\n      [213, 86, 84, 255],\n      [215, 88, 80, 255],\n      [217, 90, 76, 255],\n      [219, 92, 72, 255],\n      [221, 94, 68, 255],\n      [223, 96, 64, 255],\n      [225, 98, 60, 255],\n      [227, 100, 56, 255],\n      [229, 102, 52, 255],\n      [231, 104, 48, 255],\n      [233, 106, 44, 255],\n      [235, 108, 40, 255],\n      [237, 110, 36, 255],\n      [239, 112, 32, 255],\n      [241, 114, 28, 255],\n      [243, 116, 24, 255],\n      [245, 118, 20, 255],\n      [247, 120, 16, 255],\n      [249, 122, 12, 255],\n      [251, 124, 8, 255],\n      [253, 126, 4, 255],\n      [255, 128, 0, 255],\n      [255, 130, 4, 255],\n      [255, 132, 8, 255],\n      [255, 134, 12, 255],\n      [255, 136, 16, 255],\n      [255, 138, 20, 255],\n      [255, 140, 24, 255],\n      [255, 142, 28, 255],\n      [255, 144, 32, 255],\n      [255, 146, 36, 255],\n      [255, 148, 40, 255],\n      [255, 150, 44, 255],\n      [255, 152, 48, 255],\n      [255, 154, 52, 255],\n      [255, 156, 56, 255],\n      [255, 158, 60, 255],\n      [255, 160, 64, 255],\n      [255, 162, 68, 255],\n      [255, 164, 72, 255],\n      [255, 166, 76, 255],\n      [255, 168, 80, 255],\n      [255, 170, 85, 255],\n      [255, 172, 89, 255],\n      [255, 174, 93, 255],\n      [255, 176, 97, 255],\n      [255, 178, 101, 255],\n      [255, 180, 105, 255],\n      [255, 182, 109, 255],\n      [255, 184, 113, 255],\n      [255, 186, 117, 255],\n      [255, 188, 121, 255],\n      [255, 190, 125, 255],\n      [255, 192, 129, 255],\n      [255, 194, 133, 255],\n      [255, 196, 137, 255],\n      [255, 198, 141, 255],\n      [255, 200, 145, 255],\n      [255, 202, 149, 255],\n      [255, 204, 153, 255],\n      [255, 206, 157, 255],\n      [255, 208, 161, 255],\n      [255, 210, 165, 255],\n      [255, 212, 170, 255],\n      [255, 214, 174, 255],\n      [255, 216, 178, 255],\n      [255, 218, 182, 255],\n      [255, 220, 186, 255],\n      [255, 222, 190, 255],\n      [255, 224, 194, 255],\n      [255, 226, 198, 255],\n      [255, 228, 202, 255],\n      [255, 230, 206, 255],\n      [255, 232, 210, 255],\n      [255, 234, 214, 255],\n      [255, 236, 218, 255],\n      [255, 238, 222, 255],\n      [255, 240, 226, 255],\n      [255, 242, 230, 255],\n      [255, 244, 234, 255],\n      [255, 246, 238, 255],\n      [255, 248, 242, 255],\n      [255, 250, 246, 255],\n      [255, 252, 250, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  hotMetalBlue: {\n    name: 'Hot Metal Blue',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 0, 2, 255],\n      [0, 0, 4, 255],\n      [0, 0, 6, 255],\n      [0, 0, 8, 255],\n      [0, 0, 10, 255],\n      [0, 0, 12, 255],\n      [0, 0, 14, 255],\n      [0, 0, 16, 255],\n      [0, 0, 17, 255],\n      [0, 0, 19, 255],\n      [0, 0, 21, 255],\n      [0, 0, 23, 255],\n      [0, 0, 25, 255],\n      [0, 0, 27, 255],\n      [0, 0, 29, 255],\n      [0, 0, 31, 255],\n      [0, 0, 33, 255],\n      [0, 0, 35, 255],\n      [0, 0, 37, 255],\n      [0, 0, 39, 255],\n      [0, 0, 41, 255],\n      [0, 0, 43, 255],\n      [0, 0, 45, 255],\n      [0, 0, 47, 255],\n      [0, 0, 49, 255],\n      [0, 0, 51, 255],\n      [0, 0, 53, 255],\n      [0, 0, 55, 255],\n      [0, 0, 57, 255],\n      [0, 0, 59, 255],\n      [0, 0, 61, 255],\n      [0, 0, 63, 255],\n      [0, 0, 65, 255],\n      [0, 0, 67, 255],\n      [0, 0, 69, 255],\n      [0, 0, 71, 255],\n      [0, 0, 73, 255],\n      [0, 0, 75, 255],\n      [0, 0, 77, 255],\n      [0, 0, 79, 255],\n      [0, 0, 81, 255],\n      [0, 0, 83, 255],\n      [0, 0, 84, 255],\n      [0, 0, 86, 255],\n      [0, 0, 88, 255],\n      [0, 0, 90, 255],\n      [0, 0, 92, 255],\n      [0, 0, 94, 255],\n      [0, 0, 96, 255],\n      [0, 0, 98, 255],\n      [0, 0, 100, 255],\n      [0, 0, 102, 255],\n      [0, 0, 104, 255],\n      [0, 0, 106, 255],\n      [0, 0, 108, 255],\n      [0, 0, 110, 255],\n      [0, 0, 112, 255],\n      [0, 0, 114, 255],\n      [0, 0, 116, 255],\n      [0, 0, 117, 255],\n      [0, 0, 119, 255],\n      [0, 0, 121, 255],\n      [0, 0, 123, 255],\n      [0, 0, 125, 255],\n      [0, 0, 127, 255],\n      [0, 0, 129, 255],\n      [0, 0, 131, 255],\n      [0, 0, 133, 255],\n      [0, 0, 135, 255],\n      [0, 0, 137, 255],\n      [0, 0, 139, 255],\n      [0, 0, 141, 255],\n      [0, 0, 143, 255],\n      [0, 0, 145, 255],\n      [0, 0, 147, 255],\n      [0, 0, 149, 255],\n      [0, 0, 151, 255],\n      [0, 0, 153, 255],\n      [0, 0, 155, 255],\n      [0, 0, 157, 255],\n      [0, 0, 159, 255],\n      [0, 0, 161, 255],\n      [0, 0, 163, 255],\n      [0, 0, 165, 255],\n      [0, 0, 167, 255],\n      [3, 0, 169, 255],\n      [6, 0, 171, 255],\n      [9, 0, 173, 255],\n      [12, 0, 175, 255],\n      [15, 0, 177, 255],\n      [18, 0, 179, 255],\n      [21, 0, 181, 255],\n      [24, 0, 183, 255],\n      [26, 0, 184, 255],\n      [29, 0, 186, 255],\n      [32, 0, 188, 255],\n      [35, 0, 190, 255],\n      [38, 0, 192, 255],\n      [41, 0, 194, 255],\n      [44, 0, 196, 255],\n      [47, 0, 198, 255],\n      [50, 0, 200, 255],\n      [52, 0, 197, 255],\n      [55, 0, 194, 255],\n      [57, 0, 191, 255],\n      [59, 0, 188, 255],\n      [62, 0, 185, 255],\n      [64, 0, 182, 255],\n      [66, 0, 179, 255],\n      [69, 0, 176, 255],\n      [71, 0, 174, 255],\n      [74, 0, 171, 255],\n      [76, 0, 168, 255],\n      [78, 0, 165, 255],\n      [81, 0, 162, 255],\n      [83, 0, 159, 255],\n      [85, 0, 156, 255],\n      [88, 0, 153, 255],\n      [90, 0, 150, 255],\n      [93, 2, 144, 255],\n      [96, 4, 138, 255],\n      [99, 6, 132, 255],\n      [102, 8, 126, 255],\n      [105, 9, 121, 255],\n      [108, 11, 115, 255],\n      [111, 13, 109, 255],\n      [114, 15, 103, 255],\n      [116, 17, 97, 255],\n      [119, 19, 91, 255],\n      [122, 21, 85, 255],\n      [125, 23, 79, 255],\n      [128, 24, 74, 255],\n      [131, 26, 68, 255],\n      [134, 28, 62, 255],\n      [137, 30, 56, 255],\n      [140, 32, 50, 255],\n      [143, 34, 47, 255],\n      [146, 36, 44, 255],\n      [149, 38, 41, 255],\n      [152, 40, 38, 255],\n      [155, 41, 35, 255],\n      [158, 43, 32, 255],\n      [161, 45, 29, 255],\n      [164, 47, 26, 255],\n      [166, 49, 24, 255],\n      [169, 51, 21, 255],\n      [172, 53, 18, 255],\n      [175, 55, 15, 255],\n      [178, 56, 12, 255],\n      [181, 58, 9, 255],\n      [184, 60, 6, 255],\n      [187, 62, 3, 255],\n      [190, 64, 0, 255],\n      [194, 66, 0, 255],\n      [198, 68, 0, 255],\n      [201, 70, 0, 255],\n      [205, 72, 0, 255],\n      [209, 73, 0, 255],\n      [213, 75, 0, 255],\n      [217, 77, 0, 255],\n      [221, 79, 0, 255],\n      [224, 81, 0, 255],\n      [228, 83, 0, 255],\n      [232, 85, 0, 255],\n      [236, 87, 0, 255],\n      [240, 88, 0, 255],\n      [244, 90, 0, 255],\n      [247, 92, 0, 255],\n      [251, 94, 0, 255],\n      [255, 96, 0, 255],\n      [255, 98, 3, 255],\n      [255, 100, 6, 255],\n      [255, 102, 9, 255],\n      [255, 104, 12, 255],\n      [255, 105, 15, 255],\n      [255, 107, 18, 255],\n      [255, 109, 21, 255],\n      [255, 111, 24, 255],\n      [255, 113, 26, 255],\n      [255, 115, 29, 255],\n      [255, 117, 32, 255],\n      [255, 119, 35, 255],\n      [255, 120, 38, 255],\n      [255, 122, 41, 255],\n      [255, 124, 44, 255],\n      [255, 126, 47, 255],\n      [255, 128, 50, 255],\n      [255, 130, 53, 255],\n      [255, 132, 56, 255],\n      [255, 134, 59, 255],\n      [255, 136, 62, 255],\n      [255, 137, 65, 255],\n      [255, 139, 68, 255],\n      [255, 141, 71, 255],\n      [255, 143, 74, 255],\n      [255, 145, 76, 255],\n      [255, 147, 79, 255],\n      [255, 149, 82, 255],\n      [255, 151, 85, 255],\n      [255, 152, 88, 255],\n      [255, 154, 91, 255],\n      [255, 156, 94, 255],\n      [255, 158, 97, 255],\n      [255, 160, 100, 255],\n      [255, 162, 103, 255],\n      [255, 164, 106, 255],\n      [255, 166, 109, 255],\n      [255, 168, 112, 255],\n      [255, 169, 115, 255],\n      [255, 171, 118, 255],\n      [255, 173, 121, 255],\n      [255, 175, 124, 255],\n      [255, 177, 126, 255],\n      [255, 179, 129, 255],\n      [255, 181, 132, 255],\n      [255, 183, 135, 255],\n      [255, 184, 138, 255],\n      [255, 186, 141, 255],\n      [255, 188, 144, 255],\n      [255, 190, 147, 255],\n      [255, 192, 150, 255],\n      [255, 194, 153, 255],\n      [255, 196, 156, 255],\n      [255, 198, 159, 255],\n      [255, 200, 162, 255],\n      [255, 201, 165, 255],\n      [255, 203, 168, 255],\n      [255, 205, 171, 255],\n      [255, 207, 174, 255],\n      [255, 209, 176, 255],\n      [255, 211, 179, 255],\n      [255, 213, 182, 255],\n      [255, 215, 185, 255],\n      [255, 216, 188, 255],\n      [255, 218, 191, 255],\n      [255, 220, 194, 255],\n      [255, 222, 197, 255],\n      [255, 224, 200, 255],\n      [255, 226, 203, 255],\n      [255, 228, 206, 255],\n      [255, 229, 210, 255],\n      [255, 231, 213, 255],\n      [255, 233, 216, 255],\n      [255, 235, 219, 255],\n      [255, 237, 223, 255],\n      [255, 239, 226, 255],\n      [255, 240, 229, 255],\n      [255, 242, 232, 255],\n      [255, 244, 236, 255],\n      [255, 246, 239, 255],\n      [255, 248, 242, 255],\n      [255, 250, 245, 255],\n      [255, 251, 249, 255],\n      [255, 253, 252, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  pet20Step: {\n    name: 'PET 20 Step',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  gray: {\n    name: 'Gray',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n    },\n  },\n  jet: {\n    name: 'Jet',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.35, 0, 0],\n        [0.66, 1, 1],\n        [0.89, 1, 1],\n        [1, 0.5, 0.5],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.125, 0, 0],\n        [0.375, 1, 1],\n        [0.64, 1, 1],\n        [0.91, 0, 0],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 0.5, 0.5],\n        [0.11, 1, 1],\n        [0.34, 1, 1],\n        [0.65, 0, 0],\n        [1, 0, 0],\n      ],\n    },\n  },\n  hsv: {\n    name: 'HSV',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [0.15873, 1, 1],\n        [0.174603, 0.96875, 0.96875],\n        [0.333333, 0.03125, 0.03125],\n        [0.349206, 0, 0],\n        [0.666667, 0, 0],\n        [0.68254, 0.03125, 0.03125],\n        [0.84127, 0.96875, 0.96875],\n        [0.857143, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.15873, 0.9375, 0.9375],\n        [0.174603, 1, 1],\n        [0.507937, 1, 1],\n        [0.666667, 0.0625, 0.0625],\n        [0.68254, 0, 0],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.333333, 0, 0],\n        [0.349206, 0.0625, 0.0625],\n        [0.507937, 1, 1],\n        [0.84127, 1, 1],\n        [0.857143, 0.9375, 0.9375],\n        [1, 0.09375, 0.09375],\n      ],\n    },\n  },\n  hot: {\n    name: 'Hot',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.0416, 0.0416],\n        [0.365079, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.365079, 0, 0],\n        [0.746032, 1, 1],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.746032, 0, 0],\n        [1, 1, 1],\n      ],\n    },\n  },\n  cool: {\n    name: 'Cool',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 1, 1],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n    },\n  },\n  spring: {\n    name: 'Spring',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 0, 0],\n      ],\n    },\n  },\n  summer: {\n    name: 'Summer',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0.5, 0.5],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0.4, 0.4],\n        [1, 0.4, 0.4],\n      ],\n    },\n  },\n  autumn: {\n    name: 'Autumn',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 0, 0],\n      ],\n    },\n  },\n  winter: {\n    name: 'Winter',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 0, 0],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 0.5, 0.5],\n      ],\n    },\n  },\n  bone: {\n    name: 'Bone',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.746032, 0.652778, 0.652778],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.365079, 0.319444, 0.319444],\n        [0.746032, 0.777778, 0.777778],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.365079, 0.444444, 0.444444],\n        [1, 1, 1],\n      ],\n    },\n  },\n  copper: {\n    name: 'Copper',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.809524, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 0.7812, 0.7812],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 0.4975, 0.4975],\n      ],\n    },\n  },\n  spectral: {\n    name: 'Spectral',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.05, 0.4667, 0.4667],\n        [0.1, 0.5333, 0.5333],\n        [0.15, 0, 0],\n        [0.2, 0, 0],\n        [0.25, 0, 0],\n        [0.3, 0, 0],\n        [0.35, 0, 0],\n        [0.4, 0, 0],\n        [0.45, 0, 0],\n        [0.5, 0, 0],\n        [0.55, 0, 0],\n        [0.6, 0, 0],\n        [0.65, 0.7333, 0.7333],\n        [0.7, 0.9333, 0.9333],\n        [0.75, 1, 1],\n        [0.8, 1, 1],\n        [0.85, 1, 1],\n        [0.9, 0.8667, 0.8667],\n        [0.95, 0.8, 0.8],\n        [1, 0.8, 0.8],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.05, 0, 0],\n        [0.1, 0, 0],\n        [0.15, 0, 0],\n        [0.2, 0, 0],\n        [0.25, 0.4667, 0.4667],\n        [0.3, 0.6, 0.6],\n        [0.35, 0.6667, 0.6667],\n        [0.4, 0.6667, 0.6667],\n        [0.45, 0.6, 0.6],\n        [0.5, 0.7333, 0.7333],\n        [0.55, 0.8667, 0.8667],\n        [0.6, 1, 1],\n        [0.65, 1, 1],\n        [0.7, 0.9333, 0.9333],\n        [0.75, 0.8, 0.8],\n        [0.8, 0.6, 0.6],\n        [0.85, 0, 0],\n        [0.9, 0, 0],\n        [0.95, 0, 0],\n        [1, 0.8, 0.8],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.05, 0.5333, 0.5333],\n        [0.1, 0.6, 0.6],\n        [0.15, 0.6667, 0.6667],\n        [0.2, 0.8667, 0.8667],\n        [0.25, 0.8667, 0.8667],\n        [0.3, 0.8667, 0.8667],\n        [0.35, 0.6667, 0.6667],\n        [0.4, 0.5333, 0.5333],\n        [0.45, 0, 0],\n        [0.5, 0, 0],\n        [0.55, 0, 0],\n        [0.6, 0, 0],\n        [0.65, 0, 0],\n        [0.7, 0, 0],\n        [0.75, 0, 0],\n        [0.8, 0, 0],\n        [0.85, 0, 0],\n        [0.9, 0, 0],\n        [0.95, 0, 0],\n        [1, 0.8, 0.8],\n      ],\n    },\n  },\n  coolwarm: {\n    name: 'CoolWarm',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.2298057, 0.2298057],\n        [0.03125, 0.26623388, 0.26623388],\n        [0.0625, 0.30386891, 0.30386891],\n        [0.09375, 0.342804478, 0.342804478],\n        [0.125, 0.38301334, 0.38301334],\n        [0.15625, 0.424369608, 0.424369608],\n        [0.1875, 0.46666708, 0.46666708],\n        [0.21875, 0.509635204, 0.509635204],\n        [0.25, 0.552953156, 0.552953156],\n        [0.28125, 0.596262162, 0.596262162],\n        [0.3125, 0.639176211, 0.639176211],\n        [0.34375, 0.681291281, 0.681291281],\n        [0.375, 0.722193294, 0.722193294],\n        [0.40625, 0.761464949, 0.761464949],\n        [0.4375, 0.798691636, 0.798691636],\n        [0.46875, 0.833466556, 0.833466556],\n        [0.5, 0.865395197, 0.865395197],\n        [0.53125, 0.897787179, 0.897787179],\n        [0.5625, 0.924127593, 0.924127593],\n        [0.59375, 0.944468518, 0.944468518],\n        [0.625, 0.958852946, 0.958852946],\n        [0.65625, 0.96732803, 0.96732803],\n        [0.6875, 0.969954137, 0.969954137],\n        [0.71875, 0.966811177, 0.966811177],\n        [0.75, 0.958003065, 0.958003065],\n        [0.78125, 0.943660866, 0.943660866],\n        [0.8125, 0.923944917, 0.923944917],\n        [0.84375, 0.89904617, 0.89904617],\n        [0.875, 0.869186849, 0.869186849],\n        [0.90625, 0.834620542, 0.834620542],\n        [0.9375, 0.795631745, 0.795631745],\n        [0.96875, 0.752534934, 0.752534934],\n        [1, 0.705673158, 0.705673158],\n      ],\n      green: [\n        [0, 0.298717966, 0.298717966],\n        [0.03125, 0.353094838, 0.353094838],\n        [0.0625, 0.406535296, 0.406535296],\n        [0.09375, 0.458757618, 0.458757618],\n        [0.125, 0.50941904, 0.50941904],\n        [0.15625, 0.558148092, 0.558148092],\n        [0.1875, 0.604562568, 0.604562568],\n        [0.21875, 0.648280772, 0.648280772],\n        [0.25, 0.688929332, 0.688929332],\n        [0.28125, 0.726149107, 0.726149107],\n        [0.3125, 0.759599947, 0.759599947],\n        [0.34375, 0.788964712, 0.788964712],\n        [0.375, 0.813952739, 0.813952739],\n        [0.40625, 0.834302879, 0.834302879],\n        [0.4375, 0.849786142, 0.849786142],\n        [0.46875, 0.860207984, 0.860207984],\n        [0.5, 0.86541021, 0.86541021],\n        [0.53125, 0.848937047, 0.848937047],\n        [0.5625, 0.827384882, 0.827384882],\n        [0.59375, 0.800927443, 0.800927443],\n        [0.625, 0.769767752, 0.769767752],\n        [0.65625, 0.734132809, 0.734132809],\n        [0.6875, 0.694266682, 0.694266682],\n        [0.71875, 0.650421156, 0.650421156],\n        [0.75, 0.602842431, 0.602842431],\n        [0.78125, 0.551750968, 0.551750968],\n        [0.8125, 0.49730856, 0.49730856],\n        [0.84375, 0.439559467, 0.439559467],\n        [0.875, 0.378313092, 0.378313092],\n        [0.90625, 0.312874446, 0.312874446],\n        [0.9375, 0.24128379, 0.24128379],\n        [0.96875, 0.157246067, 0.157246067],\n        [1, 0.01555616, 0.01555616],\n      ],\n      blue: [\n        [0, 0.753683153, 0.753683153],\n        [0.03125, 0.801466763, 0.801466763],\n        [0.0625, 0.84495867, 0.84495867],\n        [0.09375, 0.883725899, 0.883725899],\n        [0.125, 0.917387822, 0.917387822],\n        [0.15625, 0.945619588, 0.945619588],\n        [0.1875, 0.968154911, 0.968154911],\n        [0.21875, 0.98478814, 0.98478814],\n        [0.25, 0.995375608, 0.995375608],\n        [0.28125, 0.999836203, 0.999836203],\n        [0.3125, 0.998151185, 0.998151185],\n        [0.34375, 0.990363227, 0.990363227],\n        [0.375, 0.976574709, 0.976574709],\n        [0.40625, 0.956945269, 0.956945269],\n        [0.4375, 0.931688648, 0.931688648],\n        [0.46875, 0.901068838, 0.901068838],\n        [0.5, 0.865395561, 0.865395561],\n        [0.53125, 0.820880546, 0.820880546],\n        [0.5625, 0.774508472, 0.774508472],\n        [0.59375, 0.726736146, 0.726736146],\n        [0.625, 0.678007945, 0.678007945],\n        [0.65625, 0.628751763, 0.628751763],\n        [0.6875, 0.579375448, 0.579375448],\n        [0.71875, 0.530263762, 0.530263762],\n        [0.75, 0.481775914, 0.481775914],\n        [0.78125, 0.434243684, 0.434243684],\n        [0.8125, 0.387970225, 0.387970225],\n        [0.84375, 0.343229596, 0.343229596],\n        [0.875, 0.300267182, 0.300267182],\n        [0.90625, 0.259301199, 0.259301199],\n        [0.9375, 0.220525627, 0.220525627],\n        [0.96875, 0.184115123, 0.184115123],\n        [1, 0.150232812, 0.150232812],\n      ],\n    },\n  },\n  blues: {\n    name: 'Blues',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.9686274528503418, 0.9686274528503418],\n        [0.125, 0.87058824300765991, 0.87058824300765991],\n        [0.25, 0.7764706015586853, 0.7764706015586853],\n        [0.375, 0.61960786581039429, 0.61960786581039429],\n        [0.5, 0.41960784792900085, 0.41960784792900085],\n        [0.625, 0.25882354378700256, 0.25882354378700256],\n        [0.75, 0.12941177189350128, 0.12941177189350128],\n        [0.875, 0.031372550874948502, 0.031372550874948502],\n        [1, 0.031372550874948502, 0.031372550874948502],\n      ],\n      green: [\n        [0, 0.9843137264251709, 0.9843137264251709],\n        [0.125, 0.92156863212585449, 0.92156863212585449],\n        [0.25, 0.85882353782653809, 0.85882353782653809],\n        [0.375, 0.7921568751335144, 0.7921568751335144],\n        [0.5, 0.68235296010971069, 0.68235296010971069],\n        [0.625, 0.57254904508590698, 0.57254904508590698],\n        [0.75, 0.44313725829124451, 0.44313725829124451],\n        [0.875, 0.31764706969261169, 0.31764706969261169],\n        [1, 0.18823529779911041, 0.18823529779911041],\n      ],\n      blue: [\n        [0, 1, 1],\n        [0.125, 0.9686274528503418, 0.9686274528503418],\n        [0.25, 0.93725490570068359, 0.93725490570068359],\n        [0.375, 0.88235294818878174, 0.88235294818878174],\n        [0.5, 0.83921569585800171, 0.83921569585800171],\n        [0.625, 0.7764706015586853, 0.7764706015586853],\n        [0.75, 0.70980393886566162, 0.70980393886566162],\n        [0.875, 0.61176472902297974, 0.61176472902297974],\n        [1, 0.41960784792900085, 0.41960784792900085],\n      ],\n    },\n  },\n};\n\nexport default colormapsData;\n", "import LookupTable from './lookupTable';\nimport colormapsData from './colormaps';\nimport {\n  CPUFallbackColormap,\n  CPUFallbackColormapData,\n  Point4,\n} from '../../../../types';\n\nconst COLOR_TRANSPARENT: Point4 = [0, 0, 0, 0];\n\n/**\n *  Generate linearly spaced vectors\n *  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html\n * @param {Number} a A number representing the first vector\n * @param {Number} b A number representing the second vector\n * @param {Number} n The number of linear spaced vectors to generate\n * @returns {Array} An array of points representing linear spaced vectors.\n * @memberof Colors\n */\nfunction linspace(a: number, b: number, n: number): number[] {\n  n = n === null ? 100 : n;\n\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n\n  // Make sure the last item will always be \"b\" because most of the\n  // Time we'll get numbers like 1.0000000000000002 instead of 1.\n  vector[vector.length - 1] = b;\n\n  return vector;\n}\n\n/**\n * Returns the \"rank/index\" of the element in a sorted array if found or the highest index if not. Uses (binary search)\n * @param {Array} array A sorted array to search in\n * @param {any} elem the element in the array to search for\n * @returns {number} The rank/index of the element in the given array\n * @memberof Colors\n */\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n\n/**\n * Find the indices into a sorted array a such that, if the corresponding elements\n * In v were inserted before the indices, the order of a would be preserved.\n *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html\n * @param {Array} inputArray The array where the values will be inserted\n * @param {Array} values An array of the values to be inserted into the inputArray\n * @returns {Array} The indices where elements should be inserted to maintain order.\n * @memberof Colors\n */\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n\n  return indexes;\n}\n\n/**\n * Creates an *N* -element 1-d lookup table\n * @param {Number} N The number of elements in the result lookup table\n * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this\n * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to\n * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for\n * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents\n * The value of y for values of x <= to that given, and y1 is the value to be used for x >\n * Than that given). The list must start with x=0, end with x=1, and all values of x must be\n * In increasing order. Values between the given mapping points are determined by simple linear\n * Interpolation.\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the map.\n * @returns {any[]} an array \"result\" where result[x*(N-1)] gives the closest value for\n * Values of x between 0 and 1.\n * @memberof Colors\n */\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n\n  gamma = gamma === null ? 1 : gamma;\n\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n\n  const xLinSpace = linspace(0, 1, N);\n\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent =\n      (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n\n  return lut;\n}\n\n/**\n * Creates a Colormap based on lookup tables using linear segments.\n * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.\n * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.\n * @param {Number} N The number of elements in the result Colormap\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the Colormap.\n * @returns {Array} The created Colormap object\n * @description The lookup table is generated using linear interpolation for each\n *  Primary color, with the 0-1 domain divided into any number of\n * Segments.\n * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663\n * @memberof Colors\n */\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n\n    lut.push(rgba);\n  }\n\n  return lut;\n}\n\n/**\n * Return all available colormaps (id and name)\n * @returns {Array<{id,key}>} An array of colormaps with an object containing the \"id\" and display \"name\"\n * @memberof Colors\n */\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(colormapsData);\n\n  keys.forEach(function (key) {\n    if (colormapsData.hasOwnProperty(key)) {\n      const colormap = colormapsData[key];\n\n      colormaps.push({\n        id: key,\n        name: colormap.name,\n      });\n    }\n  });\n\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n\n    if (aName === bName) {\n      return 0;\n    }\n\n    return aName < bName ? -1 : 1;\n  });\n\n  return colormaps;\n}\n\n/**\n * Return a colorMap object with the provided id and colormapData\n * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.\n * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.\n * @param {string} id The ID of the colormap\n * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors\n * @returns {*} The Colormap Object\n * @memberof Colors\n */\nexport function getColormap(\n  id: string,\n  colormapData?: CPUFallbackColormapData\n): CPUFallbackColormap {\n  let colormap = colormapsData[id];\n\n  if (!colormap) {\n    colormap = colormapsData[id] = colormapData || {\n      name: '',\n      colors: [],\n    };\n  }\n\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(\n      colormap.segmentedData,\n      colormap.numColors,\n      colormap.gamma\n    );\n  }\n\n  const cpuFallbackColormap: CPUFallbackColormap = {\n    getId() {\n      return id;\n    },\n\n    getColorSchemeName() {\n      return colormap.name;\n    },\n\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n\n      colormap.colors.length = numColors;\n    },\n\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n\n      return COLOR_TRANSPARENT;\n    },\n\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n\n      index = numColors ? index % numColors : 0;\n\n      return this.getColor(index);\n    },\n\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n\n    clearColors() {\n      colormap.colors = [];\n    },\n\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n\n      const numColors = colormap.colors.length;\n\n      lut.setNumberOfTableValues(numColors);\n\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n\n    createLookupTable() {\n      const lut = new LookupTable();\n\n      this.buildLookupTable(lut);\n\n      return lut;\n    },\n\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    },\n  };\n\n  return cpuFallbackColormap;\n}\n", "import setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport getLut from './getLut';\nimport saveLastRendered from './saveLastRendered';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport storedPixelDataToCanvasImageDataPseudocolorLUT from './storedPixelDataToCanvasImageDataPseudocolorLUT';\nimport storedPixelDataToCanvasImageDataPseudocolorLUTPET from './storedPixelDataToCanvasImageDataPseudocolorLUTPET';\nimport * as colors from '../colors/index';\nimport type { IImage, CPUFallbackEnabledElement } from '../../../../types';\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  if (!enabledElement.renderingTools.renderCanvas) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  let colormap =\n    enabledElement.viewport.colormap || enabledElement.options.colormap;\n\n  if (enabledElement.options && enabledElement.options.colormap) {\n    console.warn(\n      'enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead'\n    );\n  }\n  if (colormap && typeof colormap === 'string') {\n    colormap = colors.getColormap(colormap);\n  }\n\n  if (!colormap) {\n    throw new Error('renderPseudoColorImage: colormap not found.');\n  }\n\n  const colormapId = colormap.getId();\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true &&\n    enabledElement.renderingTools.colormapId === colormapId\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n\n  if (\n    !enabledElement.renderingTools.colorLut ||\n    invalidated ||\n    enabledElement.renderingTools.colormapId !== colormapId\n  ) {\n    colormap.setNumberOfColors(256);\n    enabledElement.renderingTools.colorLut = colormap.createLookupTable();\n    enabledElement.renderingTools.colormapId = colormapId;\n  }\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n  const { viewport } = enabledElement;\n  const colorLut = enabledElement.renderingTools.colorLut;\n\n  if (viewport.modality === 'PT') {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor(255 - (value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    } else {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor((value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    }\n\n    storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n      image,\n      petVOILutFunction,\n      colorLut,\n      renderCanvasData.data\n    );\n  } else {\n    const lut = getLut(image, enabledElement.viewport, invalidated);\n\n    image.stats = image.stats || {};\n    image.stats.lastLutGenerateTime = now() - start;\n\n    storedPixelDataToCanvasImageDataPseudocolorLUT(\n      image,\n      lut,\n      colorLut,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a pseudo-color image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderPseudoColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  // If no options are set we will retrieve the renderCanvas through the\n  // Normal Canvas rendering path\n  // TODO: Add WebGL support for pseudocolor pipeline\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n", "import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n  image: IImage,\n  lutFunction: (value: number) => number,\n  colorLut: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLut instanceof colors.LookupTable) {\n    clut = colorLut.Table;\n  } else {\n    clut = colorLut;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(\n        pixelData[storedPixelDataIndex++] + -minPixelValue\n      );\n\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(pixelData[storedPixelDataIndex++]);\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUTPET;\n", "import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUT(\n  image: IImage,\n  grayscaleLut: Uint8ClampedArray,\n  colorLut: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLut instanceof colors.LookupTable) {\n    clut = colorLut.Table;\n  } else {\n    clut = colorLut;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale =\n        grayscaleLut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = grayscaleLut[pixelData[storedPixelDataIndex++]];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUT;\n", "import RequestType from '../enums/RequestType';\n\ntype AdditionalDetails = {\n  imageId?: string;\n  volumeId?: string;\n};\n\ntype RequestDetailsInterface = {\n  requestFn: () => Promise<void>;\n  type: RequestType;\n  additionalDetails: AdditionalDetails;\n};\n\ntype RequestPool = {\n  [name in RequestType]: { [key: number]: RequestDetailsInterface[] };\n};\n\n// TODO: Some of this stuff shouldn't be public but it's easier right now\n/**\n * RequestPool manager class is a base class that manages the request pools.\n * It is used imageRetrievalPoolManager, and imageLoadPoolManager to retrieve and load images.\n * Previously requestPoolManager was used to manage the retrieval and loading and decoding\n * of the images in a way that new requests were sent after the image was both loaded and decoded\n * which was not performant since it was waiting for the image to be loaded and decoded before\n * sending the next request which is a network request and can be done in parallel.\n * Now, we use separate imageRetrievalPoolManager and imageLoadPoolManager\n * to improve performance and both are extending the RequestPoolManager class which\n * is a basic queueing pool.\n *\n * A new requestPool can be created by instantiating a new RequestPoolManager class.\n *\n * ```javascript\n * const requestPoolManager = new RequestPoolManager()\n * ```\n *\n * ## ImageLoadPoolManager\n *\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *     scalingParameters,\n *   },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n * ### ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n *\n *\n */\nclass RequestPoolManager {\n  private requestPool: RequestPool;\n  private awake: boolean;\n  private numRequests = {\n    interaction: 0,\n    thumbnail: 0,\n    prefetch: 0,\n  };\n  /* maximum number of requests of each type. */\n  public maxNumRequests: {\n    interaction: number;\n    thumbnail: number;\n    prefetch: number;\n  };\n  /* A public property that is used to set the delay between requests. */\n  public grabDelay: number;\n  private timeoutHandle: number;\n\n  /**\n   * By default a request pool containing three priority groups, one for each\n   * of the request types, is created. Maximum number of requests of each type\n   * is set to 6.\n   */\n  constructor() {\n    this.requestPool = {\n      interaction: { 0: [] },\n      thumbnail: { 0: [] },\n      prefetch: { 0: [] },\n    };\n\n    this.awake = false;\n    this.grabDelay = 5;\n\n    this.numRequests = {\n      interaction: 0,\n      thumbnail: 0,\n      prefetch: 0,\n    };\n\n    this.maxNumRequests = {\n      interaction: 6,\n      thumbnail: 6,\n      prefetch: 5,\n    };\n  }\n\n  /**\n   * Stops further fetching of the requests, all the ongoing requests will still\n   * be retrieved\n   */\n  public destroy(): void {\n    if (this.timeoutHandle) {\n      window.clearTimeout(this.timeoutHandle);\n    }\n  }\n\n  /**\n   * Adds the requests to the pool of requests.\n   *\n   * @param requestFn - A function that returns a promise which resolves in the image\n   * @param type - Priority category, it can be either of interaction, prefetch,\n   * or thumbnail.\n   * @param additionalDetails - Additional details that requests can contain.\n   * For instance the volumeId for the volume requests\n   * @param priority - Priority number for each category of requests. Its default\n   * value is priority 0. The lower the priority number, the higher the priority number\n   *\n   */\n  public addRequest(\n    requestFn: () => Promise<void>,\n    type: RequestType,\n    additionalDetails: Record<string, unknown>,\n    priority = 0\n  ): void {\n    // Describe the request\n    const requestDetails: RequestDetailsInterface = {\n      requestFn,\n      type,\n      additionalDetails,\n    };\n\n    // Check if the priority group exists on the request type\n    if (this.requestPool[type][priority] === undefined) {\n      this.requestPool[type][priority] = [];\n    }\n\n    // Adding the request to the correct priority group of the request type\n    this.requestPool[type][priority].push(requestDetails);\n\n    // Wake up\n    if (!this.awake) {\n      this.awake = true;\n      this.startGrabbing();\n    }\n  }\n\n  /**\n   * Filter the requestPoolManager's pool of request based on the result of\n   * provided filter function. The provided filter function needs to return false or true\n   *\n   * @param filterFunction - The filter function for filtering of the requests to keep\n   */\n  public filterRequests(\n    filterFunction: (requestDetails: RequestDetailsInterface) => boolean\n  ): void {\n    Object.keys(this.requestPool).forEach((type: string) => {\n      const requestType = this.requestPool[type];\n      Object.keys(requestType).forEach((priority) => {\n        requestType[priority] = requestType[priority].filter(\n          (requestDetails: RequestDetailsInterface) => {\n            return filterFunction(requestDetails);\n          }\n        );\n      });\n    });\n  }\n\n  /**\n   * Clears the requests specific to the provided type. For instance, the\n   * pool of requests of type 'interaction' can be cleared via this function.\n   *\n   *\n   * @param type - category of the request (either interaction, prefetch or thumbnail)\n   */\n  public clearRequestStack(type: string): void {\n    if (!this.requestPool[type]) {\n      throw new Error(`No category for the type ${type} found`);\n    }\n    this.requestPool[type] = { 0: [] };\n  }\n\n  protected sendRequest({ requestFn, type }: RequestDetailsInterface): void {\n    // Increment the number of current requests of this type\n    this.numRequests[type]++;\n    this.awake = true;\n\n    requestFn().finally(() => {\n      this.numRequests[type]--;\n\n      this.startAgain();\n    });\n  }\n\n  protected startGrabbing(): void {\n    // TODO: This is the reason things aren't going as fast as expected\n    // const maxSimultaneousRequests = getMaxSimultaneousRequests()\n    // this.maxNumRequests = {\n    //   interaction: Math.max(maxSimultaneousRequests, 1),\n    //   thumbnail: Math.max(maxSimultaneousRequests - 2, 1),\n    //   prefetch: Math.max(maxSimultaneousRequests - 1, 1),\n    // }\n\n    const maxRequests =\n      this.maxNumRequests.interaction +\n      this.maxNumRequests.thumbnail +\n      this.maxNumRequests.prefetch;\n    const currentRequests =\n      this.numRequests.interaction +\n      this.numRequests.thumbnail +\n      this.numRequests.prefetch;\n\n    const requestsToSend = maxRequests - currentRequests;\n    for (let i = 0; i < requestsToSend; i++) {\n      const requestDetails = this.getNextRequest();\n      if (requestDetails === false) {\n        break;\n      } else if (requestDetails) {\n        this.sendRequest(requestDetails);\n      }\n    }\n  }\n\n  protected startAgain(): void {\n    if (!this.awake) {\n      return;\n    }\n\n    if (this.grabDelay !== undefined) {\n      this.timeoutHandle = window.setTimeout(() => {\n        this.startGrabbing();\n      }, this.grabDelay);\n    } else {\n      this.startGrabbing();\n    }\n  }\n\n  protected getSortedPriorityGroups(type: string): Array<number> {\n    const priorities = Object.keys(this.requestPool[type])\n      .map(Number)\n      .filter((priority) => this.requestPool[type][priority].length)\n      .sort();\n    return priorities;\n  }\n\n  protected getNextRequest(): RequestDetailsInterface | false {\n    const interactionPriorities = this.getSortedPriorityGroups('interaction');\n    for (const priority of interactionPriorities) {\n      if (\n        this.requestPool.interaction[priority].length &&\n        this.numRequests.interaction < this.maxNumRequests.interaction\n      ) {\n        return this.requestPool.interaction[priority].shift();\n      }\n    }\n    const thumbnailPriorities = this.getSortedPriorityGroups('thumbnail');\n    for (const priority of thumbnailPriorities) {\n      if (\n        this.requestPool.thumbnail[priority].length &&\n        this.numRequests.thumbnail < this.maxNumRequests.thumbnail\n      ) {\n        return this.requestPool.thumbnail[priority].shift();\n      }\n    }\n    const prefetchPriorities = this.getSortedPriorityGroups('prefetch');\n    for (const priority of prefetchPriorities) {\n      if (\n        this.requestPool.prefetch[priority].length &&\n        this.numRequests.prefetch < this.maxNumRequests.prefetch\n      ) {\n        return this.requestPool.prefetch[priority].shift();\n      }\n    }\n\n    if (\n      !interactionPriorities.length &&\n      !thumbnailPriorities.length &&\n      !prefetchPriorities.length\n    ) {\n      this.awake = false;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the request pool containing different categories, their priority and\n   * the added request details.\n   *\n   * @returns the request pool which contains different categories, their priority and\n   * the added request details\n   */\n  getRequestPool(): RequestPool {\n    return this.requestPool;\n  }\n}\n\nconst requestPoolManager = new RequestPoolManager();\n\nexport { RequestPoolManager };\nexport default requestPoolManager;\n", "import { RequestPoolManager } from './requestPoolManager';\n\n/**\n * ImageLoad Pool Manager\n * @category RequestPoolManager\n *\n */\nconst imageLoadPoolManager = new RequestPoolManager();\n\nimageLoadPoolManager.maxNumRequests = {\n  interaction: 1000,\n  thumbnail: 1000,\n  prefetch: 1000,\n};\nimageLoadPoolManager.grabDelay = 0;\n\nexport default imageLoadPoolManager;\n", "import cache from './cache/cache';\nimport Events from './enums/Events';\nimport eventTarget from './eventTarget';\nimport { triggerEvent } from './utilities';\nimport { IImage, ImageLoaderFn, IImageLoadObject, EventTypes } from './types';\nimport imageLoadPoolManager from './requestPool/imageLoadPoolManager';\n\nexport interface ImageLoaderOptions {\n  priority: number;\n  requestType: string;\n  additionalDetails?: Record<string, unknown>;\n}\n/**\n * This module deals with ImageLoaders, loading images and caching images\n */\nconst imageLoaders = {};\nlet unknownImageLoader;\n\n/**\n * Loads an image using a registered Cornerstone Image Loader.\n *\n * The image loader that is used will be\n * determined by the image loader scheme matching against the imageId.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param Options - to be passed to the Image Loader\n *\n * @returns - An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromImageLoader(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // Extract the image loader scheme: wadors:https://image1 => wadors\n  const colonIndex = imageId.indexOf(':');\n  const scheme = imageId.substring(0, colonIndex);\n  const loader = imageLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownImageLoader !== undefined) {\n      return unknownImageLoader(imageId);\n    }\n    throw new Error('loadImageFromImageLoader: no image loader for imageId');\n  }\n  // Load using the registered loader\n  const imageLoadObject = loader(imageId, options);\n  // Broadcast an image loaded event once the image is loaded\n  imageLoadObject.promise.then(\n    function (image) {\n      triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    },\n    function (error) {\n      const errorObject: EventTypes.ImageLoadedFailedEventDetail = {\n        imageId,\n        error,\n      };\n      triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorObject);\n    }\n  );\n  return imageLoadObject;\n}\n\n/**\n * Gets the imageLoadObject by 1) Looking in to the cache to see if the\n * imageLoadObject has already been cached, 2) Checks inside the volume cache\n * to see if there is a volume that contains the same imageURI for the requested\n * imageID 3) Checks inside the imageCache for similar imageURI that might have\n * been stored as a result of decaching a volume 4) Finally if none were found\n * it request it from the registered imageLoaders.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromCacheOrVolume(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // 1. Check inside the image cache for imageId\n  let imageLoadObject = cache.getImageLoadObject(imageId);\n  if (imageLoadObject !== undefined) {\n    return imageLoadObject;\n  }\n  // 2. Check if there exists a volume in the cache containing the imageId,\n  // we copy the pixelData over.\n  const cachedVolumeInfo = cache.getVolumeContainingImageId(imageId);\n  if (cachedVolumeInfo && cachedVolumeInfo.volume.loadStatus.loaded) {\n    // 2.1 Convert the volume at the specific slice to a cornerstoneImage object.\n    // this will copy the pixel data over.\n    const { volume, imageIdIndex } = cachedVolumeInfo;\n    imageLoadObject = volume.convertToCornerstoneImage(imageId, imageIdIndex);\n    return imageLoadObject;\n  }\n  // 3. If no volume found, we search inside the imageCache for the imageId\n  // that has the same URI which had been cached if the volume was converted\n  // to an image\n  const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n  if (cachedImage) {\n    imageLoadObject = cachedImage.imageLoadObject;\n    return imageLoadObject;\n  }\n  // 4. if not in image cache nor inside the volume cache, we request the\n  // image loaders to load it\n  imageLoadObject = loadImageFromImageLoader(imageId, options);\n\n  return imageLoadObject;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The loaded image is not stored in the cache.\n *\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error('loadImage: parameter imageId must not be undefined');\n  }\n\n  return loadImageFromCacheOrVolume(imageId, options).promise;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param imageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function loadAndCacheImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error(\n      'loadAndCacheImage: parameter imageId must not be undefined'\n    );\n  }\n  const imageLoadObject = loadImageFromCacheOrVolume(imageId, options);\n\n  // if not inside cache, store it\n  if (!cache.getImageLoadObject(imageId)) {\n    cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n      console.warn(err);\n    });\n  }\n\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param imageIds - list of imageIds\n * @param options - options for loader\n *\n */\nexport function loadAndCacheImages(\n  imageIds: Array<string>,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage>[] {\n  if (!imageIds || imageIds.length === 0) {\n    throw new Error(\n      'loadAndCacheImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const allPromises = imageIds.map((imageId) => {\n    return loadAndCacheImage(imageId, options);\n  });\n\n  return allPromises;\n}\n\n/**\n * Removes the imageId from the request pool manager and executes the `cancel`\n * function if it exists.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n *\n */\nexport function cancelLoadImage(imageId: string): void {\n  const filterFunction = ({ additionalDetails }) => {\n    if (additionalDetails.imageId) {\n      return additionalDetails.imageId !== imageId;\n    }\n\n    // for volumes\n    return true;\n  };\n\n  // Instruct the request pool manager to filter queued\n  // requests to ensure requests we no longer need are\n  // no longer sent.\n  imageLoadPoolManager.filterRequests(filterFunction);\n\n  // TODO: Cancel decoding and retrieval as well (somehow?)\n\n  // cancel image loading if in progress\n  const imageLoadObject = cache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    imageLoadObject.cancel();\n  }\n}\n\n/**\n * Removes the imageIds from the request pool manager and calls the `cancel`\n * function if it exists.\n *\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n *\n */\nexport function cancelLoadImages(imageIds: Array<string>): void {\n  imageIds.forEach((imageId) => cancelLoadImage(imageId));\n}\n\n/**\n * Removes all the ongoing image loads by calling the `cancel` method on each\n * imageLoadObject. If no `cancel` method is available, it will be ignored.\n *\n */\nexport function cancelLoadAll(): void {\n  const requestPool = imageLoadPoolManager.getRequestPool();\n\n  Object.keys(requestPool).forEach((type: string) => {\n    const requests = requestPool[type];\n\n    Object.keys(requests).forEach((priority) => {\n      const requestDetails = requests[priority].pop();\n      const { imageId, volumeId } = requestDetails.additionalDetails;\n\n      let loadObject;\n\n      if (imageId) {\n        loadObject = cache.getImageLoadObject(imageId);\n      } else if (volumeId) {\n        loadObject = cache.getVolumeLoadObject(volumeId);\n      }\n      if (loadObject) {\n        loadObject.cancel();\n      }\n    });\n    // resetting the pool types to be empty\n    imageLoadPoolManager.clearRequestStack(type);\n\n    // TODO: Clear retrieval and decoding queues as well\n  });\n}\n\n/**\n * Registers an imageLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param imageLoader - A Cornerstone Image Loader function\n */\nexport function registerImageLoader(\n  scheme: string,\n  imageLoader: ImageLoaderFn\n): void {\n  imageLoaders[scheme] = imageLoader;\n}\n/**\n * Registers a new unknownImageLoader and returns the previous one\n *\n * @param imageLoader - A Cornerstone Image Loader\n *\n * @returns The previous Unknown Image Loader\n */\nexport function registerUnknownImageLoader(\n  imageLoader: ImageLoaderFn\n): ImageLoaderFn {\n  const oldImageLoader = unknownImageLoader;\n  unknownImageLoader = imageLoader;\n  return oldImageLoader;\n}\n/**\n * Removes all registered and unknown image loaders. This should be called\n * when the application is unmounted to prevent memory leaks.\n *\n */\nexport function unregisterAllImageLoaders(): void {\n  Object.keys(imageLoaders).forEach(\n    (imageLoader) => delete imageLoaders[imageLoader]\n  );\n  unknownImageLoader = undefined;\n}\n", "import calculateTransform from './calculateTransform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackTransform {\n  // Todo: for some reason using the cached transfer after the first call\n  // does not give correct transform.\n  // if (enabledElement.transform) {\n  //   return enabledElement.transform;\n  // }\n\n  return calculateTransform(enabledElement);\n}\n", "import getTransform from './getTransform';\n\nimport { Point2, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Converts a point in the canvas coordinate system to the pixel coordinate system\n * system.  This can be used to reset tools' image coordinates after modifications\n * have been made in canvas space (e.g. moving a tool by a few cm, independent of\n * image resolution).\n *\n * @param element - The Cornerstone element within which the input point lies\n * @param pt - The input point in the canvas coordinate system\n *\n * @returns The transformed point in the pixel coordinate system\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  transform.invert();\n\n  return transform.transformPoint(pt);\n}\n", "import getTransform from './getTransform';\nimport { CPUFallbackEnabledElement, Point2 } from '../../../../types';\n\n/**\n * Converts a point in the pixel coordinate system to the canvas coordinate system\n * system.  This can be used to render using canvas context without having the weird\n * side effects that come from scaling and non square pixels\n *\n * @param {HTMLDivElement} element An HTML Element enabled for Cornerstone\n * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system\n *\n * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system\n * @memberof PixelCoordinateSystem\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  return transform.transformPoint(pt);\n}\n", "import { CPUFallbackViewport } from '../../../../types';\n\nconst state = {\n  viewport: {},\n};\n\n/**\n * Sets new default values for `getDefaultViewport`\n *\n * @param {Object} viewport - Object that sets new default values for getDefaultViewport\n * @returns {undefined}\n */\nexport default function (viewport: CPUFallbackViewport): void {\n  state.viewport = viewport || {};\n}\n\nexport { state };\n", "/**\n * Check if the supplied parameter is undefined and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefined(\n  checkParam: any | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined) {\n    throw new Error(errorMsg);\n  }\n}\n\n/**\n * Check if the supplied parameter is undefined or null and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefinedOrNull(\n  checkParam: any | null | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined || checkParam === null) {\n    throw new Error(errorMsg);\n  }\n}\n", "import { validateParameterUndefinedOrNull } from './validator';\nimport { IImage } from '../../../../types';\n\n/**\n * Check if the angle is rotated\n * @param {Number} rotation the rotation angle\n * @returns {Boolean} true if the angle is rotated; Otherwise, false.\n * @memberof Internal\n */\nfunction isRotated(rotation?: number | null): boolean {\n  return !(\n    rotation === null ||\n    rotation === undefined ||\n    rotation === 0 ||\n    rotation === 180\n  );\n}\n\n/**\n * Retrieves the current image dimensions given an enabled element\n *\n * @param {any} image The Cornerstone image.\n * @param {Number} rotation Optional. The rotation angle of the image.\n * @return {{width:Number, height:Number}} The Image dimensions\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  rotation = null\n): { height: number; width: number } {\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageSize: parameter image must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image.width,\n    'getImageSize: parameter image must have width'\n  );\n  validateParameterUndefinedOrNull(\n    image.height,\n    'getImageSize: parameter image must have height'\n  );\n\n  if (isRotated(rotation)) {\n    return {\n      height: image.width,\n      width: image.height,\n    };\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n  };\n}\n", "import { validateParameterUndefinedOrNull } from './validator';\nimport getImageSize from './getImageSize';\nimport { IImage } from '../../../../types';\n\n/**\n * Calculates the horizontal, vertical and minimum scale factor for an image\n   @param canvas - The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).\n * @param image - The cornerstone image object\n * @param rotation - The rotation angle of the image.\n * @returns The calculated horizontal, vertical and minimum scale factor\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  rotation: number | null = null\n): {\n  verticalScale: number;\n  horizontalScale: number;\n  scaleFactor: number;\n} {\n  validateParameterUndefinedOrNull(\n    canvas,\n    'getImageScale: parameter canvas must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageScale: parameter image must not be undefined'\n  );\n\n  const imageSize = getImageSize(image, rotation);\n  const rowPixelSpacing = image.rowPixelSpacing || 1;\n  const columnPixelSpacing = image.columnPixelSpacing || 1;\n  let verticalRatio = 1;\n  let horizontalRatio = 1;\n\n  if (rowPixelSpacing < columnPixelSpacing) {\n    horizontalRatio = columnPixelSpacing / rowPixelSpacing;\n  } else {\n    // even if they are equal we want to calculate this ratio (the ration might be 0.5)\n    verticalRatio = rowPixelSpacing / columnPixelSpacing;\n  }\n\n  const verticalScale = canvas.height / imageSize.height / verticalRatio;\n  const horizontalScale = canvas.width / imageSize.width / horizontalRatio;\n\n  // Fit image to window\n  return {\n    verticalScale,\n    horizontalScale,\n    scaleFactor: Math.min(horizontalScale, verticalScale),\n  };\n}\n", "import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Adjusts an image's scale and translation so the image is centered and all pixels\n * in the image are viewable.\n *\n * @param element - The Cornerstone element to update\n */\nexport default function (enabledElement: CPUFallbackEnabledElement): void {\n  const { image } = enabledElement;\n\n  // The new scale is the minimum of the horizontal and vertical scale values\n  enabledElement.viewport.scale = getImageFitScale(\n    enabledElement.canvas,\n    image,\n    enabledElement.viewport.rotation\n  ).scaleFactor;\n\n  enabledElement.viewport.translation.x = 0;\n  enabledElement.viewport.translation.y = 0;\n}\n", "import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * This module is responsible for enabling an element to display images with cornerstone\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {HTMLDivElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone\n * @returns {void}\n */\nfunction setCanvasSize(enabledElement: CPUFallbackEnabledElement) {\n  const { canvas } = enabledElement;\n  const { clientWidth, clientHeight } = canvas;\n\n  // Set the canvas to be same resolution as the client.\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\n\n/**\n * Checks if the image of a given enabled element fitted the window\n * before the resize\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {Boolean} true if it fitted the windows, false otherwise\n */\nfunction wasFitToWindow(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): boolean {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(\n    enabledElement.image,\n    enabledElement.viewport.rotation\n  );\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n\n  return (\n    (imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight) ||\n    (imageWidth <= oldCanvasWidth &&\n      imageHeight === oldCanvasHeight &&\n      x === 0 &&\n      y === 0)\n  );\n}\n\n/**\n * Rescale the image relative to the changed size of the canvas\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {void}\n */\nfunction relativeRescale(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): void {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n\n  enabledElement.viewport.scale = relChange * scale;\n}\n\n/**\n * Resizes an enabled element and optionally fits the image to window\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  forceFitToWindow = false\n): void {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n\n  setCanvasSize(enabledElement);\n\n  if (enabledElement.image === undefined) {\n    return;\n  }\n\n  if (\n    forceFitToWindow ||\n    wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)\n  ) {\n    // Fit the image to the window again if it fitted before the resize\n    fitToWindow(enabledElement);\n  } else {\n    // Adapt the scale of a zoomed or panned image relative to the size change\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}\n", "import vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\nimport _cloneDeep from 'lodash.clonedeep';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport { vec2, vec3, mat4 } from 'gl-matrix';\n\nimport * as metaData from '../metaData';\nimport Viewport from './Viewport';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\nimport {\n  triggerEvent,\n  isEqual,\n  invertRgbTransferFunction,\n  windowLevel as windowLevelUtil,\n} from '../utilities';\nimport {\n  Point2,\n  Point3,\n  VOIRange,\n  ICamera,\n  IImage,\n  ScalingParameters,\n  IImageData,\n  CPUIImageData,\n  PTScaling,\n  Scaling,\n  StackViewportProperties,\n  FlipDirection,\n  ActorEntry,\n  CPUFallbackEnabledElement,\n  CPUFallbackColormapData,\n  EventTypes,\n  IStackViewport,\n} from '../types';\nimport { ViewportInput } from '../types/IViewport';\nimport drawImageSync from './helpers/cpuFallback/drawImageSync';\nimport { getColormap } from './helpers/cpuFallback/colors/index';\n\nimport { loadAndCacheImage } from '../imageLoader';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport InterpolationType from '../enums/InterpolationType';\nimport canvasToPixel from './helpers/cpuFallback/rendering/canvasToPixel';\nimport pixelToCanvas from './helpers/cpuFallback/rendering/pixelToCanvas';\nimport getDefaultViewport from './helpers/cpuFallback/rendering/getDefaultViewport';\nimport calculateTransform from './helpers/cpuFallback/rendering/calculateTransform';\nimport resize from './helpers/cpuFallback/rendering/resize';\n\nimport resetCamera from './helpers/cpuFallback/rendering/resetCamera';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { getShouldUseCPURendering } from '../init';\nimport RequestType from '../enums/RequestType';\n\nconst EPSILON = 1; // Slice Thickness\n\ninterface ImageDataMetaData {\n  bitsAllocated: number;\n  numComps: number;\n  origin: Point3;\n  direction: Float32Array;\n  dimensions: Point3;\n  spacing: Point3;\n  numVoxels: number;\n  imagePlaneModule: unknown;\n  imagePixelModule: unknown;\n}\n\n// TODO This needs to be exposed as its published to consumers.\ntype CalibrationEvent = {\n  rowScale: number;\n  columnScale: number;\n};\n\n/**\n * An object representing a single stack viewport, which is a camera\n * looking into an internal viewport, and an associated target output `canvas`.\n *\n * StackViewports can be rendered using both GPU and a fallback CPU is the GPU\n * is not available (or low performance). Read more about StackViewports in\n * the documentation section of this website.\n */\nclass StackViewport extends Viewport implements IStackViewport {\n  private imageIds: Array<string>;\n  private currentImageIdIndex: number;\n\n  // Viewport Properties\n  private voiRange: VOIRange;\n  private invert = false;\n  private interpolationType: InterpolationType;\n  private rotation = 0;\n\n  // Helpers\n  private _imageData: vtkImageDataType;\n  private cameraPosOnRender: Point3;\n  private stackInvalidated = false; // if true -> new actor is forced to be created for the stack\n  private panCache: Point3;\n  private shouldFlip = false;\n  private voiApplied = false;\n  private rotationCache = 0;\n  private _publishCalibratedEvent = false;\n  private _calibrationEvent: CalibrationEvent;\n  private _cpuFallbackEnabledElement?: CPUFallbackEnabledElement;\n  // CPU fallback\n  private useCPURendering: boolean;\n  private cpuImagePixelData: number[];\n  private cpuRenderingInvalidated: boolean;\n\n  // TODO: These should not be here and will be nuked\n  public modality: string; // this is needed for tools\n  public scaling: Scaling;\n\n  /**\n   * Constructor for the StackViewport class\n   * @param props - ViewportInput\n   */\n  constructor(props: ViewportInput) {\n    super(props);\n    this.scaling = {};\n    this.modality = null;\n    this.useCPURendering = getShouldUseCPURendering();\n\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement = {\n        canvas: this.canvas,\n        renderingTools: {},\n        transform: new Transform(),\n        viewport: {},\n      };\n    } else {\n      const renderer = this.getRenderer();\n      const camera = vtkCamera.newInstance();\n      renderer.setActiveCamera(camera);\n\n      const sliceNormal = <Point3>[0, 0, -1];\n      const viewUp = <Point3>[0, -1, 0];\n\n      camera.setDirectionOfProjection(\n        -sliceNormal[0],\n        -sliceNormal[1],\n        -sliceNormal[2]\n      );\n      camera.setViewUp(...viewUp);\n      camera.setParallelProjection(true);\n      // @ts-ignore: vtkjs incorrect typing\n      camera.setFreezeFocalPoint(true);\n    }\n\n    this.imageIds = [];\n    this.currentImageIdIndex = 0;\n    this.panCache = [0, 0, 0];\n    this.cameraPosOnRender = [0, 0, 0];\n    this.resetCamera();\n  }\n\n  static get useCustomRenderingPipeline(): boolean {\n    return getShouldUseCPURendering();\n  }\n\n  /**\n   * Resizes the viewport - only used in CPU fallback for StackViewport. The\n   * GPU resizing happens inside the RenderingEngine.\n   */\n  public resize = (): void => {\n    // GPU viewport resize is handled inside the RenderingEngine\n    if (this.useCPURendering) {\n      this._resizeCPU();\n    }\n  };\n\n  /**\n   * Returns the image and its properties that is being shown inside the\n   * stack viewport. It returns, the image dimensions, image direction,\n   * image scalar data, vtkImageData object, metadata, and scaling (e.g., PET suvbw)\n   *\n   * @returns IImageData: dimensions, direction, scalarData, vtkImageData, metadata, scaling\n   */\n  public getImageData(): IImageData | CPUIImageData {\n    if (this.useCPURendering) {\n      return this.getImageDataCPU();\n    } else {\n      return this.getImageDataGPU();\n    }\n  }\n\n  private _resizeCPU = (): void => {\n    if (this._cpuFallbackEnabledElement.viewport) {\n      resize(this._cpuFallbackEnabledElement);\n    }\n  };\n\n  private getImageDataGPU(): IImageData | undefined {\n    const actor = this.getDefaultActor();\n\n    if (!actor) {\n      return;\n    }\n\n    const { volumeActor } = actor;\n    const vtkImageData = volumeActor.getMapper().getInputData();\n    return {\n      dimensions: vtkImageData.getDimensions(),\n      spacing: vtkImageData.getSpacing(),\n      origin: vtkImageData.getOrigin(),\n      direction: vtkImageData.getDirection(),\n      scalarData: vtkImageData.getPointData().getScalars().getData(),\n      imageData: volumeActor.getMapper().getInputData(),\n      metadata: { Modality: this.modality },\n      scaling: this.scaling,\n    };\n  }\n\n  private getImageDataCPU(): CPUIImageData | undefined {\n    const { metadata } = this._cpuFallbackEnabledElement;\n\n    const spacing = metadata.spacing;\n\n    return {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction as Float32Array,\n      metadata: { Modality: this.modality },\n      scaling: this.scaling,\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getScalarData: () => this.cpuImagePixelData,\n        getSpacing: () => spacing,\n        worldToIndex: (point: Point3) => {\n          const canvasPoint = this.worldToCanvasCPU(point);\n          const pixelCoord = canvasToPixel(\n            this._cpuFallbackEnabledElement,\n            canvasPoint\n          );\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: (point: Point3) => {\n          const canvasPoint = pixelToCanvas(this._cpuFallbackEnabledElement, [\n            point[0],\n            point[1],\n          ]);\n          return this.canvasToWorldCPU(canvasPoint);\n        },\n      },\n      scalarData: this.cpuImagePixelData,\n    };\n  }\n\n  /**\n   * Returns the frame of reference UID, if the image doesn't have imagePlaneModule\n   * metadata, it returns undefined, otherwise, frameOfReferenceUID is returned.\n   * @returns frameOfReferenceUID : string representing frame of reference id\n   */\n  public getFrameOfReferenceUID = (): string | undefined => {\n    // Get the current image that is displayed in the viewport\n    const imageId = this.getCurrentImageId();\n\n    if (!imageId) {\n      return;\n    }\n\n    // Use the metadata provider to grab its imagePlaneModule metadata\n    const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n    // If nothing exists, return undefined\n    if (!imagePlaneModule) {\n      return;\n    }\n\n    // Otherwise, provide the FrameOfReferenceUID so we can map\n    // annotations made on VolumeViewports back to StackViewports\n    // and vice versa\n    return imagePlaneModule.frameOfReferenceUID;\n  };\n\n  /**\n   * Creates a volume actor and volume mapper based on the provided vtkImageData\n   * It sets the sampleDistance for the volumeMapper, and sets the actor VOI range\n   * initially, and assigns it to the class property to be saved for future slices.\n   * For color stack images, it sets the independent components to be false which\n   * is required in vtk.\n   *\n   * @param imageData - vtkImageData for the viewport\n   * @returns actor vtkActor\n   */\n  private createActorMapper = (imageData) => {\n    const mapper = vtkVolumeMapper.newInstance();\n    mapper.setInputData(imageData);\n\n    const actor = vtkVolume.newInstance();\n    actor.setMapper(mapper);\n\n    // We set the sample distance to vSize to not get warning\n    const [xSize, ySize, zSize] = imageData.getDimensions();\n    const [xSpacing, ySpacing, zSpacing] = imageData.getSpacing();\n    const vSize = vec3.length([\n      xSize * xSpacing,\n      ySize * ySpacing,\n      zSize * zSpacing,\n    ]);\n    mapper.setSampleDistance(vSize / mapper.getMaximumSamplesPerRay());\n\n    if (imageData.getPointData().getNumberOfComponents() > 1) {\n      // @ts-ignore: vtkjs incorrect typing\n      actor.getProperty().setIndependentComponents(false);\n    }\n\n    return actor;\n  };\n\n  /**\n   * Retrieves the metadata from the metadata provider, and optionally adds the\n   * scaling to the viewport if modality is PET and scaling metadata is provided.\n   *\n   * @param imageId - a string representing the imageId for the image\n   * @returns imagePlaneModule and imagePixelModule containing the metadata for the image\n   */\n  private buildMetadata(imageId: string) {\n    const {\n      pixelRepresentation,\n      bitsAllocated,\n      bitsStored,\n      highBit,\n      photometricInterpretation,\n      samplesPerPixel,\n    } = metaData.get('imagePixelModule', imageId);\n\n    const voiLutModule = metaData.get('voiLutModule', imageId);\n\n    let windowWidth, windowCenter;\n    if (voiLutModule) {\n      ({ windowWidth, windowCenter } = voiLutModule);\n\n      if (Array.isArray(windowWidth)) {\n        windowWidth = windowWidth[0];\n      }\n\n      if (Array.isArray(windowCenter)) {\n        windowCenter = windowCenter[0];\n      }\n    }\n\n    const { modality } = metaData.get('generalSeriesModule', imageId);\n    const imageIdScalingFactor = metaData.get('scalingModule', imageId);\n\n    if (modality === 'PT' && imageIdScalingFactor) {\n      this._addScalingToViewport(imageIdScalingFactor);\n    }\n\n    // todo: some tools rely on the modality\n    this.modality = modality;\n    // Compute the image size and spacing given the meta data we already have available.\n    // const metaDataMap = new Map()\n    // imageIds.forEach((imageId) => {\n    //   metaDataMap.set(imageId, metaData.get('imagePlaneModule', imageId))\n    // })\n\n    let imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n    // Todo: for now, it gives error for getImageData\n    if (!this.useCPURendering) {\n      imagePlaneModule = this.calibrateIfNecessary(imageId, imagePlaneModule);\n    }\n\n    return {\n      imagePlaneModule,\n      imagePixelModule: {\n        bitsAllocated,\n        bitsStored,\n        samplesPerPixel,\n        highBit,\n        photometricInterpretation,\n        pixelRepresentation,\n        windowWidth,\n        windowCenter,\n        modality,\n      },\n    };\n  }\n\n  /**\n   * Checks the metadataProviders to see if a calibratedPixelSpacing is\n   * given. If so, checks the actor to see if it needs to be modified, and\n   * set the flags for imageCalibration if a new actor needs to be created\n   *\n   * @param imageId - imageId\n   * @param imagePlaneModule - imagePlaneModule\n   * @returns modified imagePlaneModule with the calibrated spacings\n   */\n  private calibrateIfNecessary(imageId, imagePlaneModule) {\n    const calibratedPixelSpacing = metaData.get(\n      'calibratedPixelSpacing',\n      imageId\n    );\n\n    if (!calibratedPixelSpacing) {\n      return imagePlaneModule;\n    }\n\n    const [calibratedRowSpacing, calibratedColumnSpacing] =\n      calibratedPixelSpacing;\n\n    // Todo: This is necessary in general, but breaks an edge case when an image\n    // is calibrated to some other spacing, and it gets calibrated BACK to the\n    // original spacing.\n    if (\n      imagePlaneModule.rowPixelSpacing === calibratedRowSpacing &&\n      imagePlaneModule.columnPixelSpacing === calibratedColumnSpacing\n    ) {\n      return imagePlaneModule;\n    }\n\n    // Check if there is already an actor\n    const imageDataMetadata = this.getImageData();\n\n    // If no actor (first load) and calibration matches the dicom header\n    if (\n      !imageDataMetadata &&\n      imagePlaneModule.rowPixelSpacing === calibratedRowSpacing &&\n      imagePlaneModule.columnPixelSpacing === calibratedColumnSpacing\n    ) {\n      return imagePlaneModule;\n    }\n\n    // If no actor (first load) and calibration doesn't match headers\n    // -> needs calibration\n    if (\n      !imageDataMetadata &&\n      (imagePlaneModule.rowPixelSpacing !== calibratedRowSpacing ||\n        imagePlaneModule.columnPixelSpacing !== calibratedColumnSpacing)\n    ) {\n      this._publishCalibratedEvent = true;\n\n      this._calibrationEvent = <CalibrationEvent>{\n        rowScale: calibratedRowSpacing / imagePlaneModule.rowPixelSpacing,\n        columnScale:\n          calibratedColumnSpacing / imagePlaneModule.columnPixelSpacing,\n      };\n\n      // modify imagePlaneModule for actor to use calibrated spacing\n      imagePlaneModule.rowPixelSpacing = calibratedRowSpacing;\n      imagePlaneModule.columnPixelSpacing = calibratedColumnSpacing;\n      return imagePlaneModule;\n    }\n\n    // If there is already an actor, check if calibration is needed for the current actor\n    const { imageData } = imageDataMetadata;\n    const [columnPixelSpacing, rowPixelSpacing] = imageData.getSpacing();\n\n    imagePlaneModule.rowPixelSpacing = calibratedRowSpacing;\n    imagePlaneModule.columnPixelSpacing = calibratedColumnSpacing;\n\n    // If current actor spacing matches the calibrated spacing\n    if (\n      rowPixelSpacing === calibratedRowSpacing &&\n      columnPixelSpacing === calibratedPixelSpacing\n    ) {\n      // No calibration is required\n      return imagePlaneModule;\n    }\n\n    // Calibration is required\n    this._publishCalibratedEvent = true;\n\n    this._calibrationEvent = <CalibrationEvent>{\n      rowScale: calibratedRowSpacing / rowPixelSpacing,\n      columnScale: calibratedColumnSpacing / columnPixelSpacing,\n    };\n\n    return imagePlaneModule;\n  }\n\n  /**\n   * Sets the properties for the viewport on the default actor. Properties include\n   * setting the VOI, inverting the colors and setting the interpolation type, rotation\n   * and flipHorizontal/Vertical.\n   * @param voiRange - Sets the lower and upper voi\n   * @param invert - Inverts the colors\n   * @param interpolationType - Changes the interpolation type (1:linear, 0: nearest)\n   * @param rotation - image rotation in degrees\n   * @param flipHorizontal - flips the image horizontally\n   * @param flipVertical - flips the image vertically\n   */\n  public setProperties({\n    voiRange,\n    invert,\n    interpolationType,\n    rotation,\n    flipHorizontal,\n    flipVertical,\n  }: StackViewportProperties = {}): void {\n    // if voi is not applied for the first time, run the setVOI function\n    // which will apply the default voi\n    if (typeof voiRange !== 'undefined' || !this.voiApplied) {\n      this.setVOI(voiRange);\n    }\n\n    if (typeof invert !== 'undefined') {\n      this.setInvertColor(invert);\n    }\n\n    if (typeof interpolationType !== 'undefined') {\n      this.setInterpolationType(interpolationType);\n    }\n\n    if (typeof rotation !== 'undefined') {\n      if (this.rotationCache !== rotation) {\n        this.setRotation(this.rotationCache, rotation);\n      }\n    }\n\n    if (\n      typeof flipHorizontal !== 'undefined' ||\n      typeof flipVertical !== 'undefined'\n    ) {\n      this.setFlipDirection({ flipHorizontal, flipVertical });\n    }\n  }\n\n  /**\n   * Retrieve the viewport properties\n   * @returns viewport properties including voi, invert, interpolation type, rotation, flip\n   */\n  public getProperties = (): StackViewportProperties => {\n    return {\n      voiRange: this.voiRange,\n      rotation: this.rotationCache,\n      interpolationType: this.interpolationType,\n      invert: this.invert,\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical,\n    };\n  };\n\n  /**\n   * Reset the viewport properties to the default values\n   */\n  public resetProperties(): void {\n    this.cpuRenderingInvalidated = true;\n\n    this.fillWithBackgroundColor();\n\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n    }\n\n    this._resetProperties();\n\n    this.render();\n  }\n\n  /**\n   * If the user has selected CPU rendering, return the CPU camera, otherwise\n   * return the default camera\n   * @returns The camera object.\n   */\n  public getCamera(): ICamera {\n    if (this.useCPURendering) {\n      return this.getCameraCPU();\n    } else {\n      return super.getCamera();\n    }\n  }\n\n  /**\n   * Set the camera based on the provided camera object.\n   * @param cameraInterface - The camera interface that will be used to\n   * render the scene.\n   */\n  public setCamera(cameraInterface: ICamera): void {\n    if (this.useCPURendering) {\n      this.setCameraCPU(cameraInterface);\n    } else {\n      super.setCamera(cameraInterface);\n    }\n  }\n\n  private _resetProperties() {\n    // to force the default voi to be applied on the next render\n    this.voiApplied = false;\n\n    this.setProperties({\n      voiRange: undefined,\n      rotation: 0,\n      interpolationType: InterpolationType.LINEAR,\n      invert: false,\n      flipHorizontal: false,\n      flipVertical: false,\n    });\n  }\n\n  private _setPropertiesFromCache(): void {\n    this.setProperties({\n      voiRange: this.voiRange,\n      rotation: this.rotation,\n      interpolationType: this.interpolationType,\n      invert: this.invert,\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical,\n    });\n  }\n\n  private getCameraCPU(): Partial<ICamera> {\n    const { metadata, viewport } = this._cpuFallbackEnabledElement;\n\n    const { direction } = metadata;\n\n    // focalPoint and position of CPU camera is just a placeholder since\n    // tools need focalPoint to be defined\n    const viewPlaneNormal = direction.slice(6, 9).map((x) => -x);\n    const viewUp = direction.slice(3, 6).map((x) => -x);\n    return {\n      parallelProjection: true,\n      focalPoint: [0, 0, 0],\n      position: [0, 0, 0],\n      parallelScale: viewport.scale,\n      viewPlaneNormal: [\n        viewPlaneNormal[0],\n        viewPlaneNormal[1],\n        viewPlaneNormal[2],\n      ],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]],\n    };\n  }\n\n  private setCameraCPU(cameraInterface: ICamera): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n    const previousCamera = this.getCameraCPU();\n\n    const { focalPoint, viewUp, parallelScale } = cameraInterface;\n\n    if (focalPoint) {\n      const focalPointCanvas = this.worldToCanvasCPU(\n        cameraInterface.focalPoint\n      );\n      const previousFocalPointCanvas = this.worldToCanvasCPU(\n        previousCamera.focalPoint\n      );\n\n      const deltaCanvas = vec2.create();\n\n      vec2.subtract(\n        deltaCanvas,\n        vec2.fromValues(\n          previousFocalPointCanvas[0],\n          previousFocalPointCanvas[1]\n        ),\n        vec2.fromValues(focalPointCanvas[0], focalPointCanvas[1])\n      );\n\n      viewport.translation.x += deltaCanvas[0] / previousCamera.parallelScale;\n      viewport.translation.y += deltaCanvas[1] / previousCamera.parallelScale;\n    }\n\n    // If manipulating scale\n    if (parallelScale && previousCamera.parallelScale !== parallelScale) {\n      // Note: as parallel scale is defined differently to the GPU version,\n      // We instead need to find the difference and move the camera in\n      // the other direction in this adapter.\n\n      const diff = previousCamera.parallelScale - parallelScale;\n\n      viewport.scale += diff; // parallelScale; //viewport.scale < 0.1 ? 0.1 : viewport.scale;\n    }\n\n    const updatedCamera = {\n      ...previousCamera,\n      focalPoint,\n      viewUp,\n      parallelScale,\n    };\n\n    const eventDetail = {\n      previousCamera,\n      camera: updatedCamera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n    };\n\n    triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n  }\n\n  private setFlipDirection(flipDirection: FlipDirection): void {\n    if (this.useCPURendering) {\n      this.setFlipCPU(flipDirection);\n    } else {\n      super.flip(flipDirection);\n    }\n    this.shouldFlip = false;\n  }\n\n  private setFlipCPU({ flipHorizontal, flipVertical }: FlipDirection): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    viewport.hflip = flipHorizontal;\n    this.flipHorizontal = viewport.hflip;\n\n    viewport.vflip = flipVertical;\n    this.flipVertical = viewport.vflip;\n  }\n\n  private setVOI(voiRange: VOIRange): void {\n    if (this.useCPURendering) {\n      this.setVOICPU(voiRange);\n      return;\n    }\n\n    this.setVOIGPU(voiRange);\n  }\n\n  private setRotation(rotationCache: number, rotation: number): void {\n    if (this.useCPURendering) {\n      this.setRotationCPU(rotationCache, rotation);\n      return;\n    }\n\n    this.setRotationGPU(rotationCache, rotation);\n  }\n\n  private setInterpolationType(interpolationType: InterpolationType): void {\n    if (this.useCPURendering) {\n      this.setInterpolationTypeCPU(interpolationType);\n      return;\n    }\n\n    this.setInterpolationTypeGPU(interpolationType);\n  }\n\n  private setInvertColor(invert: boolean): void {\n    if (this.useCPURendering) {\n      this.setInvertColorCPU(invert);\n      return;\n    }\n\n    this.setInvertColorGPU(invert);\n  }\n\n  private setRotationCPU(rotationCache: number, rotation: number): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    viewport.rotation = rotation;\n    this.rotationCache = rotation;\n    this.rotation = rotation;\n  }\n\n  private setRotationGPU(rotationCache: number, rotation: number): void {\n    // Moving back to zero rotation, for new scrolled slice rotation is 0 after camera reset\n    this.getVtkActiveCamera().roll(rotationCache);\n\n    // rotating camera to the new value\n    this.getVtkActiveCamera().roll(-rotation);\n    this.rotationCache = rotation;\n    this.rotation = rotation;\n  }\n\n  private setInterpolationTypeGPU(interpolationType: InterpolationType): void {\n    const actor = this.getDefaultActor();\n\n    if (!actor) {\n      return;\n    }\n\n    const { volumeActor } = actor;\n    const volumeProperty = volumeActor.getProperty();\n\n    // @ts-ignore\n    volumeProperty.setInterpolationType(interpolationType);\n    this.interpolationType = interpolationType;\n  }\n\n  private setInterpolationTypeCPU(interpolationType: InterpolationType): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    if (interpolationType === InterpolationType.LINEAR) {\n      viewport.pixelReplication = false;\n    } else {\n      viewport.pixelReplication = true;\n    }\n\n    this.interpolationType = interpolationType;\n  }\n\n  private setInvertColorCPU(invert: boolean): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    if (!viewport) {\n      return;\n    }\n\n    viewport.invert = invert;\n    this.invert = invert;\n  }\n\n  private setInvertColorGPU(invert: boolean): void {\n    const actor = this.getDefaultActor();\n\n    if (!actor) {\n      return;\n    }\n\n    const { volumeActor } = actor;\n    const tfunc = volumeActor.getProperty().getRGBTransferFunction(0);\n\n    if ((!this.invert && invert) || (this.invert && !invert)) {\n      invertRgbTransferFunction(tfunc);\n    }\n    this.invert = invert;\n  }\n\n  private setVOICPU(voiRange: VOIRange): void {\n    const { viewport, image } = this._cpuFallbackEnabledElement;\n\n    if (!viewport || !image) {\n      return;\n    }\n\n    if (typeof voiRange === 'undefined') {\n      const { windowWidth: ww, windowCenter: wc } = image;\n\n      const wwToUse = Array.isArray(ww) ? ww[0] : ww;\n      const wcToUse = Array.isArray(wc) ? wc[0] : wc;\n      viewport.voi = {\n        windowWidth: wwToUse,\n        windowCenter: wcToUse,\n      };\n\n      const { lower, upper } = windowLevelUtil.toLowHighRange(wwToUse, wcToUse);\n      this.voiRange = { lower, upper };\n    } else {\n      const { lower, upper } = voiRange;\n      const { windowCenter, windowWidth } = windowLevelUtil.toWindowLevel(\n        lower,\n        upper\n      );\n\n      if (!viewport.voi) {\n        viewport.voi = {\n          windowWidth: 0,\n          windowCenter: 0,\n        };\n      }\n\n      viewport.voi.windowWidth = windowWidth;\n      viewport.voi.windowCenter = windowCenter;\n      this.voiRange = voiRange;\n    }\n\n    this.voiApplied = true;\n  }\n\n  private setVOIGPU(voiRange: VOIRange): void {\n    const actor = this.getDefaultActor();\n    if (!actor) {\n      return;\n    }\n\n    const { volumeActor } = actor;\n    const tfunc = volumeActor.getProperty().getRGBTransferFunction(0);\n\n    if (typeof voiRange === 'undefined') {\n      const imageData = volumeActor.getMapper().getInputData();\n      const range = imageData.getPointData().getScalars().getRange();\n      tfunc.setRange(range[0], range[1]);\n      this.voiRange = { lower: range[0], upper: range[1] };\n    } else {\n      const { lower, upper } = voiRange;\n      tfunc.setRange(lower, upper);\n      this.voiRange = voiRange;\n    }\n    this.voiApplied = true;\n  }\n\n  /**\n   * Adds scaling parameters to the viewport to be used along all slices\n   *\n   * @param imageIdScalingFactor - suvbw, suvlbm, suvbsa\n   */\n  private _addScalingToViewport(imageIdScalingFactor) {\n    if (!this.scaling.PET) {\n      // These ratios are constant across all frames, so only need one.\n      const { suvbw, suvlbm, suvbsa } = imageIdScalingFactor;\n\n      const petScaling = <PTScaling>{};\n\n      if (suvlbm) {\n        petScaling.suvbwToSuvlbm = suvlbm / suvbw;\n      }\n\n      if (suvbsa) {\n        petScaling.suvbwToSuvbsa = suvbsa / suvbw;\n      }\n\n      this.scaling.PET = petScaling;\n    }\n  }\n\n  /**\n   * Calculates number of components based on the dicom metadata\n   *\n   * @param photometricInterpretation - string dicom tag\n   * @returns number representing number of components\n   */\n  private _getNumCompsFromPhotometricInterpretation(\n    photometricInterpretation: string\n  ): number {\n    // TODO: this function will need to have more logic later\n    // see http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.2\n    let numberOfComponents = 1;\n    if (photometricInterpretation === 'RGB') {\n      numberOfComponents = 3;\n    }\n\n    return numberOfComponents;\n  }\n\n  /**\n   * Calculates image metadata based on the image object. It calculates normal\n   * axis for the images, and output image metadata\n   *\n   * @param image - stack image containing cornerstone image\n   * @returns image metadata: bitsAllocated, number of components, origin,\n   *  direction, dimensions, spacing, number of voxels.\n   */\n  private _getImageDataMetadata(image: IImage): ImageDataMetaData {\n    // TODO: Creating a single image should probably not require a metadata provider.\n    // We should define the minimum we need to display an image and it should live on\n    // the Image object itself. Additional stuff (e.g. pixel spacing, direction, origin, etc)\n    // should be optional and used if provided through a metadata provider.\n\n    const { imagePlaneModule, imagePixelModule } = this.buildMetadata(\n      image.imageId\n    );\n\n    let rowCosines, columnCosines;\n\n    rowCosines = <Point3>imagePlaneModule.rowCosines;\n    columnCosines = <Point3>imagePlaneModule.columnCosines;\n\n    // if null or undefined\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = <Point3>[1, 0, 0];\n      columnCosines = <Point3>[0, 1, 0];\n    }\n\n    const rowCosineVec = vec3.fromValues(\n      rowCosines[0],\n      rowCosines[1],\n      rowCosines[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      columnCosines[0],\n      columnCosines[1],\n      columnCosines[2]\n    );\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    let origin = imagePlaneModule.imagePositionPatient;\n    // if null or undefined\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    const xSpacing =\n      imagePlaneModule.columnPixelSpacing || image.columnPixelSpacing;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || image.rowPixelSpacing;\n    const xVoxels = image.columns;\n    const yVoxels = image.rows;\n\n    const zSpacing = image.sliceThickness || EPSILON;\n    const zVoxels = 1;\n\n    const numComps =\n      image.numComps ||\n      this._getNumCompsFromPhotometricInterpretation(\n        imagePixelModule.photometricInterpretation\n      );\n\n    return {\n      bitsAllocated: imagePixelModule.bitsAllocated,\n      numComps,\n      origin,\n      direction: new Float32Array([\n        ...rowCosineVec,\n        ...colCosineVec,\n        ...scanAxisNormal,\n      ]),\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n      imagePixelModule,\n    };\n  }\n\n  /**\n   * Converts the image direction to camera viewUp and viewplaneNormal\n   *\n   * @param imageDataDirection - vtkImageData direction\n   * @returns viewplane normal and viewUp of the camera\n   */\n  private _getCameraOrientation(imageDataDirection: Float32Array): {\n    viewPlaneNormal: Point3;\n    viewUp: Point3;\n  } {\n    const viewPlaneNormal = imageDataDirection.slice(6, 9).map((x) => -x);\n\n    const viewUp = imageDataDirection.slice(3, 6).map((x) => -x);\n    return {\n      viewPlaneNormal: [\n        viewPlaneNormal[0],\n        viewPlaneNormal[1],\n        viewPlaneNormal[2],\n      ],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]],\n    };\n  }\n\n  /**\n   * Creates vtkImagedata based on the image object, it creates\n   * and empty scalar data for the image based on the metadata\n   * tags (e.g., bitsAllocated)\n   *\n   * @param image - cornerstone Image object\n   */\n  private _createVTKImageData(image: IImage): void {\n    const {\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      bitsAllocated,\n      numComps,\n      numVoxels,\n    } = this._getImageDataMetadata(image);\n    let pixelArray;\n    switch (bitsAllocated) {\n      case 8:\n        pixelArray = new Uint8Array(numVoxels);\n        break;\n\n      case 16:\n        pixelArray = new Float32Array(numVoxels);\n\n        break;\n      case 24:\n        pixelArray = new Uint8Array(numVoxels * 3);\n\n        break;\n      default:\n        console.debug('bit allocation not implemented');\n    }\n\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: numComps,\n      values: pixelArray,\n    });\n\n    this._imageData = vtkImageData.newInstance();\n\n    this._imageData.setDimensions(dimensions);\n    this._imageData.setSpacing(spacing);\n    this._imageData.setDirection(direction);\n    this._imageData.setOrigin(origin);\n    this._imageData.getPointData().setScalars(scalarArray);\n  }\n\n  /**\n   * Sets the imageIds to be visualized inside the stack viewport. It accepts\n   * list of imageIds, the index of the first imageId to be viewed. It is a\n   * asynchronous function that returns a promise resolving to imageId being\n   * displayed in the stack viewport.\n   *\n   *\n   * @param imageIds - list of strings, that represents list of image Ids\n   * @param currentImageIdIndex - number representing the index of the initial image to be displayed\n   */\n  public async setStack(\n    imageIds: Array<string>,\n    currentImageIdIndex = 0\n  ): Promise<string> {\n    this.imageIds = imageIds;\n    this.currentImageIdIndex = currentImageIdIndex;\n    this.stackInvalidated = true;\n    this.rotationCache = 0;\n    this.flipVertical = false;\n    this.flipHorizontal = false;\n\n    this._resetProperties();\n\n    this.fillWithBackgroundColor();\n\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n      delete this._cpuFallbackEnabledElement.viewport.colormap;\n    }\n\n    const imageId = await this._setImageIdIndex(currentImageIdIndex);\n\n    return imageId;\n  }\n\n  /**\n   * It checks if the new image object matches the dimensions, spacing,\n   * and direction of the previously displayed image in the viewport or not.\n   * It returns a boolean\n   *\n   * @param image - Cornerstone Image object\n   * @param imageData - vtkImageData\n   * @returns boolean\n   */\n  private _checkVTKImageDataMatchesCornerstoneImage(\n    image: IImage,\n    imageData: vtkImageDataType\n  ): boolean {\n    if (!imageData) {\n      return false;\n    }\n\n    const [xSpacing, ySpacing, zSpacing] = imageData.getSpacing();\n    const [xVoxels, yVoxels, zVoxels] = imageData.getDimensions();\n    const imagePlaneModule = metaData.get('imagePlaneModule', image.imageId);\n    const direction = imageData.getDirection();\n    const rowCosines = direction.slice(0, 3);\n    const columnCosines = direction.slice(3, 6);\n\n    // using spacing, size, and direction only for now\n    if (\n      xSpacing !== image.rowPixelSpacing ||\n      ySpacing !== image.columnPixelSpacing ||\n      xVoxels !== image.columns ||\n      yVoxels !== image.rows ||\n      !isEqual(imagePlaneModule.rowCosines, <Point3>rowCosines) ||\n      !isEqual(imagePlaneModule.columnCosines, <Point3>columnCosines)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * It Updates the vtkImageData of the viewport with the new pixel data\n   * from the provided image object.\n   *\n   * @param image - Cornerstone Image object\n   */\n  private _updateVTKImageDataFromCornerstoneImage(image: IImage): void {\n    const imagePlaneModule = metaData.get('imagePlaneModule', image.imageId);\n    let origin = imagePlaneModule.imagePositionPatient;\n\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    this._imageData.setOrigin(origin);\n    // 1. Update the pixel data in the vtkImageData object with the pixelData\n    //    from the loaded Cornerstone image\n    const pixelData = image.getPixelData();\n    const scalars = this._imageData.getPointData().getScalars();\n    const scalarData = scalars.getData() as Uint8Array | Float32Array;\n\n    // Handle cases where Cornerstone is providing an RGBA array, but we need RGB\n    // for VTK.\n    // TODO: This conversion from Cornerstone to VTK may take many forms?\n    //       We need to nail down the types for Cornerstone Images\n    if (image.color) {\n      // RGB case\n      let j = 0;\n      for (let i = 0; i < pixelData.length; i += 4) {\n        scalarData[j] = pixelData[i];\n        scalarData[j + 1] = pixelData[i + 1];\n        scalarData[j + 2] = pixelData[i + 2];\n        j += 3;\n      }\n    } else {\n      // In the general case, just set the VTK Image Data TypedArray data\n      // from the pixel data array provided from the Cornerstone Image\n      // TODO: What about Rescale Slope and Intercept?\n      // TODO: What about SUV computation?\n      scalarData.set(pixelData);\n    }\n\n    // Set origin, direction, spacing, etc...\n\n    // Trigger modified on the VTK Object so the texture is updated\n    // TODO: evaluate directly changing things with texSubImage3D later\n    this._imageData.modified();\n  }\n\n  /**\n   * It uses imageLoadPoolManager to add request for the imageId. It loadsAndCache\n   * the image and triggers the STACK_NEW_IMAGE when the request successfully retrieves\n   * the image. Next, the volume actor gets updated with the new new retrieved image.\n   *\n   * @param imageId - string representing the imageId\n   * @param imageIdIndex - index of the imageId in the imageId list\n   */\n  private async _loadImage(\n    imageId: string,\n    imageIdIndex: number\n  ): Promise<string> {\n    if (this.useCPURendering) {\n      await this._loadImageCPU(imageId, imageIdIndex);\n    } else {\n      await this._loadImageGPU(imageId, imageIdIndex);\n    }\n\n    return imageId;\n  }\n\n  private _loadImageCPU(\n    imageId: string,\n    imageIdIndex: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      // 1. Load the image using the Image Loader\n      function successCallback(\n        image: IImage,\n        imageIdIndex: number,\n        imageId: string\n      ) {\n        const eventDetail: EventTypes.StackNewImageEventDetail = {\n          image,\n          imageId,\n          viewportId: this.id,\n          renderingEngineId: this.renderingEngineId,\n        };\n\n        triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n\n        const metadata = this._getImageDataMetadata(image) as ImageDataMetaData;\n\n        const viewport = getDefaultViewport(\n          this.canvas,\n          image,\n          this.modality,\n          this._cpuFallbackEnabledElement.viewport.colormap\n        );\n\n        this._cpuFallbackEnabledElement.image = image;\n        this._cpuFallbackEnabledElement.metadata = {\n          ...metadata,\n        };\n        this.cpuImagePixelData = image.getPixelData();\n\n        const viewportSettingToUse = Object.assign(\n          {},\n          viewport,\n          this._cpuFallbackEnabledElement.viewport\n        );\n\n        // Important: this.stackInvalidated is different than cpuRenderingInvalidated. The\n        // former is being used to maintain the previous state of the viewport\n        // in the same stack, the latter is used to trigger drawImageSync\n        this._cpuFallbackEnabledElement.viewport = this.stackInvalidated\n          ? viewport\n          : viewportSettingToUse;\n\n        // used the previous state of the viewport, then stackInvalidated is set to false\n        this.stackInvalidated = false;\n\n        // new viewport is set to the current viewport, then cpuRenderingInvalidated is set to true\n        this.cpuRenderingInvalidated = true;\n\n        this._cpuFallbackEnabledElement.transform = calculateTransform(\n          this._cpuFallbackEnabledElement\n        );\n\n        // Todo: trigger an event to allow applications to hook into END of loading state\n        // Currently we use loadHandlerManagers for this\n\n        // Perform this check after the image has finished loading\n        // in case the user has already scrolled away to another image.\n        // In that case, do not render this image.\n        if (this.currentImageIdIndex !== imageIdIndex) {\n          return;\n        }\n\n        // Trigger the image to be drawn on the next animation frame\n        this.render();\n\n        // Update the viewport's currentImageIdIndex to reflect the newly\n        // rendered image\n        this.currentImageIdIndex = imageIdIndex;\n        resolve(imageId);\n      }\n\n      function errorCallback(\n        error: Error,\n        imageIdIndex: number,\n        imageId: string\n      ) {\n        const eventDetail = {\n          error,\n          imageIdIndex,\n          imageId,\n        };\n\n        if (!this.suppressEvents) {\n          triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n        }\n\n        reject(error);\n      }\n\n      function sendRequest(imageId, imageIdIndex, options) {\n        return loadAndCacheImage(imageId, options).then(\n          (image) => {\n            successCallback.call(this, image, imageIdIndex, imageId);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      }\n\n      const modalityLutModule =\n        metaData.get('modalityLutModule', imageId) || {};\n      const suvFactor = metaData.get('scalingModule', imageId) || {};\n\n      const generalSeriesModule =\n        metaData.get('generalSeriesModule', imageId) || {};\n\n      const scalingParameters: ScalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope,\n        rescaleIntercept: modalityLutModule.rescaleIntercept,\n        modality: generalSeriesModule.modality,\n        suvbw: suvFactor.suvbw,\n      };\n\n      // Todo: Note that eventually all viewport data is converted into Float32Array,\n      // we use it here for the purpose of scaling for now.\n      const type = 'Float32Array';\n\n      const priority = -5;\n      const requestType = RequestType.Interaction;\n      const additionalDetails = { imageId };\n      const options = {\n        targetBuffer: {\n          type,\n          offset: null,\n          length: null,\n        },\n        preScale: {\n          scalingParameters,\n        },\n      };\n\n      imageLoadPoolManager.addRequest(\n        sendRequest.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  private _loadImageGPU(imageId: string, imageIdIndex: number) {\n    return new Promise((resolve, reject) => {\n      // 1. Load the image using the Image Loader\n      function successCallback(image, imageIdIndex, imageId) {\n        const eventDetail: EventTypes.StackNewImageEventDetail = {\n          image,\n          imageId,\n          viewportId: this.id,\n          renderingEngineId: this.renderingEngineId,\n        };\n\n        triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n\n        this._updateActorToDisplayImageId(image);\n\n        // Todo: trigger an event to allow applications to hook into END of loading state\n        // Currently we use loadHandlerManagers for this\n\n        // Perform this check after the image has finished loading\n        // in case the user has already scrolled away to another image.\n        // In that case, do not render this image.\n        if (this.currentImageIdIndex !== imageIdIndex) {\n          return;\n        }\n\n        // Trigger the image to be drawn on the next animation frame\n        this.render();\n\n        // Update the viewport's currentImageIdIndex to reflect the newly\n        // rendered image\n        this.currentImageIdIndex = imageIdIndex;\n        resolve(imageId);\n      }\n\n      function errorCallback(error, imageIdIndex, imageId) {\n        const eventDetail = {\n          error,\n          imageIdIndex,\n          imageId,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n        reject(error);\n      }\n\n      function sendRequest(imageId, imageIdIndex, options) {\n        return loadAndCacheImage(imageId, options).then(\n          (image) => {\n            successCallback.call(this, image, imageIdIndex, imageId);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      }\n\n      const modalityLutModule =\n        metaData.get('modalityLutModule', imageId) || {};\n      const suvFactor = metaData.get('scalingModule', imageId) || {};\n\n      const generalSeriesModule =\n        metaData.get('generalSeriesModule', imageId) || {};\n\n      const scalingParameters: ScalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope,\n        rescaleIntercept: modalityLutModule.rescaleIntercept,\n        modality: generalSeriesModule.modality,\n        suvbw: suvFactor.suvbw,\n      };\n\n      // Todo: Note that eventually all viewport data is converted into Float32Array,\n      // we use it here for the purpose of scaling for now.\n      const type = 'Float32Array';\n\n      const priority = -5;\n      const requestType = RequestType.Interaction;\n      const additionalDetails = { imageId };\n      const options = {\n        targetBuffer: {\n          type,\n          offset: null,\n          length: null,\n        },\n        preScale: {\n          scalingParameters,\n        },\n      };\n\n      imageLoadPoolManager.addRequest(\n        sendRequest.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  /**\n   * It updates the volume actor with the retrieved cornerstone image.\n   * It first checks if the new image has the same dimensions, spacings, and\n   * dimensions of the previous one: 1) If yes, it updates the pixel data 2) if not,\n   * it creates a whole new volume actor for the image.\n   * Note: Camera gets reset for both situations. Therefore, each image renders at\n   * its exact 3D location in the space, and both image and camera moves while scrolling.\n   *\n   * @param image - Cornerstone image\n   * @returns\n   */\n  private _updateActorToDisplayImageId(image) {\n    // This function should do the following:\n    // - Get the existing actor's vtkImageData that is being used to render the current image and check if we can reuse the vtkImageData that is in place (i.e. do the image dimensions and data type match?)\n    // - If we can reuse it, replace the scalar data under the hood\n    // - If we cannot reuse it, create a new actor, remove the old one, and reset the camera\n\n    // 2. Check if we can reuse the existing vtkImageData object, if one is present.\n    const sameImageData = this._checkVTKImageDataMatchesCornerstoneImage(\n      image,\n      this._imageData\n    );\n\n    const activeCamera = this.getRenderer().getActiveCamera();\n\n    // Cache camera props so we can trigger one camera changed event after\n    // The full transition.\n    const previousCameraProps = _cloneDeep(this.getCamera());\n    if (sameImageData && !this.stackInvalidated) {\n      // 3a. If we can reuse it, replace the scalar data under the hood\n      this._updateVTKImageDataFromCornerstoneImage(image);\n\n      // Adjusting the camera based on slice axis. this is required if stack\n      // contains various image orientations (axial ct, sagittal xray)\n      const direction = this._imageData.getDirection() as Float32Array;\n      const { viewPlaneNormal, viewUp } = this._getCameraOrientation(direction);\n\n      this.setCameraNoEvent({ viewUp, viewPlaneNormal });\n\n      // Since the 3D location of the imageData is changing as we scroll, we need\n      // to modify the camera position to render this properly. However, resetting\n      // causes problem related to zoom and pan tools: upon rendering of a new slice\n      // the pan and zoom will get reset. To solve this, 1) we store the camera\n      // properties related to pan and zoom 2) reset the camera to correctly place\n      // it in the space 3) restore the pan, zoom props.\n      const cameraProps = this.getCamera();\n\n      this.panCache[0] = this.cameraPosOnRender[0] - cameraProps.position[0];\n      this.panCache[1] = this.cameraPosOnRender[1] - cameraProps.position[1];\n      this.panCache[2] = this.cameraPosOnRender[2] - cameraProps.position[2];\n\n      // Reset the camera to point to the new slice location, reset camera doesn't\n      // modify the direction of projection and viewUp\n      this.resetCameraNoEvent();\n      const { position } = this.getCamera();\n      this.cameraPosOnRender = position;\n\n      // This is necessary to initialize the clipping range and it is not related\n      // to our custom slabThickness.\n      // activeCamera.setThicknessFromFocalPoint(0.1)\n      activeCamera.setFreezeFocalPoint(true);\n\n      // We shouldn't restore the focalPoint, position and parallelScale after reset\n      // if it is the first render or we have completely re-created the vtkImageData\n      this._restoreCameraProps(cameraProps, previousCameraProps);\n\n      // Restore rotation for the new slice of the image\n      this.rotationCache = 0;\n      this._setPropertiesFromCache();\n\n      return;\n    }\n\n    // 3b. If we cannot reuse the vtkImageData object (either the first render\n    // or the size has changed), create a new one\n    this._createVTKImageData(image);\n\n    // Set the scalar data of the vtkImageData object from the Cornerstone\n    // Image's pixel data\n    this._updateVTKImageDataFromCornerstoneImage(image);\n\n    // Create a VTK Volume actor to display the vtkImageData object\n    const stackActor = this.createActorMapper(this._imageData);\n\n    this.setActors([{ uid: this.id, volumeActor: stackActor }]);\n    // Adjusting the camera based on slice axis. this is required if stack\n    // contains various image orientations (axial ct, sagittal xray)\n    const direction = this._imageData.getDirection() as Float32Array;\n    const { viewPlaneNormal, viewUp } = this._getCameraOrientation(direction);\n\n    this.setCameraNoEvent({ viewUp, viewPlaneNormal });\n\n    // Reset the camera to point to the new slice location, reset camera doesn't\n    // modify the direction of projection and viewUp\n    this.resetCameraNoEvent();\n\n    this.triggerCameraEvent(this.getCamera(), previousCameraProps);\n\n    // This is necessary to initialize the clipping range and it is not related\n    // to our custom slabThickness.\n    // activeCamera.setThicknessFromFocalPoint(0.1)\n    activeCamera.setFreezeFocalPoint(true);\n\n    // set voi for the first time\n    this.setProperties();\n\n    // Saving position of camera on render, to cache the panning\n    const { position } = this.getCamera();\n    this.cameraPosOnRender = position;\n    this.stackInvalidated = false;\n\n    if (this._publishCalibratedEvent) {\n      this.triggerCalibrationEvent();\n    }\n  }\n\n  /**\n   * Loads the image based on the provided imageIdIndex\n   * @param imageIdIndex - number represents imageId index\n   */\n  private async _setImageIdIndex(imageIdIndex: number): Promise<string> {\n    if (imageIdIndex >= this.imageIds.length) {\n      throw new Error(\n        `ImageIdIndex provided ${imageIdIndex} is invalid, the stack only has ${this.imageIds.length} elements`\n      );\n    }\n\n    // Update the state of the viewport to the new imageIdIndex;\n    this.currentImageIdIndex = imageIdIndex;\n\n    // Todo: trigger an event to allow applications to hook into START of loading state\n    // Currently we use loadHandlerManagers for this\n\n    const imageId = await this._loadImage(\n      this.imageIds[imageIdIndex],\n      imageIdIndex\n    );\n\n    return imageId;\n  }\n\n  /**\n   * Centers Pan and resets the zoom for stack viewport.\n   */\n  public resetCamera(resetPanZoomForViewPlane = true): boolean {\n    if (this.useCPURendering) {\n      this.resetCameraCPU(resetPanZoomForViewPlane);\n    } else {\n      this.resetCameraGPU();\n    }\n\n    return true;\n  }\n\n  private resetCameraCPU(resetPanZoomForViewPlane: boolean) {\n    const { image } = this._cpuFallbackEnabledElement;\n\n    if (!image) {\n      return;\n    }\n\n    resetCamera(this._cpuFallbackEnabledElement, resetPanZoomForViewPlane);\n  }\n\n  private resetCameraGPU() {\n    // Todo: this doesn't work for resetPanZoomForViewPlane = true\n    const resetPanZoomForViewPlane = false;\n    super.resetCamera(resetPanZoomForViewPlane);\n  }\n\n  /**\n   * Loads the image based on the provided imageIdIndex. It is an Async function which\n   * returns a promise that resolves to the imageId.\n   *\n   * @param imageIdIndex - number represents imageId index in the list of\n   * provided imageIds in setStack\n   */\n  public async setImageIdIndex(imageIdIndex: number): Promise<string> {\n    // If we are already on this imageId index, stop here\n    if (this.currentImageIdIndex === imageIdIndex) {\n      return;\n    }\n\n    // Otherwise, get the imageId and attempt to display it\n    const imageId = this._setImageIdIndex(imageIdIndex);\n\n    return imageId;\n  }\n\n  /**\n   * Calibrates the image with new metadata that has been added for imageId. To calibrate\n   * a viewport, you should add your calibration data manually to\n   * calibratedPixelSpacingMetadataProvider and call viewport.calibrateSpacing\n   * for it get applied.\n   *\n   * @param imageId - imageId to be calibrated\n   */\n  public calibrateSpacing(imageId: string): void {\n    const imageIdIndex = this.getImageIds().indexOf(imageId);\n    this.stackInvalidated = true;\n    this._loadImage(imageId, imageIdIndex);\n  }\n\n  /**\n   * Restores the camera props such zooming and panning after an image is\n   * changed, if needed (after scroll)\n   *\n   * @param parallelScale - camera parallel scale\n   */\n  private _restoreCameraProps(\n    { parallelScale: prevScale }: ICamera,\n    previousCamera: ICamera\n  ): void {\n    const renderer = this.getRenderer();\n\n    // get the focalPoint and position after the reset\n    const { position, focalPoint } = this.getCamera();\n\n    const newPosition = <Point3>[\n      position[0] - this.panCache[0],\n      position[1] - this.panCache[1],\n      position[2] - this.panCache[2],\n    ];\n\n    const newFocal = <Point3>[\n      focalPoint[0] - this.panCache[0],\n      focalPoint[1] - this.panCache[1],\n      focalPoint[2] - this.panCache[2],\n    ];\n\n    // Restoring previous state x,y and scale, keeping the new z\n    this.setCameraNoEvent({\n      parallelScale: prevScale,\n      position: newPosition,\n      focalPoint: newFocal,\n    });\n\n    const camera = this.getCamera();\n\n    this.triggerCameraEvent(camera, previousCamera);\n\n    // Invoking render\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer,\n    };\n\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n  }\n\n  private triggerCameraEvent(camera: ICamera, previousCamera: ICamera) {\n    // Finally emit event for the full camera change cause during load image.\n    const eventDetail: EventTypes.CameraModifiedEventDetail = {\n      previousCamera,\n      camera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n    };\n\n    if (!this.suppressEvents) {\n      // For crosshairs to adapt to new viewport size\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n  }\n\n  private triggerCalibrationEvent() {\n    // Update the indexToWorld and WorldToIndex for viewport\n    const { imageData } = this.getImageData();\n    // Finally emit event for the full camera change cause during load image.\n    const eventDetail: EventTypes.ImageSpacingCalibratedEventDetail = {\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      imageId: this.getCurrentImageId(),\n      // Todo: why do we need to pass imageData? isn't' indexToWorld and worldToIndex enough?\n      imageData: imageData as vtkImageData,\n      worldToIndex: imageData.getWorldToIndex() as mat4,\n      ...this._calibrationEvent,\n    };\n\n    if (!this.suppressEvents) {\n      // Let the tools know the image spacing has been calibrated\n      triggerEvent(this.element, Events.IMAGE_SPACING_CALIBRATED, eventDetail);\n    }\n\n    this._publishCalibratedEvent = false;\n  }\n\n  /**\n   * canvasToWorld Returns the world coordinates of the given `canvasPos`\n   * projected onto the plane defined by the `Viewport`'s camera.\n   *\n   * @param canvasPos - The position in canvas coordinates.\n   * @returns The corresponding world coordinates.\n   * @public\n   */\n  public canvasToWorld = (canvasPos: Point2): Point3 => {\n    if (this.useCPURendering) {\n      return this.canvasToWorldCPU(canvasPos);\n    }\n\n    return this.canvasToWorldGPU(canvasPos);\n  };\n\n  /**\n   * Returns the canvas coordinates of the given `worldPos`\n   * projected onto the `Viewport`'s `canvas`.\n   *\n   * @param worldPos - The position in world coordinates.\n   * @returns The corresponding canvas coordinates.\n   * @public\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    if (this.useCPURendering) {\n      return this.worldToCanvasCPU(worldPos);\n    }\n\n    return this.worldToCanvasGPU(worldPos);\n  };\n\n  private canvasToWorldCPU = (canvasPos: Point2): Point3 => {\n    if (!this._cpuFallbackEnabledElement.image) {\n      return;\n    }\n    // compute the pixel coordinate in the image\n    const [px, py] = canvasToPixel(this._cpuFallbackEnabledElement, canvasPos);\n\n    // convert pixel coordinate to world coordinate\n    const { origin, spacing, direction } = this.getImageData();\n\n    const worldPos = vec3.fromValues(0, 0, 0);\n\n    // Calculate size of spacing vector in normal direction\n    const iVector = direction.slice(0, 3);\n    const jVector = direction.slice(3, 6);\n\n    // Calculate the world coordinate of the pixel\n    vec3.scaleAndAdd(worldPos, origin, iVector, px * spacing[0]);\n    vec3.scaleAndAdd(worldPos, worldPos, jVector, py * spacing[1]);\n\n    return worldPos as Point3;\n  };\n\n  private worldToCanvasCPU = (worldPos: Point3): Point2 => {\n    // world to pixel\n    const { spacing, direction, origin } = this.getImageData();\n\n    const iVector = direction.slice(0, 3);\n    const jVector = direction.slice(3, 6);\n\n    const diff = vec3.subtract(vec3.create(), worldPos, origin);\n\n    const worldPoint: Point2 = [\n      vec3.dot(diff, iVector) / spacing[0],\n      vec3.dot(diff, jVector) / spacing[1],\n    ];\n\n    // pixel to canvas\n    const canvasPoint = pixelToCanvas(\n      this._cpuFallbackEnabledElement,\n      worldPoint\n    );\n    return canvasPoint;\n  };\n\n  private canvasToWorldGPU = (canvasPos: Point2): Point3 => {\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = [canvasPos[0] + this.sx, canvasPos[1] + this.sy];\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    let worldCoord = openGLRenderWindow.displayToWorld(\n      displayCoord[0],\n      displayCoord[1],\n      0,\n      renderer\n    );\n\n    worldCoord = this.applyFlipTx(worldCoord);\n\n    return worldCoord;\n  };\n\n  private worldToCanvasGPU = (worldPos: Point3) => {\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = openGLRenderWindow.worldToDisplay(\n      ...this.applyFlipTx(worldPos),\n      renderer\n    );\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const canvasCoord = <Point2>[\n      displayCoord[0] - this.sx,\n      displayCoord[1] - this.sy,\n    ];\n\n    return canvasCoord;\n  };\n\n  /**\n   * Returns the index of the imageId being renderer\n   *\n   * @returns currently shown imageId index\n   */\n  public getCurrentImageIdIndex = (): number => {\n    return this.currentImageIdIndex;\n  };\n\n  /**\n   * Returns the list of image Ids for the current viewport\n   * @returns list of strings for image Ids\n   */\n  public getImageIds = (): Array<string> => {\n    return this.imageIds;\n  };\n\n  /**\n   * Returns the currently rendered imageId\n   * @returns string for imageId\n   */\n  public getCurrentImageId = (): string => {\n    return this.imageIds[this.currentImageIdIndex];\n  };\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, returns the `vtkRenderer` responsible for rendering the `Viewport`.\n   *\n   * @returns The `vtkRenderer` for the `Viewport`.\n   */\n  public getRenderer() {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('getRenderer');\n    }\n\n    return super.getRenderer();\n  }\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, return the default\n   * actor which is the first actor in the renderer.\n   * @returns An actor entry.\n   */\n  public getDefaultActor(): ActorEntry {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('getDefaultActor');\n    }\n\n    return super.getDefaultActor();\n  }\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, return the actors in the viewport\n   * @returns An array of ActorEntry objects.\n   */\n  public getActors(): Array<ActorEntry> {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('getActors');\n    }\n\n    return super.getActors();\n  }\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, it returns the actor entry for the given actor UID.\n   * @param actorUID - The unique ID of the actor you want to get.\n   * @returns An ActorEntry object.\n   */\n  public getActor(actorUID: string): ActorEntry {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('getActor');\n    }\n\n    return super.getActor(actorUID);\n  }\n\n  /**\n   * If the renderer is CPU-based, throw an error; otherwise, set the\n   * actors in the viewport.\n   * @param actors - An array of ActorEntry objects.\n   */\n  public setActors(actors: Array<ActorEntry>): void {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('setActors');\n    }\n\n    return super.setActors(actors);\n  }\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, add a list of actors to the viewport\n   * @param actors - An array of ActorEntry objects.\n   */\n  public addActors(actors: Array<ActorEntry>): void {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('addActors');\n    }\n\n    return super.addActors(actors);\n  }\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, add the\n   * actor to the viewport\n   * @param actorEntry - The ActorEntry object that was created by the\n   * user.\n   */\n  public addActor(actorEntry: ActorEntry): void {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('addActor');\n    }\n\n    return super.addActor(actorEntry);\n  }\n\n  /**\n   * It throws an error if the renderer is CPU based. Otherwise, it removes the actors from the viewport.\n   */\n  public removeAllActors(): void {\n    if (this.useCPURendering) {\n      throw this.getCPUFallbackError('removeAllActors');\n    }\n\n    return super.removeAllActors();\n  }\n\n  private getCPUFallbackError(method: string): Error {\n    return new Error(\n      `method ${method} cannot be used during CPU Fallback mode`\n    );\n  }\n\n  private fillWithBackgroundColor() {\n    const renderingEngine = this.getRenderingEngine();\n\n    if (renderingEngine) {\n      renderingEngine.fillCanvasWithBackgroundColor(\n        this.canvas,\n        this.options.background\n      );\n    }\n  }\n\n  public customRenderViewportToCanvas = () => {\n    if (!this.useCPURendering) {\n      throw new Error(\n        'Custom cpu rendering pipeline should only be hit in CPU rendering mode'\n      );\n    }\n\n    if (this._cpuFallbackEnabledElement.image) {\n      drawImageSync(\n        this._cpuFallbackEnabledElement,\n        this.cpuRenderingInvalidated\n      );\n      // reset flags\n      this.cpuRenderingInvalidated = false;\n    } else {\n      this.fillWithBackgroundColor();\n    }\n\n    return {\n      canvas: this.canvas,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n    };\n  };\n\n  /**\n   * Sets the colormap for the current viewport.\n   * @param colormap - The colormap data to use.\n   */\n  public setColormap(colormap: CPUFallbackColormapData): void {\n    if (this.useCPURendering) {\n      this.setColormapCPU(colormap);\n    } else {\n      this.setColormapGPU(colormap);\n    }\n  }\n\n  /**\n   * It sets the colormap to the default colormap.\n   */\n  public unsetColormap(): void {\n    if (this.useCPURendering) {\n      this.unsetColormapCPU();\n    } else {\n      this.unsetColormapGPU();\n    }\n  }\n\n  private unsetColormapCPU() {\n    delete this._cpuFallbackEnabledElement.viewport.colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n\n    this.cpuRenderingInvalidated = true;\n\n    this.fillWithBackgroundColor();\n\n    this.render();\n  }\n\n  private setColormapCPU(colormapData: CPUFallbackColormapData) {\n    const colormap = getColormap(colormapData.name, colormapData);\n\n    this._cpuFallbackEnabledElement.viewport.colormap = colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n\n    this.fillWithBackgroundColor();\n    this.cpuRenderingInvalidated = true;\n\n    this.render();\n  }\n\n  private setColormapGPU(colormap: CPUFallbackColormapData) {\n    // TODO -> vtk has full colormaps which are piecewise and frankly better?\n    // Do we really want a pre defined 256 color map just for the sake of harmonization?\n    throw new Error('setColorMapGPU not implemented.');\n  }\n\n  private unsetColormapGPU() {\n    // TODO -> vtk has full colormaps which are piecewise and frankly better?\n    // Do we really want a pre defined 256 color map just for the sake of harmonization?\n    throw new Error('unsetColormapGPU not implemented.');\n  }\n}\n\nexport default StackViewport;\n", "import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nimport { CPUFallbackEnabledElement } from '../../../types';\n\n/**\n * Draw an image to a given enabled element synchronously\n *\n * @param enabledElement - An enabled element to draw into\n * @param invalidated - true if pixel data has been invalidated and cached rendering should not be used\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  const image = enabledElement.image;\n  const canvas = enabledElement.canvas;\n\n  // Check if enabledElement can be redrawn\n  if (!enabledElement.canvas || !enabledElement.image) {\n    return;\n  }\n\n  // Start measuring the time needed to draw the image.\n  const start = now();\n\n  image.stats = {\n    lastGetPixelDataTime: -1.0,\n    lastStoredPixelDataToCanvasImageDataTime: -1.0,\n    lastPutImageDataTime: -1.0,\n    lastRenderTime: -1.0,\n    lastLutGenerateTime: -1.0,\n  };\n\n  if (image) {\n    let render = image.render;\n\n    if (!render) {\n      if (enabledElement.viewport.colormap) {\n        render = renderPseudoColorImage;\n      } else if (image.color) {\n        render = renderColorImage;\n      } else {\n        render = renderGrayscaleImage;\n      }\n    }\n\n    render(enabledElement, invalidated);\n  }\n\n  // Calculate how long it took to draw the image/layers\n  const renderTimeInMs = now() - start;\n\n  image.stats.lastRenderTime = renderTimeInMs;\n\n  enabledElement.invalid = false;\n  enabledElement.needsRedraw = false;\n}\n", "import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nimport {\n  IImage,\n  CPUFallbackColormap,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n/**\n * Creates a new viewport object containing default values for the image and canvas\n *\n * @param canvas - A Canvas DOM element\n * @param image - A Cornerstone Image Object\n * @returns viewport - object\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality: string,\n  colormap?: CPUFallbackColormap\n): CPUFallbackViewport {\n  if (canvas === undefined) {\n    throw new Error(\n      'getDefaultViewport: parameter canvas must not be undefined'\n    );\n  }\n\n  if (image === undefined) {\n    return createViewport();\n  }\n\n  // Fit image to window\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  let voi;\n\n  if (image.windowWidth && image.windowCenter) {\n    voi = {\n      windowWidth: Array.isArray(image.windowWidth)\n        ? image.windowWidth[0]\n        : image.windowWidth,\n      windowCenter: Array.isArray(image.windowCenter)\n        ? image.windowCenter[0]\n        : image.windowCenter,\n    };\n  } else if (modality === 'PT') {\n    voi = {\n      windowWidth: 5,\n      windowCenter: 2.5,\n    };\n  }\n\n  return {\n    scale,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi,\n    invert: image.invert,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: image.modalityLUT,\n    modality,\n    voiLUT: image.voiLUT,\n    colormap: colormap !== undefined ? colormap : image.colormap,\n    displayedArea: {\n      tlhc: {\n        x: 1,\n        y: 1,\n      },\n      brhc: {\n        x: image.columns,\n        y: image.rows,\n      },\n      rowPixelSpacing:\n        image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n      columnPixelSpacing:\n        image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n      presentationSizeMode: 'NONE',\n    },\n  };\n}\n", "import { state } from './setDefaultViewport';\nimport {\n  CPUFallbackViewportDisplayedArea,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Creates the default displayed area.\n * C.10.4 Displayed Area Module: This Module describes Attributes required to define a Specified Displayed Area space.\n *\n * @returns {tlhc: {x,y}, brhc: {x, y},rowPixelSpacing: Number, columnPixelSpacing: Number, presentationSizeMode: Number} displayedArea object\n * @memberof Internal\n */\nfunction createDefaultDisplayedArea(): CPUFallbackViewportDisplayedArea {\n  return {\n    // Top Left Hand Corner\n    tlhc: {\n      x: 1,\n      y: 1,\n    },\n    // Bottom Right Hand Corner\n    brhc: {\n      x: 1,\n      y: 1,\n    },\n    rowPixelSpacing: 1,\n    columnPixelSpacing: 1,\n    presentationSizeMode: 'NONE',\n  };\n}\n\n/**\n * Creates a new viewport object containing default values\n *\n * @returns {Viewport} viewport object\n * @memberof Internal\n */\nexport default function createViewport(): CPUFallbackViewport {\n  const displayedArea = createDefaultDisplayedArea();\n  const initialDefaultViewport = {\n    scale: 1,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi: {\n      windowWidth: undefined,\n      windowCenter: undefined,\n    },\n    invert: false,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: undefined,\n    voiLUT: undefined,\n    colormap: undefined,\n    labelmap: false,\n    displayedArea,\n  };\n\n  return Object.assign({}, initialDefaultViewport, state.viewport);\n}\n", "import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Resets the camera to the default position. which would be the center of the image.\n * with no translation, no flipping, no zoom and proper scale.\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  resetPanZoomForViewPlane: boolean\n): void {\n  const { canvas, image, viewport } = enabledElement;\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  viewport.vflip = false;\n  viewport.hflip = false;\n\n  if (resetPanZoomForViewPlane) {\n    viewport.translation.x = 0;\n    viewport.translation.y = 0;\n\n    viewport.displayedArea.tlhc.x = 1;\n    viewport.displayedArea.tlhc.y = 1;\n    viewport.displayedArea.brhc.x = image.columns;\n    viewport.displayedArea.brhc.y = image.rows;\n\n    viewport.scale = scale;\n  }\n}\n", "// TODO -> Eventually we'll need to register to this list\nimport StackViewport from '../StackViewport';\nimport VolumeViewport from '../VolumeViewport';\nimport ViewportType from '../../enums/ViewportType';\n\nconst viewportTypeToViewportClass = {\n  [ViewportType.ORTHOGRAPHIC]: VolumeViewport,\n  [ViewportType.PERSPECTIVE]: VolumeViewport,\n  [ViewportType.STACK]: StackViewport,\n};\n\nexport default viewportTypeToViewportClass;\n", "import viewportTypeToViewportClass from './viewportTypeToViewportClass';\n\nexport default function viewportTypeUsesCustomRenderingPipeline(\n  viewportType: string\n) {\n  return viewportTypeToViewportClass[viewportType].useCustomRenderingPipeline;\n}\n", "import Events from '../enums/Events';\nimport renderingEngineCache from './renderingEngineCache';\nimport eventTarget from '../eventTarget';\nimport { triggerEvent, uuidv4 } from '../utilities';\nimport { vtkOffscreenMultiRenderWindow } from './vtkClasses';\nimport ViewportType from '../enums/ViewportType';\nimport VolumeViewport from './VolumeViewport';\nimport StackViewport from './StackViewport';\nimport viewportTypeUsesCustomRenderingPipeline from './helpers/viewportTypeUsesCustomRenderingPipeline';\nimport getOrCreateCanvas from './helpers/getOrCreateCanvas';\nimport { getShouldUseCPURendering, isCornerstoneInitialized } from '../init';\nimport type IStackViewport from '../types/IStackViewport';\nimport type IVolumeViewport from '../types/IVolumeViewport';\nimport type * as EventTypes from '../types/EventTypes';\nimport type {\n  ViewportInput,\n  PublicViewportInput,\n  InternalViewportInput,\n  NormalizedViewportInput,\n} from '../types/IViewport';\nimport ORIENTATION from '../constants/orientation';\n\nexport interface IRenderingEngine {\n  id: string;\n  hasBeenDestroyed: boolean;\n  offscreenMultiRenderWindow: any;\n  offScreenCanvasContainer: any;\n  setViewports(viewports: Array<PublicViewportInput>): void;\n  resize(): void;\n  getViewport(id: string): IStackViewport | IVolumeViewport;\n  getViewports(): Array<IStackViewport | IVolumeViewport>;\n  render(): void;\n  renderViewports(viewportIds: Array<string>): void;\n  renderViewport(viewportId: string): void;\n  renderFrameOfReference(FrameOfReferenceUID: string): void;\n  fillCanvasWithBackgroundColor(\n    canvas: HTMLCanvasElement,\n    backgroundColor: [number, number, number]\n  ): void;\n  enableElement(viewportInputEntry: PublicViewportInput): void;\n  disableElement(viewportId: string): void;\n  getStackViewports(): Array<IStackViewport>;\n  getVolumeViewports(): Array<IVolumeViewport>;\n  destroy(): void;\n  _debugRender(): void;\n}\n\ntype ViewportDisplayCoords = {\n  sxStartDisplayCoords: number;\n  syStartDisplayCoords: number;\n  sxEndDisplayCoords: number;\n  syEndDisplayCoords: number;\n  sx: number;\n  sy: number;\n  sWidth: number;\n  sHeight: number;\n};\n\n/**\n * A RenderingEngine takes care of the full pipeline of creating viewports and rendering\n * them on a large offscreen canvas and transmitting this data back to the screen. This allows us\n * to leverage the power of vtk.js whilst only using one WebGL context for the processing, and allowing\n * us to share texture memory across on-screen viewports that show the same data.\n *\n * Instantiating a rendering engine:\n * ```js\n * const renderingEngine = new RenderingEngine('pet-ct-rendering-engine');\n * ```\n *\n * There are various ways you can trigger a render on viewports. The simplest is to call `render()`\n * on the rendering engine; however, it will trigger a render on all viewports. A more efficient\n * way to do this is to call `renderViewports([viewportId])` on the rendering engine to\n * trigger a render on a specific viewport(s). Each viewport also has a `.render` method which can be used to trigger a render on that\n * viewport.\n *\n * Rendering engine uses `detect-gpu` external library to detect if GPU is available and\n * it has minimum requirement to be able to render a volume with vtk.js. If GPU is not available\n * RenderingEngine will throw an error if you try to render a volume; however, for StackViewports\n * it is capable of falling back to CPU rendering for Stack images.\n *\n * By default RenderingEngine will use vtk.js enabled pipeline for rendering viewports,\n * however, if a custom rendering pipeline is specified by a custom viewport, it will be used instead.\n * We use this custom pipeline to render a StackViewport on CPU using Cornerstone-legacy cpu rendering pipeline.\n *\n * @public\n */\nclass RenderingEngine implements IRenderingEngine {\n  /** Unique identifier for renderingEngine */\n  readonly id: string;\n  /** A flag which tells if the renderingEngine has been destroyed */\n  public hasBeenDestroyed: boolean;\n  public offscreenMultiRenderWindow: any;\n  readonly offScreenCanvasContainer: any; // WebGL\n  private _viewports: Map<string, IStackViewport | IVolumeViewport>;\n  private _needsRender: Set<string> = new Set();\n  private _animationFrameSet = false;\n  private _animationFrameHandle: number | null = null;\n  private useCPURendering: boolean;\n\n  /**\n   * @param uid - Unique identifier for RenderingEngine\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n    this.useCPURendering = getShouldUseCPURendering();\n\n    renderingEngineCache.set(this);\n\n    if (!isCornerstoneInitialized()) {\n      throw new Error(\n        '@cornerstonejs/core is not initialized, run init() first'\n      );\n    }\n\n    if (!this.useCPURendering) {\n      this.offscreenMultiRenderWindow =\n        vtkOffscreenMultiRenderWindow.newInstance();\n      this.offScreenCanvasContainer = document.createElement('div');\n      this.offscreenMultiRenderWindow.setContainer(\n        this.offScreenCanvasContainer\n      );\n    }\n\n    this._viewports = new Map();\n    this.hasBeenDestroyed = false;\n  }\n\n  /**\n   * Enables the requested viewport and add it to the viewports. It will\n   * properly create the Stack viewport or Volume viewport:\n   *\n   * 1) Checks if the viewport is defined already, if yes, remove it first\n   * 2) Checks if the viewport is using a custom rendering pipeline, if no,\n   * it calculates a new offscreen canvas with the new requested viewport\n   * 3) Adds the viewport\n   *\n   *\n   * ```typescript\n   * renderingEngine.enableElement({\n   *  viewportId: viewportId,\n   *  type: ViewportType.ORTHOGRAPHIC,\n   *  element,\n   *  defaultOptions: {\n   *    orientation: ORIENTATION[orientation],\n   *    background: [1, 0, 1],\n   *  },\n   * })\n   * ```\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportInputEntry - viewport specifications\n   */\n  public enableElement(viewportInputEntry: PublicViewportInput): void {\n    const viewportInput = this._normalizeViewportInputEntry(viewportInputEntry);\n\n    this._throwIfDestroyed();\n    const { element, viewportId } = viewportInput;\n\n    // Throw error if no canvas\n    if (!element) {\n      throw new Error('No element provided');\n    }\n\n    // 1. Get the viewport from the list of available viewports.\n    const viewport = this.getViewport(viewportId);\n\n    // 1.a) If there is a found viewport, we remove the viewport and create a new viewport\n    if (viewport) {\n      this.disableElement(viewportId);\n      // todo: if only removing the viewport, make sure resize also happens\n      // this._removeViewport(viewportId)\n    }\n\n    // 2.a) See if viewport uses a custom rendering pipeline.\n    const { type } = viewportInput;\n\n    const viewportUsesCustomRenderingPipeline =\n      viewportTypeUsesCustomRenderingPipeline(type);\n\n    // 2.b) Retrieving the list of viewports for calculation of the new size for\n    // offScreen canvas.\n\n    // If the viewport being added uses a custom pipeline, or we aren't using\n    // GPU rendering, we don't need to resize the offscreen canvas.\n    if (!this.useCPURendering && !viewportUsesCustomRenderingPipeline) {\n      this.enableVTKjsDrivenViewport(viewportInput);\n    } else {\n      // 3 Add the requested viewport to rendering Engine\n      this.addCustomViewport(viewportInput);\n    }\n\n    // 5. Set the background color for the canvas\n    const canvas = getOrCreateCanvas(element);\n    const { background } = viewportInput.defaultOptions;\n    this.fillCanvasWithBackgroundColor(canvas, background);\n  }\n\n  /**\n   * Disables the requested viewportId from the rendering engine:\n   *\n   * 1) It removes the viewport from the the list of viewports\n   * 2) remove the renderer from the offScreen render window if using vtk.js driven\n   * rendering pipeline\n   * 3) resetting the viewport to remove the canvas attributes and canvas data\n   * 4) resize the offScreen appropriately (if using vtk.js driven rendering pipeline)\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportId - viewport Id\n   *\n   */\n  public disableElement(viewportId: string): void {\n    this._throwIfDestroyed();\n    // 1. Getting the viewport to remove it\n    const viewport = this.getViewport(viewportId);\n\n    // 2 To throw if there is no viewport stored in rendering engine\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n\n    // 3. Reset the viewport to remove attributes, and reset the canvas\n    this._resetViewport(viewport);\n\n    // 4. Remove the related renderer from the offScreenMultiRenderWindow\n    if (\n      !viewportTypeUsesCustomRenderingPipeline(viewport.type) &&\n      !this.useCPURendering\n    ) {\n      this.offscreenMultiRenderWindow.removeRenderer(viewportId);\n    }\n\n    // 5. Remove the requested viewport from the rendering engine\n    this._removeViewport(viewportId);\n\n    // 6. Avoid rendering for the disabled viewport\n    this._needsRender.delete(viewportId);\n\n    // 7. Clear RAF if no viewport is left\n    const viewports = this.getViewports();\n    if (!viewports.length) {\n      this._clearAnimationFrame();\n    }\n\n    // 8. Resize the offScreen canvas to accommodate for the new size (after removal)\n    this.resize();\n  }\n\n  /**\n   * It takes an array of viewport input objects including element, viewportId, type\n   * and defaultOptions. It will add the viewport to the rendering engine and enables them.\n   *\n   *\n   * ```typescript\n   *renderingEngine.setViewports([\n   *   {\n   *     viewportId: axialViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('axialDiv'),\n   *     defaultOptions: {\n   *       orientation: ORIENTATION.AXIAL,\n   *     },\n   *   },\n   *   {\n   *     viewportId: sagittalViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('sagittalDiv'),\n   *     defaultOptions: {\n   *       orientation: ORIENTATION.SAGITTAL,\n   *     },\n   *   },\n   *   {\n   *     viewportId: customOrientationViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('customOrientationDiv'),\n   *     defaultOptions: {\n   *       orientation: { sliceNormal: [0, 0, 1], viewUp: [0, 1, 0] },\n   *     },\n   *   },\n   * ])\n   * ```\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportInputEntries - Array<PublicViewportInput>\n   */\n\n  public setViewports(\n    publicViewportInputEntries: Array<PublicViewportInput>\n  ): void {\n    const viewportInputEntries = this._normalizeViewportInputEntries(\n      publicViewportInputEntries\n    );\n    this._throwIfDestroyed();\n    this._reset();\n\n    // 1. Split viewports based on whether they use vtk.js or a custom pipeline.\n\n    const vtkDrivenViewportInputEntries: NormalizedViewportInput[] = [];\n    const customRenderingViewportInputEntries: NormalizedViewportInput[] = [];\n\n    viewportInputEntries.forEach((vpie) => {\n      if (\n        !this.useCPURendering &&\n        !viewportTypeUsesCustomRenderingPipeline(vpie.type)\n      ) {\n        vtkDrivenViewportInputEntries.push(vpie);\n      } else {\n        customRenderingViewportInputEntries.push(vpie);\n      }\n    });\n\n    this.setVtkjsDrivenViewports(vtkDrivenViewportInputEntries);\n    this.setCustomViewports(customRenderingViewportInputEntries);\n  }\n\n  /**\n   * Resizes the offscreen viewport and recalculates translations to on screen canvases.\n   * It is up to the parent app to call the resize of the on-screen canvas changes.\n   * This is left as an app level concern as one might want to debounce the changes, or the like.\n   *\n   * @param immediate - Whether all of the viewports should be rendered immediately.\n   * @param resetPanZoomForViewPlane - Whether each viewport gets centered (reset pan) and\n   * its zoom gets reset upon resize.\n   */\n  public resize(immediate = true, resetPanZoomForViewPlane = true): void {\n    this._throwIfDestroyed();\n\n    // 1. Get the viewports' canvases\n    const viewports = this._getViewportsAsArray();\n\n    const vtkDrivenViewports = [];\n    const customRenderingViewports = [];\n\n    viewports.forEach((vpie) => {\n      if (!viewportTypeUsesCustomRenderingPipeline(vpie.type)) {\n        vtkDrivenViewports.push(vpie);\n      } else {\n        customRenderingViewports.push(vpie);\n      }\n    });\n\n    this._resizeVTKViewports(\n      vtkDrivenViewports,\n      immediate,\n      resetPanZoomForViewPlane\n    );\n\n    this._resizeUsingCustomResizeHandler(\n      customRenderingViewports,\n      immediate,\n      resetPanZoomForViewPlane\n    );\n  }\n\n  /**\n   * Returns the viewport by Id\n   *\n   * @returns viewport\n   */\n  public getViewport(viewportId: string): IStackViewport | IVolumeViewport {\n    return this._viewports.get(viewportId);\n  }\n\n  /**\n   * getViewports Returns an array of all `Viewport`s on the `RenderingEngine` instance.\n   *\n   * @returns Array of viewports\n   */\n  public getViewports(): Array<IStackViewport | IVolumeViewport> {\n    this._throwIfDestroyed();\n\n    return this._getViewportsAsArray();\n  }\n\n  /**\n   * Filters all the available viewports and return the stack viewports\n   * @returns stack viewports registered on the rendering Engine\n   */\n  public getStackViewports(): Array<IStackViewport> {\n    this._throwIfDestroyed();\n\n    const viewports = this.getViewports();\n\n    const isStackViewport = (\n      viewport: IStackViewport | IVolumeViewport\n    ): viewport is StackViewport => {\n      return viewport instanceof StackViewport;\n    };\n\n    return viewports.filter(isStackViewport);\n  }\n\n  /**\n   * Return all the viewports that are volume viewports\n   * @returns An array of VolumeViewport objects.\n   */\n  public getVolumeViewports(): Array<IVolumeViewport> {\n    this._throwIfDestroyed();\n\n    const viewports = this.getViewports();\n\n    const isVolumeViewport = (\n      viewport: IStackViewport | IVolumeViewport\n    ): viewport is VolumeViewport => {\n      return viewport instanceof VolumeViewport;\n    };\n\n    return viewports.filter(isVolumeViewport);\n  }\n\n  /**\n   * Renders all viewports on the next animation frame.\n   *\n   * @fires Events.IMAGE_RENDERED\n   */\n  public render(): void {\n    const viewports = this.getViewports();\n    const viewportIds = viewports.map((vp) => vp.id);\n\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n\n  /**\n   * Renders any viewports viewing the given Frame Of Reference.\n   *\n   * @param FrameOfReferenceUID - The unique identifier of the\n   * Frame Of Reference.\n   */\n  public renderFrameOfReference = (FrameOfReferenceUID: string): void => {\n    const viewports = this._getViewportsAsArray();\n    const viewportIdsWithSameFrameOfReferenceUID = viewports.map((vp) => {\n      if (vp.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n        return vp.id;\n      }\n    });\n\n    return this.renderViewports(viewportIdsWithSameFrameOfReferenceUID);\n  };\n\n  /**\n   * Renders the provided Viewport IDs.\n   *\n   */\n  public renderViewports(viewportIds: Array<string>): void {\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n\n  /**\n   * Renders only a specific `Viewport` on the next animation frame.\n   *\n   * @param viewportId - The Id of the viewport.\n   */\n  public renderViewport(viewportId: string): void {\n    this._setViewportsToBeRenderedNextFrame([viewportId]);\n  }\n\n  /**\n   * destroy the rendering engine. It will remove all the viewports and,\n   * if the rendering engine is using the GPU, it will also destroy the GPU\n   * resources.\n   */\n  public destroy(): void {\n    if (this.hasBeenDestroyed) {\n      return;\n    }\n\n    this._reset();\n    renderingEngineCache.delete(this.id);\n\n    if (!this.useCPURendering) {\n      // Free up WebGL resources\n      this.offscreenMultiRenderWindow.delete();\n\n      // Make sure all references go stale and are garbage collected.\n      delete this.offscreenMultiRenderWindow;\n    }\n\n    this.hasBeenDestroyed = true;\n  }\n\n  /**\n   * Fill the canvas with the background color\n   * @param canvas - The canvas element to draw on.\n   * @param backgroundColor - An array of three numbers between 0 and 1 that\n   * specify the red, green, and blue values of the background color.\n   */\n  public fillCanvasWithBackgroundColor(\n    canvas: HTMLCanvasElement,\n    backgroundColor: [number, number, number]\n  ): void {\n    const ctx = canvas.getContext('2d');\n\n    // Default to black if no background color is set\n    let fillStyle;\n    if (backgroundColor) {\n      const rgb = backgroundColor.map((f) => Math.floor(255 * f));\n      fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n    } else {\n      fillStyle = 'black';\n    }\n\n    // We draw over the previous stack with the background color while we\n    // wait for the next stack to load\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private _normalizeViewportInputEntry(\n    viewportInputEntry: PublicViewportInput\n  ) {\n    const { type, defaultOptions } = viewportInputEntry;\n    let options = defaultOptions;\n\n    if (!options || Object.keys(options).length === 0) {\n      options = {\n        background: [0, 0, 0],\n        orientation: null,\n      };\n\n      if (type === ViewportType.ORTHOGRAPHIC) {\n        options = {\n          ...options,\n          orientation: ORIENTATION.AXIAL,\n        };\n      }\n    }\n\n    return {\n      ...viewportInputEntry,\n      defaultOptions: options,\n    };\n  }\n\n  private _normalizeViewportInputEntries(\n    viewportInputEntries: Array<PublicViewportInput>\n  ): Array<NormalizedViewportInput> {\n    const normalizedViewportInputs = [];\n\n    viewportInputEntries.forEach((viewportInput) => {\n      normalizedViewportInputs.push(\n        this._normalizeViewportInputEntry(viewportInput)\n      );\n    });\n\n    return normalizedViewportInputs;\n  }\n\n  private _resizeUsingCustomResizeHandler(\n    customRenderingViewports: StackViewport[],\n    immediate = true,\n    resetPanZoomForViewPlane = true\n  ) {\n    // 1. If viewport has a custom resize method, call it here.\n    customRenderingViewports.forEach((vp) => {\n      if (typeof vp.resize === 'function') vp.resize();\n    });\n\n    // 3. Reset viewport cameras\n    customRenderingViewports.forEach((vp) => {\n      vp.resetCamera(resetPanZoomForViewPlane);\n    });\n\n    // 2. If render is immediate: Render all\n    if (immediate === true) {\n      this.render();\n    }\n  }\n\n  private _resizeVTKViewports(\n    vtkDrivenViewports: Array<IStackViewport | IVolumeViewport>,\n    resetPanZoomForViewPlane = true,\n    immediate = true\n  ) {\n    const canvasesDrivenByVtkJs = vtkDrivenViewports.map((vp) => vp.canvas);\n\n    if (canvasesDrivenByVtkJs.length) {\n      // 1. Recalculate and resize the offscreen canvas size\n      const { offScreenCanvasWidth, offScreenCanvasHeight } =\n        this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n\n      // 2. Recalculate the viewports location on the off screen canvas\n      this._resize(\n        vtkDrivenViewports,\n        offScreenCanvasWidth,\n        offScreenCanvasHeight\n      );\n    }\n\n    // 3. Reset viewport cameras\n    vtkDrivenViewports.forEach((vp: IStackViewport | IVolumeViewport) => {\n      vp.resetCamera(resetPanZoomForViewPlane);\n    });\n\n    // 4. If render is immediate: Render all\n    if (immediate === true) {\n      this.render();\n    }\n  }\n\n  /**\n   * Enables a viewport to be driven by the offscreen vtk.js rendering engine.\n   *\n   * @param viewportInputEntry - Information object used to\n   * construct and enable the viewport.\n   */\n  private enableVTKjsDrivenViewport(\n    viewportInputEntry: NormalizedViewportInput\n  ) {\n    const viewports = this._getViewportsAsArray();\n    const viewportsDrivenByVtkJs = viewports.filter(\n      (vp) => viewportTypeUsesCustomRenderingPipeline(vp.type) === false\n    );\n\n    const canvasesDrivenByVtkJs = viewportsDrivenByVtkJs.map((vp) => vp.canvas);\n\n    const canvas = getOrCreateCanvas(viewportInputEntry.element);\n    canvasesDrivenByVtkJs.push(canvas);\n\n    // 2.c Calculating the new size for offScreen Canvas\n    const { offScreenCanvasWidth, offScreenCanvasHeight } =\n      this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n\n    // 2.d Re-position previous viewports on the offScreen Canvas based on the new\n    // offScreen canvas size\n    const xOffset = this._resize(\n      viewportsDrivenByVtkJs,\n      offScreenCanvasWidth,\n      offScreenCanvasHeight\n    );\n\n    const internalViewportEntry = { ...viewportInputEntry, canvas };\n\n    // 3 Add the requested viewport to rendering Engine\n    this.addVtkjsDrivenViewport(internalViewportEntry, {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset,\n    });\n  }\n\n  /**\n   * Disables the requested viewportId from the rendering engine:\n   * 1) It removes the viewport from the the list of viewports\n   * 2) remove the renderer from the offScreen render window\n   * 3) resetting the viewport to remove the canvas attributes and canvas data\n   * 4) resize the offScreen appropriately\n   *\n   * @param viewportId - viewport Id\n   *\n   */\n  private _removeViewport(viewportId: string): void {\n    // 1. Get the viewport\n    const viewport = this.getViewport(viewportId);\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n\n    // 2. Delete the viewports from the the viewports\n    this._viewports.delete(viewportId);\n  }\n\n  /**\n   *  Adds a viewport driven by vtk.js to the `RenderingEngine`.\n   *\n   * @param viewportInputEntry - Information object used to construct and enable the viewport.\n   * @param options - Options object used to configure the viewport.\n   * @param options.offScreenCanvasWidth - The width of the offscreen canvas.\n   * @param options.offScreenCanvasHeight - The height of the offscreen canvas.\n   * @param options.xOffset - The x offset of the viewport on the offscreen canvas.\n   */\n  private addVtkjsDrivenViewport(\n    viewportInputEntry: InternalViewportInput,\n    offscreenCanvasProperties?: {\n      offScreenCanvasWidth: number;\n      offScreenCanvasHeight: number;\n      xOffset: number;\n    }\n  ): void {\n    const { element, canvas, viewportId, type, defaultOptions } =\n      viewportInputEntry;\n\n    // Make the element not focusable, we use this for modifier keys to work\n    element.tabIndex = -1;\n\n    const { offScreenCanvasWidth, offScreenCanvasHeight, xOffset } =\n      offscreenCanvasProperties;\n\n    // 1. Calculate the size of location of the viewport on the offScreen canvas\n    const {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords,\n      syEndDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n    } = this._getViewportCoordsOnOffScreenCanvas(\n      viewportInputEntry,\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset\n    );\n\n    // 2. Add a renderer to the offScreenMultiRenderWindow\n    this.offscreenMultiRenderWindow.addRenderer({\n      viewport: [\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n      ],\n      id: viewportId,\n      background: defaultOptions.background\n        ? defaultOptions.background\n        : [0, 0, 0],\n    });\n\n    // 3. ViewportInput to be passed to a stack/volume viewport\n    const viewportInput = <ViewportInput>{\n      id: viewportId,\n      element, // div\n      renderingEngineId: this.id,\n      type,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      defaultOptions: defaultOptions || {},\n    };\n\n    // 4. Create a proper viewport based on the type of the viewport\n    let viewport;\n    if (type === ViewportType.STACK) {\n      // 4.a Create stack viewport\n      viewport = new StackViewport(viewportInput);\n    } else if (type === ViewportType.ORTHOGRAPHIC) {\n      // 4.b Create a volume viewport\n      viewport = new VolumeViewport(viewportInput);\n    } else {\n      throw new Error(`Viewport Type ${type} is not supported`);\n    }\n\n    // 5. Storing the viewports\n    this._viewports.set(viewportId, viewport);\n\n    const eventDetail: EventTypes.ElementEnabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id,\n    };\n\n    if (!viewport.suppressEvents) {\n      triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n    }\n  }\n\n  /**\n   * Adds a viewport using a custom rendering pipeline to the `RenderingEngine`.\n   *\n   * @param viewportInputEntry - Information object used to\n   * construct and enable the viewport.\n   */\n  private addCustomViewport(viewportInputEntry: PublicViewportInput): void {\n    const { element, viewportId, type, defaultOptions } = viewportInputEntry;\n\n    // Make the element not focusable, we use this for modifier keys to work\n    element.tabIndex = -1;\n\n    const canvas = getOrCreateCanvas(element);\n\n    // Add a viewport with no offset\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    const viewportInput = <ViewportInput>{\n      id: viewportId,\n      renderingEngineId: this.id,\n      element, // div\n      type,\n      canvas,\n      sx: 0, // No offset, uses own renderer\n      sy: 0,\n      sWidth: clientWidth,\n      sHeight: clientHeight,\n      defaultOptions: defaultOptions || {},\n    };\n\n    // 4. Create a proper viewport based on the type of the viewport\n\n    if (type !== ViewportType.STACK) {\n      // In the future these will need to be pluggable, but we aren't there yet\n      // and these are just Stacks for now.\n      throw new Error('Support for fully custom viewports not yet implemented');\n    }\n\n    // 4.a Create stack viewport\n    const viewport = new StackViewport(viewportInput);\n\n    // 5. Storing the viewports\n    this._viewports.set(viewportId, viewport);\n\n    const eventDetail: EventTypes.ElementEnabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id,\n    };\n\n    triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n  }\n\n  /**\n   * Sets multiple viewports using custom rendering\n   * pipelines to the `RenderingEngine`.\n   *\n   * @param viewportInputEntries - An array of information\n   * objects used to construct and enable the viewports.\n   */\n  private setCustomViewports(viewportInputEntries: PublicViewportInput[]) {\n    viewportInputEntries.forEach((vpie) => this.addCustomViewport(vpie));\n  }\n\n  /**\n   * Sets multiple vtk.js driven viewports to\n   * the `RenderingEngine`.\n   *\n   * @param viewportInputEntries - An array of information\n   * objects used to construct and enable the viewports.\n   */\n  private setVtkjsDrivenViewports(\n    viewportInputEntries: NormalizedViewportInput[]\n  ) {\n    // Deal with vtkjs driven viewports\n    if (viewportInputEntries.length) {\n      // 1. Getting all the canvases from viewports calculation of the new offScreen size\n\n      const vtkDrivenCanvases = viewportInputEntries.map((vp) =>\n        getOrCreateCanvas(vp.element)\n      );\n\n      // 2. Set canvas size based on height and sum of widths\n      const { offScreenCanvasWidth, offScreenCanvasHeight } =\n        this._resizeOffScreenCanvas(vtkDrivenCanvases);\n\n      /*\n          TODO: Commenting this out until we can mock the Canvas usage in the tests (or use jsdom?)\n          if (!offScreenCanvasWidth || !offScreenCanvasHeight) {\n            throw new Error('Invalid offscreen canvas width or height')\n          }*/\n\n      // 3. Adding the viewports based on the viewportInputEntry definition to the\n      // rendering engine.\n      let xOffset = 0;\n      for (let i = 0; i < viewportInputEntries.length; i++) {\n        const vtkDrivenViewportInputEntry = viewportInputEntries[i];\n        const canvas = vtkDrivenCanvases[i];\n        const internalViewportEntry = {\n          ...vtkDrivenViewportInputEntry,\n          canvas,\n        };\n\n        this.addVtkjsDrivenViewport(internalViewportEntry, {\n          offScreenCanvasWidth,\n          offScreenCanvasHeight,\n          xOffset,\n        });\n\n        // Incrementing the xOffset which provides the horizontal location of each\n        // viewport on the offScreen canvas\n        xOffset += canvas.clientWidth;\n      }\n    }\n  }\n\n  /**\n   * Resizes the offscreen canvas based on the provided vtk.js driven canvases.\n   *\n   * @param canvases - An array of HTML Canvas\n   */\n  private _resizeOffScreenCanvas(\n    canvasesDrivenByVtkJs: Array<HTMLCanvasElement>\n  ): { offScreenCanvasWidth: number; offScreenCanvasHeight: number } {\n    const { offScreenCanvasContainer, offscreenMultiRenderWindow } = this;\n\n    // 1. Calculated the height of the offScreen canvas to be the maximum height\n    // between canvases\n    const offScreenCanvasHeight = Math.max(\n      ...canvasesDrivenByVtkJs.map((canvas) => canvas.clientHeight)\n    );\n\n    // 2. Calculating the width of the offScreen canvas to be the sum of all\n    let offScreenCanvasWidth = 0;\n\n    canvasesDrivenByVtkJs.forEach((canvas) => {\n      offScreenCanvasWidth += canvas.clientWidth;\n    });\n\n    offScreenCanvasContainer.width = offScreenCanvasWidth;\n    offScreenCanvasContainer.height = offScreenCanvasHeight;\n\n    // 3. Resize command\n    offscreenMultiRenderWindow.resize();\n\n    return { offScreenCanvasWidth, offScreenCanvasHeight };\n  }\n\n  /**\n   * Recalculates and updates the viewports location on the offScreen canvas upon its resize\n   *\n   * @param viewports - An array of viewports\n   * @param offScreenCanvasWidth - new offScreen canvas width\n   * @param offScreenCanvasHeight - new offScreen canvas height\n   *\n   * @returns _xOffset the final offset which will be used for the next viewport\n   */\n  private _resize(\n    viewportsDrivenByVtkJs: Array<IStackViewport | IVolumeViewport>,\n    offScreenCanvasWidth: number,\n    offScreenCanvasHeight: number\n  ): number {\n    // Redefine viewport properties\n    let _xOffset = 0;\n\n    for (let i = 0; i < viewportsDrivenByVtkJs.length; i++) {\n      const viewport = viewportsDrivenByVtkJs[i];\n      const {\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n        sx,\n        sy,\n        sWidth,\n        sHeight,\n      } = this._getViewportCoordsOnOffScreenCanvas(\n        viewport,\n        offScreenCanvasWidth,\n        offScreenCanvasHeight,\n        _xOffset\n      );\n\n      _xOffset += viewport.element.clientWidth;\n\n      viewport.sx = sx;\n      viewport.sy = sy;\n      viewport.sWidth = sWidth;\n      viewport.sHeight = sHeight;\n\n      // Updating the renderer for the viewport\n      const renderer = this.offscreenMultiRenderWindow.getRenderer(viewport.id);\n      renderer.setViewport([\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n      ]);\n    }\n\n    // Returns the final xOffset\n    return _xOffset;\n  }\n\n  /**\n   * Calculates the location of the provided viewport on the offScreenCanvas\n   *\n   * @param viewports - An array of viewports\n   * @param offScreenCanvasWidth - new offScreen canvas width\n   * @param offScreenCanvasHeight - new offScreen canvas height\n   * @param _xOffset - xOffSet to draw\n   */\n  private _getViewportCoordsOnOffScreenCanvas(\n    viewport: InternalViewportInput | IStackViewport | IVolumeViewport,\n    offScreenCanvasWidth: number,\n    offScreenCanvasHeight: number,\n    _xOffset: number\n  ): ViewportDisplayCoords {\n    const { canvas } = viewport;\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    // Update the canvas drawImage offsets.\n    const sx = _xOffset;\n    const sy = 0;\n    const sWidth = clientWidth;\n    const sHeight = clientHeight;\n\n    const sxStartDisplayCoords = sx / offScreenCanvasWidth;\n\n    // Need to offset y if it not max height\n    const syStartDisplayCoords =\n      sy + (offScreenCanvasHeight - clientHeight) / offScreenCanvasHeight;\n\n    const sWidthDisplayCoords = sWidth / offScreenCanvasWidth;\n    const sHeightDisplayCoords = sHeight / offScreenCanvasHeight;\n\n    return {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords: sxStartDisplayCoords + sWidthDisplayCoords,\n      syEndDisplayCoords: syStartDisplayCoords + sHeightDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n    };\n  }\n\n  /**\n   * @method _getViewportsAsArray Returns an array of all viewports\n   *\n   * @returns {Array} Array of viewports.\n   */\n  private _getViewportsAsArray() {\n    return Array.from(this._viewports.values());\n  }\n\n  private _setViewportsToBeRenderedNextFrame(viewportIds: string[]) {\n    // Add the viewports to the set of flagged viewports\n    viewportIds.forEach((viewportId) => {\n      this._needsRender.add(viewportId);\n    });\n\n    // Render any flagged viewports\n    this._render();\n  }\n\n  /**\n   * Sets up animation frame if necessary\n   */\n  private _render() {\n    // If we have viewports that need rendering and we have not already\n    // set the RAF callback to run on the next frame.\n    if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n      this._animationFrameHandle = window.requestAnimationFrame(\n        this._renderFlaggedViewports\n      );\n\n      // Set the flag that we have already set up the next RAF call.\n      this._animationFrameSet = true;\n    }\n  }\n\n  /**\n   * Renders all viewports.\n   */\n  private _renderFlaggedViewports = () => {\n    this._throwIfDestroyed();\n\n    if (!this.useCPURendering) {\n      this.performVtkDrawCall();\n    }\n\n    const viewports = this._getViewportsAsArray();\n    const eventDetailArray = [];\n\n    for (let i = 0; i < viewports.length; i++) {\n      const viewport = viewports[i];\n      if (this._needsRender.has(viewport.id)) {\n        const eventDetail =\n          this.renderViewportUsingCustomOrVtkPipeline(viewport);\n        eventDetailArray.push(eventDetail);\n\n        // This viewport has been rendered, we can remove it from the set\n        this._needsRender.delete(viewport.id);\n\n        // If there is nothing left that is flagged for rendering, stop the loop\n        if (this._needsRender.size === 0) {\n          break;\n        }\n      }\n    }\n\n    // allow RAF to be called again\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n\n    eventDetailArray.forEach((eventDetail) => {\n      triggerEvent(eventDetail.element, Events.IMAGE_RENDERED, eventDetail);\n    });\n  };\n\n  /**\n   * Performs the single `vtk.js` draw call which is used to render the offscreen\n   * canvas for vtk.js. This is a bulk rendering step for all Volume and Stack\n   * viewports when GPU rendering is available.\n   */\n  private performVtkDrawCall() {\n    // Render all viewports under vtk.js' control.\n    const { offscreenMultiRenderWindow } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n\n    if (!renderers.length) {\n      return;\n    }\n\n    for (let i = 0; i < renderers.length; i++) {\n      const { renderer, id } = renderers[i];\n\n      // Requesting viewports that need rendering to be rendered only\n      if (this._needsRender.has(id)) {\n        renderer.setDraw(true);\n      } else {\n        renderer.setDraw(false);\n      }\n    }\n\n    renderWindow.render();\n\n    // After redraw we set all renderers to not render until necessary\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(false);\n    }\n  }\n\n  /**\n   * Renders the given viewport\n   * using its proffered method.\n   *\n   * @param viewport - The viewport to render\n   */\n  private renderViewportUsingCustomOrVtkPipeline(\n    viewport: IStackViewport | IVolumeViewport\n  ): EventTypes.ImageRenderedEventDetail[] {\n    let eventDetail;\n\n    if (viewportTypeUsesCustomRenderingPipeline(viewport.type) === true) {\n      eventDetail =\n        viewport.customRenderViewportToCanvas() as EventTypes.ImageRenderedEventDetail;\n    } else {\n      if (this.useCPURendering) {\n        throw new Error(\n          'GPU not available, and using a viewport with no custom render pipeline.'\n        );\n      }\n\n      const { offscreenMultiRenderWindow } = this;\n      const openGLRenderWindow =\n        offscreenMultiRenderWindow.getOpenGLRenderWindow();\n      const context = openGLRenderWindow.get3DContext();\n      const offScreenCanvas = context.canvas;\n\n      eventDetail = this._renderViewportFromVtkCanvasToOnscreenCanvas(\n        viewport,\n        offScreenCanvas\n      );\n    }\n\n    return eventDetail;\n  }\n\n  /**\n   * Renders a particular `Viewport`'s on screen canvas.\n   * @param viewport - The `Viewport` to render.\n   * @param offScreenCanvas - The offscreen canvas to render from.\n   */\n  private _renderViewportFromVtkCanvasToOnscreenCanvas(\n    viewport: IStackViewport | IVolumeViewport,\n    offScreenCanvas\n  ): EventTypes.ImageRenderedEventDetail {\n    const {\n      element,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      id: viewportId,\n      renderingEngineId,\n      suppressEvents,\n    } = viewport;\n\n    const { width: dWidth, height: dHeight } = canvas;\n\n    const onScreenContext = canvas.getContext('2d');\n\n    onScreenContext.drawImage(\n      offScreenCanvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      0, //dx\n      0, // dy\n      dWidth,\n      dHeight\n    );\n\n    return {\n      element,\n      suppressEvents,\n      viewportId,\n      renderingEngineId,\n    };\n  }\n\n  /**\n   * Reset the viewport by removing the data attributes\n   * and clearing the context of draw. It also emits an element disabled event\n   *\n   * @param viewport - The `Viewport` to render.\n   */\n  private _resetViewport(viewport) {\n    const renderingEngineId = this.id;\n\n    const { element, canvas, id: viewportId } = viewport;\n\n    const eventDetail: EventTypes.ElementDisabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId,\n    };\n\n    // Trigger first before removing the data attributes, as we need the enabled\n    // element to remove tools associated with the viewport\n    triggerEvent(eventTarget, Events.ELEMENT_DISABLED, eventDetail);\n\n    element.removeAttribute('data-viewport-uid');\n    element.removeAttribute('data-rendering-engine-uid');\n\n    // clear drawing\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private _clearAnimationFrame() {\n    window.cancelAnimationFrame(this._animationFrameHandle);\n\n    this._needsRender.clear();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n  }\n\n  /**\n   * Resets the `RenderingEngine`\n   */\n  private _reset() {\n    const viewports = this._getViewportsAsArray();\n\n    viewports.forEach((viewport) => {\n      this._resetViewport(viewport);\n    });\n\n    this._clearAnimationFrame();\n\n    this._viewports = new Map();\n  }\n\n  /**\n   * Throws an error if trying to interact with the `RenderingEngine`\n   * instance after its `destroy` method has been called.\n   */\n  private _throwIfDestroyed() {\n    if (this.hasBeenDestroyed) {\n      throw new Error(\n        'this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.'\n      );\n    }\n  }\n\n  // debugging utils for offScreen canvas\n  _downloadOffScreenCanvas() {\n    const dataURL = this._debugRender();\n    _TEMPDownloadURI(dataURL);\n  }\n\n  // debugging utils for offScreen canvas\n  _debugRender(): void {\n    const { offscreenMultiRenderWindow } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(true);\n    }\n\n    renderWindow.render();\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const context = openGLRenderWindow.get3DContext();\n\n    const offScreenCanvas = context.canvas;\n    const dataURL = offScreenCanvas.toDataURL();\n\n    this._getViewportsAsArray().forEach((viewport) => {\n      const { sx, sy, sWidth, sHeight } = viewport;\n\n      const canvas = <HTMLCanvasElement>viewport.canvas;\n      const { width: dWidth, height: dHeight } = canvas;\n\n      const onScreenContext = canvas.getContext('2d');\n\n      //sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight\n      onScreenContext.drawImage(\n        offScreenCanvas,\n        sx,\n        sy,\n        sWidth,\n        sHeight,\n        0, //dx\n        0, // dy\n        dWidth,\n        dHeight\n      );\n    });\n\n    return dataURL;\n  }\n}\n\nexport default RenderingEngine;\n\n// debugging utils for offScreen canvas\nfunction _TEMPDownloadURI(uri) {\n  const link = document.createElement('a');\n\n  link.download = 'viewport.png';\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n", "import renderingEngineCache from './renderingEngineCache';\nimport type { IRenderingEngine } from './RenderingEngine';\n\n/**\n * Method to retrieve a RenderingEngine by its unique identifier.\n *\n * @example\n * How to get a RenderingEngine that was created earlier:\n * ```javascript\n * import { RenderingEngine, getRenderingEngine } from 'vtkjs-viewport';\n *\n * const renderingEngine = new RenderingEngine('my-engine');\n *\n * // getting reference to rendering engine later...\n * const renderingEngine = getRenderingEngine('my-engine');\n * ```\n *\n * @param id - The identifier that was used to create the RenderingEngine\n * @returns the matching RenderingEngine, or `undefined` if there is no match\n * @public\n */\nexport function getRenderingEngine(id: string): IRenderingEngine | undefined {\n  return renderingEngineCache.get(id);\n}\n\n/**\n * Get all the rendering engines that are currently registered\n * @returns An array of rendering engines.\n */\nexport function getRenderingEngines(): IRenderingEngine[] | undefined {\n  return renderingEngineCache.getAll();\n}\n\nexport default getRenderingEngine;\n", "import RenderingEngine from '../RenderingEngine';\nimport { getRenderingEngine } from '../getRenderingEngine';\nimport getOrCreateCanvas from './getOrCreateCanvas';\nimport ViewportType from '../../enums/ViewportType';\nimport ORIENTATION from '../../constants/orientation';\nimport StackViewport from '../StackViewport';\nimport Events from '../../enums/Events';\n\n/**\n * Renders an imageId to a Canvas. This method will handle creation\n * of a temporary enabledElement, setting the imageId, and rendering the image via\n * a StackViewport, copying the canvas drawing to the given canvas Element, and\n * disabling the created temporary element. SuppressEvents argument is used to\n * prevent events from firing during the render process (e.g. during a series\n * of renders to a thumbnail image).\n *\n * @example\n * ```\n * const canvas = document.getElementById('myCanvas')\n * const imageId = 'myImageId'\n *\n * renderToCanvas(canvas, imageId)\n * ```\n * @param imageId - The imageId to render\n * @param canvas - Canvas element to render to\n * @param renderingEngineId - [Default=null] The rendering engine Id\n * to use, if not provided, will create a new rendering engine with a random Id (this is preferred)\n * @param suppressEvents - [Default = true] boolean to suppress events during render,\n * if undefined, events will be suppressed\n * @returns - A promise that resolves when the image has been rendered with the imageId\n */\nexport default function renderToCanvas(\n  imageId: string,\n  canvas: HTMLCanvasElement,\n  renderingEngineId = null,\n  suppressEvents = true\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    // If specific rendering engine is specified use that, otherwise create a\n    // new one with random uid and use that.\n    //\n    // !!!!!IMPORTANT NOTE!!!!\n    // using the same rendering engine for multiple renders\n    // is tricky since here we are listening to IMAGE_RENDERED event to copy\n    // the canvas contents to the given canvas element. This is not ideal since\n    // many things can trigger IMAGE_RENDERED including: disabling of another\n    // element (which would cause a resize event and consequently a render), or\n    // a resize event by itself (which would cause a render).\n    let renderingEngine = getRenderingEngine(renderingEngineId);\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      // Use a new renderingEngine with random uid\n      renderingEngine = new RenderingEngine();\n    }\n\n    if (!canvas || !(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('canvas element is required');\n    }\n\n    if (!renderingEngine) {\n      throw new Error(\n        `No rendering engine with Id of ${renderingEngineId} found`\n      );\n    }\n\n    // Creating a temporary HTML element so that we can\n    // enable it and later disable it without loosing the canvas context\n    const element = document.createElement('div');\n    element.style.width = `${canvas.width}px`;\n    element.style.height = `${canvas.height}px`;\n\n    // Todo: we should be able to use the temporary element without appending\n    // it to the DOM\n    element.style.visibility = 'hidden';\n    document.body.appendChild(element);\n\n    // Setting the viewportId to imageId\n    const viewportId = imageId;\n\n    const stackViewportInput = {\n      viewportId,\n      type: ViewportType.STACK,\n      element,\n      defaultOptions: {\n        orientation: ORIENTATION.AXIAL,\n        suppressEvents,\n      },\n    };\n\n    renderingEngine.enableElement(stackViewportInput);\n    const viewport = renderingEngine.getViewport(viewportId) as StackViewport;\n\n    element.addEventListener(Events.IMAGE_RENDERED, () => {\n      // get the canvas element that is the child of the div\n      const temporaryCanvas = getOrCreateCanvas(element);\n\n      // Copy the temporary canvas to the given canvas\n      const context = canvas.getContext('2d');\n\n      context.drawImage(temporaryCanvas, 0, 0);\n      renderingEngine.disableElement(viewportId);\n      document.body.removeChild(element);\n      renderingEngine.destroy();\n      resolve(imageId);\n    });\n\n    viewport.setStack([imageId]);\n  });\n}\n", "import RenderingEngine from './RenderingEngine';\nimport getRenderingEngine from './getRenderingEngine';\nimport VolumeViewport from './VolumeViewport';\nimport {\n  createVolumeActor,\n  createVolumeMapper,\n  getOrCreateCanvas,\n  renderToCanvas,\n} from './helpers';\n\nexport {\n  getRenderingEngine,\n  RenderingEngine,\n  VolumeViewport,\n  createVolumeActor,\n  createVolumeMapper,\n  getOrCreateCanvas,\n  renderToCanvas,\n};\n\nexport default RenderingEngine;\n", "import { RequestPoolManager } from './requestPoolManager';\n\n/**\n * ImageRetrieval Pool Manager\n * Retrieval (usually) === XHR requests\n * @category RequestPoolManager\n *\n */\nconst imageRetrievalPoolManager = new RequestPoolManager();\n\nimageRetrievalPoolManager.maxNumRequests = {\n  interaction: 200,\n  thumbnail: 200,\n  prefetch: 200,\n};\nimageRetrievalPoolManager.grabDelay = 0;\n\nexport default imageRetrievalPoolManager;\n", "let configMaxSimultaneousRequests;\n\n// Maximum concurrent connections to the same server\n// Information from http://sgdev-blog.blogspot.fr/2014/01/maximum-concurrent-connection-to-same.html\nconst maxSimultaneousRequests = {\n  default: 16,\n  IE: {\n    9: 6,\n    10: 8,\n    default: 8,\n  },\n  Firefox: {\n    default: 6,\n  },\n  Opera: {\n    10: 8,\n    11: 6,\n    12: 6,\n    default: 6,\n  },\n  Chrome: {\n    default: 16,\n  },\n  Safari: {\n    default: 6,\n  },\n};\n\n// Browser name / version detection\n//\n//\n\n/**\n * Browser name / version detection\n * http://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n * @export @public @method\n * @name getBrowserInfo\n *\n * @returns {string} The name and version of the browser.\n */\nfunction getBrowserInfo() {\n  const ua = navigator.userAgent;\n  let M =\n    ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) ||\n    [];\n  let tem;\n\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n    return `IE ${tem[1] || ''}`;\n  }\n\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n    if (tem !== null) {\n      return tem.slice(1).join(' ').replace('OPR', 'Opera');\n    }\n  }\n\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n  if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n    M.splice(1, 1, tem[1]);\n  }\n\n  return M.join(' ');\n}\n\n/**\n * Sets the maximum number of simultaneous requests.\n * @param newMaxSimultaneousRequests - The value.\n * @category RequestPoolManager\n */\nfunction setMaxSimultaneousRequests(newMaxSimultaneousRequests) {\n  configMaxSimultaneousRequests = newMaxSimultaneousRequests;\n}\n\n/**\n * Returns the maximum number of simultaneous requests.\n *\n * @returns The maximum number of simultaneous requests\n * @category RequestPoolManager\n *\n */\nfunction getMaxSimultaneousRequests() {\n  if (configMaxSimultaneousRequests) {\n    return configMaxSimultaneousRequests;\n  }\n\n  return getDefaultSimultaneousRequests();\n}\n\n/**\n * Returns the default number of simultaneous requests.\n *\n * @returns The default number of simultaneous requests.\n * @category RequestPoolManager\n *\n */\nfunction getDefaultSimultaneousRequests() {\n  const infoString = getBrowserInfo();\n  const info = infoString.split(' ');\n  const browserName = info[0];\n  const browserVersion = info[1];\n  const browserData = maxSimultaneousRequests[browserName];\n\n  if (!browserData) {\n    return maxSimultaneousRequests.default;\n  }\n\n  if (!browserData[browserVersion]) {\n    return browserData.default;\n  }\n\n  return browserData[browserVersion];\n}\n\n/**\n * Checks if cornerstoneTools is operating on a mobile device.\n *\n * @returns True if running on a mobile device.\n */\nfunction isMobileDevice() {\n  const pattern = new RegExp(\n    'Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini'\n  );\n\n  return pattern.test(navigator.userAgent);\n}\n\nexport {\n  getDefaultSimultaneousRequests,\n  getMaxSimultaneousRequests,\n  setMaxSimultaneousRequests,\n  getBrowserInfo,\n  isMobileDevice,\n};\n", "import getRenderingEngine from './RenderingEngine/getRenderingEngine';\nimport { IEnabledElement } from './types';\n\n/**\n * A convenience method to find an EnabledElement given a reference to its\n * associated element. Commonly used in code that's handling a custom\n * event emitted by this library.\n *\n * @example\n * Using the renderingEngine to find the enabled element:\n * ```javascript\n * const element = getRenderingEngine(renderingEngineId)\n *    .getViewport(viewportId)\n *    .element\n *\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @example\n * Using a cornerstone event's \"element\"\n * ```javascript\n * // Our \"cornerstone events\" contain the source element, which is\n * // raised on the viewport's div element\n * const { element } = evt.detail\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @param element - a reference to an EnabledElement/Viewport's div element\n * @returns the associated EnabledElement, or undefined if no matching EnabledElement\n * can be found\n */\nexport default function getEnabledElement(\n  element: HTMLDivElement | undefined\n): IEnabledElement | undefined {\n  if (!element) {\n    return;\n  }\n\n  const { viewportUid, renderingEngineUid } = element.dataset;\n\n  return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\n\n/**\n * Similar to {@link getEnabledElement}, but takes the IDs of the\n * renderingEngine and viewport as parameters to return the associated\n * EnabledElement.\n *\n * @param viewportId - The Id of the viewport\n * @param renderingEngineId - The Id of the rendering engine.\n * @returns The enabled element which is an object that contains the viewport, rendering\n * engine, viewport Id, rendering engine Id, and the Frame of Reference UID.\n */\nexport function getEnabledElementByIds(\n  viewportId: string,\n  renderingEngineId: string\n): IEnabledElement {\n  if (!renderingEngineId || !viewportId) {\n    return;\n  }\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n    return;\n  }\n\n  const viewport = renderingEngine.getViewport(viewportId);\n\n  if (!viewport) {\n    return;\n  }\n\n  const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n  return {\n    viewport,\n    renderingEngine,\n    viewportId,\n    renderingEngineId,\n    FrameOfReferenceUID,\n  };\n}\n", "/*\n * Constants\n */\n\nconst DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\n\n/**\n * Settings\n */\nexport default class Settings {\n  constructor(base?: Settings) {\n    const dictionary = Object.create(\n      base instanceof Settings && DICTIONARY in base ? base[DICTIONARY] : null\n    );\n    Object.seal(\n      Object.defineProperty(this, DICTIONARY, {\n        value: dictionary,\n      })\n    );\n  }\n\n  set(key: string, value: unknown): boolean {\n    return set(this[DICTIONARY], key, value, null);\n  }\n\n  get(key: string): unknown {\n    return get(this[DICTIONARY], key);\n  }\n\n  /**\n   * Unset a specific key or a set of keys within a namespace when the key ends with a dot (ASCII #46).\n   * If the key is \".\", all keys will be removed and this command works as a reset.\n   * @param key - name The key to be unset or a namespace.\n   * @returns boolean\n   */\n  unset(key: string): boolean {\n    return unset(this[DICTIONARY], key + '');\n  }\n\n  forEach(callback: (key: string, value: unknown) => void): void {\n    iterate(this[DICTIONARY], callback);\n  }\n\n  extend(): Settings {\n    return new Settings(this);\n  }\n\n  /**\n   * Recursively import all properties from the given plain JavaScript object.\n   * This method has the opposite effect of the `dump` method.\n   * @param root - The root object whose properties will\n   * be imported.\n   */\n  import(root: Record<string, unknown>): void {\n    if (isPlainObject(root)) {\n      Object.keys(root).forEach((key) => {\n        set(this[DICTIONARY], key, root[key], null);\n      });\n    }\n  }\n\n  /**\n   * Build a JSON representation of the current internal state of this settings\n   * object. The returned object can be safely passed to `JSON.stringify`\n   * function.\n   * @returns The JSON representation of the current\n   * state of this settings instance\n   */\n  dump(): Record<string, unknown> {\n    const context = {};\n    iterate(this[DICTIONARY], (key, value) => {\n      if (typeof value !== 'undefined') {\n        deepSet(context, key, value);\n      }\n    });\n    return context;\n  }\n\n  static assert(subject: Settings): Settings {\n    return subject instanceof Settings\n      ? subject\n      : Settings.getRuntimeSettings();\n  }\n\n  static getDefaultSettings(subfield = null): Settings | any {\n    let defaultSettings = Settings[DEFAULT_SETTINGS];\n    if (!(defaultSettings instanceof Settings)) {\n      defaultSettings = new Settings();\n      Settings[DEFAULT_SETTINGS] = defaultSettings;\n    }\n\n    // Given subfield of 'segmentation' it will return all settings\n    // that starts with segmentation.*\n    if (subfield) {\n      const settingObj = {};\n      defaultSettings.forEach((name: string) => {\n        if (name.startsWith(subfield)) {\n          const setting = name.split(`${subfield}.`)[1];\n          settingObj[setting] = defaultSettings.get(name);\n        }\n      });\n      return settingObj;\n    }\n\n    return defaultSettings;\n  }\n\n  static getRuntimeSettings(): Settings {\n    let runtimeSettings = Settings[RUNTIME_SETTINGS];\n    if (!(runtimeSettings instanceof Settings)) {\n      runtimeSettings = new Settings(Settings.getDefaultSettings());\n      Settings[RUNTIME_SETTINGS] = runtimeSettings;\n    }\n    return runtimeSettings;\n  }\n\n  static getObjectSettings(subject: unknown, from?: unknown): Settings {\n    let settings = null;\n    if (subject instanceof Settings) {\n      settings = subject;\n    } else if (typeof subject === 'object' && subject !== null) {\n      let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n      if (!(objectSettingsMap instanceof WeakMap)) {\n        objectSettingsMap = new WeakMap();\n        Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n      }\n      settings = objectSettingsMap.get(subject);\n      if (!(settings instanceof Settings)) {\n        settings = new Settings(\n          Settings.assert(Settings.getObjectSettings(from))\n        );\n        objectSettingsMap.set(subject, settings);\n      }\n    }\n    return settings;\n  }\n\n  static extendRuntimeSettings(): Settings {\n    return Settings.getRuntimeSettings().extend();\n  }\n}\n\n/*\n * Local Helpers\n */\n\nfunction unset(dictionary: Record<string, unknown>, name: string): boolean {\n  if (name.endsWith('.')) {\n    let deleteCount = 0;\n    const namespace = name;\n    const base = namespace.slice(0, -1);\n    const deleteAll = base.length === 0;\n    for (const key in dictionary) {\n      if (\n        Object.prototype.hasOwnProperty.call(dictionary, key) &&\n        (deleteAll || key.startsWith(namespace) || key === base)\n      ) {\n        delete dictionary[key];\n        ++deleteCount;\n      }\n    }\n    return deleteCount > 0;\n  }\n  return delete dictionary[name];\n}\n\nfunction iterate(\n  dictionary: Record<string, unknown>,\n  callback: (key: string, value: unknown) => void\n): void {\n  for (const key in dictionary) {\n    callback(key, dictionary[key]);\n  }\n}\n\nfunction setAll(\n  dictionary: Record<string, unknown>,\n  prefix: string,\n  record: Record<string, unknown>,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  let failCount: number;\n  if (references.has(record)) {\n    return set(dictionary, prefix, null, references);\n  }\n  references.add(record);\n  failCount = 0;\n  for (const field in record) {\n    if (Object.prototype.hasOwnProperty.call(record, field)) {\n      const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n      if (!set(dictionary, key, record[field], references)) {\n        ++failCount;\n      }\n    }\n  }\n  references.delete(record);\n  return failCount === 0;\n}\n\n/**\n * Set the key-value pair on a given dictionary. If the given value is a\n * plain javascript object, every property of that object will also be set.\n * @param dictionary {Record<string, unknown>} The target dictionary\n * @param key {string} The given key\n * @param value {unknown} The given value\n * @param references {WeakSet<Record<string, unknown>>} references is a WeakSet\n *  instance used to keep track of which objects have already been iterated\n *  through preventing thus possible stack overflows caused by cyclic references\n * @returns {boolean} Returns true if every given key-value pair has been\n * successfully set\n */\nfunction set(\n  dictionary: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  if (isValidKey(key)) {\n    if (isPlainObject(value)) {\n      return setAll(\n        dictionary,\n        key,\n        value as Record<string, unknown>,\n        references instanceof WeakSet ? references : new WeakSet()\n      );\n    }\n    dictionary[key] = value;\n    return true;\n  }\n  return false;\n}\n\nfunction get(dictionary: Record<string, unknown>, key: string): unknown {\n  return dictionary[key];\n}\n\n/**\n * Make sure the -provided key correctly formatted.\n * e.g.:\n *  \"my.cool.property\" (valid)\n *  \"my.cool.property.\" (invalid)\n *  \".my.cool.property\" (invalid)\n *  \"my.cool..property\" (invalid)\n * @param key {string} The property name to be used as key within the internal\n *  dictionary\n * @returns {boolean} True on success, false otherwise\n */\nfunction isValidKey(key: string): boolean {\n  let last: number, current: number, previous: number;\n  if (typeof key !== 'string' || (last = key.length - 1) < 0) return false;\n  previous = -1;\n  while ((current = key.indexOf('.', previous + 1)) >= 0) {\n    if (current - previous < 2 || current === last) return false;\n    previous = current;\n  }\n  return true;\n}\n\nfunction isPlainObject(subject: unknown) {\n  if (typeof subject === 'object' && subject !== null) {\n    const prototype = Object.getPrototypeOf(subject);\n    if (prototype === Object.prototype || prototype === null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction deepSet(context, key, value) {\n  const separator = key.indexOf('.');\n  if (separator >= 0) {\n    const subKey = key.slice(0, separator);\n    let subContext = context[subKey];\n    if (typeof subContext !== 'object' || subContext === null) {\n      const subContextValue = subContext;\n      subContext = {};\n      if (typeof subContextValue !== 'undefined') {\n        subContext[''] = subContextValue;\n      }\n      context[subKey] = subContext;\n    }\n    deepSet(subContext, key.slice(separator + 1, key.length), value);\n  } else {\n    context[key] = value;\n  }\n}\n", "/**\n * A utility that can be used to scale (in place) an RgbTransferFunction. We\n * often use this to scale the transfer function based on a PET calculation.\n *\n * @example\n * Grabbing a reference to the RGB Transfer function from the viewport:\n * ```\n * const rgbTransferFunction = viewport\n *   .getActor()\n *   .getProperty()\n *   .getRGBTransferFunction(0);\n *\n * scaleRgbTransferFunction(rgbTransferFunction, 2);\n * ```\n *\n * @see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_ColorTransferFunction.html|VTK.js: ColorTransferFunction}\n * @param rgbTransferFunction\n * @param scalingFactor\n */\nexport default function scaleRGBTransferFunction(\n  rgbTransferFunction: any,\n  scalingFactor: number\n): void {\n  const size = rgbTransferFunction.getSize();\n\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    rgbTransferFunction.getNodeValue(index, nodeValue1);\n\n    nodeValue1[1] = nodeValue1[1] * scalingFactor;\n    nodeValue1[2] = nodeValue1[2] * scalingFactor;\n    nodeValue1[3] = nodeValue1[3] * scalingFactor;\n\n    rgbTransferFunction.setNodeValue(index, nodeValue1);\n  }\n}\n", "/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param storedPixelData - The pixel data to calculate the min and max values for\n * @returns an object with two properties: min and max\n */\nexport default function getMinMax(storedPixelData: number[]): {\n  min: number;\n  max: number;\n} {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n\n  let max = storedPixelData[0];\n\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max,\n  };\n}\n", "const LAST_RUNTIME_ID = Symbol('LastRuntimeId');\nconst GLOBAL_CONTEXT = {};\nconst DEFAULT_MAX = 0xffffffff; // Max 32-bit integer\nconst DEFAULT_SEPARATOR = '-';\n\n/**\n * Generate a unique numeric ID string valid during a single runtime session;\n *\n * @param context - An optional object to be used as context.\n *  Defaults to a global context;\n * @param separator - The component separator. Defaults to \"-\";\n * @param max - The maximum component value. Defaults to 4294967295;\n * @returns The string representation of the the unique ID;\n */\nexport default function getRuntimeId(\n  context?: unknown,\n  separator?: string,\n  max?: number\n): string {\n  return getNextRuntimeId(\n    // @ts-ignore\n    context !== null && typeof context === 'object' ? context : GLOBAL_CONTEXT,\n    LAST_RUNTIME_ID,\n    (typeof max === 'number' && max > 0 ? max : DEFAULT_MAX) >>> 0\n  ).join(typeof separator === 'string' ? separator : DEFAULT_SEPARATOR);\n}\n\n/*\n * Helpers\n */\n\nfunction getNextRuntimeId(\n  context: Record<symbol, Array<number>>,\n  symbol: symbol,\n  max: number\n): Array<number> {\n  let idComponents = context[symbol];\n  if (!(idComponents instanceof Array)) {\n    idComponents = [0];\n    Object.defineProperty(context, symbol, { value: idComponents });\n  }\n  for (let carry = true, i = 0; carry && i < idComponents.length; ++i) {\n    let n = idComponents[i] | 0;\n    if (n < max) {\n      carry = false;\n      n = n + 1;\n    } else {\n      n = 0;\n      if (i + 1 === idComponents.length) idComponents.push(0);\n    }\n    idComponents[i] = n;\n  }\n  return idComponents;\n}\n", "import imageIdToURI from './imageIdToURI';\n\nconst state = {}; // Calibrated pixel spacing per imageId\n\n/**\n * Simple metadataProvider object to store metadata for calibrated spacings.\n * This can be added via cornerstone.metaData.addProvider(...) in order to store\n * and return calibrated pixel spacings when metaData type is \"calibratedPixelSpacing\".\n */\nconst metadataProvider = {\n  /**\n   * Adds metadata for an imageId.\n   * @param imageId - the imageId for the metadata to store\n   * @param payload - the payload composed of new calibrated pixel spacings\n   */\n  add: (imageId: string, payload: [number, number]): void => {\n    const imageURI = imageIdToURI(imageId);\n    if (!state[imageURI]) {\n      state[imageURI] = {};\n    }\n    state[imageURI] = payload;\n  },\n\n  /**\n   * Returns the metadata for an imageId if it exists.\n   * @param type - the type of metadata to enquire about\n   * @param imageId - the imageId to enquire about\n   * @returns the calibrated pixel spacings for the imageId if it exists, otherwise undefined\n   */\n  get: (type: string, imageId: string): [number, number] => {\n    if (type === 'calibratedPixelSpacing') {\n      const imageURI = imageIdToURI(imageId);\n      return state[imageURI];\n    }\n  },\n};\n\nexport default metadataProvider;\n", "import type Point3 from '../types/Point3';\n\n/**\n * returns equal if the two vec3s are opposite within the\n * given tolerance in each dimension.\n *\n * @param v1 - The first 3 vector\n * @param v2 - The second 3 vector.\n * @param tolerance - The acceptable tolerance.\n *\n * @returns True if the two values are within the tolerance levels.\n */\nexport default function isOpposite(\n  v1: Point3,\n  v2: Point3,\n  tolerance = 1e-5\n): boolean {\n  return (\n    Math.abs(v1[0] + v2[0]) < tolerance &&\n    Math.abs(v1[1] + v2[1]) < tolerance &&\n    Math.abs(v1[2] + v2[2]) < tolerance\n  );\n}\n", "import global from '../global';\n/**\n * A helper function that creates a new Float32Array that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createUint8SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Uint8Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createUint8SharedArray(length: number): Uint8Array {\n  if (!window.crossOriginIsolated) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length);\n\n  return new Uint8Array(sharedArrayBuffer);\n}\n\nexport default createUint8SharedArray;\n", "import global from '../global';\n\n/**\n * A helper function that creates a new Float32Array that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createFloat32SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Float32Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createFloat32SharedArray(length: number): Float32Array {\n  if (!window.crossOriginIsolated) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length * 4);\n\n  return new Float32Array(sharedArrayBuffer);\n}\n\nexport default createFloat32SharedArray;\n", "import { vec3 } from 'gl-matrix';\nimport { IImageVolume, Point3 } from '../types';\n\n/**\n * Given an `imageVolume` and a normal direction (`viewPlaneNormal`), calculates\n * the spacing between voxels in the normal direction. If (`viewPlaneNormal`) is\n * parallel to one of the directions you will obtain the spacing in that direction.\n * Otherwise each of the `imageVolume`'s directions are projected onto the volume,\n * so that you obtain a spacing of the order of \"seeing a new set of voxels if the camera where to dolly\".\n *\n * @param imageVolume - The image volume to calculate the spacing in the normal direction.\n * @param viewPlaneNormal - The normal direction of the view plane.\n * @returns\n */\nexport default function getSpacingInNormalDirection(\n  imageVolume: IImageVolume,\n  viewPlaneNormal: Point3\n): number {\n  const { direction, spacing } = imageVolume;\n\n  // Calculate size of spacing vector in normal direction\n  const iVector = direction.slice(0, 3);\n  const jVector = direction.slice(3, 6);\n  const kVector = direction.slice(6, 9);\n\n  const dotProducts = [\n    vec3.dot(iVector, <vec3>viewPlaneNormal),\n    vec3.dot(jVector, <vec3>viewPlaneNormal),\n    vec3.dot(kVector, <vec3>viewPlaneNormal),\n  ];\n\n  const projectedSpacing = vec3.create();\n\n  vec3.set(\n    projectedSpacing,\n    dotProducts[0] * spacing[0],\n    dotProducts[1] * spacing[1],\n    dotProducts[2] * spacing[2]\n  );\n\n  const spacingInNormalDirection = vec3.length(projectedSpacing);\n\n  return spacingInNormalDirection;\n}\n", "import { vec3 } from 'gl-matrix';\nimport * as metaData from '../metaData';\nimport type { IImageVolume, Point3 } from '../types';\n\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\n\n/**\n * Given an image, a point in space and the viewPlaneNormal it returns the\n * closest imageId of the image volume that is within half voxel spacing\n * of the point in space.\n * @param imageVolume - The image volume\n * @param worldPos - The position in the world coordinate system (from mouse click)\n * @param viewPlaneNormal - The normal vector of the viewport\n * @param viewUp - The viewUp vector of the camera.\n *\n * @returns The imageId for the tool.\n */\nexport default function getClosestImageId(\n  imageVolume: IImageVolume,\n  worldPos: Point3,\n  viewPlaneNormal: Point3,\n  viewUp: Point3\n): string {\n  if (!imageVolume) {\n    return;\n  }\n\n  const { direction, imageIds } = imageVolume;\n\n  if (!imageIds || !imageIds.length) {\n    return;\n  }\n\n  // 1. Get ScanAxis vector\n  const kVector = direction.slice(6, 9);\n\n  // 2. Check if scanAxis is not parallel to camera viewPlaneNormal\n  const dotProducts = vec3.dot(kVector, <vec3>viewPlaneNormal);\n\n  // 2.a if imagePlane is not parallel to the camera: tool is not drawn on an\n  // imaging plane, return\n  if (Math.abs(dotProducts) < 0.99) {\n    return;\n  }\n\n  // 3. Calculate Spacing the in the normal direction, this will get used to\n  // check whether we are withing a slice\n  const spacingInNormalDirection = getSpacingInNormalDirection(\n    imageVolume,\n    viewPlaneNormal\n  );\n\n  const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n\n  // 4. Iterate over all imageIds and check if the tool point (worldPos) is\n  // withing one of the slices defined by an imageId\n  let imageIdForTool;\n  for (let i = 0; i < imageIds.length; i++) {\n    const imageId = imageIds[i];\n\n    // 4.a Get metadata for the imageId\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n\n    // 4.b Calculate the direction vector from annotation. point to the first voxel\n    // of this image defined by imageId\n    const dir = vec3.create();\n    vec3.sub(dir, worldPos, imagePositionPatient);\n\n    // 4.c Calculate the distance between the vector above and the viewplaneNormal\n    // i.e., projected distance\n    const dot = vec3.dot(dir, viewPlaneNormal);\n\n    // 4.d If the distance is withing range, return the imageId\n    if (Math.abs(dot) < halfSpacingInNormalDirection) {\n      imageIdForTool = imageId;\n    }\n  }\n\n  return imageIdForTool;\n}\n", "import cache from '../cache/cache';\n// import type { VolumeViewport } from '../RenderingEngine'\nimport { ICamera, IImageVolume, IVolumeViewport } from '../types';\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\n\n/**\n * Given a volume viewport and camera, find the target volume.\n * The imageVolume is retrieved from cache for the specified targetVolumeId or\n * in case it is not provided, it chooses the volumeId on the viewport (there\n * might be more than one in case of fusion) that has the finest resolution in the\n * direction of view (normal).\n *\n * @param viewport - volume viewport\n * @param camera - current camera\n * @param targetVolumeId - If a target volumeId is given that volume\n * is forced to be used.\n *\n * @returns An object containing the imageVolume and spacingInNormalDirection.\n *\n */\nexport default function getTargetVolumeAndSpacingInNormalDir(\n  viewport: IVolumeViewport,\n  camera: ICamera,\n  targetVolumeId?: string\n): {\n  imageVolume: IImageVolume;\n  spacingInNormalDirection: number;\n} {\n  const { viewPlaneNormal } = camera;\n  const volumeActors = viewport.getActors();\n\n  if (!volumeActors && !volumeActors.length) {\n    return { spacingInNormalDirection: null, imageVolume: null };\n  }\n  const numVolumeActors = volumeActors.length;\n  const imageVolumes = volumeActors.map((va) => cache.getVolume(va.uid));\n\n  // If a volumeId is defined, set that volume as the target\n  if (targetVolumeId) {\n    const imageVolume = imageVolumes.find(\n      (iv) => iv.volumeId === targetVolumeId\n    );\n\n    const spacingInNormalDirection = getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    return { imageVolume, spacingInNormalDirection };\n  }\n\n  // Fetch volume actor with finest resolution in direction of projection.\n  const smallest = {\n    spacingInNormalDirection: Infinity,\n    imageVolume: null,\n  };\n\n  for (let i = 0; i < numVolumeActors; i++) {\n    const imageVolume = imageVolumes[i];\n\n    // TODO: Hacky workaround for undefined volumes created by Seg\n    if (!imageVolume) {\n      continue;\n    }\n\n    const spacingInNormalDirection = getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    if (spacingInNormalDirection < smallest.spacingInNormalDirection) {\n      smallest.spacingInNormalDirection = spacingInNormalDirection;\n      smallest.imageVolume = imageVolume;\n    }\n  }\n\n  return smallest;\n}\n", "import { Point3 } from '../types';\n\n/**\n * Converts `vtkVolumeActor` bounds to corners in world space.\n *\n * @param volumeActor - The `vtkVolumeActor`.\n *\n * @returns An array of the corners of the `volumeActor` in world space.\n */\nexport default function getVolumeActorCorners(volumeActor): Array<Point3> {\n  const imageData = volumeActor.getMapper().getInputData();\n  const bounds = imageData.extentToBounds(imageData.getExtent());\n\n  return [\n    [bounds[0], bounds[2], bounds[4]],\n    [bounds[0], bounds[2], bounds[5]],\n    [bounds[0], bounds[3], bounds[4]],\n    [bounds[0], bounds[3], bounds[5]],\n    [bounds[1], bounds[2], bounds[4]],\n    [bounds[1], bounds[2], bounds[5]],\n    [bounds[1], bounds[3], bounds[4]],\n    [bounds[1], bounds[3], bounds[5]],\n  ];\n}\n", "import { Point3 } from '../types';\n\n/**\n * Returns true if the specified index is within the given dimensions.\n *\n * @param index - The index to check.\n * @param dimensions - The dimensions to check against.\n *\n * @returns True if the index is in-bounds.\n */\nexport default function indexWithinDimensions(\n  index: Point3,\n  dimensions: Point3\n): boolean {\n  if (\n    index[0] < 0 ||\n    index[0] >= dimensions[0] ||\n    index[1] < 0 ||\n    index[1] >= dimensions[1] ||\n    index[2] < 0 ||\n    index[2] >= dimensions[2]\n  ) {\n    return false;\n  }\n\n  return true;\n}\n", "import { IVolumeViewport } from '../types';\nimport {\n  getRenderingEngines,\n  getRenderingEngine,\n} from '../RenderingEngine/getRenderingEngine';\n\n/**\n * Returns the viewports containing the same volume actors (all actors) the same\n * as the target viewport. If renderingEngineId is provided, it will only return\n * viewports that are associated with the renderingEngineId; otherwise, it will\n * return search in all rendering engines.\n *\n * This method is useful for finding viewports that are associated with the same\n * volume (e.g., for tools that share state between viewports).\n *\n * @param viewport - target viewport\n * @returns array of viewports that have the same volume actor as the target viewport\n */\nfunction getVolumeViewportsContainingSameVolumes(\n  targetViewport: IVolumeViewport,\n  renderingEngineId?: string\n): Array<IVolumeViewport> {\n  // If rendering engine is not provided, use all rendering engines\n  let renderingEngines;\n  if (renderingEngineId) {\n    renderingEngines = [getRenderingEngine(renderingEngineId)];\n  } else {\n    renderingEngines = getRenderingEngines();\n  }\n\n  const sameVolumesViewports = [];\n\n  renderingEngines.forEach((renderingEngine) => {\n    const targetActors = targetViewport.getActors();\n    const viewports = renderingEngine.getVolumeViewports();\n\n    for (const vp of viewports) {\n      const vpActors = vp.getActors();\n\n      if (vpActors.length !== targetActors.length) {\n        continue;\n      }\n\n      // every targetActors should be in the vpActors\n      const sameVolumes = targetActors.every(({ uid }) =>\n        vpActors.find((vpActor) => uid === vpActor.uid)\n      );\n\n      if (sameVolumes) {\n        sameVolumesViewports.push(vp);\n      }\n    }\n  });\n\n  return sameVolumesViewports;\n}\n\nexport default getVolumeViewportsContainingSameVolumes;\n", "import { IVolumeViewport } from '../types';\nimport {\n  getRenderingEngines,\n  getRenderingEngine,\n} from '../RenderingEngine/getRenderingEngine';\n\n/**\n * Similar to {@link getVolumeViewportsContainingSameVolumes}, but uses the volumeId\n * to filter viewports that contain the same volume.\n *\n * @returns VolumeViewport viewports array\n */\nfunction getVolumeViewportsContainingVolumeId(\n  volumeId: string,\n  renderingEngineId?: string\n): Array<IVolumeViewport> {\n  // If rendering engine is not provided, use all rendering engines\n  let renderingEngines;\n  if (renderingEngineId) {\n    renderingEngines = [getRenderingEngine(renderingEngineId)];\n  } else {\n    renderingEngines = getRenderingEngines();\n  }\n\n  const sameVolumeViewports = [];\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getVolumeViewports();\n    const filteredViewports = viewports.filter((vp) => {\n      const actor = vp.getDefaultActor();\n      return actor.volumeActor && actor.uid === volumeId;\n    });\n    sameVolumeViewports.push(...filteredViewports);\n  });\n\n  return sameVolumeViewports;\n}\n\nexport default getVolumeViewportsContainingVolumeId;\n", "import { VolumeViewport } from '../';\nimport type {\n  IVolumeInput,\n  IRenderingEngine,\n  IVolumeViewport,\n} from '../../types';\n\n/**\n * Similar to {@link addVolumesToViewports} it adds volumes to viewports; however,\n * this method will Set the volumes on the viewports which means that the previous\n * volumes will be removed.\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function setVolumesForViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  viewportIds.forEach((viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of VolumeViewport, throw\n    if (!(viewport instanceof VolumeViewport)) {\n      throw new Error('setVolumesForViewports only supports VolumeViewport');\n    }\n  });\n\n  const setVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IVolumeViewport;\n\n    await viewport.setVolumes(volumeInputs, immediateRender);\n  });\n\n  await Promise.all(setVolumePromises);\n\n  return;\n}\n\nexport default setVolumesForViewports;\n", "import { VolumeViewport } from '../';\nimport type { IVolumeInput, IRenderingEngine } from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addVolumesToViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  viewportIds.forEach((viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of VolumeViewport, throw\n    if (!(viewport instanceof VolumeViewport)) {\n      throw new Error('addVolumesToViewports only supports VolumeViewport');\n    }\n  });\n\n  const addVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as VolumeViewport;\n\n    await viewport.addVolumes(volumeInputs, immediateRender);\n  });\n\n  await Promise.all(addVolumePromises);\n\n  return;\n}\n\nexport default addVolumesToViewports;\n", "import Events from './enums/Events';\nimport RequestType from './enums/RequestType';\nimport ViewportType from './enums/ViewportType';\nimport InterpolationType from './enums/InterpolationType';\nimport BlendModes from './enums/BlendModes';\n//\nimport ORIENTATION from './constants/orientation';\n//\nimport {\n  createVolumeActor,\n  createVolumeMapper,\n  getOrCreateCanvas,\n} from './RenderingEngine';\nimport { renderToCanvas } from './RenderingEngine';\nimport RenderingEngine from './RenderingEngine';\nimport VolumeViewport from './RenderingEngine/VolumeViewport';\nimport StackViewport from './RenderingEngine/StackViewport';\nimport Viewport from './RenderingEngine/Viewport';\nimport eventTarget from './eventTarget';\nimport {\n  getRenderingEngine,\n  getRenderingEngines,\n} from './RenderingEngine/getRenderingEngine';\nimport cache from './cache';\nimport { ImageVolume } from './cache/classes/ImageVolume';\nimport imageRetrievalPoolManager from './requestPool/imageRetrievalPoolManager';\nimport imageLoadPoolManager from './requestPool/imageLoadPoolManager';\nimport { setMaxSimultaneousRequests } from './requestPool/getMaxSimultaneousRequests';\nimport CPU_COLORMAPS from './RenderingEngine/helpers/cpuFallback/colors/colormaps';\n\nimport getEnabledElement, { getEnabledElementByIds } from './getEnabledElement';\nimport * as metaData from './metaData';\nimport {\n  init,\n  getShouldUseCPURendering,\n  isCornerstoneInitialized,\n  setUseCPURendering,\n  resetUseCPURendering,\n} from './init';\n\n// Classes\nimport Settings from './Settings';\n\n// Namespaces\nimport * as volumeLoader from './volumeLoader';\nimport * as imageLoader from './imageLoader';\nimport * as Types from './types';\nimport * as utilities from './utilities';\nimport { registerImageLoader } from './imageLoader'; // since it is used by CSWIL right now\n\nimport triggerEvent from './utilities/triggerEvent';\n\nimport {\n  setVolumesForViewports,\n  addVolumesToViewports,\n} from './RenderingEngine/helpers';\n\nconst Enums = {\n  Events,\n  ViewportType,\n  InterpolationType,\n  RequestType,\n  BlendModes,\n};\n\nconst CONSTANTS = {\n  ORIENTATION,\n  CPU_COLORMAPS,\n};\n\nexport type { Types };\n\nexport {\n  init,\n  isCornerstoneInitialized,\n  // enums\n  Enums,\n  CONSTANTS,\n  Events as EVENTS, // CornerstoneWADOImageLoader uses this, Todo: remove it after fixing wado\n  //\n  Settings,\n  // Rendering Engine\n  VolumeViewport,\n  Viewport,\n  StackViewport,\n  RenderingEngine,\n  ImageVolume,\n  // Helpers\n  getRenderingEngine,\n  getRenderingEngines,\n  getEnabledElement,\n  getEnabledElementByIds,\n  createVolumeActor,\n  getOrCreateCanvas,\n  createVolumeMapper,\n  renderToCanvas,\n  // cache\n  cache,\n  // event helpers\n  eventTarget,\n  triggerEvent,\n  // Image Loader\n  imageLoader,\n  registerImageLoader, // Todo: remove this after CSWIL uses imageLoader now\n  // Volume Loader\n  volumeLoader,\n  //\n  metaData,\n  //\n  utilities,\n  setVolumesForViewports,\n  addVolumesToViewports,\n  //\n  imageLoadPoolManager as requestPoolManager,\n  imageRetrievalPoolManager,\n  imageLoadPoolManager,\n  setMaxSimultaneousRequests,\n  // CPU Rendering\n  getShouldUseCPURendering,\n  setUseCPURendering,\n  resetUseCPURendering,\n};\n", "export default require(\"../../node_modules/@cornerstonejs/core/dist/umd/index.js\");"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,WAOA,YAKA;AAZJ;AAAA;AAAA,IAAI,YAAY;AAAA,MACd,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,0BAA0B;AAAA,IAC5B;AACA,IAAI,aAAa;AAAA,MACf,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,KAAK;AAAA,IACP;AACA,IAAI,YAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACfe,yBAAyB,KAAK;AAC3C,MAAI,MAAM,QAAQ,GAAG;AAAG,WAAO;AACjC;AAFA;AAAA;AAAA;AAAA;;;ACAe,+BAA+B,KAAK,GAAG;AACpD,MAAI,KAAK,OAAO,OAAO,OAAO,OAAO,WAAW,eAAe,IAAI,OAAO,aAAa,IAAI;AAE3F,MAAI,MAAM;AAAM;AAChB,MAAI,OAAO,CAAC;AACZ,MAAI,KAAK;AACT,MAAI,KAAK;AAET,MAAI,IAAI;AAER,MAAI;AACF,SAAK,KAAK,GAAG,KAAK,GAAG,GAAG,CAAE,MAAM,MAAK,GAAG,KAAK,GAAG,OAAO,KAAK,MAAM;AAChE,WAAK,KAAK,GAAG,KAAK;AAElB,UAAI,KAAK,KAAK,WAAW;AAAG;AAAA,IAC9B;AAAA,EACF,SAAS,KAAP;AACA,SAAK;AACL,SAAK;AAAA,EACP,UAAE;AACA,QAAI;AACF,UAAI,CAAC,MAAM,GAAG,aAAa;AAAM,WAAG,UAAU;AAAA,IAChD,UAAE;AACA,UAAI;AAAI,cAAM;AAAA,IAChB;AAAA,EACF;AAEA,SAAO;AACT;AA5BA;AAAA;AAAA;AAAA;;;ACAe,2BAA2B,KAAK,KAAK;AAClD,MAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,UAAM,IAAI;AAE/C,WAAS,IAAI,GAAG,OAAO,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,KAAK;AACnD,SAAK,KAAK,IAAI;AAAA,EAChB;AAEA,SAAO;AACT;AARA;AAAA;AAAA;AAAA;;;ACCe,qCAAqC,GAAG,QAAQ;AAC7D,MAAI,CAAC;AAAG;AACR,MAAI,OAAO,MAAM;AAAU,WAAO,kBAAiB,GAAG,MAAM;AAC5D,MAAI,IAAI,OAAO,UAAU,SAAS,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE;AACrD,MAAI,MAAM,YAAY,EAAE;AAAa,QAAI,EAAE,YAAY;AACvD,MAAI,MAAM,SAAS,MAAM;AAAO,WAAO,MAAM,KAAK,CAAC;AACnD,MAAI,MAAM,eAAe,2CAA2C,KAAK,CAAC;AAAG,WAAO,kBAAiB,GAAG,MAAM;AAChH;AARA;AAAA;AAAA;AAAA;AAAA;;;ACAe,4BAA4B;AACzC,QAAM,IAAI,UAAU,2IAA2I;AACjK;AAFA;AAAA;AAAA;AAAA;;;ACIe,wBAAwB,KAAK,GAAG;AAC7C,SAAO,gBAAe,GAAG,KAAK,sBAAqB,KAAK,CAAC,KAAK,4BAA2B,KAAK,CAAC,KAAK,iBAAgB;AACtH;AANA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHe,iBAAiB,MAAK;AACnC;AAEA,SAAO,UAAU,AAAc,OAAO,UAArB,cAA+B,AAAY,OAAO,OAAO,YAA1B,WAAqC,SAAU,MAAK;AAClG,WAAO,OAAO;AAAA,EAChB,IAAI,SAAU,MAAK;AACjB,WAAO,QAAO,AAAc,OAAO,UAArB,cAA+B,KAAI,gBAAgB,UAAU,SAAQ,OAAO,YAAY,WAAW,OAAO;AAAA,EAC1H,GAAG,QAAQ,IAAG;AAChB;AARA;AAAA;AAAA;AAAA;;;ACAe,yBAAyB,MAAK,KAAK,OAAO;AACvD,MAAI,OAAO,MAAK;AACd,WAAO,eAAe,MAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,OAAO;AACL,SAAI,OAAO;AAAA,EACb;AAEA,SAAO;AACT;AAbA;AAAA;AAAA;AAAA;;;ACCe,4BAA4B,KAAK;AAC9C,MAAI,MAAM,QAAQ,GAAG;AAAG,WAAO,kBAAiB,GAAG;AACrD;AAHA;AAAA;AAAA;AAAA;AAAA;;;ACAe,0BAA0B,MAAM;AAC7C,MAAI,OAAO,WAAW,eAAe,KAAK,OAAO,aAAa,QAAQ,KAAK,iBAAiB;AAAM,WAAO,MAAM,KAAK,IAAI;AAC1H;AAFA;AAAA;AAAA;AAAA;;;ACAe,8BAA8B;AAC3C,QAAM,IAAI,UAAU,sIAAsI;AAC5J;AAFA;AAAA;AAAA;AAAA;;;ACIe,4BAA4B,KAAK;AAC9C,SAAO,mBAAkB,GAAG,KAAK,iBAAgB,GAAG,KAAK,4BAA2B,GAAG,KAAK,mBAAkB;AAChH;AANA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHe,yBAAyB,GAAG,GAAG;AAC5C,oBAAkB,OAAO,kBAAkB,0BAAyB,IAAG,IAAG;AACxE,OAAE,YAAY;AACd,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,GAAG,CAAC;AAC7B;AAPA;AAAA;AAAA;AAAA;;;ACAe,qCAAqC;AAClD,MAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,WAAO;AACjE,MAAI,QAAQ,UAAU;AAAM,WAAO;AACnC,MAAI,OAAO,UAAU;AAAY,WAAO;AAExC,MAAI;AACF,YAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,CAAC,GAAG,WAAY;AAAA,IAAC,CAAC,CAAC;AAC7E,WAAO;AAAA,EACT,SAAS,GAAP;AACA,WAAO;AAAA,EACT;AACF;AAXA;AAAA;AAAA;AAAA;;;ACEe,oBAAoB,QAAQ,MAAM,OAAO;AACtD,MAAI,0BAAyB,GAAG;AAC9B,iBAAa,QAAQ;AAAA,EACvB,OAAO;AACL,iBAAa,qBAAoB,SAAQ,OAAM,QAAO;AACpD,UAAI,IAAI,CAAC,IAAI;AACb,QAAE,KAAK,MAAM,GAAG,KAAI;AACpB,UAAI,cAAc,SAAS,KAAK,MAAM,SAAQ,CAAC;AAC/C,UAAI,WAAW,IAAI,YAAY;AAC/B,UAAI;AAAO,wBAAe,UAAU,OAAM,SAAS;AACnD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO,WAAW,MAAM,MAAM,SAAS;AACzC;AAjBA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAEA,QAAI,QAAQ,OAAO,UAAU;AAE7B,WAAO,UAAU,qBAAqB,OAAO;AAC5C,UAAI,MAAM,MAAM,KAAK,KAAK;AAC1B,UAAI,SAAS,QAAQ;AACrB,UAAI,CAAC,QAAQ;AACZ,iBAAS,QAAQ,oBAChB,UAAU,QACV,OAAO,UAAU,YACjB,OAAO,MAAM,WAAW,YACxB,MAAM,UAAU,KAChB,MAAM,KAAK,MAAM,MAAM,MAAM;AAAA,MAC/B;AACA,aAAO;AAAA,IACR;AAAA;AAAA;;;AChBA;AAAA;AAAA;AAEA,QAAI;AACJ,QAAI,CAAC,OAAO,MAAM;AAEb,YAAM,OAAO,UAAU;AACvB,cAAQ,OAAO,UAAU;AACzB,eAAS;AACT,qBAAe,OAAO,UAAU;AAChC,uBAAiB,CAAC,aAAa,KAAK,EAAE,UAAU,KAAK,GAAG,UAAU;AAClE,wBAAkB,aAAa,KAAK,WAAY;AAAA,MAAC,GAAG,WAAW;AAC/D,kBAAY;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AACI,mCAA6B,SAAU,GAAG;AAC7C,YAAI,OAAO,EAAE;AACb,eAAO,QAAQ,KAAK,cAAc;AAAA,MACnC;AACI,qBAAe;AAAA,QAClB,mBAAmB;AAAA,QACnB,UAAU;AAAA,QACV,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,SAAS;AAAA,QACT,cAAc;AAAA,QACd,aAAa;AAAA,QACb,wBAAwB;AAAA,QACxB,uBAAuB;AAAA,QACvB,cAAc;AAAA,QACd,aAAa;AAAA,QACb,cAAc;AAAA,QACd,cAAc;AAAA,QACd,SAAS;AAAA,QACT,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,oBAAoB;AAAA,QACpB,SAAS;AAAA,MACV;AACI,iCAA4B,WAAY;AAE3C,YAAI,OAAO,WAAW,aAAa;AAAE,iBAAO;AAAA,QAAO;AACnD,iBAAS,KAAK,QAAQ;AACrB,cAAI;AACH,gBAAI,CAAC,aAAa,MAAM,MAAM,IAAI,KAAK,QAAQ,CAAC,KAAK,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO,UAAU;AACzG,kBAAI;AACH,2CAA2B,OAAO,EAAE;AAAA,cACrC,SAAS,GAAP;AACD,uBAAO;AAAA,cACR;AAAA,YACD;AAAA,UACD,SAAS,GAAP;AACD,mBAAO;AAAA,UACR;AAAA,QACD;AACA,eAAO;AAAA,MACR,EAAE;AACE,6CAAuC,SAAU,GAAG;AAEvD,YAAI,OAAO,WAAW,eAAe,CAAC,0BAA0B;AAC/D,iBAAO,2BAA2B,CAAC;AAAA,QACpC;AACA,YAAI;AACH,iBAAO,2BAA2B,CAAC;AAAA,QACpC,SAAS,GAAP;AACD,iBAAO;AAAA,QACR;AAAA,MACD;AAEA,iBAAW,cAAc,QAAQ;AAChC,YAAI,WAAW,WAAW,QAAQ,OAAO,WAAW;AACpD,YAAI,aAAa,MAAM,KAAK,MAAM,MAAM;AACxC,YAAI,cAAc,OAAO,MAAM;AAC/B,YAAI,WAAW,YAAY,MAAM,KAAK,MAAM,MAAM;AAClD,YAAI,UAAU,CAAC;AAEf,YAAI,CAAC,YAAY,CAAC,cAAc,CAAC,aAAa;AAC7C,gBAAM,IAAI,UAAU,oCAAoC;AAAA,QACzD;AAEA,YAAI,YAAY,mBAAmB;AACnC,YAAI,YAAY,OAAO,SAAS,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG;AAC1D,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACvC,oBAAQ,KAAK,OAAO,CAAC,CAAC;AAAA,UACvB;AAAA,QACD;AAEA,YAAI,eAAe,OAAO,SAAS,GAAG;AACrC,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACvC,oBAAQ,KAAK,OAAO,CAAC,CAAC;AAAA,UACvB;AAAA,QACD,OAAO;AACN,mBAAS,QAAQ,QAAQ;AACxB,gBAAI,CAAE,cAAa,SAAS,gBAAgB,IAAI,KAAK,QAAQ,IAAI,GAAG;AACnE,sBAAQ,KAAK,OAAO,IAAI,CAAC;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAEA,YAAI,gBAAgB;AACnB,cAAI,kBAAkB,qCAAqC,MAAM;AAEjE,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AAC1C,gBAAI,CAAE,oBAAmB,UAAU,OAAO,kBAAkB,IAAI,KAAK,QAAQ,UAAU,EAAE,GAAG;AAC3F,sBAAQ,KAAK,UAAU,EAAE;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,IACD;AAnHK;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAIA;AAyBA;AAkBA;AAsDL,WAAO,UAAU;AAAA;AAAA;;;ACzHjB;AAAA;AAAA;AAEA,QAAI,QAAQ,MAAM,UAAU;AAC5B,QAAI,SAAS;AAEb,QAAI,WAAW,OAAO;AACtB,QAAI,WAAW,WAAW,cAAc,GAAG;AAAE,aAAO,SAAS,CAAC;AAAA,IAAG,IAAI;AAErE,QAAI,eAAe,OAAO;AAE1B,aAAS,OAAO,0BAA0B;AACzC,UAAI,OAAO,MAAM;AAChB,YAAI,yBAA0B,WAAY;AAEzC,cAAI,OAAO,OAAO,KAAK,SAAS;AAChC,iBAAO,QAAQ,KAAK,WAAW,UAAU;AAAA,QAC1C,EAAE,GAAG,CAAC;AACN,YAAI,CAAC,wBAAwB;AAC5B,iBAAO,OAAO,cAAc,QAAQ;AACnC,gBAAI,OAAO,MAAM,GAAG;AACnB,qBAAO,aAAa,MAAM,KAAK,MAAM,CAAC;AAAA,YACvC;AACA,mBAAO,aAAa,MAAM;AAAA,UAC3B;AAAA,QACD;AAAA,MACD,OAAO;AACN,eAAO,OAAO;AAAA,MACf;AACA,aAAO,OAAO,QAAQ;AAAA,IACvB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC/BjB;AAAA;AAAA;AAEA,QAAI,OAAO;AACX,QAAI,aAAa,OAAO,WAAW,cAAc,OAAO,OAAO,KAAK,MAAM;AAE1E,QAAI,QAAQ,OAAO,UAAU;AAC7B,QAAI,SAAS,MAAM,UAAU;AAC7B,QAAI,qBAAqB,OAAO;AAEhC,QAAI,aAAa,SAAU,IAAI;AAC9B,aAAO,OAAO,OAAO,cAAc,MAAM,KAAK,EAAE,MAAM;AAAA,IACvD;AAEA,QAAI,kCAAkC,WAAY;AACjD,UAAI,OAAM,CAAC;AACX,UAAI;AACH,2BAAmB,MAAK,KAAK,EAAE,YAAY,OAAO,OAAO,KAAI,CAAC;AAE9D,iBAAS,KAAK,MAAK;AAClB,iBAAO;AAAA,QACR;AACA,eAAO,KAAI,MAAM;AAAA,MAClB,SAAS,GAAP;AACD,eAAO;AAAA,MACR;AAAA,IACD;AACA,QAAI,sBAAsB,sBAAsB,gCAAgC;AAEhF,QAAI,iBAAiB,SAAU,QAAQ,MAAM,OAAO,WAAW;AAC9D,UAAI,QAAQ,UAAW,EAAC,WAAW,SAAS,KAAK,CAAC,UAAU,IAAI;AAC/D;AAAA,MACD;AACA,UAAI,qBAAqB;AACxB,2BAAmB,QAAQ,MAAM;AAAA,UAChC,cAAc;AAAA,UACd,YAAY;AAAA,UACZ;AAAA,UACA,UAAU;AAAA,QACX,CAAC;AAAA,MACF,OAAO;AACN,eAAO,QAAQ;AAAA,MAChB;AAAA,IACD;AAEA,QAAI,mBAAmB,SAAU,QAAQ,KAAK;AAC7C,UAAI,aAAa,UAAU,SAAS,IAAI,UAAU,KAAK,CAAC;AACxD,UAAI,QAAQ,KAAK,GAAG;AACpB,UAAI,YAAY;AACf,gBAAQ,OAAO,KAAK,OAAO,OAAO,sBAAsB,GAAG,CAAC;AAAA,MAC7D;AACA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,uBAAe,QAAQ,MAAM,IAAI,IAAI,MAAM,KAAK,WAAW,MAAM,GAAG;AAAA,MACrE;AAAA,IACD;AAEA,qBAAiB,sBAAsB,CAAC,CAAC;AAEzC,WAAO,UAAU;AAAA;AAAA;;;ACzDjB;AAAA;AAAA;AAIA,QAAI,OAAO,SAAS,aAAa;AAChC,aAAO,UAAU;AAAA,IAClB,WAAW,OAAO,WAAW,aAAa;AACzC,aAAO,UAAU;AAAA,IAClB,OAAO;AACN,aAAO,UAAU,SAAS,aAAa,EAAE;AAAA,IAC1C;AAAA;AAAA;;;ACVA;AAAA;AAAA;AAEA,QAAI,iBAAiB;AAErB,WAAO,UAAU,uBAAuB;AACvC,UAAI,OAAO,WAAW,YAAY,CAAC,UAAU,OAAO,SAAS,QAAQ,OAAO,UAAU,OAAO;AAC5F,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA;AAAA;;;ACTA;AAAA;AAAA;AAEA,QAAI,UAAS;AACb,QAAI,cAAc;AAElB,WAAO,UAAU,sBAAsB;AACtC,UAAI,WAAW,YAAY;AAC3B,UAAI,QAAO,qBAAqB;AAC/B,YAAI,aAAa,OAAO,yBAAyB,UAAU,YAAY;AACvE,YAAI,CAAC,cAAe,WAAW,gBAAiB,YAAW,cAAc,WAAW,YAAY,eAAe,WAAY;AAC1H,iBAAO,eAAe,UAAU,cAAc;AAAA,YAC7C,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,UAAU;AAAA,UACX,CAAC;AAAA,QACF;AAAA,MACD,WAAW,OAAO,eAAe,YAAY,eAAe,UAAU;AACrE,iBAAS,aAAa;AAAA,MACvB;AACA,aAAO;AAAA,IACR;AAAA;AAAA;;;ACrBA;AAAA;AAAA;AAEA,QAAI,mBAAmB;AAEvB,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,OAAO;AAEX,QAAI,WAAW,YAAY;AAE3B,QAAI,YAAY,WAAY;AAAE,aAAO;AAAA,IAAU;AAE/C,qBAAiB,WAAW;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAED,WAAO,UAAU;AAAA;AAAA;;;ACdjB,iBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,uBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,QAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,QAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAQzf,aAAa,MAAK;AAChB,MAAI,SAAQ,QAAQ,SAAQ,QAAW;AACrC,WAAO;AAAA,EACT;AAEA,MAAI,KAAI,KAAK;AACX,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,KAAI,UAAU;AACjB,QAAI,UAAU,WAAW,UAAU,QAAQ,OAAO;AAChD,gBAAU,QAAQ,MAAM,oBAAoB;AAAA,IAC9C;AAEA,WAAO;AAAA,EACT;AAEA,MAAI,cAAc,eAAe,KAAI;AAErC,MAAI,CAAC,aAAa;AAChB,QAAI,UAAU,WAAW,UAAU,QAAQ,OAAO;AAChD,gBAAU,QAAQ,MAAM,yCAAyC,OAAO,KAAI,QAAQ,CAAC;AAAA,IACvF;AAEA,WAAO;AAAA,EACT;AAGA,MAAI,QAAQ,cAAc,CAAC,GAAG,IAAG;AAGjC,SAAO,KAAK,KAAK,EAAE,QAAQ,SAAU,SAAS;AAC5C,QAAI,MAAM,YAAY,QAAQ,MAAM,QAAQ,MAAM,YAAY,MAAM,SAAS,UAAU;AACrF,YAAM,WAAW,IAAI,MAAM,QAAQ;AAAA,IACrC;AAAA,EACF,CAAC;AAED,MAAI,UAAU,YAAY,KAAK;AAE/B,MAAI,WAAW,QAAQ,UAAU;AAC/B,YAAQ,SAAS;AAAA,EACnB;AAEA,SAAO;AACT;AAEA,kBAAkB,cAAc,aAAa;AAC3C,iBAAe,gBAAgB;AACjC;AA9DA,IAEA,mBAKI,WAEA;AATJ;AAAA;AAAA;AACA;AACA,wBAA2B;AAK3B,IAAI,YAAY,+BAAe;AAE/B,IAAI,iBAAiB;AAAA,MACnB,WAAW,qBAAqB;AAC9B,eAAO;AAAA,MACT;AAAA,IACF;AAoDA,QAAI,WAAW;AAAA;AAAA;;;ACjEA,yBAAyB,UAAU,aAAa;AAC7D,MAAI,CAAE,qBAAoB,cAAc;AACtC,UAAM,IAAI,UAAU,mCAAmC;AAAA,EACzD;AACF;AAJA;AAAA;AAAA;AAAA;;;ACAA,2BAA2B,QAAQ,OAAO;AACxC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,aAAa,MAAM;AACvB,eAAW,aAAa,WAAW,cAAc;AACjD,eAAW,eAAe;AAC1B,QAAI,WAAW;AAAY,iBAAW,WAAW;AACjD,WAAO,eAAe,QAAQ,WAAW,KAAK,UAAU;AAAA,EAC1D;AACF;AAEe,sBAAsB,aAAa,YAAY,aAAa;AACzE,MAAI;AAAY,sBAAkB,YAAY,WAAW,UAAU;AACnE,MAAI;AAAa,sBAAkB,aAAa,WAAW;AAC3D,SAAO,eAAe,aAAa,aAAa;AAAA,IAC9C,UAAU;AAAA,EACZ,CAAC;AACD,SAAO;AACT;AAjBA;AAAA;AAAA;AAAA;;;ACAe,yBAAyB,GAAG;AACzC,oBAAkB,OAAO,iBAAiB,OAAO,iBAAiB,0BAAyB,IAAG;AAC5F,WAAO,GAAE,aAAa,OAAO,eAAe,EAAC;AAAA,EAC/C;AACA,SAAO,gBAAgB,CAAC;AAC1B;AALA;AAAA;AAAA;AAAA;;;ACCe,wBAAwB,QAAQ,UAAU;AACvD,SAAO,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,QAAQ,GAAG;AAC9D,aAAS,gBAAe,MAAM;AAC9B,QAAI,WAAW;AAAM;AAAA,EACvB;AAEA,SAAO;AACT;AARA;AAAA;AAAA;AAAA;AAAA;;;ACCe,gBAAgB;AAC7B,MAAI,OAAO,YAAY,eAAe,QAAQ,KAAK;AACjD,WAAO,QAAQ;AAAA,EACjB,OAAO;AACL,WAAO,eAAc,QAAQ,UAAU,UAAU;AAC/C,UAAI,OAAO,eAAc,QAAQ,QAAQ;AACzC,UAAI,CAAC;AAAM;AACX,UAAI,OAAO,OAAO,yBAAyB,MAAM,QAAQ;AAEzD,UAAI,KAAK,KAAK;AACZ,eAAO,KAAK,IAAI,KAAK,UAAU,SAAS,IAAI,SAAS,QAAQ;AAAA,MAC/D;AAEA,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAEA,SAAO,KAAK,MAAM,MAAM,SAAS;AACnC;AAnBA;AAAA;AAAA;AAAA;AAAA;;;ACCe,mBAAmB,UAAU,YAAY;AACtD,MAAI,OAAO,eAAe,cAAc,eAAe,MAAM;AAC3D,UAAM,IAAI,UAAU,oDAAoD;AAAA,EAC1E;AAEA,WAAS,YAAY,OAAO,OAAO,cAAc,WAAW,WAAW;AAAA,IACrE,aAAa;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AAAA,EACF,CAAC;AACD,SAAO,eAAe,UAAU,aAAa;AAAA,IAC3C,UAAU;AAAA,EACZ,CAAC;AACD,MAAI;AAAY,oBAAe,UAAU,UAAU;AACrD;AAjBA;AAAA;AAAA;AAAA;AAAA;;;ACAe,gCAAgC,OAAM;AACnD,MAAI,UAAS,QAAQ;AACnB,UAAM,IAAI,eAAe,2DAA2D;AAAA,EACtF;AAEA,SAAO;AACT;AANA;AAAA;AAAA;AAAA;;;ACEe,oCAAoC,OAAM,MAAM;AAC7D,MAAI,QAAS,SAAQ,IAAI,MAAM,YAAY,OAAO,SAAS,aAAa;AACtE,WAAO;AAAA,EACT,WAAW,SAAS,QAAQ;AAC1B,UAAM,IAAI,UAAU,0DAA0D;AAAA,EAChF;AAEA,SAAO,uBAAsB,KAAI;AACnC;AAVA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDe,2BAA2B,IAAI;AAC5C,SAAO,SAAS,SAAS,KAAK,EAAE,EAAE,QAAQ,eAAe,MAAM;AACjE;AAFA;AAAA;AAAA;AAAA;;;ACIe,0BAA0B,OAAO;AAC9C,MAAI,SAAS,OAAO,QAAQ,aAAa,oBAAI,IAAI,IAAI;AAErD,qBAAmB,2BAA0B,QAAO;AAClD,QAAI,WAAU,QAAQ,CAAC,kBAAiB,MAAK;AAAG,aAAO;AAEvD,QAAI,OAAO,WAAU,YAAY;AAC/B,YAAM,IAAI,UAAU,oDAAoD;AAAA,IAC1E;AAEA,QAAI,OAAO,WAAW,aAAa;AACjC,UAAI,OAAO,IAAI,MAAK;AAAG,eAAO,OAAO,IAAI,MAAK;AAE9C,aAAO,IAAI,QAAO,OAAO;AAAA,IAC3B;AAEA,uBAAmB;AACjB,aAAO,WAAU,QAAO,WAAW,gBAAe,IAAI,EAAE,WAAW;AAAA,IACrE;AAEA,YAAQ,YAAY,OAAO,OAAO,OAAM,WAAW;AAAA,MACjD,aAAa;AAAA,QACX,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AACD,WAAO,gBAAe,SAAS,MAAK;AAAA,EACtC;AAEA,SAAO,iBAAiB,KAAK;AAC/B;AApCA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACMA,sBAAsB,SAAS;AAAE,MAAI,4BAA4B,2BAA0B;AAAG,SAAO,gCAAgC;AAAE,QAAI,QAAQ,gBAAgB,OAAO,GAAG;AAAQ,QAAI,2BAA2B;AAAE,UAAI,YAAY,gBAAgB,IAAI,EAAE;AAAa,eAAS,QAAQ,UAAU,OAAO,WAAW,SAAS;AAAA,IAAG,OAAO;AAAE,eAAS,MAAM,MAAM,MAAM,SAAS;AAAA,IAAG;AAAE,WAAO,2BAA2B,MAAM,MAAM;AAAA,EAAG;AAAG;AAExa,sCAAqC;AAAE,MAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,WAAO;AAAO,MAAI,QAAQ,UAAU;AAAM,WAAO;AAAO,MAAI,OAAO,UAAU;AAAY,WAAO;AAAM,MAAI;AAAE,YAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,CAAC,GAAG,WAAY;AAAA,IAAC,CAAC,CAAC;AAAG,WAAO;AAAA,EAAM,SAAS,GAAP;AAAY,WAAO;AAAA,EAAO;AAAE;AAXxU,IAaI;AAbJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,IAAI,iBAA8B,SAAU,QAAQ;AAClD,gBAAU,iBAAgB,MAAM;AAEhC,UAAI,SAAS,aAAa,eAAc;AAExC,iCAA0B;AACxB,wBAAgB,MAAM,eAAc;AAEpC,eAAO,OAAO,MAAM,MAAM,SAAS;AAAA,MACrC;AAEA,mBAAa,iBAAgB,CAAC;AAAA,QAC5B,KAAK;AAAA,QACL,OAAO,gBAAgB;AACrB,cAAI,QAAQ,MACR;AAEJ,mBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,iBAAK,QAAQ,UAAU;AAAA,UACzB;AAGA,cAAI,UAAU,KAAK,OAAO,SAAU,KAAK;AACvC,mBAAO,CAAC,MAAM,SAAS,GAAG;AAAA,UAC5B,CAAC;AACD,iBAAQ,SAAQ,KAAK,gBAAgB,gBAAe,SAAS,GAAG,QAAQ,IAAI,GAAG,KAAK,MAAM,OAAO,CAAC,IAAI,EAAE,OAAO,mBAAmB,OAAO,CAAC,CAAC;AAAA,QAC7I;AAAA,MACF,CAAC,CAAC;AAEF,aAAO;AAAA,IACT,EAAgB,iBAAiB,KAAK,CAAC;AAAA;AAAA;;;AC3CvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,iCAAiC;AAC/B,SAAO;AACT;AASA,gBAAgB;AAAC;AAejB,2BAA2B,MAAM,IAAI;AACnC,MAAI,gBAAgB,OAAO;AACzB,oBAAgB,QAAQ,MAAM;AAAA,EAChC;AACF;AACA,uBAAuB;AACrB,kBAAgB,IAAI,MAAM,iBAAiB,SAAS;AACtD;AACA,wBAAwB;AACtB,kBAAgB,KAAK,MAAM,iBAAiB,SAAS;AACvD;AACA,yBAAyB;AACvB,kBAAgB,MAAM,MAAM,iBAAiB,SAAS;AACxD;AACA,yBAAyB;AACvB,kBAAgB,MAAM,MAAM,iBAAiB,SAAS;AACxD;AACA,2BAA2B;AACzB,kBAAgB,KAAK,MAAM,iBAAiB,SAAS;AACvD;AAEA,2BAA2B,KAAK;AAC9B,MAAI,CAAC,eAAe,MAAM;AACxB,oBAAgB,MAAM,GAAG;AACzB,mBAAe,OAAO;AAAA,EACxB;AACF;AAgBA,uBAAuB,MAAM;AAC3B,WAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,OAAO,IAAI,OAAO,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC1G,SAAK,OAAO,KAAK,UAAU;AAAA,EAC7B;AAEA,SAAO,WAAW,aAAa,SAAS,cAAc,IAAI;AAC5D;AACA,2BAA2B,MAAM;AAC/B,MAAI;AAEJ,WAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjH,SAAK,QAAQ,KAAK,UAAU;AAAA,EAC9B;AAEA,SAAQ,QAAO,aAAa,SAAS,cAAc,KAAK,MAAM,MAAM,IAAI;AAC1E;AAIA,oBAAoB,KAAK;AACvB,SAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAClD;AACA,qBAAqB,KAAK;AACxB,SAAO,WAAW,IAAI,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG;AACvD;AACA,sBAAsB,KAAK;AACzB,SAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAClD;AAIA,iCAAiC,MAAM;AACrC,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,MAAI,QAAQ,CAAC,MAAM,MAAM,MAAM,IAAI;AACnC,MAAI,QAAQ,OAAO,IAAI;AACvB,MAAI,cAAc;AAElB,SAAO,QAAQ,WAAW;AACxB,aAAS;AACT,kBAAc,MAAM,IAAI;AAAA,EAC1B;AAEA,SAAO,GAAG,OAAO,MAAM,QAAQ,SAAS,GAAG,GAAG,EAAE,OAAO,WAAW;AACpE;AAIA,4CAA4C,GAAG;AAC7C,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,MAAI,WAAW,CAAC;AAChB,MAAI,OAAO;AAEX,SAAO,OAAO,KAAM;AAClB,aAAS,KAAK,MAAM,OAAO,OAAO,GAAI,EAAE,MAAM,EAAE,CAAC;AACjD,WAAO,KAAK,MAAM,OAAO,GAAI;AAAA,EAC/B;AAEA,MAAI,OAAO,GAAG;AACZ,aAAS,KAAK,IAAI;AAAA,EACpB;AAEA,WAAS,QAAQ;AACjB,SAAO,SAAS,KAAK,SAAS;AAChC;AAIA,oBAAoB,OAAO;AACzB,SAAO,KAAK,KAAK,EAAE,QAAQ,SAAU,KAAK;AACxC,QAAI,MAAM,QAAQ,MAAM,IAAI,GAAG;AAC7B,YAAM,OAAO,CAAC,EAAE,OAAO,MAAM,IAAI;AAAA,IACnC;AAAA,EACF,CAAC;AACH;AAKA,uBAAuB,GAAG,GAAG;AAC3B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,QAAQ,CAAC,KAAK,MAAM,QAAQ,CAAC,GAAG;AACxC,QAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,aAAO;AAAA,IACT;AAEA,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,UAAI,EAAE,OAAO,EAAE,IAAI;AACjB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGA,sBAAsB,GAAG,OAAO;AAC9B,SAAO,OAAO,KAAK,CAAC,EAAE,KAAK,SAAU,KAAK;AACxC,WAAO,EAAE,SAAS;AAAA,EACpB,CAAC;AACH;AAEA,8BAA8B,MAAM;AAClC,MAAI,QAAQ,KAAK,KAAK;AACpB,WAAO,KAAK,SAAS;AAAA,EACvB;AAEA,SAAO;AACT;AAKA,yBAAyB,IAAI;AAC3B,aAAW,IAAI,CAAC;AAClB;AAIA,eAAe;AACb,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACrF,MAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAEjF,aAAW,KAAK;AAChB,MAAI,YAAY,CAAC;AAEjB,MAAI,CAAC,OAAO,UAAU,MAAM,KAAK,GAAG;AAClC,UAAM,QAAQ,EAAE;AAAA,EAClB;AAEA,MAAI,CAAE,qBAAoB,QAAQ;AAChC,UAAM,iBAAiB,IAAI,eAAe,WAAW;AAAA,EACvD,WAAW,CAAE,OAAM,0BAA0B,iBAAiB;AAC5D,UAAM,iBAAiB,eAAe,KAAK,MAAM,cAAc;AAAA,EACjE;AAEA,eAAa,OAAO;AAClB,cAAU,SAAS;AAAA,EACrB;AAEA,cAAY,OAAO;AACjB,2BAAuB;AACrB,UAAI,KAAK;AAAA,IACX;AAEA,WAAO,OAAO,OAAO;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,CAAC,CAAC,MAAM;AAAA,EACjB;AAEA,YAAU,WAAW,SAAU,YAAY;AACzC,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,QAAI,cAAc,aAAa,UAAU,SAAS,GAAG;AACnD;AAAA,IACF;AAEA,UAAM,QAAQ,EAAE;AAChB,cAAU,QAAQ,SAAU,UAAU;AACpC,aAAO,YAAY,SAAS,SAAS;AAAA,IACvC,CAAC;AAAA,EACH;AAEA,YAAU,aAAa,SAAU,UAAU;AACzC,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD,aAAO;AAAA,IACT;AAEA,QAAI,QAAQ,UAAU;AACtB,cAAU,KAAK,QAAQ;AACvB,WAAO,GAAG,KAAK;AAAA,EACjB;AAEA,YAAU,WAAW,WAAY;AAC/B,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,MAAM,SAAU,WAAW;AACnC,QAAI,QAAQ,MAAM,eAAe;AAGjC,WAAO,SAAS;AACd,UAAI,MAAM,eAAe,WAAW,WAAW;AAC7C,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,WAAO,MAAM,eAAe,MAAM,eAAe,SAAS,IAAI;AAAA,EAChE;AAEA,YAAU,MAAM,WAAY;AAC1B,QAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAC/E,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,QAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,QAAI,MAAM;AACV,WAAO,KAAK,GAAG,EAAE,QAAQ,SAAU,MAAM;AACvC,UAAI,KAAK,aAAa,OAAO,UAAU,MAAM,OAAO,WAAW,IAAI,CAAC;AAEpE,UAAI,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG,SAAS,GAAG;AACnD,cAAM,GAAG,MAAM,QAAQ,mBAAmB,IAAI,KAAK,CAAC,KAAK;AAAA,MAC3D,WAAW,IAAI;AACb,cAAM,GAAG,IAAI,KAAK,KAAK;AAAA,MACzB,OAAO;AAEL,YAAI,CAAC,OAAO,EAAE,QAAQ,IAAI,MAAM,MAAM,CAAC,WAAW;AAChD,0BAAgB,wCAAwC,OAAO,MAAM,IAAI,EAAE,OAAO,IAAI,KAAK,CAAC;AAAA,QAC9F;AAEA,cAAM,MAAM,UAAU,IAAI,SAAS;AACnC,cAAM,QAAQ,IAAI;AAAA,MACpB;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAEA,YAAU,MAAM,WAAY;AAC1B,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,WAAK,SAAS,UAAU;AAAA,IAC1B;AAEA,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;AAAA,IACT;AAEA,QAAI,SAAS,CAAC;AACd,SAAK,QAAQ,SAAU,MAAM;AAC3B,aAAO,QAAQ,MAAM;AAAA,IACvB,CAAC;AACD,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,KAAK;AAC5C,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,SAAS,WAAY;AAC7B,WAAO,KAAK,KAAK,EAAE,QAAQ,SAAU,OAAO;AAC1C,aAAO,OAAO,MAAM;AAAA,IACtB,CAAC;AACD,cAAU,QAAQ,SAAU,IAAI,OAAO;AACrC,aAAO,IAAI,KAAK;AAAA,IAClB,CAAC;AAED,UAAM,UAAU;AAAA,EAClB;AAGA,YAAU,WAAW,WAAY;AAC/B,QAAI,MAAM,SAAS;AACjB,aAAO;AAAA,IACT;AAEA,QAAI,cAAc,eAAc,eAAc,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;AAAA,MAC5D,UAAU,UAAU,aAAa;AAAA,IACnC,CAAC;AAGD,WAAO,KAAK,WAAW,EAAE,QAAQ,SAAU,SAAS;AAClD,UAAI,YAAY,aAAa,QAAQ,YAAY,aAAa,UAAa,QAAQ,OAAO,KACxF;AACA,eAAO,YAAY;AAAA,MACrB,WAAW,YAAY,SAAS,KAAK;AACnC,oBAAY,WAAW,YAAY,SAAS,SAAS;AAAA,MACvD,WAAW,MAAM,QAAQ,YAAY,QAAQ,GAAG;AAC9C,oBAAY,WAAW,YAAY,SAAS,IAAI,oBAAoB;AAAA,MACtE;AAAA,IACF,CAAC;AAED,QAAI,YAAY,CAAC;AACjB,WAAO,KAAK,WAAW,EAAE,KAAK,EAAE,QAAQ,SAAU,MAAM;AACtD,gBAAU,QAAQ,YAAY;AAAA,IAChC,CAAC;AAED,QAAI,UAAU,OAAO;AACnB,aAAO,UAAU;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEhF,QAAI,MAAM,aAAa,MAAM,UAAU,aAAa,GAAG;AACrD,YAAM,IAAI,MAAM,sBAAsB,OAAO,MAAM,aAAa,GAAG,QAAQ,EAAE,OAAO,UAAU,aAAa,CAAC,CAAC;AAAA,IAC/G;AAEA,QAAI,aAAa,MAAM,IAAI;AAC3B,QAAI,UAAU,OAAO,KAAK,KAAK,EAAE,KAAK;AACtC,QAAI,eAAe,OAAO,KAAK,UAAU,EAAE,KAAK;AAChD,iBAAa,QAAQ,SAAU,KAAK;AAClC,UAAI,SAAS,QAAQ,QAAQ,GAAG;AAEhC,UAAI,WAAW,IAAI;AACjB,YAAI,OAAO;AACT,wBAAc,OAAO,OAAO,KAAK,iBAAiB,CAAC;AAAA,QACrD;AAAA,MACF,OAAO;AACL,gBAAQ,OAAO,QAAQ,CAAC;AAAA,MAC1B;AAEA,YAAM,OAAO,WAAW;AAAA,IAC1B,CAAC;AAED,QAAI,QAAQ,UAAU,OAAO;AAC3B,oBAAc,mBAAmB,OAAO,QAAQ,KAAK,IAAI,CAAC,CAAC;AAAA,IAC7D;AAEA,cAAU,SAAS;AAAA,EACrB;AAIA,YAAU,SAAS,wBAAwB;AACzC,WAAO,UAAU,SAAS;AAAA,EAC5B;AAGA,SAAO;AACT;AAIA,aAAa,WAAW,OAAO,YAAY;AACzC,aAAW,QAAQ,SAAU,OAAO;AAClC,QAAI,QAAQ,KAAK,MAAM,UAAU;AAC/B,gBAAU,MAAM,OAAO,YAAY,MAAM,IAAI,CAAC,KAAK,WAAY;AAC7D,eAAO,MAAM,MAAM;AAAA,MACrB;AAAA,IACF,OAAO;AACL,gBAAU,MAAM,OAAO,YAAY,KAAK,CAAC,KAAK,WAAY;AACxD,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAAA,EACF,CAAC;AACH;AA6CA,oBAAoB,OAAO;AACzB,MAAI,QAAQ,KAAK,MAAM,UAAU;AAC/B,QAAI,KAAK,gBAAgB,MAAM;AAE/B,QAAI,IAAI;AACN,aAAO,SAAU,WAAW,OAAO;AACjC,eAAO,GAAG,WAAW,OAAO,KAAK;AAAA,MACnC;AAAA,IACF;AAEA,kBAAc,uBAAuB,OAAO,KAAK,CAAC;AAClD,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAC3C;AAEA,SAAO,mBAAmB,WAAW,OAAO;AAC1C,WAAO,gBAAgB,OAAO;AAC5B,UAAI,MAAM,SAAS;AACjB,sBAAc,2CAA2C;AACzD,eAAO;AAAA,MACT;AAEA,UAAI,MAAM,WAAW,OAAO;AAC1B,cAAM,SAAS;AACf,kBAAU,SAAS;AACnB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,aAAa,WAAW,OAAO,QAAQ;AACrC,SAAO,QAAQ,SAAU,OAAO;AAC9B,QAAI,QAAQ,KAAK,MAAM,UAAU;AAC/B,gBAAU,MAAM,OAAO,YAAY,MAAM,IAAI,CAAC,KAAK,WAAW,KAAK,EAAE,WAAW,KAAK;AAAA,IACvF,OAAO;AACL,gBAAU,MAAM,OAAO,YAAY,KAAK,CAAC,KAAK,WAAW,KAAK,EAAE,WAAW,KAAK;AAAA,IAClF;AAAA,EACF,CAAC;AACH;AAIA,gBAAgB,WAAW,OAAO,YAAY;AAC5C,MAAI,WAAW,OAAO,UAAU;AAChC,MAAI,WAAW,OAAO,UAAU;AAClC;AAKA,kBAAkB,WAAW,OAAO,YAAY;AAC9C,aAAW,QAAQ,SAAU,OAAO;AAClC,cAAU,MAAM,OAAO,YAAY,KAAK,CAAC,KAAK,WAAY;AACxD,aAAO,MAAM,SAAS,CAAC,EAAE,OAAO,MAAM,MAAM,IAAI,MAAM;AAAA,IACxD;AAEA,cAAU,MAAM,OAAO,YAAY,KAAK,GAAG,aAAa,KAAK,WAAY;AACvE,aAAO,MAAM;AAAA,IACf;AAAA,EACF,CAAC;AACH;AAMA,kBAAkB,WAAW,OAAO,YAAY,MAAM;AACpD,MAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,aAAW,QAAQ,SAAU,OAAO;AAClC,QAAI,MAAM,UAAU,QAAQ,MAAM,OAAO,WAAW,MAAM;AACxD,YAAM,IAAI,WAAW,+CAA+C,OAAO,OAAO,GAAG,CAAC;AAAA,IACxF;AAEA,cAAU,MAAM,OAAO,YAAY,KAAK,CAAC,KAAK,WAAY;AACxD,UAAI,MAAM,SAAS;AACjB,sBAAc,2CAA2C;AACzD,eAAO;AAAA,MACT;AAEA,eAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,aAAK,SAAS,UAAU;AAAA,MAC1B;AAEA,UAAI,QAAQ;AACZ,UAAI;AACJ,UAAI,WAAW;AAEf,UAAI,MAAM,WAAW,KAAM,OAAM,MAAM,QAAQ,MAAM,GAAG,UAAU,IAAI;AAEpE,gBAAQ,MAAM;AAGd,mBAAW;AAAA,MACb;AAEA,UAAI,SAAS,MAAM;AACjB,yBAAiB,MAAM,WAAW;AAAA,MACpC,OAAO;AACL,YAAI,QAAQ,MAAM,WAAW,MAAM;AACjC,cAAI,MAAM,SAAS,QAAQ,eAAe,QAAW;AACnD,oBAAQ,MAAM,KAAK,KAAK;AACxB,uBAAW;AAEX,mBAAO,MAAM,SAAS,MAAM;AAC1B,oBAAM,KAAK,UAAU;AAAA,YACvB;AAAA,UACF,OAAO;AACL,kBAAM,IAAI,WAAW,8CAA8C,OAAO,OAAO,GAAG,CAAC;AAAA,UACvF;AAAA,QACF;AAEA,yBAAiB,MAAM,UAAU,QAAQ,MAAM,OAAO,KAAK,SAAU,MAAM,OAAO;AAChF,iBAAO,SAAS,MAAM;AAAA,QACxB,CAAC,KAAK,MAAM,OAAO,WAAW,MAAM;AAEpC,YAAI,kBAAkB,UAAU;AAC9B,kBAAQ,MAAM,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF;AAEA,UAAI,gBAAgB;AAClB,cAAM,SAAS;AACf,kBAAU,SAAS;AAAA,MACrB;AAEA,aAAO;AAAA,IACT;AAEA,cAAU,MAAM,OAAO,YAAY,KAAK,GAAG,MAAM,KAAK,SAAU,YAAY;AAC1E,UAAI,SAAS,MAAM;AACnB,iBAAW,QAAQ,SAAU,GAAG,GAAG;AACjC,eAAO,KAAK;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;AAIA,qBAAqB,WAAW,OAAO,YAAY,MAAM;AACvD,MAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,WAAS,WAAW,OAAO,UAAU;AACrC,WAAS,WAAW,OAAO,YAAY,MAAM,UAAU;AACzD;AACA,yBAAyB,WAAW,OAAO,YAAY;AACrD,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,QAAI,YAAY,WAAW;AAE3B,QAAI,MAAM,eAAe,QAAW;AAClC,YAAM,IAAI,OAAO,SAAS,KAAK,MAAM;AACrC,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AACF;AAIA,cAAc,WAAW,OAAO,gBAAgB,iBAAiB;AAC/D,MAAI,MAAM,WAAW;AACnB,UAAM,YAAY,MAAM,UAAU,IAAI,GAAG;AAAA,EAC3C,OAAO;AACL,UAAM,YAAY,CAAC;AAAA,EACrB;AAEA,MAAI,MAAM,iBAAiB;AACzB,UAAM,kBAAkB,MAAM,gBAAgB,IAAI,GAAG;AAAA,EACvD,OAAO;AACL,UAAM,kBAAkB,CAAC;AAAA,EAC3B;AAEA,MAAI,MAAM,QAAQ;AAChB,UAAM,SAAS,MAAM,OAAO,IAAI,GAAG;AAAA,EACrC,OAAO;AACL,UAAM,SAAS,CAAC;AAAA,EAClB;AAEA,MAAI,MAAM,qBAAqB;AAC7B,UAAM,sBAAsB,MAAM,oBAAoB,IAAI,GAAG;AAAA,EAC/D,OAAO;AACL,UAAM,sBAAsB,CAAC;AAAA,EAC/B;AAGA,QAAM,iBAAiB;AAEvB,wBAAsB,SAAS;AAC7B,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,gBAAgB;AAChC,oBAAc,aAAa,OAAO,UAAU,aAAa,GAAG,YAAY,EAAE,OAAO,MAAM,gBAAgB,2DAA2D,CAAC;AACnK;AAAA,IACF;AAEA,QAAI,MAAM,UAAU,UAAU,WAAW,MAAM,gBAAgB,OAAO;AACpE,YAAM,UAAU,QAAQ;AACxB,YAAM,gBAAgB,QAAQ;AAE9B,UAAI,UAAU,UAAU;AACtB,kBAAU,SAAS;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AAEA,0BAAwB;AACtB,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,QAAI,MAAM,gBAAgB,OAAO;AAC/B,YAAM,UAAU,QAAQ,MAAM,gBAAgB,MAAM;AAAA,IACtD;AAEA,WAAO,MAAM,UAAU;AAAA,EACzB;AAEA,8BAA4B,YAAY;AACtC,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,gBAAgB;AAChC,UAAI,MAAM,aAAa,OAAO,UAAU,aAAa,GAAG,YAAY;AACpE,aAAO,GAAG,OAAO,MAAM,cAAc;AACrC,aAAO;AACP,oBAAc,GAAG;AACjB;AAAA,IACF;AAEA,UAAM,UAAU,QAAQ;AACxB,UAAM,gBAAgB,QAAQ;AAAA,EAChC;AAEA,gCAA8B;AAC5B,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,WAAO,MAAM,gBAAgB;AAAA,EAC/B;AAEA,2BAAyB;AACvB,QAAI,aAAa,MAAM;AAEvB,WAAO,cAAc,CAAC,MAAM,UAAU,aAAa,MAAM,CAAC,MAAM,gBAAgB,aAAa,IAAI;AAC/F;AAAA,IACF;AAEA,QAAI,eAAe,MAAM,gBAAgB;AACvC,YAAM;AAAA,IACR;AAEA,WAAO;AAAA,EACT;AAEA,8BAA4B,YAAY;AACtC,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,uBAAmB,YAAY,cAAc,CAAC;AAAA,EAChD;AAEA,wBAAsB,SAAS;AAC7B,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,iBAAa,SAAS,cAAc,CAAC;AAAA,EACvC;AAEA,2BAAyB;AACvB,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD,aAAO;AAAA,IACT;AAEA,QAAI,UAAU,aAAa,GAAG;AAC5B,gBAAU,OAAO;AAAA,IACnB;AAEA,WAAO,MAAM,OAAO;AAAA,EACtB;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,aAAa,UAAU,SAAS;AACpC,QAAI,iBAAiB;AACrB,QAAI,SAAQ;AAEZ,WAAO,UAAS;AACd,UAAI,CAAC,MAAM,OAAO,WAAU,MAAM,OAAO,QAAO,UAAU,GAAG;AAC3D,eAAO;AAAA,MACT;AAEA,UAAI,KAAK,MAAM,OAAO,QAAO,SAAS;AAEtC,UAAI,KAAK,YAAY;AACnB,eAAO;AAAA,MACT;AAEA,UAAI,KAAK,gBAAgB;AACvB,yBAAiB;AAAA,MACnB;AAAA,IACF;AAEA,aAAQ,MAAM;AAEd,WAAO,UAAS;AACd,UAAI,uBAAuB;AAE3B,UAAK,yBAAwB,MAAM,gBAAgB,aAAY,QAAQ,0BAA0B,UAAU,sBAAsB,OAAO,aAAa,KAAO,0BAAwB,UAAU,aAAa,MAAK,OAAO,QAAQ,0BAA0B,SAAS,SAAS,sBAAsB,SAAS,KAAK,gBAAgB;AAC7T,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,2BAAyB;AACvB,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,QAAI,mBAAmB,6BAA4B;AACjD,aAAO,cAAc,IAAI;AAAA,IAC3B;AAGA,qBAAiB,SAAS;AAC1B,WAAO;AAAA,EACT;AAGA,MAAI,MAAM,gBAAgB;AAExB,QAAI,QAAQ,MAAM;AAElB,WAAO,SAAS;AACd,YAAM,UAAU,KAAK,IAAI;AACzB,YAAM,gBAAgB,KAAK,IAAI;AAAA,IACjC;AAGA,cAAU,eAAe;AACzB,cAAU,qBAAqB;AAC/B,cAAU,eAAe;AACzB,cAAU,qBAAqB;AAC/B,cAAU,eAAe;AACzB,cAAU,qBAAqB;AAAA,EACjC;AAEA,MAAI,iBAAiB;AACnB,cAAU,gBAAgB;AAC1B,cAAU,gBAAgB;AAAA,EAC5B;AAEA,YAAU,SAAS,WAAY;AAC7B,QAAI,MAAM,CAAC;AAEX,QAAI,MAAM,gBAAgB;AACxB,UAAI,SAAS;AAEb,aAAO,SAAS,MAAM,gBAAgB;AACpC,YAAI,UAAU,UAAU,aAAa,MAAM;AAC3C;AAAA,MACF;AAAA,IACF;AAEA,QAAI,UAAU,aAAa,KAAK,UAAU,aAAa;AACrD,gBAAU,YAAY,KAAK,MAAM,MAAM;AAAA,IACzC;AAAA,EACF;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,yBAAyB,WAAY;AAC7C,WAAO,mBAAmB,MAAM,OAAO;AAAA,EACzC;AAEA,YAAU,yBAAyB,SAAU,WAAW;AACtD,QAAI,YAAY,MAAM,oBAAoB;AAC1C,QAAI,KAAK,MAAM,UAAU;AAEzB,QAAI,aAAa,IAAI;AACnB,aAAO,GAAG,MAAM,OAAO,UAAU,gBAAgB,GAAG,EAAE,SAAS,UAAU,SAAS;AAAA,IACpF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,yBAAyB,SAAU,WAAW,WAAW,kBAAkB;AACnF,QAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAExF,WAAO,MAAM,oBAAoB,SAAS,WAAW;AACnD,YAAM,oBAAoB,KAAK,IAAI;AAAA,IACrC;AAEA,UAAM,oBAAoB,aAAa;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAKA,eAAe,WAAW,OAAO,WAAW;AAC1C,MAAI,YAAY,CAAC;AACjB,MAAI,iBAAiB,UAAU;AAC/B,MAAI,gBAAgB;AAEpB,eAAa,YAAY;AACvB,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,UAAI,eAAe,eAAe,UAAU,IAAI,CAAC,GAC7C,OAAO,aAAa;AAExB,UAAI,SAAS,YAAY;AACvB,kBAAU,OAAO,GAAG,CAAC;AACrB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,cAAY,YAAY;AACtB,2BAAuB;AACrB,UAAI,UAAU;AAAA,IAChB;AAEA,WAAO,OAAO,OAAO;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,oBAAkB;AAChB,QAAI,aAAa;AAEjB,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD;AAAA,IACF;AAMA,QAAI,mBAAmB,UAAU,MAAM;AAEvC,QAAI,QAAQ,gBAAe,QAAO;AAChC,UAAI,wBAAwB,eAAe,iBAAiB,SAAQ,CAAC,GACjE,KAAK,sBAAsB,IAC3B,WAAW,sBAAsB;AAErC,UAAI,CAAC,IAAI;AACP,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,GAAG;AAChB,mBAAW,WAAY;AACrB,iBAAO,GAAG,MAAM,WAAW,UAAU;AAAA,QACvC,GAAG,IAAI,QAAQ;AAAA,MACjB,OAAO;AAEL,YAAI,eAAe,GAAG,MAAM,WAAW,UAAU;AAEjD,YAAI,iBAAiB,aAAa;AAChC,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAEA,aAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,EAAE,OAAO;AAC5D,UAAI,OAAO,MAAM,KAAK;AAEtB,UAAI,SAAS;AAAY;AACzB,UAAI,SAAS;AAAS;AAAA,IACxB;AAAA,EAGF;AAEA,YAAU,SAAS,OAAO,YAAY,SAAS,CAAC,KAAK;AAErD,YAAU,KAAK,OAAO,YAAY,SAAS,CAAC,KAAK,SAAU,UAAU;AACnE,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEnF,QAAI,CAAC,SAAS,OAAO;AACnB,cAAQ,MAAM,8BAA8B,OAAO,SAAS,CAAC;AAC7D,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,SAAS;AACjB,oBAAc,2CAA2C;AACzD,aAAO;AAAA,IACT;AAEA,QAAI,aAAa;AACjB,cAAU,KAAK,CAAC,YAAY,UAAU,QAAQ,CAAC;AAC/C,cAAU,KAAK,SAAU,KAAK,KAAK;AACjC,aAAO,IAAI,KAAK,IAAI;AAAA,IACtB,CAAC;AACD,WAAO,GAAG,UAAU;AAAA,EACtB;AAEA,YAAU,SAAS,WAAY;AAC7B,mBAAe;AACf,cAAU,QAAQ,SAAU,OAAO;AACjC,UAAI,QAAQ,eAAe,OAAO,CAAC,GAC/B,OAAO,MAAM;AAEjB,aAAO,IAAI,IAAI;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAIA,qBAAqB,UAAQ,WAAW;AACtC,MAAI,cAAc,wBAAuB;AACvC,QAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,QAAI,QAAQ,CAAC;AACb,QAAI,YAAY,CAAC;AACjB,aAAO,WAAW,OAAO,aAAa;AACtC,WAAO,OAAO,OAAO,SAAS;AAAA,EAChC;AAGA,MAAI,WAAW;AACb,QAAI,SAAS,WAAW,WAAW;AAAA,EACrC;AAEA,SAAO;AACT;AAIA,iBAAiB;AACf,WAAS,QAAQ,UAAU,QAAQ,KAAK,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC3F,OAAG,SAAS,UAAU;AAAA,EACxB;AAEA,SAAO,WAAY;AACjB,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,WAAK,SAAS,UAAU;AAAA,IAC1B;AAEA,WAAO,GAAG,OAAO,SAAU,GAAG;AAC5B,aAAO,CAAC,CAAC;AAAA,IACX,CAAC,EAAE,IAAI,SAAU,GAAG;AAClB,aAAO,EAAE,MAAM,QAAQ,IAAI;AAAA,IAC7B,CAAC;AAAA,EACH;AACF;AAIA,qBAAqB,UAAU;AAC7B,SAAO,YAAY,SAAS,OAAO,SAAS,IAAI,WAAW;AAC7D;AACA,8BAA8B,UAAU,iBAAiB;AACvD,MAAI,cAAc,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACvF,MAAI,mBAAmB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAE5F,MAAI,YAAY,QAAQ,GAAG;AACzB,QAAI,iBAAiB,QAAQ,QAAQ,KAAK,GAAG;AAE3C,aAAO;AAAA,IACT;AAEA,qBAAiB,KAAK,QAAQ;AAC9B,QAAI,SAAS,gBAAgB,QAAQ;AAErC,QAAI,WAAW,QAAW;AACxB,kBAAY,KAAK,MAAM;AAAA,IACzB;AAGA,QAAI,QAAQ,SAAS,IAAI;AACzB,WAAO,KAAK,KAAK,EAAE,QAAQ,SAAU,KAAK;AACxC,UAAI,WAAW,MAAM;AAErB,UAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,iBAAS,QAAQ,SAAU,QAAQ;AACjC,+BAAqB,QAAQ,iBAAiB,aAAa,gBAAgB;AAAA,QAC7E,CAAC;AAAA,MACH,OAAO;AACL,6BAAqB,UAAU,iBAAiB,aAAa,gBAAgB;AAAA,MAC/E;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO;AACT;AAMA,kBAAkB,MAAM,MAAM,WAAW;AACvC,MAAI,QAAQ;AAEZ,MAAI;AAEJ,MAAI,YAAY,sBAAqB;AACnC,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,WAAK,SAAS,UAAU;AAAA,IAC1B;AAEA,QAAI,UAAU;AAEd,QAAI,QAAQ,kBAAiB;AAC3B,gBAAU;AAEV,UAAI,CAAC,WAAW;AACd,aAAK,MAAM,SAAS,IAAI;AAAA,MAC1B;AAAA,IACF;AAEA,QAAI,UAAU,aAAa,CAAC;AAC5B,iBAAa,OAAO;AACpB,cAAU,WAAW,OAAO,IAAI;AAEhC,QAAI,SAAS;AACX,WAAK,MAAM,SAAS,IAAI;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,SAAS,WAAY;AAC7B,WAAO,aAAa,OAAO;AAAA,EAC7B;AAEA,SAAO;AACT;AAIA,kBAAkB,UAAU,OAAO;AACjC,MAAI,cAAc;AAClB,MAAI,YAAY;AAEhB,kBAAgB;AACd,kBAAc;AAEd,QAAI,cAAc,MAAM;AACtB,cAAQ,MAAM,QAAQ,mBAAmB,SAAS,CAAC;AAEnD,kBAAY;AAAA,IACd;AAAA,EACF;AAEA,qBAAmB;AACjB,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,WAAK,SAAS,UAAU;AAAA,IAC1B;AAEA,QAAI,aAAa;AACf,kBAAY;AACZ;AAAA,IACF;AAEA,kBAAc;AACd,aAAS,MAAM,QAAQ,IAAI;AAC3B,eAAW,MAAM,KAAK;AAAA,EACxB;AAEA,SAAO;AACT;AAaA,kBAAkB,WAAW,OAAO;AAClC,MAAI,kBAAkB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAC3F,QAAM,WAAW,OAAO,OAAO,MAAM,YAAY,CAAC,GAAG,eAAe;AAEpE,YAAU,SAAS,SAAU,KAAK,OAAO;AACvC,UAAM,SAAS,OAAO;AAAA,EACxB;AAEA,YAAU,SAAS,SAAU,KAAK;AAChC,WAAO,MAAM,SAAS;AAAA,EACxB;AAEA,YAAU,aAAa,WAAY;AACjC,WAAO,OAAO,KAAK,MAAM,QAAQ;AAAA,EACnC;AAEA,YAAU,YAAY,SAAU,KAAK;AACnC,WAAO,OAAO,MAAM,SAAS;AAAA,EAC/B;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO,UAAU,WAAW,EAAE,QAAQ,SAAU,KAAK;AACnD,aAAO,OAAO,MAAM,SAAS;AAAA,IAC/B,CAAC;AAAA,EACH;AACF;AAeA,eAAe,WAAW,OAAO;AAE/B,WAAS,WAAW,KAAK;AACzB,MAAI,eAAe,UAAU;AAE7B,QAAM,UAAU,GAAG,OAAO,aAAa;AAEvC,QAAM,KAAK,KAAK,MAAM,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC,CAAC;AAEpD,MAAI,WAAW,OAAO,CAAC,WAAW,cAAc,WAAW,CAAC;AAC5D,SAAO,WAAW,OAAO,CAAC,cAAc,CAAC;AAEzC,MAAI,cAAc,CAAC;AACnB,MAAI,qBAAqB,CAAC;AAE1B,8BAA4B,iBAAiB,kBAAkB;AAC7D,QAAI,CAAC,mBAAmB,mBAAmB;AACzC,yBAAmB,oBAAoB,CAAC;AAAA,IAC1C;AAEA,QAAI,gBAAgB,mBAAmB;AAEvC,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,oBAAc,KAAK,gBAAgB,GAAG,IAAI;AAC1C,kBAAY,gBAAgB,GAAG,QAAQ,gBAAgB;AAEvD,UAAI,gBAAgB,GAAG,YAAY,gBAAgB,GAAG,SAAS,QAAQ;AACrE,2BAAmB,gBAAgB,GAAG,UAAU,gBAAgB,GAAG,IAAI;AAAA,MACzE;AAAA,IACF;AAAA,EACF;AAEA,qBAAmB,MAAM,IAAI,eAAe;AAE5C,YAAU,WAAW,SAAU,IAAI;AACjC,UAAM,KAAK,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC,CAAC,CAAC;AAE9C,WAAO,KAAK,WAAW,EAAE,QAAQ,SAAU,GAAG;AAC5C,aAAO,OAAO,YAAY;AAAA,IAC5B,CAAC;AACD,WAAO,KAAK,kBAAkB,EAAE,QAAQ,SAAU,GAAG;AACnD,aAAO,OAAO,mBAAmB;AAAA,IACnC,CAAC;AACD,uBAAmB,MAAM,IAAI,eAAe;AAC5C,cAAU,SAAS;AAAA,EACrB;AAEA,iCAA+B;AAC7B,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,WAAO,mBAAmB;AAAA,EAC5B;AAEA,YAAU,sBAAsB,SAAU,cAAc,QAAQ;AAC9D,QAAI,OAAO,YAAY;AAEvB,QAAI,MAAM;AACR,aAAO,OAAO,MAAM,MAAM;AAAA,IAC5B,OAAO;AACL,kBAAY,gBAAgB,eAAc,CAAC,GAAG,MAAM;AAAA,IACtD;AAAA,EACF;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,MAAM,cAAc;AACtB,UAAI,kBAAkB,YAAY,OAAO,YAAY,UAAU,cAAc,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC;AAE5F,UAAI,MAAM,aAAa,kBAAkB;AACvC,cAAM,aAAa,iBAAiB,SAAS;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AAGA,QAAM,0BAA0B,CAAC;AAEjC,YAAU,4BAA4B,SAAU,WAAW,MAAM;AAC/D,QAAI,CAAE,SAAQ,MAAM,0BAA0B;AAC5C,YAAM,wBAAwB,QAAQ,CAAC;AAAA,IACzC;AAEA,UAAM,wBAAwB,MAAM,KAAK,SAAS;AAAA,EACpD;AAEA,YAAU,kBAAkB,SAAU,MAAM;AAC1C,QAAI,cAAc,MAAM,wBAAwB,SAAS,CAAC;AAE1D,WAAO,YAAY,QAAQ;AACzB,kBAAY,IAAI,EAAE,OAAO,SAAS;AAAA,IACpC;AAAA,EACF;AAEA,QAAM,kBAAkB,CAAC;AAEzB,YAAU,kBAAkB,SAAU,IAAI;AACxC,QAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAErF,QAAI,MAAM,gBAAgB,KAAK;AAC7B,aAAO,MAAM,gBAAgB;AAAA,IAC/B;AAEA,QAAI,QAAQ;AACZ,QAAI,QAAQ,CAAC;AACb,QAAI,QAAQ;AACZ,QAAI,mBAAmB;AAEvB,oBAAgB,QAAQ;AACtB,UAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEhF,UAAI,kBAAkB;AACpB,eAAO;AAAA,MACT;AAEA,UAAI,aAAa,CAAC;AAClB,UAAI,aAAa;AACjB,cAAQ,MAAM;AAEd,aAAO,SAAS;AACd,YAAI,OAAO,MAAM;AAEjB,YAAI,KAAK,aAAa,QAAQ;AAC5B,uBAAa;AAAA,QACf,OAAO;AACL,qBAAW,KAAK,IAAI;AAAA,QACtB;AAAA,MACF;AAEA,UAAI,CAAC,YAAY;AACf,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,WAAW,SAAS,MAAM,OAAO,YAAY,WAAW,YAAY,CAAC,GAAG;AAEvF,UAAI,CAAC,cAAc,UAAU,KAAK,KAAK,OAAO;AAC5C,gBAAQ;AACR,2BAAmB;AAEnB,eAAO,WAAW,QAAQ;AACxB,cAAI,eAAe,WAAW,IAAI;AAClC,uBAAa,SAAS,IAAI,gBAAgB,CAAC,GAAG,aAAa,cAAc,KAAK,CAAC;AAAA,QACjF;AAEA,2BAAmB;AAAA,MACrB;AAEA,UAAI,MAAM,gBAAgB,IAAI,YAAY;AACxC,cAAM,gBAAgB,IAAI,QAAQ;AAAA,MACpC;AAEA,aAAO;AAAA,IACT;AAEA,oBAAgB,UAAU,cAAc;AACtC,UAAI,gBAAgB,CAAC;AACrB,cAAQ,MAAM;AAEd,aAAO,SAAS;AACd,YAAI,OAAO,MAAM;AAEjB,YAAI,KAAK,aAAa,YAAa,MAAK,iBAAiB,gBAAgB,iBAAiB,SAAY;AACpG,eAAK,aAAa,YAAY;AAC9B,wBAAc,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF;AAEA,aAAO,cAAc,QAAQ;AAC3B,cAAM,OAAO,cAAc,IAAI,GAAG,CAAC;AAAA,MACrC;AAAA,IACF;AAEA,kBAAc,UAAU,cAAc;AACpC,UAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,UAAI,eAAe,SAAS,WAAW,MAAM;AAC7C,UAAI,QAAQ,MAAM;AAClB,YAAM,KAAK;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAED,UAAI,UAAU;AACZ,YAAI,MAAM,gBAAgB,IAAI,cAAc,MAAM,gBAAgB,IAAI,UAAU,QAAW;AACzF,mBAAS,IAAI,gBAAgB,CAAC,GAAG,cAAc,MAAM,gBAAgB,IAAI,KAAK,CAAC;AAAA,QACjF,WAAW,OAAO;AAChB,iBAAO,MAAM,UAAU,IAAI;AAAA,QAC7B;AAAA,MACF;AAEA,aAAO;AAAA,QACL,aAAa,wBAAuB;AAClC,iBAAO,OAAO,UAAU,YAAY;AAAA,QACtC;AAAA,MACF;AAAA,IACF;AAEA,2BAAuB;AACrB,aAAO,MAAM,QAAQ;AACnB,cAAM,IAAI,EAAE,aAAa,YAAY;AAAA,MACvC;AAAA,IACF;AAEA,QAAI,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,gBAAgB,MAAM;AAC5B,WAAO;AAAA,EACT;AAGA,2BAAyB;AACvB,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,QAAI,SAAS,CAAC;AACd,QAAI,KAAK,MAAM;AACf,QAAI,gBAAgB,oBAAoB,SAAS,KAAK,CAAC;AAEvD,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,UAAI,OAAO,cAAc;AACzB,UAAI,SAAS,UAAU,MAAM,OAAO,YAAY,IAAI,CAAC;AACrD,UAAI,QAAQ,SAAS,OAAO,IAAI;AAChC,UAAI,OAAO;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,UAAI,WAAW,cAAc,IAAI;AAEjC,UAAI,SAAS,QAAQ;AACnB,aAAK,WAAW;AAAA,MAClB;AAEA,aAAO,KAAK,IAAI;AAAA,IAClB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,cAAc,EAAE,IAAI,SAAU,GAAG;AACtC,aAAO,EAAE;AAAA,IACX,CAAC;AAAA,EACH;AAEA,YAAU,oBAAoB,SAAU,MAAM;AAC5C,WAAO,cAAc,EAAE,KAAK,SAAU,GAAG;AACvC,aAAO,EAAE,SAAS;AAAA,IACpB,CAAC;AAAA,EACH;AAEA,YAAU,0BAA0B,SAAU,MAAM;AAClD,WAAQ,aAAY,SAAS,CAAC,GAAG;AAAA,EACnC;AAGA,YAAU,kBAAkB,WAAY;AACtC,WAAO;AAAA,MACL,IAAI,MAAM;AAAA,MACV,MAAM,MAAM;AAAA,MACZ,IAAI,MAAM;AAAA,MACV,YAAY,cAAc;AAAA,IAC5B;AAAA,EACF;AAGA,YAAU,SAAS,WAAY;AAC7B,QAAI,OAAO,OAAO,KAAK,MAAM,eAAe;AAC5C,QAAI,QAAQ,KAAK;AAEjB,WAAO,SAAS;AACd,YAAM,gBAAgB,KAAK,QAAQ,YAAY;AAAA,IACjD;AAEA,WAAO,KAAK,MAAM,uBAAuB,EAAE,QAAQ,UAAU,eAAe;AAC5E,iBAAa;AAAA,EACf;AAGA,YAAU,WAAW,WAAY;AAC/B,WAAO;AAAA,EACT;AAEA,2BAAyB;AAEvB,QAAI,MAAM,OAAO;AACf,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,YAAI,iBAAiB,MAAM,MAAM,IAC7B,OAAO,eAAe,MACtB,WAAW,eAAe,UAC1B,aAAa,eAAe,YAC5B,eAAe,eAAe,cAC9B,OAAO,eAAe;AAE1B,YAAI,SAAS,eAAe;AAC1B,cAAI,QAAQ,MAAM,aAAa,gBAAgB,MAAM,UAAU;AAC/D,oBAAU,0BAA0B,OAAO,aAAa;AACxD,gBAAM,KAAK,WAAW,UAAU,YAAY;AAAA,QAC9C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,kBAAgB,aAAa;AAC/B;AAWA,8BAA8B,WAAW,OAAO,KAAK;AACnD,MAAI,eAAe,UAAU;AAC7B,MAAI,gBAAgB,CAAC;AACrB,MAAI,gBAAgB,OAAO,KAAK,GAAG;AACnC,MAAI,QAAQ,cAAc;AAE1B,SAAO,SAAS;AACd,QAAI,eAAe,cAAc;AACjC,QAAI,oBAAoB,IAAI,eACxB,WAAW,kBAAkB,UAC7B,WAAW,kBAAkB,UAC7B,wBAAwB,kBAAkB,UAC1C,WAAW,0BAA0B,SAAS,OAAO;AAEzD,QAAI,YAAY,YAAY,QAAQ;AAEpC,QAAI,YAAY,YAAY,YAAY;AAExC,cAAU,MAAM,OAAO,SAAS,KAAK,MAAM,UAAU,MAAM,OAAO,SAAS;AAC3E,cAAU,MAAM,OAAO,SAAS,KAAK,MAAM,UAAU,MAAM,OAAO,SAAS;AAE3E,QAAI,UAAU;AACZ,oBAAc,KAAK,MAAM,UAAU,WAAW,UAAU,QAAQ,CAAC;AAAA,IACnE;AAAA,EACF;AAEA,YAAU,SAAS,WAAY;AAC7B,WAAO,cAAc,QAAQ;AAC3B,oBAAc,IAAI,EAAE,YAAY;AAAA,IAClC;AAEA,iBAAa;AAAA,EACf;AACF;AAoBA,4BAA4B,WAAW,OAAO;AAC5C,MAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACjF,MAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACpF,QAAM,OAAO;AAEb,sBAAoB,KAAK;AACvB,QAAI,aAAY,OAAO,KAAK,GAAG;AAC/B,QAAI,SAAQ,WAAU;AAEtB,WAAO,UAAS;AACd,UAAI,WAAW,WAAU;AACzB,YAAM,UAAU,IAAI,IAAI,SAAS;AAAA,IACnC;AAAA,EACF;AAEA,MAAI,YAAY,OAAO,KAAK,QAAQ;AACpC,MAAI,QAAQ,UAAU;AAEtB,MAAI,SAAS,mBAAkB;AAE7B,QAAI,MAAM,UAAU;AACpB,UAAM,OAAO,SAAS;AAEtB,QAAI,UAAU,MAAM;AAEpB,cAAU,MAAM,OAAO,YAAY,GAAG,CAAC,KAAK,SAAU,OAAO;AAC3D,UAAI,UAAU,MAAM,MAAM;AACxB,cAAM,OAAO;AACb,YAAI,aAAa,QAAQ;AACzB,mBAAW,UAAU;AACrB,kBAAU,SAAS;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AAEA,SAAO,SAAS;AACd,WAAO;AAAA,EACT;AAGA,MAAI,UAAU,QAAQ;AACpB,QAAI,WAAW,OAAO,SAAS;AAAA,EACjC;AACF;AAoHA,wBAAwB,YAAY;AAClC,MAAI,KAAK;AAET,MAAI,KAAK;AAET,MAAI,KAAK;AAET,MAAI,KAAK;AAGT,MAAI,YAAY,YAAY;AAC1B,SAAK,WAAW;AAAA,EAClB;AAEA,MAAI,gBAAgB,YAAY;AAC9B,SAAK,CAAC,WAAW,aAAa;AAAA,EAChC;AAEA,MAAI,iBAAiB,YAAY;AAC/B,SAAK,CAAC,WAAW,cAAc;AAAA,EACjC;AAEA,MAAI,iBAAiB,YAAY;AAC/B,SAAK,CAAC,WAAW,cAAc;AAAA,EACjC;AAGA,MAAI,UAAU,cAAc,WAAW,SAAS,WAAW,iBAAiB;AAC1E,SAAK;AACL,SAAK;AAAA,EACP;AAEA,OAAK,KAAK;AACV,OAAK,KAAK;AAEV,MAAI,YAAY,YAAY;AAC1B,SAAK,WAAW;AAAA,EAClB;AAEA,MAAI,YAAY,YAAY;AAC1B,SAAK,WAAW;AAAA,EAClB;AAEA,MAAK,OAAM,OAAO,WAAW,WAAW;AACtC,QAAI,WAAW,cAAc,GAAG;AAE9B,YAAM;AACN,YAAM;AAAA,IACR,OAAO;AAEL,YAAM;AACN,YAAM;AAAA,IACR;AAAA,EACF;AAGA,MAAI,MAAM,CAAC,IAAI;AACb,SAAK,KAAK,IAAI,KAAK;AAAA,EACrB;AAEA,MAAI,MAAM,CAAC,IAAI;AACb,SAAK,KAAK,IAAI,KAAK;AAAA,EACrB;AAEA,SAAO;AAAA,IACL,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,EACV;AACF;AA9wDA,IAWI,aACA,MAWA,aAIA,gBAKA,iBA4BA,gBAUA,cAmXA,iBAwcA,aAuTA,aACA,iBA4gBA,YACA,aACA,aA2EA;AAlxDJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,cAAc;AAClB,IAAI,OAAO,OAAO,MAAM;AAWxB,IAAI,cAAc,CAAC;AAInB,IAAI,iBAAiB,CAAC,OAAO,SAAS,QAAQ,QAAQ,SAAS,QAAQ,WAAW,SAAS,UAAU;AACrG,mBAAe,QAAQ,SAAU,YAAY;AAC3C,kBAAY,cAAc;AAAA,IAC5B,CAAC;AACD,cAAU,UAAU,QAAQ,eAAe,KAAK,IAAI,UAAU;AAC9D,IAAI,kBAAkB;AAAA,MACpB,OAAO;AAAA,MAEP,OAAO,UAAU,QAAQ,SAAS;AAAA,MAClC,MAAM,UAAU,QAAQ,QAAQ;AAAA,MAChC,KAAK,UAAU,QAAQ,OAAO;AAAA,MAC9B,MAAM,UAAU,QAAQ,QAAQ;AAAA,IAClC;AAqBA,IAAI,iBAAiB,CAAC;AAUtB,IAAI,eAAe,uBAAO,OAAO,IAAI;AACrC,iBAAa,eAAe;AAC5B,iBAAa,eAAe;AAC5B,iBAAa,aAAa;AAC1B,iBAAa,YAAY;AACzB,iBAAa,cAAc;AAC3B,iBAAa,aAAa;AAC1B,iBAAa,cAAc;AAC3B,iBAAa,aAAa;AAC1B,iBAAa,oBAAoB;AA0WjC,IAAI,kBAAkB;AAAA,MACpB,MAAM,eAAe,WAAW,OAAO,OAAO;AAC5C,eAAO,SAAU,OAAO;AACtB,cAAI,OAAO,UAAU,UAAU;AAC7B,gBAAI,MAAM,KAAK,WAAW,QAAW;AACnC,kBAAI,MAAM,MAAM,UAAU,MAAM,KAAK,QAAQ;AAC3C,sBAAM,MAAM,QAAQ,MAAM,KAAK;AAC/B,0BAAU,SAAS;AACnB,uBAAO;AAAA,cACT;AAEA,qBAAO;AAAA,YACT;AAEA,0BAAc,kCAAkC,OAAO,OAAO,IAAI,EAAE,OAAO,KAAK,CAAC;AACjF,kBAAM,IAAI,WAAW,uCAAuC;AAAA,UAC9D;AAEA,cAAI,OAAO,UAAU,UAAU;AAC7B,gBAAI,MAAM,MAAM,UAAU,OAAO;AAC/B,kBAAI,OAAO,KAAK,MAAM,IAAI,EAAE,IAAI,SAAU,KAAK;AAC7C,uBAAO,MAAM,KAAK;AAAA,cACpB,CAAC,EAAE,QAAQ,KAAK,MAAM,IAAI;AACxB,sBAAM,MAAM,QAAQ;AACpB,0BAAU,SAAS;AACnB,uBAAO;AAAA,cACT;AAEA,4BAAc,kCAAkC,OAAO,OAAO,IAAI,EAAE,OAAO,KAAK,CAAC;AACjF,oBAAM,IAAI,WAAW,gCAAgC;AAAA,YACvD;AAEA,mBAAO;AAAA,UACT;AAEA,wBAAc,kDAAkD,OAAO,OAAO,IAAI,EAAE,OAAO,KAAK,CAAC;AACjG,gBAAM,IAAI,UAAU,gDAAgD;AAAA,QACtE;AAAA,MACF;AAAA,IACF;AAiaA,IAAI,cAAc,OAAO,aAAa;AAuTtC,IAAI,cAAc;AAClB,IAAI,kBAAkB;AA4gBtB,IAAI,aAAa;AACjB,IAAI,cAAc;AAClB,IAAI,cAAc;AA2ElB,IAAI,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC9zDA;AAAA;AA2BA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,oBAAc,MAAM;AAClB,YAAI,KAAK,MAAM,OAAO,KAAK;AAE3B,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,UAAU,GAAG,KAAK,GAAG,IAAI;AACjC,aAAG,KAAK,GAAG;AACX,aAAG,KAAK,GAAG;AACX,iBAAO,GAAG,KAAK,IAAK,IAAG,IAAI,IAAI;AAAA,QACjC;AAGA,WAAG,IAAI;AACP,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,eAAO;AAAA,MACT;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,KAAK,EAAE;AACT,UAAE,KAAK,EAAE;AACT,UAAE,KAAK,EAAE;AACT,eAAO;AAAA,MACT;AAEA,oBAAc,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,KAAK,IAAI,GAClB,QAAQ,QAAQ,KAAK,OACrB,OAAO,GAAG;AACd,aAAK,QAAQ,WAAW;AAAE,iBAAQ,GAAG,KAAK,IAAI,aAAe;AAAA,QAAG;AAChE,aAAK,SAAS,WAAW;AACvB,iBAAO,KAAK,IAAK,MAAK,IAAI,UAAW,KAAK;AAAA,QAC5C;AACA,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,sBAAgB;AACd,YAAI,IAAI;AAER,YAAI,OAAO,SAAS,MAAM;AACxB,iBAAO,OAAO,IAAI;AAClB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,KAAK,WAAW,CAAC;AACtB,gBAAI,IAAI,sBAAsB;AAC9B,gBAAI,MAAM;AACV,iBAAK;AACL,iBAAK;AACL,gBAAI,MAAM;AACV,iBAAK;AACL,iBAAK,IAAI;AAAA,UACX;AACA,iBAAQ,OAAM,KAAK;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AAGA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;AC/GA;AAAA;AAGA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,sBAAgB,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAEzB,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AAGP,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,IAAK,GAAG,KAAK;AACxB,aAAG,IAAI,GAAG;AACV,aAAG,IAAI,GAAG;AACV,aAAG,IAAI,GAAG;AACV,iBAAO,GAAG,KAAM,GAAG,MAAM,KAAM,IAAK,MAAM;AAAA,QAC5C;AAEA,YAAI,SAAU,QAAO,IAAI;AAEvB,aAAG,IAAI;AAAA,QACT,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,oBAAc,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,iBAAQ,IAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,MAAO,IAAG,KAAK,MAAM,KAAK,YAC1B,SAAU,OAAM,OAAQ,MAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;AC9EA;AAAA;AAGA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,sBAAgB,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAGzB,WAAG,OAAO,WAAW;AACnB,cAAI,IAAK,GAAG,IAAK,GAAG,MAAM;AAC1B,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AACjD,iBAAQ,IAAG,IAAK,GAAG,IAAI,SAAS,KAC5B,IAAG,IAAK,GAAG,IAAK,GAAG,KAAK,IAAO,KAAK,KAAK,MAAO;AAAA,QACtD;AAEA,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AAEP,YAAI,SAAU,QAAO,IAAI;AAEvB,aAAG,IAAI;AAAA,QACT,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,cAAI,KAAK,QAAQ,QAAQ;AACvB,eAAG,IAAI,GAAG,KAAK,KAAK,GAAG,MAAM;AAAA,UAC/B;AACA,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,oBAAc,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,iBAAQ,IAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,MAAO,IAAG,KAAK,MAAM,KAAK,YAC1B,SAAU,OAAM,OAAQ,MAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;ACnFA;AAAA;AAKA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,sBAAgB,MAAM;AACpB,YAAI,KAAK;AAGT,WAAG,OAAO,WAAW;AAEnB,cAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;AAC9B,cAAI,EAAE;AAAI,eAAM,MAAM;AAAI,cAAI,IAAK,KAAK;AACxC,cAAI,EAAG,IAAI,IAAK;AAAI,eAAK,IAAK,MAAM;AACpC,cAAI,EAAG,IAAI,IAAK;AAAI,eAAK,IAAK,MAAM;AACpC,cAAI,EAAG,IAAI,IAAK;AAAI,eAAK,IAAK,KAAK;AACnC,cAAI,EAAG,IAAI,IAAK;AAAI,cAAI,IAAK,KAAK;AAAK,eAAK,IAAK,KAAK;AACtD,YAAE,KAAK;AACP,aAAG,IAAK,IAAI,IAAK;AACjB,iBAAO;AAAA,QACT;AAEA,sBAAc,KAAI,OAAM;AACtB,cAAI,GAAG,GAAG,IAAI,CAAC;AAEf,cAAI,UAAU,SAAO,IAAI;AAEvB,gBAAI,EAAE,KAAK;AAAA,UACb,OAAO;AAEL,oBAAO,KAAK;AACZ,iBAAK,IAAI,GAAG,IAAI,MAAK,QAAQ,EAAE,GAAG;AAChC,gBAAE,IAAI,KAAM,EAAE,IAAI,MAAM,KACnB,MAAK,WAAW,CAAC,IAAI,EAAG,IAAI,IAAK,MAAM;AAAA,YAC9C;AAAA,UACF;AAEA,iBAAO,EAAE,SAAS;AAAG,cAAE,KAAK,CAAC;AAC7B,eAAK,IAAI,GAAG,IAAI,KAAK,EAAE,OAAO,GAAG,EAAE;AAAE;AACrC,cAAI,KAAK;AAAG,gBAAI,EAAE,KAAK;AAAA;AAAS,gBAAI,EAAE;AAEtC,cAAG,IAAI;AACP,cAAG,IAAI;AAGP,eAAK,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AACxB,gBAAG,KAAK;AAAA,UACV;AAAA,QACF;AAEA,aAAK,IAAI,IAAI;AAAA,MACf;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,oBAAc,MAAM,MAAM;AACxB,YAAI,QAAQ;AAAM,iBAAO,CAAE,IAAI;AAC/B,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,iBAAQ,IAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,MAAO,IAAG,KAAK,MAAM,KAAK,YAC1B,SAAU,OAAM,OAAQ,MAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,MAAM;AAAG,iBAAK,OAAO,EAAE;AAC3B,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,YAAY;AAAA,MACnB;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;AC/FA;AAAA;AAyBA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,sBAAgB,MAAM;AACpB,YAAI,KAAK;AAGT,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,GACP,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG;AAE3B,aAAG,IAAI,IAAK,IAAI,aAAc;AAE9B,cAAI,EAAG,IAAI,KAAM;AACjB,cAAI,EAAE,IAAM,IAAI,IAAK;AACrB,eAAK,KAAK;AACV,eAAK,KAAK;AACV,eAAK,MAAM;AACX,eAAK,MAAM;AAEX,cAAI,EAAE,KAAK,IAAI;AACf,aAAG,IAAI;AAEP,iBAAQ,IAAK,KAAK,MAAM,MAAQ;AAAA,QAClC;AAEA,sBAAc,KAAI,OAAM;AACtB,cAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,QAAQ;AACnC,cAAI,UAAU,SAAO,IAAI;AAEvB,gBAAI;AACJ,oBAAO;AAAA,UACT,OAAO;AAEL,oBAAO,QAAO;AACd,gBAAI;AACJ,oBAAQ,KAAK,IAAI,OAAO,MAAK,MAAM;AAAA,UACrC;AAEA,eAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,EAAE,GAAG;AAEnC,gBAAI;AAAM,mBAAK,MAAK,WAAY,KAAI,MAAM,MAAK,MAAM;AAErD,gBAAI,MAAM;AAAG,kBAAI;AACjB,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,gBAAI,KAAK,GAAG;AACV,kBAAK,IAAI,aAAc;AACvB,kBAAK,EAAE,IAAI,QAAS,IAAI;AACxB,kBAAK,AAAK,KAAL,IAAU,IAAI,IAAI;AAAA,YACzB;AAAA,UACF;AAEA,cAAI,KAAK,KAAK;AACZ,cAAG,UAAQ,MAAK,UAAU,KAAK,OAAO;AAAA,UACxC;AAIA,cAAI;AACJ,eAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AAC5B,gBAAI,EAAG,IAAI,KAAM;AACjB,gBAAI,EAAE,IAAM,IAAI,IAAK;AACrB,iBAAK,KAAK;AACV,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,iBAAK,MAAM;AACX,cAAE,KAAK,IAAI;AAAA,UACb;AAEA,cAAG,IAAI;AACP,cAAG,IAAI;AACP,cAAG,IAAI;AAAA,QACT;AAEA,aAAK,IAAI,IAAI;AAAA,MACf;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,eAAO;AAAA,MACT;AAAC;AAED,oBAAc,MAAM,MAAM;AACxB,YAAI,QAAQ;AAAM,iBAAO,CAAE,IAAI;AAC/B,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,iBAAQ,IAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,MAAO,IAAG,KAAK,MAAM,KAAK,YAC1B,SAAU,OAAM,OAAQ,MAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,MAAM;AAAG,iBAAK,OAAO,EAAE;AAC3B,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,UAAU;AAAA,MACjB;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;ACjJA;AAAA;AAIA,IAAC,UAAS,SAAQ,SAAQ,SAAQ;AAElC,sBAAgB,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAGzB,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG;AACzC,cAAK,KAAK,KAAO,MAAM,IAAK;AAC5B,cAAK,IAAI,IAAK;AACd,cAAK,KAAK,KAAO,MAAM,IAAK;AAC5B,cAAK,IAAI,IAAK;AACd,aAAG,IAAI,IAAK,KAAK,KAAO,MAAM,KAAM;AACpC,aAAG,IAAI,IAAK,IAAI,IAAK;AACrB,aAAG,IAAK,KAAK,KAAO,MAAM,KAAM;AAChC,iBAAO,GAAG,IAAK,IAAI,IAAK;AAAA,QAC1B;AAkBA,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI,aAAa;AACpB,WAAG,IAAI;AAEP,YAAI,SAAS,KAAK,MAAM,IAAI,GAAG;AAE7B,aAAG,IAAK,OAAO,aAAe;AAC9B,aAAG,IAAI,OAAO;AAAA,QAChB,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAAC;AAED,oBAAc,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,iBAAQ,IAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,MAAO,IAAG,KAAK,MAAM,KAAK,YAC1B,SAAU,OAAM,OAAQ,MAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAI,WAAU,QAAO,SAAS;AAC5B,gBAAO,UAAU;AAAA,MACnB,WAAW,WAAU,QAAO,KAAK;AAC/B,gBAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA,GACE,SACC,OAAO,UAAW,YAAY,QAC9B,OAAO,UAAW,cAAc,MACnC;AAAA;AAAA;;;ACpGA;AAAA;AAAA;AAAA;AAAA,IAAO;AAAP;AAAA;AAAA,IAAO,iBAAQ,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3B,MAAM;AACJ,cAAM,IAAI,MAAM,wGAAwG;AAAA,MAC1H;AAAA,IACF,CAAC;AAAA;AAAA;;;ACJD;AAAA;AAwBA,IAAC,UAAU,SAAQ,MAAM,MAAM;AAK/B,UAAI,QAAQ,KACR,SAAS,GACT,SAAS,IACT,UAAU,UACV,aAAa,KAAK,IAAI,OAAO,MAAM,GACnC,eAAe,KAAK,IAAI,GAAG,MAAM,GACjC,WAAW,eAAe,GAC1B,OAAO,QAAQ,GACf;AAMJ,2BAAoB,MAAM,SAAS,UAAU;AAC3C,YAAI,MAAM,CAAC;AACX,kBAAW,WAAW,OAAQ,EAAE,SAAS,KAAK,IAAK,WAAW,CAAC;AAG/D,YAAI,YAAY,OAAO,QACrB,QAAQ,UAAU,CAAC,MAAM,SAAS,IAAI,CAAC,IACtC,QAAQ,OAAQ,SAAS,IAAI,MAAM,CAAC,GAAG,GAAG;AAG7C,YAAI,OAAO,IAAI,KAAK,GAAG;AAIvB,YAAI,OAAO,WAAW;AACpB,cAAI,IAAI,KAAK,EAAE,MAAM,GACjB,IAAI,YACJ,IAAI;AACR,iBAAO,IAAI,cAAc;AACvB,gBAAK,KAAI,KAAK;AACd,iBAAK;AACL,gBAAI,KAAK,EAAE,CAAC;AAAA,UACd;AACA,iBAAO,KAAK,UAAU;AACpB,iBAAK;AACL,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,iBAAQ,KAAI,KAAK;AAAA,QACnB;AAEA,aAAK,QAAQ,WAAW;AAAE,iBAAO,KAAK,EAAE,CAAC,IAAI;AAAA,QAAG;AAChD,aAAK,QAAQ,WAAW;AAAE,iBAAO,KAAK,EAAE,CAAC,IAAI;AAAA,QAAa;AAC1D,aAAK,SAAS;AAGd,eAAO,SAAS,KAAK,CAAC,GAAG,IAAI;AAG7B,eAAQ,SAAQ,QAAQ,YACpB,SAAS,OAAM,OAAM,cAAc,OAAO;AACxC,cAAI,OAAO;AAET,gBAAI,MAAM,GAAG;AAAE,mBAAK,OAAO,IAAI;AAAA,YAAG;AAElC,kBAAK,QAAQ,WAAW;AAAE,qBAAO,KAAK,MAAM,CAAC,CAAC;AAAA,YAAG;AAAA,UACnD;AAIA,cAAI,cAAc;AAAE,iBAAK,WAAW;AAAM,mBAAO;AAAA,UAAM;AAIlD,mBAAO;AAAA,QACd,GACJ,MACA,WACA,YAAY,UAAU,QAAQ,SAAU,QAAQ,MAChD,QAAQ,KAAK;AAAA,MACf;AAYA,oBAAc,KAAK;AACjB,YAAI,GAAG,SAAS,IAAI,QAChB,KAAK,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAGvD,YAAI,CAAC,QAAQ;AAAE,gBAAM,CAAC,QAAQ;AAAA,QAAG;AAGjC,eAAO,IAAI,OAAO;AAChB,YAAE,KAAK;AAAA,QACT;AACA,aAAK,IAAI,GAAG,IAAI,OAAO,KAAK;AAC1B,YAAE,KAAK,EAAE,IAAI,OAAQ,IAAI,IAAI,IAAI,UAAW,KAAI,EAAE;AAClD,YAAE,KAAK;AAAA,QACT;AAGA,QAAC,IAAG,IAAI,SAAS,OAAO;AAEtB,cAAI,IAAG,IAAI,GACP,KAAI,GAAG,GAAG,KAAI,GAAG,GAAG,KAAI,GAAG;AAC/B,iBAAO,SAAS;AACd,iBAAI,GAAE,KAAI,OAAQ,KAAI;AACtB,gBAAI,IAAI,QAAQ,GAAE,OAAS,IAAE,MAAK,GAAE,KAAI,OAAQ,KAAI,OAAQ,IAAE,MAAK;AAAA,UACrE;AACA,aAAG,IAAI;AAAG,aAAG,IAAI;AACjB,iBAAO;AAAA,QAIT,GAAG,KAAK;AAAA,MACV;AAMA,oBAAc,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,eAAO;AAAA,MACT;AAAC;AAMD,uBAAiB,MAAK,OAAO;AAC3B,YAAI,SAAS,CAAC,GAAG,MAAO,OAAO,MAAM;AACrC,YAAI,SAAS,OAAO,UAAU;AAC5B,eAAK,QAAQ,MAAK;AAChB,gBAAI;AAAE,qBAAO,KAAK,QAAQ,KAAI,OAAO,QAAQ,CAAC,CAAC;AAAA,YAAG,SAAS,GAAP;AAAA,YAAW;AAAA,UACjE;AAAA,QACF;AACA,eAAQ,OAAO,SAAS,SAAS,OAAO,WAAW,OAAM,OAAM;AAAA,MACjE;AAOA,sBAAgB,MAAM,KAAK;AACzB,YAAI,aAAa,OAAO,IAAI,OAAO,IAAI;AACvC,eAAO,IAAI,WAAW,QAAQ;AAC5B,cAAI,OAAO,KACT,OAAS,UAAS,IAAI,OAAO,KAAK,MAAM,WAAW,WAAW,GAAG;AAAA,QACrE;AACA,eAAO,SAAS,GAAG;AAAA,MACrB;AAOA,0BAAoB;AAClB,YAAI;AACF,cAAI;AACJ,cAAI,cAAe,OAAM,WAAW,cAAc;AAEhD,kBAAM,IAAI,KAAK;AAAA,UACjB,OAAO;AACL,kBAAM,IAAI,WAAW,KAAK;AAC1B,YAAC,SAAO,UAAU,QAAO,UAAU,gBAAgB,GAAG;AAAA,UACxD;AACA,iBAAO,SAAS,GAAG;AAAA,QACrB,SAAS,GAAP;AACA,cAAI,UAAU,QAAO,WACjB,UAAU,WAAW,QAAQ;AACjC,iBAAO,CAAC,CAAC,IAAI,QAAM,SAAQ,SAAS,QAAO,QAAQ,SAAS,IAAI,CAAC;AAAA,QACnE;AAAA,MACF;AAMA,wBAAkB,GAAG;AACnB,eAAO,OAAO,aAAa,MAAM,GAAG,CAAC;AAAA,MACvC;AASA,aAAO,KAAK,OAAO,GAAG,IAAI;AAM1B,UAAK,OAAO,UAAW,YAAY,OAAO,SAAS;AACjD,eAAO,UAAU;AAEjB,YAAI;AACF,uBAAa;AAAA,QACf,SAAS,IAAP;AAAA,QAAY;AAAA,MAChB,WAAY,OAAO,UAAW,cAAc,OAAO,KAAK;AACtD,eAAO,WAAW;AAAE,iBAAO;AAAA,QAAY,CAAC;AAAA,MAC1C,OAAO;AAEL,aAAK,SAAS,WAAW;AAAA,MAC3B;AAAA,IAIA,GAGG,OAAO,SAAS,cAAe,OAAO,SACvC,CAAC,GACD,IACF;AAAA;AAAA;;;AC5PA;AAAA;AAYA,QAAI,OAAO;AAKX,QAAI,SAAS;AAKb,QAAI,SAAS;AAQb,QAAI,YAAY;AAShB,QAAI,UAAU;AAOd,QAAI,SAAS;AAIb,QAAI,KAAK;AAET,OAAG,OAAO;AACV,OAAG,SAAS;AACZ,OAAG,SAAS;AACZ,OAAG,YAAY;AACf,OAAG,UAAU;AACb,OAAG,SAAS;AAEZ,WAAO,UAAU;AAAA;AAAA;;;ACvCjB,wBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,eAAc,YAAY,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EACvE;AACF;AAEA,yBAAyB,IAAI,IAAI;AAC/B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,MAAM,GAAG;AACb,OAAG,KAAK,GAAG;AACX,OAAG,KAAK;AAAA,EACV;AACF;AAEA,uBAAuB;AACrB,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,MAAI,QAAQ,CAAC;AAEb,SAAO,MAAM,SAAS,MAAM;AAC1B,UAAM,KAAK,CAAC;AAAA,EACd;AAEA,SAAO;AACT;AAQA,4BAA4B,KAAK;AAC/B,SAAO,MAAM,MAAM,KAAK;AAC1B;AACA,4BAA4B,KAAK;AAC/B,SAAO,MAAM,MAAM,KAAK;AAC1B;AAMA,kBAAkB,KAAK;AACrB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,WAAW;AAEf,WAAS,IAAI,QAAQ,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK,QAAQ;AAC3D,QAAI,IAAI,KAAK,UAAU;AACrB,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF;AAEA,SAAO;AACT;AACA,kBAAkB,KAAK;AACrB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,WAAW;AAEf,WAAS,IAAI,QAAQ,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK,QAAQ;AAC3D,QAAI,WAAW,IAAI,IAAI;AACrB,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF;AAEA,SAAO;AACT;AACA,oBAAoB,KAAK;AACvB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,WAAW;AACf,MAAI,WAAW;AAEf,WAAS,IAAI,QAAQ,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK,QAAQ;AAC3D,QAAI,IAAI,KAAK,UAAU;AACrB,iBAAW,IAAI;AAAA,IACjB;AAEA,QAAI,WAAW,IAAI,IAAI;AACrB,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF;AAEA,SAAO,CAAC,UAAU,QAAQ;AAC5B;AAGA,2BAA2B,IAAI;AAC7B,MAAI,IAAI;AAER,SAAO,IAAI,IAAI;AACb,SAAK;AAAA,EACP;AAEA,SAAO;AACT;AACA,sBAAsB,GAAG;AACvB,SAAO,MAAM,kBAAkB,CAAC;AAClC;AACA,kBAAkB,GAAG,GAAG;AACtB,MAAI,IAAI;AAER,WAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,SAAM,KAAI,IAAI,KAAK;AAAA,EACrB;AAEA,SAAO,KAAK,MAAM,CAAC;AACrB;AACA,0BAA0B,GAAG,GAAG;AAC9B,MAAI,IAAI,GAAG;AACT,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,YAAY,CAAC;AAErB,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,MAAE,KAAK;AAAA,EACT;AAEA,SAAO;AACT;AACA,yBAAyB,GAAG,GAAG,GAAG;AAChC,MAAI,SAAS;AAEb,WAAS,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC/B,QAAI,EAAE,KAAK,IAAI,IAAI,GAAG;AACpB,UAAI,IAAI,EAAE,KAAK;AAEf,aAAO,IAAI,GAAG;AACZ,UAAE,OAAO;AAAA,MACX;AAEA,eAAS;AACT;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AACA,oBAAoB,MAAM;AACxB,iCAAW,GAAG,OAAO,IAAI,GAAG;AAAA,IAC1B,QAAQ;AAAA,EACV,CAAC;AACD,oBAAkB;AACpB;AACA,mBAAmB;AACjB,SAAO;AACT;AACA,kBAAkB;AAChB,MAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,MAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,MAAI,QAAQ,WAAW;AACvB,SAAO,WAAW,QAAQ,KAAK,OAAO;AACxC;AAGA,aAAa,GAAG,GAAG,KAAK;AACtB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,SAAO;AACT;AACA,kBAAkB,GAAG,GAAG,KAAK;AAC3B,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,SAAO;AACT;AACA,wBAAwB,KAAK,QAAQ;AACnC,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,MAAM;AACV,SAAO;AACT;AACA,0BAA0B,KAAK,QAAQ;AACrC,MAAI,MAAM;AACV,MAAI,MAAM;AACV,SAAO;AACT;AACA,4BAA4B,GAAG,GAAG,QAAQ,KAAK;AAC7C,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK;AACvB,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK;AACvB,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK;AACvB,SAAO;AACT;AACA,8BAA8B,GAAG,GAAG,QAAQ,KAAK;AAC/C,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK;AACvB,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK;AACvB,SAAO;AACT;AACA,aAAa,GAAG,GAAG;AACjB,SAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAC9C;AACA,eAAe,GAAG,GAAG,SAAS;AAC5B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAQ,GAAG,KAAK,EAAE,KAAK,EAAE;AAAA,IAC3B;AAAA,EACF;AACF;AACA,eAAe,GAAG,GAAG,KAAK;AACxB,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAChC,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAChC,MAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAChC,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACT,SAAO;AACT;AACA,cAAc,GAAG;AACf,MAAI,IAAI,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE5E,UAAQ;AAAA,SACD;AACH,aAAO,KAAK,IAAI,CAAC;AAAA,SAEd;AACH,aAAO,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;AAAA,SAEvC;AACH,aAAO,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;AAAA,aAGxD;AACE,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAO,EAAE,KAAK,EAAE;AAAA,MAClB;AAEA,aAAO,KAAK,KAAK,GAAG;AAAA,IACtB;AAAA;AAEN;AACA,mBAAmB,GAAG;AACpB,MAAI,MAAM,KAAK,CAAC;AAEhB,MAAI,QAAQ,GAAK;AACf,MAAE,MAAM;AACR,MAAE,MAAM;AACR,MAAE,MAAM;AAAA,EACV;AAEA,SAAO;AACT;AACA,wBAAwB,GAAG,GAAG,GAAG,OAAO;AACtC,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,KAAK,EAAE,KAAK,EAAE;AAClB,MAAI,IAAI,KAAK,KAAK,KAAK,KAAK,EAAE;AAC9B,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,KAAK,MAAM,KAAK,IAAI;AACtB,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP,WAAW,KAAK,IAAI;AAClB,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP,OAAO;AACL,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP;AAEA,MAAI,IAAI,EAAE,MAAM;AAChB,MAAI,IAAI,EAAE,MAAM;AAChB,MAAI,IAAI,EAAE,MAAM;AAChB,MAAI,MAAM,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AAEjC,MAAI,UAAU,GAAG;AACf,QAAI,WAAW,KAAK,IAAI,KAAK;AAC7B,QAAI,WAAW,KAAK,IAAI,KAAK;AAE7B,QAAI,GAAG;AACL,QAAE,MAAO,KAAI,WAAW,IAAI,IAAI,YAAY;AAC5C,QAAE,MAAM,WAAW;AACnB,QAAE,MAAO,EAAE,KAAI,YAAY,IAAI,IAAI,YAAY;AAAA,IACjD;AAEA,QAAI,GAAG;AACL,QAAE,MAAO,EAAE,KAAI,YAAY,IAAI,IAAI,YAAY;AAC/C,QAAE,MAAM,WAAW;AACnB,QAAE,MAAO,KAAI,WAAW,IAAI,IAAI,YAAY;AAAA,IAC9C;AAAA,EACF,OAAO;AACL,QAAI,GAAG;AACL,QAAE,MAAM,IAAI;AACZ,QAAE,MAAM;AACR,QAAE,MAAM,CAAC,IAAI;AAAA,IACf;AAEA,QAAI,GAAG;AACL,QAAE,MAAM,CAAC,IAAI,IAAI;AACjB,QAAE,MAAM;AACR,QAAE,MAAM,CAAC,IAAI,IAAI;AAAA,IACnB;AAAA,EACF;AACF;AACA,uBAAuB,GAAG,GAAG,YAAY;AACvC,MAAI,WAAW,IAAI,GAAG,CAAC;AAEvB,MAAI,aAAa,GAAG;AAClB,eAAW,KAAK;AAChB,eAAW,KAAK;AAChB,eAAW,KAAK;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,IAAI,GAAG,CAAC,IAAI;AAExB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAW,KAAK,EAAE;AAAA,EACpB;AAEA,iBAAe,YAAY,KAAK;AAChC,SAAO;AACT;AACA,eAAe,GAAG,GAAG;AACnB,SAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAChC;AACA,yBAAyB,GAAG,GAAG,YAAY;AACzC,MAAI,WAAW,MAAM,GAAG,CAAC;AAEzB,MAAI,aAAa,GAAG;AAClB,eAAW,KAAK;AAChB,eAAW,KAAK;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,MAAM,GAAG,CAAC,IAAI;AAE1B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAW,KAAK,EAAE;AAAA,EACpB;AAEA,mBAAiB,YAAY,KAAK;AAClC,SAAO;AACT;AACA,gCAAgC,GAAG,GAAG;AACpC,SAAQ,GAAE,KAAK,EAAE,MAAO,GAAE,KAAK,EAAE,MAAO,GAAE,KAAK,EAAE,MAAO,GAAE,KAAK,EAAE,MAAO,GAAE,KAAK,EAAE,MAAO,GAAE,KAAK,EAAE;AACnG;AACA,6BAA6B,IAAI,IAAI;AACnC,MAAI,YAAY,CAAC,GAAG,GAAG,CAAC;AACxB,QAAM,IAAI,IAAI,SAAS;AACvB,SAAO,KAAK,MAAM,KAAK,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;AAChD;AACA,mCAAmC,IAAI,IAAI,IAAI;AAC7C,MAAI,YAAY,CAAC,GAAG,GAAG,CAAC;AACxB,QAAM,IAAI,IAAI,SAAS;AACvB,MAAI,QAAQ,KAAK,MAAM,KAAK,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;AACnD,SAAO,IAAI,WAAW,EAAE,KAAK,IAAI,QAAQ,CAAC;AAC5C;AACA,2BAA2B,MAAM,UAAU,UAAU;AACnD,MAAI,mBAAmB,KAAK,IAAI,OAAO,QAAQ;AAC/C,SAAO,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,kBAAkB,CAAC,IAAK,KAAI,SAAS;AACzG;AACA,wBAAwB,MAAM,UAAU,UAAU;AAChD,MAAI,mBAAmB,KAAK,IAAI,OAAO,QAAQ;AAC/C,SAAO,KAAK,IAAI,CAAC,KAAK,IAAI,kBAAkB,CAAC,IAAK,KAAI,SAAS;AACjE;AACA,iBAAiB,GAAG,GAAG,SAAS;AAC9B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAQ,GAAG,KAAK,EAAE,KAAK,EAAE;AAAA,IAC3B;AAAA,EACF;AACF;AACA,gBAAgB,KAAK;AACnB,SAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,EAAE;AACpD;AACA,qBAAqB,GAAG;AACtB,MAAI,MAAM,OAAO,CAAC;AAElB,MAAI,QAAQ,GAAK;AACf,MAAE,MAAM;AACR,MAAE,MAAM;AAAA,EACV;AAEA,SAAO;AACT;AACA,0BAA0B;AACxB,WAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,SAAK,QAAQ,UAAU;AAAA,EACzB;AAEA,MAAI,KAAK,WAAW,GAAG;AACrB,WAAO,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG;AAAA,EACxD;AAEA,MAAI,KAAK,WAAW,GAAG;AACrB,WAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,EAC5C;AAEA,SAAO,OAAO;AAChB;AACA,qBAAqB,SAAS,SAAS;AACrC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,QAAQ,CAAC,GAAG,GAAG,CAAC;AAEpB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAU,KAAK,IAAI,QAAQ,GAAG,EAAE;AAEhC,QAAK,OAAM,KAAK,IAAI,QAAQ,GAAG,EAAE,KAAK,SAAS;AAC7C,gBAAU;AAAA,IACZ;AAEA,QAAK,OAAM,KAAK,IAAI,QAAQ,GAAG,EAAE,KAAK,SAAS;AAC7C,gBAAU;AAAA,IACZ;AAEA,UAAM,KAAK,IAAI;AAAA,EACjB;AAIA,YAAU,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE;AAC3C,SAAO;AAEP,MAAK,OAAM,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,MAAM,SAAS;AACzD,cAAU;AACV,WAAO;AAAA,EACT;AAEA,MAAK,OAAM,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,MAAM,SAAS;AACzD,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,GAAG;AACd,oBAAgB,QAAQ,OAAO,QAAQ,EAAE;AACzC,UAAM,QAAQ,MAAM;AAAA,EACtB;AAEA,UAAQ,KAAK;AACb,UAAQ,GAAG,MAAM,QAAQ,GAAG;AAC5B,UAAQ,GAAG,MAAM,QAAQ,GAAG;AAE5B,UAAQ,GAAG,MAAM,QAAQ,GAAG,KAAK,QAAQ,GAAG;AAC5C,UAAQ,GAAG,MAAM,QAAQ,GAAG,KAAK,QAAQ,GAAG;AAC5C,YAAU,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE;AAC3C,SAAO;AAEP,MAAK,OAAM,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,MAAM,SAAS;AACzD,WAAO;AACP,oBAAgB,QAAQ,IAAI,QAAQ,EAAE;AACtC,UAAM,KAAK,MAAM;AAAA,EACnB;AAEA,UAAQ,KAAK;AACb,UAAQ,GAAG,MAAM,QAAQ,GAAG;AAE5B,UAAQ,GAAG,MAAM,QAAQ,GAAG,KAAK,QAAQ,GAAG;AAC5C,UAAQ,GAAG,MAAM,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AAC5E,UAAQ,KAAK;AACf;AACA,oBAAoB,SAAS,SAAS,KAAK;AAEzC,MAAI,MAAM,IAAI,QAAQ;AACtB,MAAI,QAAQ,MAAM,IAAI;AACtB,MAAI,KAAK;AACT,QAAM,IAAI,QAAQ;AAClB,MAAI,QAAQ,MAAM,IAAI;AACtB,MAAI,KAAK,MAAM,QAAQ,GAAG,KAAK,IAAI;AACnC,QAAM,IAAI,QAAQ;AAClB,MAAI,QAAQ,MAAM,IAAI;AACtB,MAAI,KAAK,MAAM,QAAQ,GAAG,KAAK,IAAI,KAAK,QAAQ,GAAG,KAAK,IAAI;AAE5D,MAAI,MAAM,QAAQ,GAAG;AACrB,MAAI,KAAM,KAAI,KAAK,QAAQ,GAAG,KAAK,IAAI,MAAM,QAAQ,GAAG;AACxD,MAAI,KAAM,KAAI,KAAK,QAAQ,GAAG,KAAK,IAAI,KAAK,QAAQ,GAAG,KAAK,IAAI,MAAM,QAAQ,GAAG;AACnF;AACA,wBAAwB,SAAS,KAAK,KAAK;AACzC,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AACpB,MAAI,KAAK,QAAQ,GAAG;AAEpB,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AAEvC,MAAI,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AAEnC,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAC9C,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAC9C,MAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAE9C,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AAChB;AACA,2BAA2B,SAAS,MAAM,OAAO;AAC/C,MAAI,IAAI,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK;AACjF,MAAI,IAAI,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK;AACjF,MAAI,IAAI,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK;AACjF,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACb;AACA,0BAA0B,OAAO,OAAO,SAAS;AAC/C,MAAI,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAE1C,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG;AAC3F,QAAI,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG;AAC3F,QAAI,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG;AAAA,EAC7F;AAEA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAQ,GAAG,KAAK,IAAI,GAAG;AACvB,YAAQ,GAAG,KAAK,IAAI,GAAG;AACvB,YAAQ,GAAG,KAAK,IAAI,GAAG;AAAA,EACzB;AACF;AACA,wBAAwB,GAAG,GAAG,MAAM,MAAM,MAAM,MAAM,aAAa;AAEjE,MAAI,SAAS,MAAM;AACjB,mBAAc,wDAAwD;AAAA,EACxE;AAIA,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAE7B,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,kBAAY,GAAG,KAAK;AAEpB,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,oBAAY,GAAG,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AACF;AACA,sBAAsB,QAAQ,UAAU;AACtC,MAAI;AACJ,QAAM,OAAO,GAAG;AAChB,WAAS,GAAG,KAAK,OAAO,GAAG;AAC3B,WAAS,GAAG,KAAK;AACjB,QAAM,OAAO,GAAG;AAChB,WAAS,GAAG,KAAK,OAAO,GAAG;AAC3B,WAAS,GAAG,KAAK;AACjB,QAAM,OAAO,GAAG;AAChB,WAAS,GAAG,KAAK,OAAO,GAAG;AAC3B,WAAS,GAAG,KAAK;AACjB,WAAS,GAAG,KAAK,OAAO,GAAG;AAC3B,WAAS,GAAG,KAAK,OAAO,GAAG;AAC3B,WAAS,GAAG,KAAK,OAAO,GAAG;AAC7B;AACA,mBAAmB,QAAQ,UAAU;AACnC,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AACnB,MAAI,KAAK,OAAO,GAAG;AAEnB,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AACvC,MAAI,KAAK,CAAC,eAAe,IAAI,IAAI,IAAI,EAAE;AAEvC,MAAI,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AACnC,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACtB,WAAS,GAAG,KAAK,KAAK;AACxB;AACA,qBAAqB,SAAS;AAC5B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK;AAChD,YAAQ,GAAG,KAAK;AAAA,EAClB;AACF;AACA,wBAAwB,SAAS;AAC/B,SAAO,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACpS;AACA,+BAA+B,QAAQ,SAAS;AAC9C,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,KAAK,KAAK;AAEnB,MAAI,IAAI,IAAK,MAAK;AAClB,MAAI,IAAK,MAAK,MAAM;AACpB,OAAK;AACL,UAAQ,GAAG,KAAK,KAAK,IAAI;AACzB,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAK,KAAK,IAAI;AACzB,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAM,MAAK,MAAM;AAC5B,UAAQ,GAAG,KAAK,KAAK,IAAI;AAC3B;AAQA,mBAAmB,GAAG,GAAG;AACvB,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE9E,MAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,WAAO;AAAA,EACT;AAEA,mBAAiB,SAAS,OAAO;AAC/B,WAAO,KAAK,IAAI,UAAU,EAAE,MAAM,KAAK;AAAA,EACzC;AAEA,SAAO,EAAE,MAAM,OAAO;AACxB;AAEA,qBAAqB,KAAK;AACxB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEjF,MAAI,CAAC,GAAG,OAAO,GAAG,EAAE,SAAS,GAAG,GAAG;AACjC,WAAO,CAAC,GAAG,OAAO,KAAK,MAAM,GAAG,OAAO,KAAK,IAAI,EAAE,OAAO,MAAM,CAAC,GAAG,IAAI,EAAE,OAAO,MAAM;AAAA,EACxF;AAEA,MAAI,MAAM,GAAG,OAAO,GAAG,EAAE,MAAM,GAAG;AAClC,MAAI,MAAM;AAEV,MAAI,CAAC,IAAI,KAAK,SAAS,GAAG;AACxB,UAAM;AAAA,EACR;AAEA,SAAO,CAAC,GAAG,OAAO,KAAK,MAAM,GAAG,OAAO,CAAC,IAAI,IAAI,GAAG,EAAE,OAAO,GAAG,EAAE,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,GAAG,IAAI,EAAE,OAAO,MAAM;AACjH;AACA,qBAAqB,QAAQ;AAC3B,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;AACtF,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,KAAK,YAAY,OAAO,IAAI,MAAM;AACtC,MAAI,KAAK,YAAY,OAAO,IAAI,MAAM;AACtC,MAAI,KAAK,YAAY,OAAO,IAAI,MAAM;AACtC,SAAO;AACT;AACA,iBAAiB,GAAG,GAAG,GAAG,GAAG;AAC3B,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,IAAI,YAAY,CAAC;AACrB,MAAI,IAAI,YAAY,CAAC;AAErB,MAAI,YAAY,oBAAmB,IAAI,IAAI,IAAI,IAAI,IAAI;AACrD,QAAI,GAAG,IAAI;AACX,QAAI,GAAG,IAAI;AACX,OAAG,IAAI,MAAM,IAAI,IAAK,KAAI,IAAI;AAC9B,OAAG,IAAI,MAAM,IAAI,IAAK,KAAI,IAAI;AAAA,EAChC;AAGA,OAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AACzB,SAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AACzB,QAAE,IAAI,MAAM;AAAA,IACd;AAEA,MAAE,IAAI,MAAM;AAAA,EACd;AAEA,OAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AACzB,MAAE,MAAM,EAAE,MAAM,EAAE,IAAI;AACtB,MAAE,MAAM;AAAA,EACV;AAGA,OAAK,IAAI,GAAG,IAAI,mBAAmB,KAAK;AACtC,SAAK;AAEL,SAAK,KAAK,GAAG,KAAK,IAAI,GAAG,MAAM;AAC7B,WAAK,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AAC9B,cAAM,KAAK,IAAI,EAAE,IAAI,GAAG;AAAA,MAC1B;AAAA,IACF;AAEA,QAAI,OAAO,GAAK;AACd;AAAA,IACF;AAGA,QAAI,IAAI,GAAG;AACT,cAAQ,MAAM,KAAM,KAAI;AAAA,IAC1B,OAAO;AACL,cAAQ;AAAA,IACV;AAEA,SAAK,KAAK,GAAG,KAAK,IAAI,GAAG,MAAM;AAC7B,WAAK,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AAC9B,YAAI,MAAQ,KAAK,IAAI,EAAE,IAAI,GAAG;AAE9B,YAAI,IAAI,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,MAAM,KAAK,IAAI,EAAE,GAAG,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,MAAM,KAAK,IAAI,EAAE,GAAG,GAAG;AAC/F,YAAE,IAAI,MAAM;AAAA,QACd,WAAW,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI,OAAO;AACtC,cAAI,EAAE,MAAM,EAAE;AAEd,cAAI,KAAK,IAAI,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,GAAG;AACnC,gBAAI,EAAE,IAAI,MAAM;AAAA,UAClB,OAAO;AACL,oBAAQ,MAAM,IAAI,EAAE,IAAI;AACxB,gBAAI,IAAO,MAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAM,QAAQ,KAAK;AAE1D,gBAAI,QAAQ,GAAK;AACf,kBAAI,CAAC;AAAA,YACP;AAAA,UACF;AAEA,cAAI,IAAM,KAAK,KAAK,IAAI,IAAI,CAAC;AAC7B,cAAI,IAAI;AACR,gBAAM,IAAK,KAAM;AACjB,cAAI,IAAI,EAAE,IAAI;AACd,YAAE,OAAO;AACT,YAAE,OAAO;AACT,YAAE,OAAO;AACT,YAAE,OAAO;AACT,YAAE,IAAI,MAAM;AAEZ,eAAK,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK;AAC5B,sBAAU,GAAG,GAAG,IAAI,GAAG,EAAE;AAAA,UAC3B;AAGA,eAAK,IAAI,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK;AACjC,sBAAU,GAAG,IAAI,GAAG,GAAG,EAAE;AAAA,UAC3B;AAGA,eAAK,IAAI,KAAK,GAAG,IAAI,GAAG,KAAK;AAC3B,sBAAU,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,UAC3B;AAEA,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,sBAAU,GAAG,GAAG,IAAI,GAAG,EAAE;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,SAAK,KAAK,GAAG,KAAK,GAAG,MAAM;AACzB,QAAE,OAAO,EAAE;AACX,QAAE,MAAM,EAAE;AACV,QAAE,MAAM;AAAA,IACV;AAAA,EACF;AAGA,MAAI,KAAK,mBAAmB;AAC1B,qBAAgB,kDAAkD;AAClE,WAAO;AAAA,EACT;AAGA,OAAK,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAE1B,QAAI;AACJ,UAAM,EAAE;AAER,SAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,UAAI,EAAE,MAAM,OAAO,KAAK,IAAI,EAAE,KAAK,GAAG,IAAI,kBAAkB;AAE1D,YAAI;AACJ,cAAM,EAAE;AAAA,MACV;AAAA,IACF;AAEA,QAAI,MAAM,GAAG;AACX,QAAE,KAAK,EAAE;AACT,QAAE,KAAK;AAEP,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,cAAM,EAAE,GAAG;AACX,UAAE,GAAG,KAAK,EAAE,GAAG;AACf,UAAE,GAAG,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAMA,MAAI,cAAe,MAAK,KAAM,KAAI;AAElC,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,SAAK,SAAS,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK;AAClC,UAAI,EAAE,GAAG,MAAM,GAAK;AAClB;AAAA,MACF;AAAA,IACF;AAGA,QAAI,SAAS,aAAa;AACxB,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,UAAE,GAAG,MAAM;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AACA,+BAA+B,SAAS,QAAQ;AAC9C,MAAI,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAEjE,MAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACvD,MAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACvD,MAAI,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACxD,MAAI,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AAExD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG;AACnD,MAAI,eAAe,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1E,MAAI,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC;AAG7B,MAAI,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,MAAI,mBAAmB,CAAC,GAAG,GAAG,GAAG,CAAC;AAElC,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAM,KAAK,IAAI;AACf,qBAAiB,KAAK,aAAa;AAAA,EACrC;AAEA,UAAQ,OAAO,GAAG,aAAa,gBAAgB;AAE/C,SAAO,KAAK,aAAa,GAAG;AAC5B,SAAO,KAAK,aAAa,GAAG;AAC5B,SAAO,KAAK,aAAa,GAAG;AAC5B,SAAO,KAAK,aAAa,GAAG;AAC9B;AACA,4BAA4B,QAAQ,QAAQ,UAAU;AACpD,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,MAAI,KAAK,OAAO,KAAK,OAAO;AAC5B,WAAS,KAAK,KAAK,KAAK,KAAK;AAC7B,WAAS,KAAK,KAAK,KAAK,KAAK;AAC7B,WAAS,KAAK,KAAK,KAAK,KAAK;AAC7B,WAAS,KAAK,KAAK,KAAK,KAAK;AAC/B;AACA,0BAA0B,OAAO,SAAS;AAExC,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAQ,GAAG,KAAK,MAAM,GAAG;AACzB,YAAQ,GAAG,KAAK,MAAM,GAAG;AACzB,YAAQ,GAAG,KAAK,MAAM,GAAG;AAAA,EAC3B;AAGA,MAAI,QAAQ,YAAY,CAAC;AACzB,MAAI,QAAQ,YAAY,CAAC;AACzB,MAAI;AAEJ,WAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,QAAI,KAAK,KAAK,IAAI,QAAQ,IAAI,EAAE;AAEhC,QAAI,MAAM,KAAK,IAAI,QAAQ,IAAI,EAAE;AAEjC,QAAI,MAAM,KAAK,IAAI,QAAQ,IAAI,EAAE;AAEjC,cAAU,MAAM,KAAK,MAAM;AAC3B,cAAU,MAAM,UAAU,MAAM;AAChC,UAAM,MAAM;AAEZ,QAAI,YAAY,GAAG;AACjB,YAAM,OAAO;AAAA,IACf;AAAA,EACF;AAGA,MAAI,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,IAAI,MAAM;AACzC,MAAI,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,IAAI,MAAM;AACzC,MAAI,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,IAAI,MAAM;AACzC,QAAM,KAAK;AACX,YAAU;AAEV,MAAI,MAAM,SAAS;AACjB,cAAU;AACV,UAAM,KAAK;AAAA,EACb;AAEA,MAAI,MAAM,SAAS;AACjB,UAAM,KAAK;AAAA,EACb;AAEA,MAAI,MAAM,OAAO,GAAG;AAClB,oBAAgB,QAAQ,MAAM,KAAK,QAAQ,EAAE;AAC7C,UAAM,MAAM,MAAM,MAAM;AAAA,EAC1B;AAGA,MAAI,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,IAAI,MAAM;AACzC,MAAI,KAAK,KAAK,IAAI,QAAQ,GAAG,EAAE,IAAI,MAAM;AACzC,QAAM,KAAK;AACX,YAAU;AAEV,MAAI,MAAM,SAAS;AACjB,UAAM,KAAK;AACX,oBAAgB,QAAQ,IAAI,QAAQ,EAAE;AAAA,EACxC;AAGA,QAAM,KAAK;AAIX,MAAI,OAAO;AAEX,MAAI,eAAe,OAAO,IAAI,GAAG;AAC/B,WAAO;AAEP,aAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAC9B,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAC9B,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAAA,IAChC;AAAA,EACF;AAMA,MAAI,OAAO,YAAY,CAAC;AACxB,wBAAsB,SAAS,IAAI;AACnC,wBAAsB,MAAM,OAAO;AAEnC,MAAI,MAAM;AACR,aAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAC9B,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAC9B,cAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG;AAAA,IAChC;AAAA,EACF;AAGA,MAAI,MAAM,OAAO,GAAG;AAClB,oBAAgB,QAAQ,MAAM,KAAK,QAAQ,EAAE;AAAA,EAC/C;AAEA,MAAI,MAAM,OAAO,GAAG;AAClB,oBAAgB,QAAQ,MAAM,KAAK,QAAQ,EAAE;AAAA,EAC/C;AACF;AACA,wBAAwB,OAAO,KAAK,OAAO;AACzC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,IAAI,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AACvD,MAAI,QAAQ,YAAY,CAAC;AACzB,MAAI,QAAQ,YAAY,CAAC;AAEzB,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,MAAE,GAAG,KAAK,MAAM,GAAG;AACnB,MAAE,GAAG,KAAK,MAAM,GAAG;AACnB,MAAE,GAAG,KAAK,MAAM,GAAG;AACnB,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,MAAM;AAAA,EACnB;AAGA,UAAQ,OAAO,GAAG,KAAK,KAAK;AAE5B,MAAI,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,IAAI;AAC1C,gBAAY,KAAK;AACjB;AAAA,EACF;AAGA,eAAa,OAAO,KAAK;AAGzB,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AAEtB,QAAI,IAAK,KAAI,KAAK,OAAO,IAAK,KAAI,KAAK,IAAI;AAEzC,eAAS,KAAK,IAAI,MAAM,GAAG,EAAE;AAC7B,aAAO;AAEP,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,YAAI,SAAU,OAAM,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI;AAC1C,mBAAS;AACT,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAI,SAAS,GAAG;AACd,cAAM,IAAI;AACV,YAAI,QAAQ,IAAI;AAChB,YAAI,KAAK;AACT,wBAAgB,MAAM,IAAI,MAAM,KAAK;AAAA,MACvC;AAGA,UAAI,MAAM,MAAM,QAAQ,GAAG;AACzB,cAAM,MAAM,KAAK,CAAC,MAAM,MAAM;AAC9B,cAAM,MAAM,KAAK,CAAC,MAAM,MAAM;AAC9B,cAAM,MAAM,KAAK,CAAC,MAAM,MAAM;AAAA,MAChC;AAGA,UAAK,QAAO,KAAK;AACjB,UAAK,QAAO,KAAK;AACjB,YAAM,GAAG,KAAK;AACd,YAAM,GAAG,KAAK;AACd,YAAM,GAAG,KAAK;AACd,YAAM,GAAG,KAAK;AACd,YAAM,MAAM,OAAO,MAAM,IAAI,MAAM,EAAE;AACrC,gBAAU,MAAM,EAAE;AAClB,YAAM,MAAM,IAAI,MAAM,OAAO,MAAM,EAAE;AAErC,mBAAa,OAAO,KAAK;AACzB;AAAA,IACF;AAAA,EACF;AAMA,WAAS,KAAK,IAAI,MAAM,GAAG,EAAE;AAC7B,SAAO;AAEP,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,QAAI,SAAU,OAAM,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI;AAC1C,eAAS;AACT,aAAO;AAAA,IACT;AAAA,EACF;AAGA,MAAI,SAAS,GAAG;AACd,UAAM,IAAI;AACV,QAAI,QAAQ,IAAI;AAChB,QAAI,KAAK;AACT,oBAAgB,MAAM,OAAO,MAAM,EAAE;AAAA,EACvC;AAGA,MAAI,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI,KAAK,IAAI,MAAM,GAAG,EAAE,GAAG;AACjD,UAAM,IAAI;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK;AACT,oBAAgB,MAAM,IAAI,MAAM,EAAE;AAAA,EACpC;AAGA,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,QAAI,MAAM,GAAG,KAAK,GAAG;AACnB,YAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AACxB,YAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AACxB,YAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AAAA,IAC1B;AAAA,EACF;AAGA,MAAI,eAAe,KAAK,IAAI,GAAG;AAC7B,UAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AACxB,UAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AACxB,UAAM,GAAG,KAAK,CAAC,MAAM,GAAG;AAAA,EAC1B;AAGA,eAAa,OAAO,KAAK;AAC3B;AACA,uCAAuC,OAAO,OAAO,KAAK,QAAQ;AAChE,MAAI;AACJ,MAAI,IAAI,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAEvD,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,MAAE,GAAG,KAAK,MAAM,GAAG;AACnB,MAAE,GAAG,KAAK,MAAM,GAAG;AACnB,MAAE,GAAG,KAAK,MAAM,GAAG;AAAA,EACrB;AAGA,MAAI,IAAI,eAAe,CAAC;AAExB,MAAI,IAAI,GAAG;AACT,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,QAAE,GAAG,KAAK,CAAC,EAAE,GAAG;AAChB,QAAE,GAAG,KAAK,CAAC,EAAE,GAAG;AAChB,QAAE,GAAG,KAAK,CAAC,EAAE,GAAG;AAAA,IAClB;AAAA,EACF;AAGA,mBAAiB,GAAG,KAAK;AACzB,eAAa,GAAG,CAAC;AACjB,mBAAiB,GAAG,OAAO,MAAM;AACjC,iBAAe,QAAQ,KAAK,MAAM;AAClC,mBAAiB,OAAO,QAAQ,KAAK;AACrC,eAAa,QAAQ,MAAM;AAE3B,MAAI,IAAI,GAAG;AACT,QAAI,KAAK,CAAC,IAAI;AACd,QAAI,KAAK,CAAC,IAAI;AACd,QAAI,KAAK,CAAC,IAAI;AAAA,EAChB;AACF;AACA,8BAA8B,GAAG,OAAO,MAAM;AAC5C,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO;AACX,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,QAAQ,YAAY,IAAI;AAI5B,OAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACzB,SAAK,UAAU,GAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACxC,UAAK,SAAQ,KAAK,IAAI,EAAE,GAAG,EAAE,KAAK,SAAS;AACzC,kBAAU;AAAA,MACZ;AAAA,IACF;AAEA,QAAI,YAAY,GAAK;AACnB,uBAAgB,gCAAgC;AAChD,aAAO;AAAA,IACT;AAEA,UAAM,KAAK,IAAM;AAAA,EACnB;AAKA,OAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACzB,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,YAAM,EAAE,GAAG;AAEX,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,eAAO,EAAE,GAAG,KAAK,EAAE,GAAG;AAAA,MACxB;AAEA,QAAE,GAAG,KAAK;AAAA,IACZ;AAKA,SAAK,UAAU,GAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACxC,YAAM,EAAE,GAAG;AAEX,WAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,eAAO,EAAE,GAAG,KAAK,EAAE,GAAG;AAAA,MACxB;AAEA,QAAE,GAAG,KAAK;AAEV,UAAK,SAAQ,MAAM,KAAK,KAAK,IAAI,GAAG,MAAM,SAAS;AACjD,kBAAU;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAKA,QAAI,MAAM,MAAM;AACd,WAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACzB,gBAAQ,EAAE,MAAM;AAChB,UAAE,MAAM,KAAK,EAAE,GAAG;AAClB,UAAE,GAAG,KAAK;AAAA,MACZ;AAEA,YAAM,QAAQ,MAAM;AAAA,IACtB;AAKA,UAAM,KAAK;AAEX,QAAI,KAAK,IAAI,EAAE,GAAG,EAAE,KAAK,kBAAkB;AACzC,uBAAgB,gCAAgC;AAChD,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,OAAO,GAAG;AAClB,cAAQ,IAAM,EAAE,GAAG;AAEnB,WAAK,IAAI,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,UAAE,GAAG,MAAM;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AACA,6BAA6B,GAAG,OAAO,GAAG,MAAM;AAC9C,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAKJ,OAAK,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,KAAK;AAClC,UAAM,MAAM;AACZ,UAAM,EAAE;AACR,MAAE,OAAO,EAAE;AAEX,QAAI,MAAM,GAAG;AACX,WAAK,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK;AAC5B,eAAO,EAAE,GAAG,KAAK,EAAE;AAAA,MACrB;AAAA,IACF,WAAW,QAAQ,GAAK;AACtB,WAAK;AAAA,IACP;AAEA,MAAE,KAAK;AAAA,EACT;AAKA,OAAK,IAAI,OAAO,GAAG,KAAK,GAAG,KAAK;AAC9B,UAAM,EAAE;AAER,SAAK,IAAI,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,aAAO,EAAE,GAAG,KAAK,EAAE;AAAA,IACrB;AAEA,MAAE,KAAK,MAAM,EAAE,GAAG;AAAA,EACpB;AACF;AACA,2BAA2B,GAAG,GAAG,MAAM;AAErC,MAAI,SAAS,GAAG;AACd,QAAI,IAAI,YAAY,CAAC;AACrB,QAAI,MAAM,eAAe,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,EAAE;AAE3D,QAAI,QAAQ,GAAK;AAEf,aAAO;AAAA,IACT;AAEA,MAAE,KAAM,GAAE,GAAG,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,MAAM;AAC3C,MAAE,KAAM,EAAE,GAAE,GAAG,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,MAAM;AAC9C,MAAE,KAAK,EAAE;AACT,MAAE,KAAK,EAAE;AACT,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,GAAG;AACd,QAAI,EAAE,GAAG,OAAO,GAAK;AAEnB,aAAO;AAAA,IACT;AAEA,MAAE,MAAM,EAAE,GAAG;AACb,WAAO;AAAA,EACT;AAMA,MAAI,QAAQ,YAAY,IAAI;AAE5B,MAAI,qBAAqB,GAAG,OAAO,IAAI,MAAM,GAAG;AAC9C,WAAO;AAAA,EACT;AAEA,sBAAoB,GAAG,OAAO,GAAG,IAAI;AACrC,SAAO;AACT;AACA,sBAAsB,GAAG,IAAI,MAAM;AACjC,MAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,MAAI,WAAW,SAAS,YAAY,IAAI;AACxC,MAAI,WAAW,UAAU,YAAY,IAAI;AAIzC,MAAI,qBAAqB,GAAG,UAAU,IAAI,MAAM,GAAG;AACjD,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,eAAS,KAAK;AAAA,IAChB;AAEA,aAAS,KAAK;AACd,wBAAoB,GAAG,UAAU,UAAU,IAAI;AAE/C,aAAS,MAAM,GAAG,MAAM,MAAM,OAAO;AACnC,SAAG,KAAK,KAAK,SAAS;AAAA,IACxB;AAAA,EACF;AAEA,SAAO;AACT;AACA,iCAAiC,GAAG,MAAM;AACxC,MAAI,WAAW,CAAC,OAAO;AACvB,MAAI,WAAW,CAAC,OAAO;AAEvB,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,UAAI,KAAK,IAAI,EAAE,GAAG,EAAE,IAAI,KAAK;AAC3B,mBAAW,KAAK,IAAI,EAAE,GAAG,EAAE;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAGA,WAAS,MAAM,GAAG,MAAM,MAAM,OAAO;AACnC,QAAI,KAAK,IAAI,EAAE,KAAK,IAAI,IAAI,KAAK;AAC/B,iBAAW,KAAK,IAAI,EAAE,KAAK,IAAI;AAAA,IACjC;AAAA,EACF;AAEA,MAAI,aAAa,GAAK;AACpB,WAAO,OAAO;AAAA,EAChB;AAEA,SAAO,WAAW;AACpB;AACA,gBAAgB,OAAO,GAAG,GAAG;AAC3B,SAAO,QAAQ,OAAO,GAAG,GAAG,CAAC;AAC/B;AACA,sCAAsC,iBAAiB,IAAI,QAAQ,IAAI;AAErE,MAAI,kBAAkB,QAAQ;AAC5B,qBAAgB,kDAAkD;AAClE,WAAO;AAAA,EACT;AAEA,MAAI;AACJ,MAAI;AACJ,MAAI;AAGJ,MAAI,MAAM,YAAY,MAAM;AAG5B,MAAI,YAAY,YAAY,MAAM;AAClC,MAAI,YAAY,YAAY,MAAM;AAElC,OAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,cAAU,KAAK,YAAY,MAAM;AACjC,QAAI,KAAK,YAAY,MAAM;AAE3B,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,UAAI,GAAG,KAAK;AAAA,IACd;AAAA,EACF;AAGA,OAAK,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACpC,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAI,GAAG,MAAM,GAAG,GAAG,KAAK,GAAG,GAAG;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAGA,OAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,UAAI,GAAG,KAAK,IAAI,GAAG;AAAA,IACrB;AAAA,EACF;AAGA,UAAQ,KAAK,QAAQ,WAAW,SAAS;AAGzC,OAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,OAAG,GAAG,KAAK,UAAU,GAAG,SAAS;AAAA,EACnC;AAEA,SAAO;AACT;AACA,2BAA2B,iBAAiB,IAAI,QAAQ,IAAI,QAAQ,IAAI;AACtE,MAAI,mBAAmB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAG3F,MAAI,kBAAkB,UAAU,kBAAkB,QAAQ;AACxD,qBAAgB,kDAAkD;AAClE,WAAO;AAAA,EACT;AAEA,MAAI,eAAe,YAAY,MAAM;AACrC,MAAI,iBAAiB;AACrB,MAAI;AACJ,MAAI,UAAU;AACd,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,kBAAkB;AAEtB,MAAI,kBAAkB;AAQpB,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,mBAAa,KAAK;AAAA,IACpB;AAEA,SAAK,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACpC,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAI,KAAK,IAAI,GAAG,GAAG,EAAE,IAAI,kBAAkB;AACzC,2BAAiB;AACjB,uBAAa,KAAK;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAGA,QAAI,kBAAkB,WAAW,GAAG;AAClC,uBAAgB,2EAA2E;AAC3F,aAAO,6BAA6B,iBAAiB,IAAI,QAAQ,EAAE;AAAA,IACrE;AAKA,QAAI,gBAAgB;AAClB,wBAAkB;AAAA,IACpB,OAAO;AACL,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAI,aAAa,IAAI;AACnB,4BAAkB;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,MAAI,iBAAiB;AAEnB,UAAM,YAAY,MAAM;AAExB,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAG3B,UAAI,KAAK,CAAC,CAAC;AAAA,IACb;AAGA,cAAU,6BAA6B,iBAAiB,IAAI,QAAQ,GAAG;AAAA,EACzE;AAGA,MAAI,MAAM,YAAY,MAAM;AAE5B,MAAI,OAAO,YAAY,MAAM;AAE7B,MAAI,MAAM,YAAY,MAAM;AAE5B,OAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,QAAI,KAAK,YAAY,MAAM;AAC3B,SAAK,KAAK,YAAY,MAAM;AAE5B,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,UAAI,GAAG,KAAK;AACZ,WAAK,GAAG,KAAK;AAAA,IACf;AAEA,QAAI,KAAK,YAAY,MAAM;AAE3B,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,UAAI,GAAG,KAAK;AAAA,IACd;AAAA,EACF;AAGA,OAAK,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACpC,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAE3B,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAI,GAAG,MAAM,GAAG,GAAG,KAAK,GAAG,GAAG;AAAA,MAChC;AAGA,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,YAAI,GAAG,MAAM,GAAG,GAAG,KAAK,GAAG,GAAG;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAGA,OAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,UAAI,GAAG,KAAK,IAAI,GAAG;AAAA,IACrB;AAAA,EACF;AAEA,MAAI,cAAc,aAAa,KAAK,MAAM,MAAM;AAEhD,MAAI,aAAa;AACf,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,WAAG,GAAG,KAAK;AAEX,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,aAAG,GAAG,MAAM,KAAK,GAAG,KAAK,IAAI,GAAG;AAAA,QAClC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAIA,MAAI,iBAAiB;AACnB,SAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,UAAI,aAAa,IAAI;AAEnB,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,aAAG,GAAG,KAAK,IAAI,GAAG;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,MAAI,iBAAiB;AACnB,WAAO,WAAW;AAAA,EACpB;AAEA,SAAO;AACT;AACA,mBAAmB,QAAQ;AACzB,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC,GAAG,KAAK,CAAC;AAElG,UAAQ,OAAO;AAAA,SACR;AAEH,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,aAAO;AAAA,SAEJ;AAEH,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,oBAAc,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI,KAAK;AAClD,aAAO;AAAA,SAEJ;AAEH,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,aAAO;AAAA,SAEJ;AAEH,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,aAAO;AAAA,SAEJ;AAEH,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,oBAAc,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI;AACvD,aAAO;AAAA;AAGP,aAAO;AAAA;AAEb;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI;AACJ,MAAI;AAEJ,MAAI,OAAO,eAAe,KAAK,CAAC,GAC5B,IAAI,KAAK,IACT,IAAI,KAAK,IACT,IAAI,KAAK;AAEb,MAAI,WAAW,IAAM;AACrB,MAAI,WAAW,IAAM;AACrB,MAAI,WAAW,IAAM;AACrB,MAAI,OAAO;AACX,MAAI,OAAO;AAEX,MAAI,IAAI,MAAM;AACZ,WAAO;AAAA,EACT,WAAW,IAAI,MAAM;AACnB,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,MAAM;AACZ,WAAO;AAAA,EACT,WAAW,IAAI,MAAM;AACnB,WAAO;AAAA,EACT;AAEA,MAAI,IAAI;AAER,MAAI,IAAI,GAAK;AACX,QAAK,QAAO,QAAQ;AAAA,EACtB,OAAO;AACL,QAAI;AAAA,EACN;AAEA,MAAI,IAAI,GAAG;AACT,QAAI,MAAM,MAAM;AACd,UAAI,WAAY,KAAI,KAAM,QAAO;AAAA,IACnC,WAAW,MAAM,MAAM;AACrB,UAAI,WAAW,WAAY,KAAI,KAAM,QAAO;AAAA,IAC9C,OAAO;AACL,UAAI,WAAW,WAAY,KAAI,KAAM,QAAO;AAAA,IAC9C;AAEA,QAAI,IAAI,GAAK;AACX,WAAK;AAAA,IACP;AAAA,EACF,OAAO;AACL,QAAI;AAAA,EACN;AAGA,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACX;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,OAAO,eAAe,KAAK,CAAC,GAC5B,IAAI,KAAK,IACT,IAAI,KAAK,IACT,IAAI,KAAK;AAEb,MAAI,WAAW,IAAM;AACrB,MAAI,WAAW,IAAM;AACrB,MAAI,WAAW,IAAM;AACrB,MAAI,YAAY,IAAM;AACtB,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,IAAI,YAAY,KAAK,UAAU;AAEjC,QAAI;AACJ,QAAK,YAAW,KAAK;AACrB,QAAI;AAAA,EACN,WAAW,IAAI,YAAY,KAAK,KAAK;AAEnC,QAAI;AACJ,QAAK,KAAI,YAAY;AACrB,QAAI;AAAA,EACN,WAAW,IAAI,OAAO,KAAK,UAAU;AAEnC,QAAI;AACJ,QAAK,YAAW,KAAK;AACrB,QAAI;AAAA,EACN,WAAW,IAAI,YAAY,KAAK,WAAW;AAEzC,QAAI;AACJ,QAAK,KAAI,YAAY;AACrB,QAAI;AAAA,EACN,WAAW,IAAI,aAAa,KAAK,GAAK;AAEpC,QAAI;AACJ,QAAK,KAAM,KAAK;AAChB,QAAI;AAAA,EACN,OAAO;AAEL,QAAI;AACJ,QAAI,IAAI;AACR,QAAI;AAAA,EACN;AAGA,MAAI,IAAI,IAAK,KAAM;AACnB,MAAI,IAAI,IAAK,KAAM;AACnB,MAAI,IAAI,IAAK,KAAM;AACnB,OAAK;AACL,OAAK;AACL,OAAK;AAEL,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACX;AACA,iBAAiB,KAAK,KAAK;AAEzB,MAAI,OAAO,eAAe,KAAK,CAAC,GAC5B,IAAI,KAAK,IACT,IAAI,KAAK,IACT,IAAI,KAAK;AAEb,MAAI,QAAS,KAAI,MAAM;AACvB,MAAI,QAAQ,IAAI,MAAM;AACtB,MAAI,QAAQ,QAAQ,IAAI;AAExB,MAAI,KAAK,IAAI,OAAO,CAAC,IAAI,SAAU;AACjC,YAAQ,KAAK,IAAI,OAAO,CAAC;AAAA,EAC3B,OAAO;AACL,YAAS,SAAQ,KAAO,OAAS;AAAA,EACnC;AAEA,MAAI,KAAK,IAAI,OAAO,CAAC,IAAI,SAAU;AACjC,YAAQ,KAAK,IAAI,OAAO,CAAC;AAAA,EAC3B,OAAO;AACL,YAAS,SAAQ,KAAO,OAAS;AAAA,EACnC;AAEA,MAAI,KAAK,IAAI,OAAO,CAAC,IAAI,SAAU;AACjC,YAAQ,KAAK,IAAI,OAAO,CAAC;AAAA,EAC3B,OAAO;AACL,YAAS,SAAQ,KAAO,OAAS;AAAA,EACnC;AAEA,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,KAAK,QAAQ;AAEjB,MAAI,KAAK,QAAQ;AAEjB,MAAI,KAAK,QAAQ;AACnB;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,OAAO,eAAe,KAAK,CAAC,GAC5B,IAAI,KAAK,IACT,IAAI,KAAK,IACT,IAAI,KAAK;AAEb,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,QAAQ,IAAI;AAEhB,MAAI,QAAQ,IAAI;AAEhB,MAAI,QAAQ,IAAI;AAEhB,MAAI,QAAQ;AAAU,YAAQ,KAAK,IAAI,OAAO,IAAM,CAAG;AAAA;AAAO,YAAQ,QAAQ,QAAQ,KAAO;AAC7F,MAAI,QAAQ;AAAU,YAAQ,KAAK,IAAI,OAAO,IAAM,CAAG;AAAA;AAAO,YAAQ,QAAQ,QAAQ,KAAO;AAC7F,MAAI,QAAQ;AAAU,YAAQ,KAAK,IAAI,OAAO,IAAM,CAAG;AAAA;AAAO,YAAQ,QAAQ,QAAQ,KAAO;AAC7F,MAAI,KAAK,MAAM,QAAQ;AACvB,MAAI,KAAK,MAAO,SAAQ;AACxB,MAAI,KAAK,MAAO,SAAQ;AAC1B;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,QAAQ,eAAe,KAAK,CAAC,GAC7B,IAAI,MAAM,IACV,IAAI,MAAM,IACV,IAAI,MAAM;AAEd,MAAI,IAAI,IAAI,SAAS,IAAI,UAAU,IAAI;AACvC,MAAI,IAAI,IAAI,UAAU,IAAI,SAAS,IAAI;AACvC,MAAI,IAAI,IAAI,SAAS,IAAI,SAAS,IAAI;AAStC,MAAI,IAAI;AAAW,QAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA;AAAW,SAAK;AACtE,MAAI,IAAI;AAAW,QAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA;AAAW,SAAK;AACtE,MAAI,IAAI;AAAW,QAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA;AAAW,SAAK;AAItE,MAAI,SAAS;AACb,MAAI,SAAS;AAAG,aAAS;AACzB,MAAI,SAAS;AAAG,aAAS;AAEzB,MAAI,SAAS,GAAK;AAChB,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP;AAEA,MAAI,IAAI;AAAG,QAAI;AACf,MAAI,IAAI;AAAG,QAAI;AACf,MAAI,IAAI;AAAG,QAAI;AAEf,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACX;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,QAAQ,eAAe,KAAK,CAAC,GAC7B,IAAI,MAAM,IACV,IAAI,MAAM,IACV,IAAI,MAAM;AAUd,MAAI,IAAI;AAAS,QAAI,KAAK,IAAK,KAAI,SAAS,OAAO,GAAG;AAAA;AAAO,SAAK;AAClE,MAAI,IAAI;AAAS,QAAI,KAAK,IAAK,KAAI,SAAS,OAAO,GAAG;AAAA;AAAO,SAAK;AAClE,MAAI,IAAI;AAAS,QAAI,KAAK,IAAK,KAAI,SAAS,OAAO,GAAG;AAAA;AAAO,SAAK;AAElE,MAAI,KAAK,IAAI,SAAS,IAAI,SAAS,IAAI;AACvC,MAAI,KAAK,IAAI,SAAS,IAAI,SAAS,IAAI;AACvC,MAAI,KAAK,IAAI,SAAS,IAAI,SAAS,IAAI;AACzC;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,UAAQ,KAAK,GAAG;AAChB,UAAQ,KAAK,GAAG;AAClB;AACA,iBAAiB,KAAK,KAAK;AACzB,MAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,UAAQ,KAAK,GAAG;AAChB,UAAQ,KAAK,GAAG;AAClB;AACA,4BAA4B,QAAQ;AAClC,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO;AACT;AACA,8BAA8B,QAAQ;AACpC,SAAO,CAAE,QAAO,KAAK,OAAO,KAAK;AACnC;AACA,iCAAiC,QAAQ,QAAQ,QAAQ;AACvD,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO,KAAK,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC,SAAO;AACT;AACA,oBAAoB,OAAO,UAAU,UAAU;AAC7C,MAAI,QAAQ,UAAU;AACpB,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,UAAU;AACpB,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AACA,qBAAqB,QAAQ,WAAW,WAAW;AACjD,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;AACtF,MAAI,KAAK,WAAW,OAAO,IAAI,UAAU,IAAI,UAAU,EAAE;AACzD,MAAI,KAAK,WAAW,OAAO,IAAI,UAAU,IAAI,UAAU,EAAE;AACzD,MAAI,KAAK,WAAW,OAAO,IAAI,UAAU,IAAI,UAAU,EAAE;AACzD,SAAO;AACT;AACA,gCAAgC,OAAO,OAAO;AAC5C,MAAI,SAAS;AAEb,MAAI,MAAM,OAAO,MAAM,IAAI;AAEzB,QAAI,QAAQ,MAAM,IAAI;AACpB,eAAS,MAAM;AAAA,IACjB,WAAW,QAAQ,MAAM,IAAI;AAC3B,eAAS,MAAM;AAAA,IACjB,OAAO;AACL,eAAS;AAAA,IACX;AAGA,aAAU,UAAS,MAAM,MAAO,OAAM,KAAK,MAAM;AAAA,EACnD;AAEA,SAAO;AACT;AAGA,mCAAmC,SAAS,SAAS;AACnD,MAAI,CAAC,WAAW,CAAC,SAAS;AACxB,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,QAAI,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,IAAI,MAAM,QAAQ,IAAI,KAAK,QAAQ,MAAM,QAAQ,IAAI,KAAK,QAAQ,IAAI,IAAI;AAC5H,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AACA,mCAAmC,WAAW,WAAW,SAAS;AAChE,MAAI,CAAC,aAAa,CAAC,WAAW;AAC5B,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,QAAI,UAAU,KAAK,QAAQ,IAAI,KAAK,UAAU,MAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,UAAU,IAAI,MAAM,UAAU,IAAI,KAAK,QAAQ,IAAI,KAAK,UAAU,MAAM,UAAU,IAAI,KAAK,QAAQ,IAAI,KAAK,UAAU,IAAI,IAAI;AAChN,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AACA,6BAA6B,SAAS,UAAU,SAAS;AACvD,MAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS;AACrC,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,QAAQ,KAAK,QAAQ,KAAK,SAAS,IAAI,MAAM,QAAQ,KAAK,QAAQ,KAAK,SAAS,IAAI,IAAI,IAAI;AAC9F,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AACA,2BAA2B,IAAI,IAAI,IAAI,QAAQ;AAC7C,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,YAAY,CAAC;AAEvB,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,QAAI,KAAK,GAAG,KAAK,GAAG;AACpB,QAAI,KAAK,GAAG,KAAK,GAAG;AACpB,QAAI,KAAK,GAAG,KAAK,GAAG;AACpB,QAAI,KAAK,CAAC,IAAI;AACd,QAAI,KAAK,CAAC,IAAI;AACd,QAAI,KAAK,CAAC,IAAI;AAAA,EAChB;AAEA,MAAI,SAAS,KAAK,GAAG;AACrB,MAAI,SAAS,KAAK,GAAG;AACrB,MAAI,SAAS,KAAK,GAAG;AACrB,MAAI,cAAc,YAAY,CAAC;AAC/B,QAAM,KAAK,KAAK,WAAW;AAC3B,MAAI,YAAY,KAAK,WAAW;AAChC,MAAI,SAAS,SAAS,SAAS,SAAU,KAAI;AAC7C,MAAI,cAAc,IAAI,YAAY;AAClC,MAAI,QAAQ,SAAS,SAAS,IAAI,KAAK,GAAG,IAAI;AAC9C,MAAI,OAAO,SAAS,SAAS,IAAI,KAAK,GAAG,IAAI;AAC7C,MAAI,QAAQ,SAAS,SAAS,IAAI,KAAK,GAAG,IAAI;AAE9C,WAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,WAAO,OAAO,QAAQ,GAAG,OAAO,OAAO,GAAG,OAAO,QAAQ,GAAG;AAAA,EAC9D;AAEA,SAAO;AACT;AAUA,qCAAqC;AACnC,SAAO,CAAC,EAAE,OAAO;AAAA,IAAC,OAAO;AAAA,IAAW,CAAC,OAAO;AAAA,IAC5C,OAAO;AAAA,IAAW,CAAC,OAAO;AAAA,IAC1B,OAAO;AAAA,IAAW,CAAC,OAAO;AAAA,EAC1B,CAAC;AACH;AACA,2BAA2B,QAAQ;AACjC,MAAI,WAAW;AACf,MAAI,YAAY;AAEhB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,QAAQ,KAAK,IAAI,OAAO,EAAE;AAE9B,QAAI,QAAQ,UAAU;AACpB,kBAAY;AACZ,iBAAW;AAAA,IACb;AAAA,EACF;AAEA,SAAO;AACT;AACA,qBAAqB,OAAO;AAC1B,MAAI,UAAU,KAAK,MAAM,QAAQ,GAAG;AAEpC,MAAI,UAAU,IAAI;AAChB,WAAO,QAAQ,SAAS,EAAE;AAAA,EAC5B;AAEA,SAAO,IAAI,OAAO,QAAQ,SAAS,EAAE,CAAC;AACxC;AACA,0BAA0B,UAAU;AAClC,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,SAAO,GAAG,OAAO,MAAM,EAAE,OAAO,SAAS,IAAI,WAAW,EAAE,KAAK,EAAE,CAAC;AACpE;AAEA,qBAAqB,GAAG;AACtB,SAAO,KAAK,MAAM,IAAI,GAAG;AAC3B;AAEA,uBAAuB,UAAU;AAC/B,MAAI,SAAS,WAAW,GAAG;AACzB,WAAO,OAAO,OAAO,SAAS,IAAI,WAAW,EAAE,KAAK,IAAI,GAAG,GAAG;AAAA,EAChE;AAEA,SAAO,QAAQ,OAAO,YAAY,SAAS,MAAM,CAAC,GAAG,IAAI,EAAE,OAAO,YAAY,SAAS,MAAM,CAAC,GAAG,IAAI,EAAE,OAAO,YAAY,SAAS,MAAM,CAAC,GAAG,IAAI,EAAE,OAAO,SAAS,MAAM,GAAG,GAAG;AACjL;AAzjEA,IACA,mBAGI,gBACA,kBAWA,iBACA,mBACA,kBA8BA,IASA,OACA,OACA,MACA,KACA,KA6CA,UACA,WAoEA,UAifA,kBAuxCA,2BACA,wBA2EA,KACA,QACA,OAGA,UACA,QACA,OAmDA,SA8GA;AA3qEJ;AAAA;AAAA;AACA,wBAAuB;AACvB;AAEA,IAAI,iBAAgB,MAAM;AAA1B,IACI,mBAAkB,MAAM;AAW5B,IAAI,kBAAkB;AACtB,IAAI,oBAAoB;AACxB,IAAI,mBAAmB;AA8BvB,IAAI,KAAK,eAAc;AACrB,aAAO,KAAK;AAAA,IACd;AAOA,IAAI,QAAQ,KAAK;AAAjB,IACI,QAAQ,KAAK;AADjB,IAEI,OAAO,KAAK;AAFhB,IAGI,MAAM,KAAK;AAHf,IAII,MAAM,KAAK;AA6Cf,IAAI,WAAW,eAAe,UAAU;AACxC,IAAI,YAAY,eAAe,WAAW;AAoE1C,IAAI,WAAW,eAAe,UAAU;AAifxC,IAAI,mBAAmB;AAuxCvB,IAAI,4BAA4B,eAAe,2BAA2B;AAC1E,IAAI,yBAAyB,eAAe,wBAAwB;AA2EpE,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ,gBAAe,OAAO;AAChC,aAAO,CAAC,OAAO,SAAS,KAAK;AAAA,IAC/B;AACA,IAAI,WAAW,OAAO;AAAtB,IACI,SAAQ,OAAO;AACnB,IAAI,QAAQ;AAmyB,OAAO,OAAO;AAAA,MACzC,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA;AAAA;;;ACzxED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,MAAI,SAAS,IAAI,aAAa,CAAC;AAC/B,MAAI,WAAW,IAAI,aAAa,CAAC,GAAK,GAAK,EAAI,CAAC;AAChD,MAAI,UAAU,IAAI,aAAa,CAAC,GAAK,GAAK,CAAG,CAAC;AAC9C,MAAI,YAAY,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAClD,MAAI,WAAU,IAAI,aAAa,CAAC;AAChC,MAAI,UAAU,IAAI,aAAa,CAAC;AAChC,MAAI,UAAU,IAAI,aAAa,CAAC;AAChC,MAAI,eAAe,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACrD,MAAI,QAAQ,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAC9C,MAAI,cAAc,IAAI,aAAa,CAAC;AACpC,MAAI,gBAAgB,IAAI,aAAa,CAAC;AAEtC,oCAAkC;AAEhC,UAAM,gBAAgB,KAAK,CAAC,MAAM,sBAAsB;AACxD,UAAM,gBAAgB,KAAK,CAAC,MAAM,sBAAsB;AACxD,UAAM,gBAAgB,KAAK,CAAC,MAAM,sBAAsB;AAAA,EAC1D;AAEA,YAAU,sBAAsB,WAAY;AAC1C,QAAI,KAAK,UAAU,cAAc;AACjC,UAAM,OAAO,KAAK,GAAG;AACrB,UAAM,OAAO,KAAK,GAAG;AACrB,UAAM,OAAO,KAAK,GAAG;AACrB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG;AACzC,QAAI,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,SAAS,IAAI;AACjF;AAAA,IACF;AAEA,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,KAAK;AAEpB,cAAU,gBAAgB;AAC1B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,gBAAgB,SAAU,GAAG,GAAG,GAAG;AAC3C,QAAI,MAAM,MAAM,WAAW,MAAM,MAAM,MAAM,WAAW,MAAM,MAAM,MAAM,WAAW,IAAI;AACvF;AAAA,IACF;AAEA,UAAM,WAAW,KAAK;AACtB,UAAM,WAAW,KAAK;AACtB,UAAM,WAAW,KAAK;AAEtB,cAAU,gBAAgB;AAC1B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,cAAc,SAAU,GAAG;AACnC,QAAI,MAAM,aAAa,GAAG;AACxB;AAAA,IACF;AAEA,UAAM,WAAW;AAEjB,QAAI,MAAM,WAAW,OAAO;AAC1B,YAAM,WAAW;AACjB,qBAAc,6BAA6B;AAAA,IAC7C;AAGA,QAAI,MAAM,MAAM;AAEhB,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,cAAU,SAAS;AAAA,EACrB;AAIA,YAAU,kBAAkB,WAAY;AACtC,QAAI,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC9C,QAAI,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC9C,QAAI,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC9C,UAAM,WAAW,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AAEtD,QAAI,MAAM,WAAW,OAAO;AAC1B,YAAM,WAAW;AACjB,qBAAc,6BAA6B;AAC3C,UAAI,MAAM,MAAM;AAEhB,YAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,YAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,YAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AAAA,IAC3D;AAEA,UAAM,sBAAsB,KAAK,KAAK,MAAM;AAC5C,UAAM,sBAAsB,KAAK,KAAK,MAAM;AAC5C,UAAM,sBAAsB,KAAK,KAAK,MAAM;AAC5C,2BAAuB;AAAA,EACzB;AAMA,YAAU,QAAQ,SAAU,QAAQ;AAClC,QAAI,UAAU,GAAK;AACjB;AAAA,IACF;AAGA,QAAI,IAAI,MAAM,WAAW;AACzB,cAAU,YAAY,MAAM,WAAW,KAAK,IAAI,MAAM,sBAAsB,IAAI,MAAM,WAAW,KAAK,IAAI,MAAM,sBAAsB,IAAI,MAAM,WAAW,KAAK,IAAI,MAAM,sBAAsB,EAAE;AAAA,EACpM;AAEA,YAAU,OAAO,SAAU,OAAO;AAChC,QAAI,MAAM,MAAM;AAChB,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM;AACf,QAAI,aAAa,IAAI,aAAa,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAG,CAAC;AAC5D,iBAAK,SAAS,YAAY;AAC1B,QAAI,UAAU,IAAI,aAAa,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;AAC/E,iBAAK,OAAO,cAAc,cAAc,mBAAmB,KAAK,GAAG,OAAO;AAC1E,iBAAK,cAAc,YAAY,YAAY,YAAY;AACvD,UAAM,OAAO,KAAK,WAAW;AAC7B,UAAM,OAAO,KAAK,WAAW;AAC7B,UAAM,OAAO,KAAK,WAAW;AAC7B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,UAAU,SAAU,OAAO;AACnC,QAAI,KAAK,MAAM;AACf,iBAAK,SAAS,KAAK;AAInB,iBAAK,UAAU,OAAO,OAAO,EAAE;AAC/B,iBAAK,OAAO,OAAO,OAAO,mBAAmB,KAAK,GAAG,MAAM,MAAM;AACjE,iBAAK,UAAU,OAAO,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAErD,iBAAK,cAAc,aAAa,MAAM,UAAU,KAAK;AACrD,cAAU,YAAY,YAAY,IAAI,YAAY,IAAI,YAAY,EAAE;AAAA,EACtE;AAEA,YAAU,MAAM,SAAU,OAAO;AAC/B,QAAI,WAAW,MAAM;AACrB,iBAAK,SAAS,KAAK;AAInB,iBAAK,UAAU,OAAO,OAAO,QAAQ;AACrC,iBAAK,OAAO,OAAO,OAAO,mBAAmB,KAAK,GAAG,MAAM,MAAM;AACjE,iBAAK,UAAU,OAAO,OAAO,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE,CAAC;AAEvE,iBAAK,cAAc,eAAe,MAAM,YAAY,KAAK;AACzD,cAAU,cAAc,cAAc,IAAI,cAAc,IAAI,cAAc,EAAE;AAAA,EAC9E;AAEA,YAAU,YAAY,SAAU,OAAO;AACrC,QAAI,KAAK,MAAM;AAEf,QAAI,KAAK,UAAU,cAAc;AACjC,QAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;AAClC,iBAAK,SAAS,KAAK;AAInB,iBAAK,UAAU,OAAO,OAAO,EAAE;AAC/B,iBAAK,OAAO,OAAO,OAAO,mBAAmB,KAAK,GAAG,IAAI;AACzD,iBAAK,UAAU,OAAO,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAErD,iBAAK,cAAc,aAAa,MAAM,UAAU,KAAK;AACrD,cAAU,YAAY,YAAY,IAAI,YAAY,IAAI,YAAY,EAAE;AAAA,EACtE;AAEA,YAAU,QAAQ,SAAU,OAAO;AACjC,QAAI,WAAW,MAAM;AACrB,QAAI,KAAK,UAAU,cAAc;AACjC,QAAI,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAC/B,iBAAK,SAAS,KAAK;AAInB,iBAAK,UAAU,OAAO,OAAO,QAAQ;AACrC,iBAAK,OAAO,OAAO,OAAO,mBAAmB,KAAK,GAAG,IAAI;AACzD,iBAAK,UAAU,OAAO,OAAO,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE,CAAC;AAEvE,iBAAK,cAAc,eAAe,MAAM,YAAY,KAAK;AACzD,cAAU,cAAc,MAAM,WAAW,mBAAmB,aAAa,CAAC;AAAA,EAC5E;AAEA,YAAU,OAAO,SAAU,QAAQ;AACjC,QAAI,UAAU,GAAG;AACf;AAAA,IACF;AAEA,QAAI,MAAM,oBAAoB;AAC5B,YAAM,iBAAiB;AAAA,IACzB,OAAO;AACL,YAAM,aAAa;AAAA,IACrB;AAEA,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,YAAY,SAAU,GAAG,GAAG,GAAG;AACvC,QAAI,SAAS,CAAC,GAAG,GAAG,CAAC;AACrB,QAAI,MAAM,UAAU,QAAQ,MAAM,QAAQ;AAC1C,QAAI,MAAM,YAAY,QAAQ,MAAM,UAAU;AAC9C,cAAU,gBAAgB;AAC1B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,iBAAiB,SAAU,eAAe;AAClD,QAAI,QAAQ,CAAC,EAAE,OAAO,mBAAmB,MAAM,MAAM,GAAG,CAAC,CAAG,CAAC;AAC7D,QAAI,SAAS,CAAC;AACd,QAAI,QAAQ,CAAC;AACb,QAAI,QAAQ,CAAC;AACb,UAAM,MAAM,MAAM,SAAS;AAC3B,UAAM,MAAM,MAAM,SAAS;AAC3B,UAAM,MAAM,MAAM,SAAS;AAC3B,iBAAK,cAAc,QAAQ,CAAC,EAAE,OAAO,mBAAmB,MAAM,QAAQ,GAAG,CAAC,CAAG,CAAC,GAAG,aAAa;AAC9F,iBAAK,cAAc,OAAO,CAAC,EAAE,OAAO,mBAAmB,MAAM,UAAU,GAAG,CAAC,CAAG,CAAC,GAAG,aAAa;AAC/F,iBAAK,cAAc,OAAO,OAAO,aAAa;AAC9C,UAAM,MAAM,OAAO;AACnB,UAAM,MAAM,OAAO;AACnB,UAAM,MAAM,OAAO;AACnB,cAAU,YAAY,MAAM,WAAW,mBAAmB,OAAO,MAAM,GAAG,CAAC,CAAC,CAAC;AAC7E,cAAU,cAAc,MAAM,WAAW,mBAAmB,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9E,cAAU,UAAU,MAAM,WAAW,mBAAmB,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,EAC5E;AAEA,YAAU,eAAe,WAAY;AACnC,WAAO,MAAM,cAAc,KAAK,MAAM,cAAc;AAAA,EACtD;AAEA,YAAU,eAAe,SAAU,WAAW;AAC5C,QAAI,IAAI;AAER,QAAI,IAAI,OAAO;AACb,UAAI;AACJ,qBAAc,8BAA8B;AAAA,IAC9C;AAEA,cAAU,iBAAiB,MAAM,cAAc,IAAI,MAAM,cAAc,KAAK,CAAC;AAAA,EAC/E;AAEA,YAAU,6BAA6B,SAAU,WAAW;AAC1D,QAAI,IAAI;AAER,QAAI,IAAI,OAAO;AACb,UAAI;AACJ,qBAAc,8BAA8B;AAAA,IAC9C;AAEA,cAAU,iBAAiB,MAAM,WAAW,IAAI,GAAG,MAAM,WAAW,IAAI,CAAC;AAAA,EAC3E;AAGA,YAAU,UAAU,SAAU,OAAO;AAAA,EAAC;AAGtC,YAAU,UAAU,WAAY;AAAA,EAAC;AAEjC,YAAU,mBAAmB,SAAU,OAAO,MAAM;AAAA,EAAC;AAErD,YAAU,iBAAiB,WAAY;AAAA,EAAC;AAExC,YAAU,qBAAqB,WAAY;AAAA,EAAC;AAE5C,YAAU,mBAAmB,SAAU,QAAQ;AAAA,EAC/C;AAEA,YAAU,gCAAgC,WAAY;AAAA,EAAC;AAEvD,YAAU,WAAW,SAAU,cAAc;AAAA,EAAC;AAE9C,YAAU,sCAAsC,SAAU,KAAK;AAE7D,QAAI,OAAO,aAAK,WAAW,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACzD,QAAI,QAAQ,aAAK,OAAO;AACxB,QAAI,OAAO,aAAK,WAAW,GAAK,GAAK,GAAK,CAAG;AAC7C,iBAAK,UAAU,OAAO,IAAI;AAE1B,iBAAK,SAAS,MAAM,MAAM,IAAI;AAC9B,iBAAK,SAAS,MAAM,MAAM,KAAK;AAE/B,WAAO,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EACnC;AAEA,YAAU,2BAA2B,SAAU,QAAQ;AACrD,cAAU,yBAAyB,MAAM;AACzC,iBAAK,OAAO,QAAQ,MAAM;AAAA,EAC5B;AAEA,YAAU,2BAA2B,SAAU,QAAQ;AACrD,iBAAK,SAAS,MAAM;AAEpB,QAAI,aAAa,CAAC,CAAC;AACnB,UAAM,MAAM,mBAAmB,MAAM,gBAAgB,UAAU;AAC/D,WAAO,KAAK,WAAW;AACvB,WAAO,KAAK,WAAW;AACvB,WAAO,KAAK,WAAW;AACvB,WAAO,KAAK,MAAM,eAAe;AACjC,WAAO,KAAK,MAAM,eAAe;AACjC,WAAO,KAAK,MAAM,eAAe;AACjC,WAAO,KAAK,CAAC,MAAM,kBAAkB;AACrC,WAAO,KAAK,CAAC,MAAM,kBAAkB;AACrC,WAAO,MAAM,CAAC,MAAM,kBAAkB;AACtC,iBAAK,UAAU,QAAQ,MAAM;AAC7B,iBAAK,IAAI,UAAS,IAAI,MAAM,eAAe,IAAI,MAAM,eAAe,IAAI,MAAM,aAAa;AAC3F,iBAAK,MAAM,QAAQ,QAAQ,QAAO;AAClC,iBAAK,UAAU,QAAQ,QAAQ,MAAM,mBAAmB;AAAA,EAC1D;AAEA,YAAU,sCAAsC,SAAU,MAAM;AAE9D,iBAAK,OAAO,WAAW,IAAI;AAU3B,iBAAK,cAAc,UAAS,QAAQ,SAAS;AAC7C,cAAU,gBAAgB;AAC1B,QAAI,UAAU,MAAM;AACpB,cAAU,YAAY,SAAQ,IAAI,SAAQ,IAAI,SAAQ,EAAE;AAExD,iBAAK,cAAc,SAAS,UAAU,SAAS;AAC/C,iBAAK,SAAS,SAAS,SAAS,QAAO;AACvC,iBAAK,UAAU,SAAS,OAAO;AAC/B,cAAU,yBAAyB,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACrE,iBAAK,cAAc,SAAS,SAAS,SAAS;AAC9C,iBAAK,SAAS,SAAS,SAAS,QAAO;AACvC,iBAAK,UAAU,SAAS,OAAO;AAC/B,cAAU,UAAU,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtD,cAAU,YAAY,OAAO;AAAA,EAC/B;AAKA,YAAU,0CAA0C,SAAU,KAAK;AAEjE,cAAU,yBAAyB,SAAS;AAG5C,iBAAK,SAAS,WAAW,KAAK,SAAS;AACvC,cAAU,oCAAoC,SAAS;AAAA,EACzD;AAEA,YAAU,gBAAgB,SAAU,KAAK;AACvC,UAAM,aAAa;AAEnB,QAAI,MAAM,YAAY;AACpB,mBAAK,KAAK,WAAW,MAAM,UAAU;AACrC,gBAAU,oCAAoC,SAAS;AACvD,mBAAK,UAAU,MAAM,YAAY,MAAM,UAAU;AAAA,IACnD;AAAA,EACF;AAEA,YAAU,gBAAgB,WAAY;AACpC,QAAI,MAAM,YAAY;AACpB,aAAO,MAAM;AAAA,IACf;AAEA,iBAAK,OAAO,WAAW,MAAM,UAC7B,MAAM,YACN,MAAM,MACN;AACA,iBAAK,UAAU,WAAW,SAAS;AACnC,QAAI,SAAS,IAAI,aAAa,EAAE;AAChC,iBAAK,KAAK,QAAQ,SAAS;AAC3B,WAAO;AAAA,EACT;AAEA,YAAU,sBAAsB,SAAU,KAAK;AAC7C,UAAM,mBAAmB;AAAA,EAC3B;AAEA,YAAU,sBAAsB,SAAU,QAAQ,OAAO,MAAM;AAC7D,QAAI,SAAS,IAAI,aAAa,EAAE;AAChC,iBAAK,SAAS,MAAM;AAEpB,QAAI,MAAM,kBAAkB;AAC1B,UAAI,QAAQ,IAAI,MAAM;AACtB,mBAAK,IAAI,UAAS,OAAO,OAAO,KAAK;AACrC,mBAAK,KAAK,QAAQ,MAAM,gBAAgB;AACxC,mBAAK,MAAM,QAAQ,QAAQ,QAAO;AAClC,mBAAK,UAAU,QAAQ,MAAM;AAC7B,aAAO;AAAA,IACT;AAEA,iBAAK,SAAS,SAAS;AAIvB,QAAI,SAAS,MAAM,cAAc,KAAK,MAAM,cAAc;AAC1D,QAAI,SAAS,CAAC,MAAM,cAAc,KAAM,SAAQ,KAAK,SAAS,GAAK,MAAM,cAAc,KAAM,QAAO,KAAK,SAAS,CAAG;AAErH,QAAI,MAAM,oBAAoB;AAE5B,UAAI,QAAQ,MAAM,gBAAgB;AAClC,UAAI,SAAS,MAAM;AACnB,UAAI,OAAQ,OAAM,aAAa,KAAK,KAAO;AAC3C,UAAI,OAAQ,OAAM,aAAa,KAAK,KAAO;AAC3C,UAAI,OAAQ,OAAM,aAAa,KAAK,KAAO;AAC3C,UAAI,OAAQ,OAAM,aAAa,KAAK,KAAO;AAC3C,mBAAK,MAAM,WAAW,MAAM,MAAM,MAAM,MAAM,OAAO,IAAI,OAAO,EAAE;AAClE,mBAAK,UAAU,WAAW,SAAS;AAAA,IACrC,WAAW,MAAM,sBAAsB;AACrC,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACrE,OAAO;AACL,UAAI,MAAM,KAAK,IAAI,mBAAmB,MAAM,SAAS,IAAI,CAAG;AAE5D,UAAI;AAEJ,UAAI;AAEJ,UAAI,MAAM,2BAA2B,MAAM;AACzC,iBAAS,MAAM,cAAc,KAAK;AAClC,kBAAU,MAAM,cAAc,KAAK,MAAM;AAAA,MAC3C,OAAO;AACL,iBAAS,MAAM,cAAc,KAAK,MAAM;AACxC,kBAAU,MAAM,cAAc,KAAK;AAAA,MACrC;AAEA,UAAI,QAAS,OAAM,aAAa,KAAK,KAAO;AAE5C,UAAI,QAAS,OAAM,aAAa,KAAK,KAAO;AAE5C,UAAI,QAAS,OAAM,aAAa,KAAK,KAAO;AAE5C,UAAI,QAAS,OAAM,aAAa,KAAK,KAAO;AAE5C,UAAI,QAAQ,OAAO;AACnB,UAAI,OAAO,OAAO;AAClB,gBAAU,KAAK,IAAM,QAAS,SAAQ;AACtC,gBAAU,KAAK,IAAM,QAAS,SAAQ;AACtC,gBAAU,KAAM,SAAQ,SAAU,SAAQ;AAC1C,gBAAU,KAAM,SAAQ,SAAU,SAAQ;AAC1C,gBAAU,MAAM,CAAE,SAAQ,QAAS,QAAO;AAC1C,gBAAU,MAAM;AAChB,gBAAU,MAAM,KAAO,QAAQ,OAAQ,QAAO;AAC9C,gBAAU,MAAM;AAAA,IAClB;AAEA,iBAAK,KAAK,QAAQ,SAAS;AAC3B,WAAO;AAAA,EACT;AAEA,YAAU,+BAA+B,SAAU,QAAQ,OAAO,MAAM;AACtE,QAAI,OAAO,UAAU,cAAc;AACnC,QAAI,OAAO,UAAU,oBAAoB,QAAQ,OAAO,IAAI;AAG5D,iBAAK,SAAS,MAAM,MAAM,IAAI;AAC9B,WAAO;AAAA,EACT;AAEA,YAAU,2BAA2B,SAAU,GAAG,GAAG,GAAG;AACtD,QAAI,MAAM,sBAAsB,OAAO,KAAK,MAAM,sBAAsB,OAAO,KAAK,MAAM,sBAAsB,OAAO,GAAG;AACxH;AAAA,IACF;AAEA,UAAM,sBAAsB,KAAK;AACjC,UAAM,sBAAsB,KAAK;AACjC,UAAM,sBAAsB,KAAK;AACjC,QAAI,MAAM,MAAM;AAEhB,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,UAAM,WAAW,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,MAAM;AACzD,2BAAuB;AAAA,EACzB;AAkBA,YAAU,kBAAkB,SAAU,OAAO,MAAM,OAAO,QAAQ;AAChE,QAAI,aAAa,CAAC,CAAC;AACnB,UAAM,MAAM,mBAAmB,MAAM,gBAAgB,UAAU;AAE/D,QAAI,SAAS,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAC/C,iBAAK,OAAO,QAAQ,QAAQ,mBAAmB,KAAK,GAAG,MAAM,cAAc;AAC3E,iBAAK,OAAO,QAAQ,QAAQ,mBAAmB,IAAI,GAAG,UAAU;AAChE,iBAAK,OAAO,QAAQ,QAAQ,mBAAmB,KAAK,GAAG,MAAM,iBAAiB;AAC9E,iBAAK,OAAO,QAAQ,QAAQ,mBAAmB,CAAC,MAAM,GAAG,MAAM,cAAc;AAC7E,QAAI,MAAM,IAAI,aAAa,CAAC,CAAC,MAAM,eAAe,IAAI,CAAC,MAAM,eAAe,IAAI,CAAC,MAAM,eAAe,EAAE,CAAC;AACzG,QAAI,MAAM,IAAI,aAAa,MAAM,iBAAiB;AAClD,iBAAK,cAAc,KAAK,KAAK,MAAM;AACnC,iBAAK,cAAc,KAAK,KAAK,MAAM;AACnC,cAAU,yBAAyB,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACzD,cAAU,UAAU,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1C,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,qBAAqB,SAAU,SAAS,GAAG,GAAG,GAAG;AACzD,QAAI,UAAU,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAEhD,QAAI,YAAY,KAAQ,OAAM,KAAO,MAAM,KAAO,MAAM,IAAM;AAE5D,UAAI,QAAQ,mBAAmB,OAAO;AACtC,UAAI,IAAI,aAAK,OAAO;AACpB,mBAAK,aAAa,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK;AACrC,mBAAK,SAAS,SAAS,CAAC;AAAA,IAC1B;AAEA,QAAI,SAAS,IAAI,aAAa,CAAC;AAC/B,iBAAK,cAAc,QAAQ,CAAC,GAAK,GAAK,EAAI,GAAG,OAAO;AACpD,QAAI,SAAS,IAAI,aAAa,CAAC;AAC/B,iBAAK,cAAc,QAAQ,CAAC,GAAK,GAAK,CAAG,GAAG,OAAO;AACnD,cAAU,yBAAyB,MAAM,WAAW,mBAAmB,MAAM,CAAC;AAC9E,cAAU,UAAU,MAAM,WAAW,mBAAmB,MAAM,CAAC;AAC/D,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,uBAAuB,SAAU,QAAQ;AACjD,QAAI,KAAK;AACT,QAAI,WAAW;AACf,SAAK,MAAM;AACX,eAAW,MAAM;AACjB,QAAI,IAAI,CAAC,GAAG;AACZ,QAAI,IAAI,CAAC,GAAG;AACZ,QAAI,IAAI,CAAC,GAAG;AACZ,QAAI,IAAI,CAAE,KAAI,SAAS,KAAK,IAAI,SAAS,KAAK,IAAI,SAAS;AAE3D,QAAI,QAAQ,CAAC,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,GAAG,KAAK;AAErE,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,OAAO,IAAI,OAAO,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK;AACnE,gBAAM,KAAK,OAAO,MAAM,KAAK,OAAO,MAAM;AAC1C,gBAAM,KAAK,OAAO,MAAM,KAAK,OAAO,MAAM;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AA+BA,gBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,gBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,CAAC;AACxC,QAAM,OAAO,WAAW,OAAO,CAAC,sBAAsB,0BAA0B,aAAa,iBAAiB,wBAAwB,oBAAoB,eAAe,CAAC;AAC1K,QAAM,SAAS,WAAW,OAAO,CAAC,yBAAyB,mBAAmB,YAAY,YAAY,CAAC;AACvG,QAAM,YAAY,WAAW,OAAO,CAAC,iBAAiB,cAAc,GAAG,CAAC;AACxE,QAAM,YAAY,WAAW,OAAO,CAAC,UAAU,oBAAoB,qBAAqB,kBAAkB,uBAAuB,kBAAkB,mBAAmB,GAAG,CAAC;AAE1K,YAAU,WAAW,KAAK;AAC5B;AA/mBA,IAKI,gBAokBA,gBAwCA,cAEA;AAnnBJ;AAAA;AAAA;AACA;AACA;AACA;AAEA,IAAI,iBAAgB,MAAM;AAokB1B,IAAI,iBAAiB;AAAA,MACnB,UAAU,CAAC,GAAG,GAAG,CAAC;AAAA,MAClB,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,MACpB,QAAQ,CAAC,GAAG,GAAG,CAAC;AAAA,MAChB,uBAAuB,CAAC,GAAG,GAAG,EAAE;AAAA,MAChC,oBAAoB;AAAA,MACpB,wBAAwB;AAAA,MACxB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,eAAe,CAAC,MAAM,OAAO;AAAA,MAC7B,cAAc,CAAC,GAAG,CAAC;AAAA,MACnB,iBAAiB,CAAC,GAAG,GAAG,CAAC;AAAA,MACzB,sBAAsB;AAAA,MACtB,kBAAkB,CAAC,MAAM,MAAM,IAAI;AAAA,MACnC,mBAAmB,CAAC,KAAK,MAAM,IAAI;AAAA,MACnC,gBAAgB,CAAC,KAAK,KAAK,IAAI;AAAA,MAC/B,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,YAAY;AAAA,MAEZ,qBAAqB,CAAC,GAAG,GAAG,CAAC;AAAA,MAC7B,eAAe;AAAA,MACf,gBAAgB,CAAC,GAAG,GAAG,CAAC;AAAA,MACxB,mBAAmB,CAAC,GAAG,GAAG,EAAE;AAAA,IAC9B;AAgBA,IAAI,eAAc,MAAM,YAAY,QAAQ,WAAW;AAEvD,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb;AAAA,IACF;AAAA;AAAA;;;ACtnyBAAO;AACP;AACA;AAAA;AAAA;;;ACCA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAOzf,kBAAkB,QAAQ,QAAQ,GAAG;AACnC,SAAO,OAAO,KAAM,GAAE,KAAK,OAAO,MAAM,OAAO,KAAM,GAAE,KAAK,OAAO,MAAM,OAAO,KAAM,GAAE,KAAK,OAAO;AACtG;AAEA,yBAAyB,GAAG,QAAQ,QAAQ;AAC1C,MAAI,WAAW,OAAO,KAAM,GAAE,KAAK,OAAO,MAAM,OAAO,KAAM,GAAE,KAAK,OAAO,MAAM,OAAO,KAAM,GAAE,KAAK,OAAO;AAC5G,SAAO,KAAK,IAAI,QAAQ;AAC1B;AAEA,sBAAsB,GAAG,QAAQ,QAAQ,OAAO;AAC9C,MAAI,KAAK,CAAC;AACV,WAAS,GAAG,QAAQ,EAAE;AACtB,MAAI,IAAI,IAAI,QAAQ,EAAE;AACtB,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO;AAC7B,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO;AAC7B,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO;AAC/B;AAEA,wBAAuB,GAAG,QAAQ,OAAO;AACvC,MAAI,IAAI,IAAI,GAAG,MAAM;AACrB,MAAI,KAAK,IAAI,QAAQ,MAAM;AAE3B,MAAI,OAAO,GAAG;AACZ,SAAK;AAAA,EACP;AAEA,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAClC,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAClC,QAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAClC,SAAO;AACT;AAEA,iCAAiC,GAAG,QAAQ,QAAQ,OAAO;AACzD,MAAI,KAAK,CAAC;AACV,WAAS,GAAG,QAAQ,EAAE;AACtB,MAAI,IAAI,IAAI,QAAQ,EAAE;AACtB,MAAI,KAAK,IAAI,QAAQ,MAAM;AAE3B,MAAI,OAAO,GAAG;AACZ,UAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAClC,UAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAClC,UAAM,KAAK,EAAE,KAAK,IAAI,OAAO,KAAK;AAAA,EACpC,OAAO;AACL,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AAAA,EACf;AACF;AAEA,2BAA2B,IAAI,IAAI,QAAQ,QAAQ;AACjD,MAAI,SAAS;AAAA,IACX,cAAc;AAAA,IACd,eAAe;AAAA,IACf,GAAG,OAAO;AAAA,IACV,GAAG,CAAC;AAAA,EACN;AACA,MAAI,MAAM,CAAC;AACX,MAAI,WAAW,CAAC;AAEhB,WAAS,IAAI,IAAI,GAAG;AACpB,WAAS,QAAQ,IAAI,QAAQ;AAG7B,MAAI,MAAM,IAAI,QAAQ,QAAQ;AAC9B,MAAI,MAAM,IAAI,QAAQ,GAAG;AAGzB,MAAI;AACJ,MAAI;AAEJ,MAAI,MAAM,GAAK;AACb,cAAU,CAAC;AAAA,EACb,OAAO;AACL,cAAU;AAAA,EACZ;AAEA,MAAI,MAAM,GAAK;AACb,oBAAgB,CAAC,MAAM;AAAA,EACzB,OAAO;AACL,oBAAgB,MAAM;AAAA,EACxB;AAEA,MAAI,WAAW,eAAe;AAC5B,WAAO;AAAA,EACT;AAIA,SAAO,IAAI,MAAM;AACjB,SAAO,EAAE,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AACrC,SAAO,EAAE,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AACrC,SAAO,EAAE,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AACrC,SAAO,eAAe;AACtB,SAAO,gBAAgB,OAAO,KAAK,KAAO,OAAO,KAAK;AACtD,SAAO;AACT;AAEA,4BAA4B,cAAc,cAAc,cAAc,cAAc;AAClF,MAAI,SAAS;AAAA,IACX,cAAc;AAAA,IACd,IAAI,CAAC;AAAA,IACL,IAAI,CAAC;AAAA,IACL,OAAO;AAAA,EACT;AACA,MAAI,UAAU,CAAC;AACf,QAAM,cAAc,cAAc,OAAO;AACzC,MAAI,WAAW,QAAQ,IAAI,SAAU,GAAG;AACtC,WAAO,KAAK,IAAI,CAAC;AAAA,EACnB,CAAC;AAED,MAAI,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,iBAAiB;AAE7D,QAAI,IAAI,CAAC;AACT,aAAS,cAAc,cAAc,CAAC;AAEtC,QAAI,IAAI,cAAc,CAAC,MAAM,GAAG;AAC9B,aAAO,QAAQ;AAAA,IACjB,OAAO;AACL,aAAO,QAAQ;AAAA,IACjB;AAEA,WAAO;AAAA,EACT;AAIA,MAAI;AAEJ,MAAI,SAAS,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,IAAI;AAC1D,WAAO;AAAA,EACT,WAAW,SAAS,KAAK,SAAS,IAAI;AACpC,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AAGA,MAAI,KAAK,CAAC;AAGV,MAAI,KAAK,CAAC,IAAI,cAAc,YAAY;AACxC,MAAI,KAAK,CAAC,IAAI,cAAc,YAAY;AAExC,UAAQ;AAAA,SACD;AAEH,SAAG,KAAK;AACR,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE;AAAA,SAEG;AAEH,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE,SAAG,KAAK;AACR,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE;AAAA,SAEG;AAEH,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE,SAAG,KAAM,MAAK,aAAa,KAAK,KAAK,aAAa,MAAM,QAAQ;AAChE,SAAG,KAAK;AACR;AAAA;AAGJ,SAAO,KAAK;AACZ,MAAI,IAAI,SAAS,OAAO,EAAE;AAC1B,SAAO,eAAe;AACtB,SAAO;AACT;AAmBA,kBAAkB,WAAW,OAAO;AAElC,QAAM,eAAe,KAAK,UAAU;AAEpC,YAAU,kBAAkB,SAAU,GAAG;AACvC,WAAO,gBAAgB,GAAG,MAAM,QAAQ,MAAM,MAAM;AAAA,EACtD;AAEA,YAAU,eAAe,SAAU,GAAG,OAAO;AAC3C,iBAAa,GAAG,MAAM,QAAQ,MAAM,QAAQ,KAAK;AAAA,EACnD;AAEA,YAAU,gBAAgB,SAAU,GAAG,OAAO;AAC5C,WAAO,eAAc,GAAG,MAAM,QAAQ,KAAK;AAAA,EAC7C;AAEA,YAAU,OAAO,SAAU,UAAU;AACnC,QAAI,aAAa,GAAK;AACpB;AAAA,IACF;AAEA,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAM,OAAO,MAAM,WAAW,MAAM,OAAO;AAAA,IAC7C;AAAA,EACF;AAEA,YAAU,0BAA0B,SAAU,GAAG,OAAO;AACtD,4BAAwB,GAAG,MAAM,QAAQ,MAAM,QAAQ,KAAK;AAAA,EAC9D;AAEA,YAAU,mBAAmB,SAAU,GAAG,GAAG,GAAG;AAC9C,QAAI,CAAC,MAAM,QAAQ,CAAC,GAAG;AACrB,aAAO,MAAM,OAAO,KAAM,KAAI,MAAM,OAAO,MAAM,MAAM,OAAO,KAAM,KAAI,MAAM,OAAO,MAAM,MAAM,OAAO,KAAM,KAAI,MAAM,OAAO;AAAA,IACjI;AAEA,WAAO,MAAM,OAAO,KAAM,GAAE,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,KAAM,GAAE,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,KAAM,GAAE,KAAK,MAAM,OAAO;AAAA,EAC1I;AAEA,YAAU,mBAAmB,SAAU,KAAK;AAC1C,QAAI,SAAS,CAAC,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,EAAE;AAC/D,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,IAAI,IAAI;AAC9C,WAAO,kBAAkB,IAAI,IAAI,MAAM,QAAQ,MAAM,MAAM;AAAA,EAC7D;AAEA,YAAU,qBAAqB,SAAU,aAAa,aAAa;AACjE,WAAO,mBAAmB,aAAa,aAAa,MAAM,QAAQ,MAAM,MAAM;AAAA,EAChF;AACF;AASA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,YAAY,WAAW,OAAO,CAAC,UAAU,QAAQ,GAAG,CAAC;AAC3D,WAAS,WAAW,KAAK;AAC3B;AA5QA,IAOI,iBACA,UACA,UAmLA,QAoEA,iBAcA,cAEA;AAhRJ;AAAA;AAAA;AACA;AACA;AAKA,IAAI,kBAAkB;AACtB,IAAI,WAAW;AACf,IAAI,WAAW;AAmLf,IAAI,SAAS;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AA0DA,IAAI,kBAAiB;AAAA,MACnB,QAAQ,CAAC,GAAK,GAAK,CAAG;AAAA,MACtB,QAAQ,CAAC,GAAK,GAAK,CAAG;AAAA,IACxB;AAWA,IAAI,eAAc,MAAM,YAAY,SAAQ,UAAU;AAEtD,IAAI,aAAa,eAAc;AAAA,MAC7B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,MAAM;AAAA;AAAA;;;AC3QT,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAQzf,iBAAiB,GAAG,GAAG;AACrB,SAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;AACzG;AAEA,kBAAkB,QAAQ;AACxB,SAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO;AACjF;AAEA,oBAAoB,QAAQ,aAAa;AACvC,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,YAAY;AACxB,SAAO;AACT;AAEA,gBAAgB,QAAQ;AACtB,SAAO,WAAW,QAAQ,WAAW;AACvC;AAEA,mBAAmB,QAAQ;AACzB,MAAI,UAAU,eAAe,QAAQ,CAAC,GAClC,OAAO,QAAQ,IACf,OAAO,QAAQ,IACf,OAAO,QAAQ,IACf,OAAO,QAAQ,IACf,OAAO,QAAQ,IACf,OAAO,QAAQ;AAEnB,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO,KAAK,OAAQ,WAAU,UAAU,IAAI,SAAY,UAAU,MAAM,OAAO,UAAU,UAAU,IAAI,SAAY,UAAU;AAC7H,SAAO;AACT;AAEA,oBAAoB,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AAC9D,MAAI,WAAW,eAAe,QAAQ,CAAC,GACnC,QAAQ,SAAS,IACjB,QAAQ,SAAS,IACjB,QAAQ,SAAS,IACjB,QAAQ,SAAS,IACjB,QAAQ,SAAS,IACjB,QAAQ,SAAS;AAErB,MAAI,SAAS,QAAW;AACtB,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AACnC,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AACnC,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AACnC,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AACnC,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AACnC,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,EACrC,OAAO;AACL,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAChC,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAChC,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAChC,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAChC,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAChC,WAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAAA,EAClC;AAEA,SAAO;AACT;AAEA,sBAAsB,QAAQ,GAAG,GAAG,GAAG;AACrC,MAAI,WAAW,eAAe,QAAQ,CAAC,GACnC,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS;AAEpB,SAAO,KAAK;AACZ,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,KAAK;AACZ,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,KAAK;AACZ,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,SAAS,KAAK,SAAS,KAAK,SAAS;AAC9C;AAEA,sBAAsB,QAAQ,GAAG,GAAG,GAAG;AACrC,MAAI,WAAW,eAAe,QAAQ,CAAC,GACnC,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS,IAChB,OAAO,SAAS;AAEpB,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,KAAK;AACZ,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,KAAK;AACZ,SAAO,KAAK,IAAI,OAAO,IAAI;AAC3B,SAAO,KAAK;AACZ,SAAO,SAAS,KAAK,SAAS,KAAK,SAAS;AAC9C;AAEA,kBAAkB,QAAQ,OAAO;AAC/B,SAAO,MAAM;AACb,SAAO,MAAM;AACb,SAAO,MAAM;AACb,SAAO,MAAM;AACb,SAAO,MAAM;AACb,SAAO,MAAM;AACb,SAAO;AACT;AAEA,gBAAgB,QAAQ,IAAI,IAAI,IAAI;AAClC,MAAI,CAAC,SAAS,MAAM,GAAG;AACrB,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,GAAK;AACb,WAAO,MAAM;AACb,WAAO,MAAM;AAAA,EACf,OAAO;AACL,WAAO,KAAK,KAAK,OAAO;AACxB,WAAO,KAAK,KAAK,OAAO;AAAA,EAC1B;AAEA,MAAI,MAAM,GAAK;AACb,WAAO,MAAM;AACb,WAAO,MAAM;AAAA,EACf,OAAO;AACL,WAAO,KAAK,KAAK,OAAO;AACxB,WAAO,KAAK,KAAK,OAAO;AAAA,EAC1B;AAEA,MAAI,MAAM,GAAK;AACb,WAAO,MAAM;AACb,WAAO,MAAM;AAAA,EACf,OAAO;AACL,WAAO,KAAK,KAAK,OAAO;AACxB,WAAO,KAAK,KAAK,OAAO;AAAA,EAC1B;AAEA,SAAO;AACT;AAEA,oBAAoB,QAAQ;AAC1B,SAAO,CAAC,MAAO,QAAO,KAAK,OAAO,KAAK,MAAO,QAAO,KAAK,OAAO,KAAK,MAAO,QAAO,KAAK,OAAO,GAAG;AACrG;AAEA,oBAAoB,QAAQ,OAAO;AACjC,SAAO,OAAO,QAAQ,IAAI,KAAK,OAAO,QAAQ;AAChD;AAEA,qBAAqB,QAAQ;AAC3B,SAAO,CAAC,WAAW,QAAQ,CAAC,GAAG,WAAW,QAAQ,CAAC,GAAG,WAAW,QAAQ,CAAC,CAAC;AAC7E;AAEA,oBAAoB,QAAQ;AAC1B,SAAO,OAAO,MAAM,GAAG,CAAC;AAC1B;AAEA,oBAAoB,QAAQ;AAC1B,SAAO,OAAO,MAAM,GAAG,CAAC;AAC1B;AAEA,oBAAoB,QAAQ;AAC1B,SAAO,OAAO,MAAM,GAAG,CAAC;AAC1B;AAEA,uBAAuB,QAAQ;AAC7B,MAAI,IAAI,YAAY,MAAM;AAE1B,MAAI,EAAE,KAAK,EAAE,IAAI;AACf,QAAI,EAAE,KAAK,EAAE,IAAI;AACf,aAAO,EAAE;AAAA,IACX;AAEA,WAAO,EAAE;AAAA,EACX;AAEA,MAAI,EAAE,KAAK,EAAE,IAAI;AACf,WAAO,EAAE;AAAA,EACX;AAEA,SAAO,EAAE;AACX;AAEA,4BAA4B,QAAQ;AAClC,MAAI,SAAS,MAAM,GAAG;AACpB,QAAI,IAAI,YAAY,MAAM;AAE1B,WAAO,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;AAAA,EAC1D;AAEA,SAAO;AACT;AAEA,sBAAsB,QAAQ;AAC5B,SAAO,CAAC,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC;AAEA,sBAAsB,QAAQ;AAC5B,SAAO,CAAC,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AACzC;AAEA,sBAAsB,GAAG,GAAG;AAC1B,SAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C;AAEA,qBAAqB,QAAQ,SAAS;AACpC,MAAI,QAAQ;AAEZ,WAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,eAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,gBAAQ,SAAS,CAAC,OAAO,KAAK,OAAO,KAAK,OAAO,GAAG;AACpD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAEA,8BAA8B,QAAQ,QAAQ,QAAQ;AACpD,SAAO,KAAK,OAAO;AACnB,SAAO,KAAK,OAAO;AACnB,SAAO,KAAK,OAAO;AACnB,SAAO,KAAK,OAAO;AACnB,SAAO,KAAK,OAAO;AACnB,SAAO,KAAK,OAAO;AACnB,SAAO;AACT;AAEA,uBAAuB,QAAQ;AAC7B,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAElF,MAAI,SAAS,WAAW,MAAM;AAE9B,SAAO,KAAK,OAAO,KAAK,OAAO;AAC/B,SAAO,KAAK,OAAO,KAAK,OAAO;AAC/B,SAAO,KAAK,OAAO,KAAK,OAAO;AAC/B,SAAO;AACT;AAEA,6BAA6B,QAAQ,GAAG,GAAG,GAAG;AAC5C,MAAI,SAAS,CAAC,EAAE,OAAO,WAAW;AAClC,MAAI,aAAa,OAAO,QAAQ;AAEhC,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC7C,QAAI,QAAQ,CAAC,WAAW,IAAI,WAAW,IAAI,IAAI,WAAW,IAAI,EAAE;AAChE,QAAI,KAAK,IAAI,OAAO,CAAC;AACrB,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAClC,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAClC,QAAI,KAAK,IAAI,OAAO,CAAC;AACrB,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAClC,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAClC,QAAI,KAAK,IAAI,OAAO,CAAC;AACrB,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAClC,WAAO,KAAK,KAAK,IAAI,IAAI,OAAO,EAAE;AAAA,EACpC;AAEA,SAAO;AACT;AAEA,uBAAuB,QAAQ,QAAQ,KAAK,OAAO,WAAW;AAC5D,MAAI,SAAS;AACb,MAAI,WAAW,CAAC;AAChB,MAAI,aAAa;AACjB,MAAI,OAAO,CAAC;AACZ,MAAI,iBAAiB,CAAC,GAAK,GAAK,CAAG;AACnC,MAAI,QAAQ;AACZ,MAAI,OAAO;AACX,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,OAAO,KAAK,OAAO,IAAI,IAAI;AAC7B,eAAS,KAAK;AACd,qBAAe,KAAK,OAAO,IAAI;AAC/B,eAAS;AAAA,IACX,WAAW,OAAO,KAAK,OAAO,IAAI,IAAI,IAAI;AACxC,eAAS,KAAK;AACd,qBAAe,KAAK,OAAO,IAAI,IAAI;AACnC,eAAS;AAAA,IACX,OAAO;AACL,eAAS,KAAK;AAAA,IAChB;AAAA,EACF;AAGA,MAAI,QAAQ;AACV,UAAM,KAAK,OAAO;AAClB,UAAM,KAAK,OAAO;AAClB,UAAM,KAAK,OAAO;AAClB,cAAU,KAAK;AACf,WAAO;AAAA,EACT;AAGA,WAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,QAAI,SAAS,QAAQ,UAAU,IAAI,QAAQ,GAAK;AAC9C,WAAK,MAAO,gBAAe,MAAM,OAAO,OAAO,IAAI;AAAA,IACrD,OAAO;AACL,WAAK,MAAM;AAAA,IACb;AAAA,EACF;AAGA,WAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,QAAI,KAAK,cAAc,KAAK,MAAM;AAChC,mBAAa;AAAA,IACf;AAAA,EACF;AAGA,MAAI,KAAK,cAAc,KAAO,KAAK,cAAc,GAAK;AACpD,WAAO;AAAA,EACT;AAEA,YAAU,KAAK,KAAK;AAEpB,WAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,QAAI,eAAe,KAAK;AACtB,YAAM,OAAO,OAAO,OAAO,KAAK,cAAc,IAAI;AAElD,UAAI,MAAM,OAAO,OAAO,IAAI,QAAQ,MAAM,OAAO,OAAO,IAAI,MAAM,IAAI;AACpE,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AACL,YAAM,OAAO,eAAe;AAAA,IAC9B;AAAA,EACF;AAEA,SAAO;AACT;AAEA,yBAAyB,QAAQ,QAAQ,QAAQ;AAC/C,MAAI,IAAI,CAAC;AACT,MAAI,IAAI;AACR,MAAI,OAAO;AACX,MAAI,WAAW;AAEf,WAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,MAAE,KAAK,OAAO;AAEd,aAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,QAAE,KAAK,OAAO;AAEd,eAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,UAAE,KAAK,OAAO;AACd,YAAI,WAAS,SAAS,QAAQ,QAAQ,CAAC;AAEvC,YAAI,UAAU;AACZ,iBAAO,KAAK,IAAI,IAAI;AACpB,qBAAW;AAAA,QACb;AAEA,YAAI,MAAM,KAAO,OAAO,KAAK,IAAI,KAAO,OAAO,KAAK,IAAI,GAAK;AAC3D,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAEA,oBAAoB,QAAQ,SAAS;AACnC,MAAI,CAAE,UAAS,MAAM,KAAK,SAAS,OAAO,IAAI;AAC5C,WAAO;AAAA,EACT;AAEA,MAAI,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACjC,MAAI;AAEJ,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,oBAAe;AAEf,QAAI,QAAQ,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,IAAI,IAAI;AAC1E,sBAAe;AACf,gBAAU,IAAI,KAAK,QAAQ,IAAI;AAAA,IACjC,WAAW,OAAO,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI;AACjF,sBAAe;AACf,gBAAU,IAAI,KAAK,OAAO,IAAI;AAAA,IAChC;AAEA,QAAI,QAAQ,IAAI,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,IAAI,MAAM,OAAO,IAAI,IAAI,IAAI;AAClF,sBAAe;AACf,gBAAU,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI;AAAA,IACzC,WAAW,OAAO,IAAI,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI;AACzF,sBAAe;AACf,gBAAU,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI;AAAA,IACxC;AAEA,QAAI,CAAC,eAAc;AACjB,aAAO;AAAA,IACT;AAAA,EACF;AAGA,SAAO,KAAK,UAAU;AACtB,SAAO,KAAK,UAAU;AACtB,SAAO,KAAK,UAAU;AACtB,SAAO,KAAK,UAAU;AACtB,SAAO,KAAK,UAAU;AACtB,SAAO,KAAK,UAAU;AACtB,SAAO;AACT;AAEA,qBAAqB,QAAQ,SAAS;AACpC,MAAI,CAAE,UAAS,MAAM,KAAK,SAAS,OAAO,IAAI;AAC5C,WAAO;AAAA,EACT;AAIA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,QAAQ,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,IAAI,IAAI;AAC1E;AAAA,IACF,WAAW,OAAO,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI;AACjF;AAAA,IACF;AAEA,QAAI,QAAQ,IAAI,IAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,IAAI,MAAM,OAAO,IAAI,IAAI,IAAI;AAClF;AAAA,IACF,WAAW,OAAO,IAAI,IAAI,MAAM,QAAQ,IAAI,MAAM,OAAO,IAAI,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI;AACzF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAIA,SAAO;AACT;AAEA,wBAAwB,QAAQ,GAAG,GAAG,GAAG;AACvC,MAAI,IAAI,OAAO,MAAM,IAAI,OAAO,IAAI;AAClC,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,OAAO,MAAM,IAAI,OAAO,IAAI;AAClC,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,OAAO,MAAM,IAAI,OAAO,IAAI;AAClC,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AACA,kBAAkB,QAAQ,aAAa;AAErC,MAAI,CAAC,YAAY,QAAQ,WAAW,GAAG;AACrC,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,eAAe,MAAM,QAAQ,CAAC,MAAM,EAAE,OAAO,mBAAmB,aAAa,WAAW,CAAC,CAAC,CAAC,GAAG;AACjG,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,eAAe,MAAM,QAAQ,CAAC,MAAM,EAAE,OAAO,mBAAmB,aAAa,WAAW,CAAC,CAAC,CAAC,GAAG;AACjG,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAQA,uBAAuB,QAAQ,QAAQ,QAAQ;AAG7C,MAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAEzF,MAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/B,MAAI,MAAM;AAEV,WAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,eAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,YAAI,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,OAAO,GAAG;AAC3C,UAAE,SAAS,WAAS,SAAS,QAAQ,QAAQ,CAAC;AAAA,MAChD;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM;AAEV,SAAO,OAAO;AAGZ,QAAI,aAAa,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,KAAK,GAAG,KAAK,aAAa,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,KAAK,GAAG,KAAK,aAAa,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,KAAK,GAAG,KAAK,aAAa,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,KAAK,GAAG,GAAG;AAChN;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,KAAK,KAAK,OAAO,IAAI;AAChC,MAAI,OAAO,KAAK,IAAK,QAAO,MAAM,IAAI,KAAK,OAAO,MAAM,MAAM,OAAO,IAAI;AACzE,MAAI,IAAI,OAAO,IAAI,IAAI;AAGvB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,SAAS,GAAG;AACd;AAAA,IACF;AAEA,QAAI,KAAK,KAAK,IAAI,EAAE,MAAM,KAAK,GAAG,IAAI;AAEtC,QAAI,OAAO,KAAK,KAAK,GAAG;AACtB,UAAI;AAAA,IACN;AAEA,QAAI,OAAO,KAAK,KAAK,GAAG;AACtB,UAAI;AAAA,IACN;AAAA,EACF;AAIA,MAAI,QAAS,KAAM,KAAK,OAAO,MAAM,KAAK,IAAI,OAAO,MAAM,IAAI;AAE/D,MAAI,OAAO,GAAG;AACZ,WAAO,MAAM,KAAK;AAAA,EACpB,OAAO;AACL,WAAO,MAAM,IAAI,KAAK;AAAA,EACxB;AAEA,SAAO;AACT;AAsLA,sBAAqB,eAAe;AAClC,MAAI,SAAS,iBAAiB,cAAc;AAC5C,SAAO,IAAI,YAAY,MAAM;AAC/B;AAtuBA,IAWI,aAoiBA,aA4LA,SAkCA;AA7wBJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,cAAc;AAAA,MAAC,OAAO;AAAA,MAAW,CAAC,OAAO;AAAA,MAC7C,OAAO;AAAA,MAAW,CAAC,OAAO;AAAA,MAC1B,OAAO;AAAA,MAAW,CAAC,OAAO;AAAA,IAC1B;AAiiBA,IAAI,cAA2B,WAAY;AACzC,4BAAqB,WAAW;AAC9B,wBAAgB,MAAM,YAAW;AAEjC,aAAK,SAAS;AAEd,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,SAAS,IAAI,aAAa,WAAW;AAAA,QAC5C;AAAA,MACF;AAEA,mBAAa,cAAa,CAAC;AAAA,QACzB,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,KAAK;AAAA,QACd;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,gBAAgB,aAAa;AAClC,iBAAO,QAAQ,KAAK,QAAQ,WAAW;AAAA,QACzC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB;AACxB,iBAAO,SAAS,KAAK,MAAM;AAAA,QAC7B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,aAAa;AACrC,iBAAO,WAAW,KAAK,QAAQ,WAAW;AAAA,QAC5C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,iBAAiB;AACtB,iBAAO,OAAO,KAAK,MAAM;AAAA,QAC3B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,oBAAoB;AACzB,mBAAS,OAAO,UAAU,QAAQ,MAAM,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACtF,gBAAI,QAAQ,UAAU;AAAA,UACxB;AAEA,iBAAO,UAAU,KAAK,QAAQ,GAAG;AAAA,QACnC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AAC5D,iBAAO,WAAW,KAAK,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,QACnE;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB,GAAG,GAAG,GAAG;AACnC,iBAAO,aAAa,KAAK,QAAQ,GAAG,GAAG,CAAC;AAAA,QAC1C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB,GAAG,GAAG,GAAG;AACnC,iBAAO,aAAa,KAAK,QAAQ,GAAG,GAAG,CAAC;AAAA,QAC1C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,iBAAiB,OAAO;AAC7B,iBAAO,SAAS,KAAK,QAAQ,KAAK;AAAA,QACpC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,eAAe,IAAI,IAAI,IAAI;AAChC,iBAAO,OAAO,KAAK,QAAQ,IAAI,IAAI,EAAE;AAAA,QACvC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,WAAW,KAAK,MAAM;AAAA,QAC/B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,OAAO;AAC/B,iBAAO,WAAW,KAAK,QAAQ,KAAK;AAAA,QACtC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,sBAAsB;AAC3B,iBAAO,YAAY,KAAK,MAAM;AAAA,QAChC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,wBAAwB;AAC7B,iBAAO,cAAc,KAAK,MAAM;AAAA,QAClC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,6BAA6B;AAClC,iBAAO,mBAAmB,KAAK,MAAM;AAAA,QACvC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,uBAAuB;AAC5B,iBAAO,aAAa,KAAK,MAAM;AAAA,QACjC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,uBAAuB;AAC5B,iBAAO,aAAa,KAAK,MAAM;AAAA,QACjC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,WAAW,KAAK,MAAM;AAAA,QAC/B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,WAAW,KAAK,MAAM;AAAA,QAC/B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,WAAW,KAAK,MAAM;AAAA,QAC/B;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,oBAAoB,SAAS;AAClC,iBAAO,YAAY,KAAK,QAAQ,OAAO;AAAA,QACzC;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,6BAA6B,QAAQ,QAAQ;AAClD,iBAAO,qBAAqB,KAAK,QAAQ,QAAQ,MAAM;AAAA,QACzD;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,4BAA4B,GAAG,GAAG,GAAG;AAC1C,iBAAO,oBAAoB,KAAK,QAAQ,GAAG,GAAG,CAAC;AAAA,QACjD;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,uBAAuB,QAAQ;AACpC,iBAAO,cAAc,KAAK,QAAQ,MAAM;AAAA,QAC1C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,sBAAsB,QAAQ,QAAQ;AAC3C,iBAAO,cAAc,KAAK,QAAQ,QAAQ,MAAM;AAAA,QAClD;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,sBAAsB,QAAQ,KAAK,OAAO,WAAW;AAC1D,iBAAO,cAAc,KAAK,QAAQ,QAAQ,KAAK,OAAO,SAAS;AAAA,QACjE;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,wBAAwB,QAAQ,QAAQ;AAC7C,iBAAO,gBAAgB,KAAK,QAAQ,QAAQ,MAAM;AAAA,QACpD;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,aAAa;AACrC,iBAAO,WAAW,KAAK,QAAQ,WAAW;AAAA,QAC5C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,oBAAoB,aAAa;AACtC,iBAAO,YAAY,KAAK,QAAQ,WAAW;AAAA,QAC7C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,uBAAuB,GAAG,GAAG,GAAG;AACrC,iBAAO,eAAe,KAAK,QAAQ,GAAG,GAAG,CAAC;AAAA,QAC5C;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAkB,aAAa;AACpC,iBAAO,YAAY,KAAK,QAAQ,WAAW;AAAA,QAC7C;AAAA,MACF,CAAC,CAAC;AAEF,aAAO;AAAA,IACT,EAAE;AAUF,IAAI,UAAS;AAAA,MACX,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,WAAW;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,MACb,SAAS;AAAA,MACT,OAAO;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,qBAAqB;AAAA,MACrB,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,eAAe;AAAA,MACf;AAAA,MACA;AAAA,IACF;AACA,IAAI,iBAAiB,eAAc;AAAA,MACjC,aAAa;AAAA,IACf,GAAG,OAAM;AAAA;AAAA;;;AC7wBT,yBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,MAAM,cAAc,YAAY,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EAC7E;AACF;AAKA,iBAAiB,WAAW,OAAO;AAEjC,QAAM,eAAe,KAAK,SAAS;AAEnC,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,MAAM;AAEf,aAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,EAAE,OAAO;AAC1D,UAAI,KAAK,MAAM,SAAS,OAAO,SAAS;AAExC,UAAI,KAAK,IAAI;AACX,aAAK;AAAA,MACP;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,WAAO;AAAA,EACT;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,CAAC;AAAA,EACV;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,CAAC;AAAA,EACV;AAEA,YAAU,aAAa,WAAY;AACjC,WAAO,CAAC;AAAA,EACV;AAEA,YAAU,OAAO,gBAAe,MAAM;AACtC,YAAU,SAAS,gBAAe,QAAQ;AAE1C,YAAU,sBAAsB,WAAY;AAC1C,WAAO,MAAM,cAAe,EAAC,MAAM,eAAe,MAAM,YAAY,oBAAoB;AAAA,EAC1F;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,YAAa,EAAC,MAAM,eAAe,MAAM,YAAY,kBAAkB;AAAA,EACtF;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,YAAa,EAAC,MAAM,eAAe,MAAM,YAAY,kBAAkB;AAAA,EACtF;AAEA,YAAU,iBAAiB,WAAY;AACrC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,yBAAyB,SAAU,GAAG;AAC9C,UAAM,sBAAsB;AAC5B,UAAM,2BAA2B;AAAA,EACnC;AAEA,YAAU,6BAA6B,WAAY;AACjD,UAAM,sBAAsB,MAAM;AAAA,EACpC;AAEA,YAAU,yBAAyB,SAAU,GAAG;AAC9C,UAAM,uBAAuB;AAAA,EAC/B;AAEA,YAAU,yBAAyB,SAAU,GAAG;AAC9C,UAAM,sBAAsB;AAC5B,UAAM,2BAA2B,MAAM;AACvC,UAAM,sBAAsB;AAAA,EAC9B;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,aAAa,SAAU,SAAS;AACxC,WAAO,MAAM,SAAS,QAAQ,OAAO,MAAM;AAAA,EAC7C;AAEA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,WAAW,CAAC,UAAU,WAAW,OAAO,GAAG;AAC7C,YAAM,WAAW,MAAM,SAAS,OAAO,OAAO;AAC9C,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,SAAS;AAC3C,QAAI,iBAAiB,MAAM,SAAS,OAAO,SAAU,MAAM;AACzD,aAAO,SAAS;AAAA,IAClB,CAAC;AAED,QAAI,MAAM,SAAS,WAAW,eAAe,QAAQ;AACnD,YAAM,WAAW;AACjB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,oBAAoB,WAAY;AACxC,UAAM,WAAW,CAAC;AAClB,cAAU,SAAS;AAAA,EACrB;AACF;AAmBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,uBAAuB,qBAAqB,CAAC;AAC1E,QAAM,OAAO,WAAW,OAAO,CAAC,cAAc,YAAY,YAAY,aAAa,wBAAwB,aAAa,CAAC;AACzH,QAAM,gBAAgB,WAAW,OAAO,CAAC,YAAY,CAAC;AAEtD,UAAQ,WAAW,KAAK;AAC1B;AAlJA,IA0HI,iBA0BA,cAEA;AAtJJ;AAAA;AAAA;AA0HA,IAAI,kBAAiB;AAAA,MAEnB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,MACtB,OAAO;AAAA,MACP,UAAU,CAAC;AAAA,IACb;AAcA,IAAI,eAAc,MAAM,YAAY,SAAQ,SAAS;AAErD,IAAI,YAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AChJA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,YAAU,cAAc,SAAU,UAAU;AAC1C,UAAM,WAAW,MAAM,SAAS,IAAI,SAAU,OAAO,OAAO;AAC1D,aAAO,QAAQ,SAAS;AAAA,IAC1B,CAAC;AACD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,qBAAqB,WAAY;AACzC,QAAI,IAAI,aAAK,OAAO;AACpB,iBAAK,YAAY,GAAG,MAAM,QAAQ;AAClC,QAAI,QAAQ,IAAI,aAAa,CAAC;AAC9B,QAAI,IAAI,aAAK,aAAa,OAAO,CAAC;AAClC,WAAO,CAAC,mBAAmB,CAAC,GAAG,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE;AAAA,EAC7D;AAEA,YAAU,UAAU,SAAU,KAAK;AACjC,QAAI,QAAQ,GAAK;AACf;AAAA,IACF;AAEA,iBAAK,QAAQ,MAAM,UAAU,MAAM,UAAU,mBAAmB,GAAG,CAAC;AACpE,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,UAAU,SAAU,KAAK;AACjC,QAAI,QAAQ,GAAK;AACf;AAAA,IACF;AAEA,iBAAK,QAAQ,MAAM,UAAU,MAAM,UAAU,mBAAmB,GAAG,CAAC;AACpE,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,UAAU,SAAU,KAAK;AACjC,QAAI,QAAQ,GAAK;AACf;AAAA,IACF;AAEA,iBAAK,QAAQ,MAAM,UAAU,MAAM,UAAU,mBAAmB,GAAG,CAAC;AACpE,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,aAAa,SAAU,SAAS,GAAG,GAAG,GAAG;AACjD,QAAI,YAAY,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,GAAK;AAC1D;AAAA,IACF;AAGA,QAAI,QAAQ,mBAAmB,OAAO;AACtC,QAAI,IAAI,aAAK,OAAO;AACpB,iBAAK,aAAa,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK;AACrC,QAAI,UAAU,IAAI,aAAa,EAAE;AACjC,iBAAK,SAAS,SAAS,CAAC;AACxB,iBAAK,SAAS,MAAM,UAAU,MAAM,UAAU,OAAO;AACrD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,iBAAiB,SAAU,GAAG,GAAG,GAAG;AAC5C,QAAI,MAAM,MAAM,YAAY,MAAM,MAAM,MAAM,YAAY,MAAM,MAAM,MAAM,YAAY,IAAI;AAC1F,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,CAAC,GAAG,GAAG,CAAC;AAC5B,iBAAK,SAAS,MAAM,QAAQ;AAC5B,cAAU,QAAQ,CAAC;AACnB,cAAU,QAAQ,CAAC;AACnB,cAAU,QAAQ,CAAC;AACnB,cAAU,SAAS;AACnB,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,QAAQ;AAC1C,iBAAK,KAAK,MAAM,YAAY,MAAM;AAClC,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,YAAY,WAAY;AAChC,cAAU,cAAc;AACxB,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,gBAAgB,WAAY;AAEpC,QAAI,UAAU,SAAS,IAAI,MAAM,YAAY,SAAS,GAAG;AACvD,mBAAK,SAAS,MAAM,MAAM;AAE1B,UAAI,MAAM,YAAY;AACpB,qBAAK,SAAS,MAAM,QAAQ,MAAM,QAAQ,MAAM,UAAU;AAAA,MAC5D;AAEA,mBAAK,UAAU,MAAM,QAAQ,MAAM,QAAQ,MAAM,MAAM;AACvD,mBAAK,UAAU,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ;AACzD,mBAAK,SAAS,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ;AACxD,mBAAK,MAAM,MAAM,QAAQ,MAAM,QAAQ,MAAM,KAAK;AAClD,mBAAK,UAAU,MAAM,QAAQ,MAAM,QAAQ,CAAC,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM,OAAO,EAAE,CAAC;AACjG,mBAAK,UAAU,MAAM,QAAQ,MAAM,MAAM;AAEzC,YAAM,aAAa;AAEnB,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,cAAK,OAAM,IAAI,IAAM,OAAS,MAAM,OAAO,IAAI,IAAI,IAAI;AACrD,kBAAM,aAAa;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAEA,YAAM,YAAY,SAAS;AAAA,IAC7B;AAAA,EACF;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,eAAe,UAAU,MAAM,MAAM;AAAA,EAC9C;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,eAAe,UAAU,MAAM,MAAM;AAAA,EAC9C;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,eAAe,UAAU,MAAM,MAAM;AAAA,EAC9C;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,eAAe,UAAU,MAAM,MAAM;AAAA,EAC9C;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,eAAe,UAAU,MAAM,MAAM;AAAA,EAC9C;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO,MAAM;AAAA,EACf;AAEA,gCAA8B;AAC5B,cAAU,cAAc;AAAA,EAC1B;AAEA,YAAU,WAAW,kBAAkB;AACzC;AAmBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,YAAQ,OAAO,WAAW,OAAO,aAAa;AAC9C,QAAM,cAAc,CAAC;AACrB,QAAM,IAAI,MAAM,WAAW;AAE3B,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,YAAY,CAAC;AACpD,QAAM,SAAS,WAAW,OAAO,CAAC,aAAa,CAAC;AAChD,QAAM,YAAY,WAAW,OAAO,CAAC,UAAU,YAAY,OAAO,GAAG,CAAC;AAEtE,QAAM,SAAS,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACjD,QAAM,WAAW,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACnD,QAAM,aAAa,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACrD,QAAM,YAAY;AAGlB,YAAU,WAAW,KAAK;AAC5B;AA/LA,IA8JI,iBAmCA,cAEA;AAnMJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AA0JA,IAAI,kBAAiB;AAAA,MACnB,QAAQ,CAAC,GAAG,GAAG,CAAC;AAAA,MAChB,UAAU,CAAC,GAAG,GAAG,CAAC;AAAA,MAClB,aAAa,CAAC,GAAG,GAAG,CAAC;AAAA,MACrB,UAAU;AAAA,MACV,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACf,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,MAC5B,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAuBA,IAAI,eAAc,MAAM,YAAY,SAAQ,WAAW;AAEvD,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACtMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,kBAWA,cAaA,iBACA;AAzBJ;AAAA;AAAA,IAAI,mBAAmB;AAAA,MACrB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,IAChB;AACA,IAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MAEN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,eAAe;AAAA,MACf,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,KAAK;AAAA,MACL,cAAc;AAAA,MACd,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AACA,IAAI,kBAAkB,aAAa;AACnC,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAQzf,0BAA0B,KAAK,QAAQ,oBAAoB;AACzD,MAAI,MAAM,IAAI;AACd,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,QAAQ,GAAG;AACb,WAAO;AAAA,MACL,KAAK,OAAO;AAAA,MACZ,KAAK,CAAC,OAAO;AAAA,IACf;AAAA,EACF;AAEA,SAAM,IAAI;AACV,SAAM;AAEN,OAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,oBAAoB;AACjD,QAAI,IAAI;AAER,QAAI,IAAI,MAAK;AACX,aAAM;AAAA,IACR,WAAW,IAAI,MAAK;AAClB,aAAM;AAAA,IACR;AAAA,EACF;AAEA,SAAO;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,EACP;AACF;AAMA,6BAA6B;AAC3B,MAAI,OAAM,OAAO;AACjB,MAAI,OAAM,CAAC,OAAO;AAClB,MAAI,QAAQ;AACZ,MAAI,MAAM;AACV,SAAO;AAAA,IACL,KAAK,cAAa,OAAO;AACvB,UAAI,OAAM,OAAO;AACf,eAAM;AAAA,MACR;AAEA,UAAI,OAAM,OAAO;AACf,eAAM;AAAA,MACR;AAEA;AACA,aAAO;AAAA,IACT;AAAA,IACA,KAAK,gBAAe;AAClB,aAAO;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA,MAAM,MAAM;AAAA,MACd;AAAA,IACF;AAAA,IACA,UAAU,oBAAoB;AAC5B,aAAO;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AACF;AAEA,sBAAsB,QAAQ;AAC5B,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,MAAI,qBAAqB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE7F,MAAI,YAAY,KAAK,qBAAqB,GAAG;AAE3C,QAAI,OAAO,OAAO;AAClB,QAAI,iBAAiB,OAAO;AAC5B,QAAI,OAAO,IAAI,aAAa,cAAc;AAE1C,aAAS,IAAI,GAAG,IAAI,GAAG,IAAI,gBAAgB,EAAE,GAAG;AAC9C,UAAI;AAEJ,eAAS,QAAQ,IAAI,oBAAoB,IAAI,OAAO,EAAE,GAAG;AACvD,aAAK,MAAM,OAAO,KAAK,OAAO;AAAA,MAChC;AAEA,WAAK,GAAG,KAAK,MAAM,KAAK,IAAI,KAAK,KAAK,GAAG;AAAA,IAC3C;AAEA,WAAO,iBAAiB,MAAM,GAAG,CAAC;AAAA,EACpC;AAEA,SAAO,iBAAiB,QAAQ,YAAY,IAAI,IAAI,WAAW,kBAAkB;AACnF;AAEA,yBAAyB,YAAY;AACnC,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,MAAI,SAAS,cAAc,CAAC;AAE5B,SAAO,OAAO,UAAU,MAAM;AAC5B,WAAO,KAAK,IAAI;AAAA,EAClB;AAEA,SAAO;AACT;AAEA,qBAAqB,YAAY;AAE/B,SAAO,OAAO,UAAU,SAAS,KAAK,UAAU,EAAE,MAAM,GAAG,EAAE;AAC/D;AAEA,oBAAoB,WAAW;AAC7B,MAAI,WAAW,UAAU,sBAAsB;AAC/C,MAAI,UAAU;AAEd,WAAS,IAAI,GAAG,IAAI,UAAU,kBAAkB,GAAG,EAAE,GAAG;AACtD,QAAI,SAAS,KAAK,UAAU,SAAS,CAAC,GAAG,QAAQ;AAEjD,QAAI,SAAS,SAAS;AACpB,gBAAU;AAAA,IACZ;AAAA,EACF;AAEA,SAAO;AACT;AAeA,sBAAsB,WAAW,OAAO;AAEtC,QAAM,eAAe,KAAK,cAAc;AAExC,wBAAsB;AACpB,UAAM,SAAS;AACf,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,0BAA0B,WAAY;AAC9C,WAAO,MAAM,OAAO;AAAA,EACtB;AAKA,YAAU,eAAe,SAAU,UAAU;AAC3C,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAClF,WAAO,MAAM,OAAO,WAAW,MAAM,qBAAqB;AAAA,EAC5D;AAQA,YAAU,eAAe,SAAU,UAAU,SAAS,OAAO;AAC3D,QAAI,UAAU,MAAM,OAAO,WAAW,MAAM,qBAAqB,UAAU;AACzE,YAAM,OAAO,WAAW,MAAM,qBAAqB,WAAW;AAC9D,iBAAW;AAAA,IACb;AAAA,EACF;AAEA,YAAU,UAAU,WAAY;AAC9B,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,iBAAiB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACzF,QAAI,WAAW,iBAAiB,IAAI,MAAM,qBAAqB;AAC/D,QAAI,QAAQ;AAEZ,QAAI,CAAC,MAAM,QAAQ;AACjB,YAAM,SAAS,gBAAgB,MAAM,QAAQ,MAAM,kBAAkB;AAAA,IACvE;AAEA,YAAQ,MAAM,OAAO;AAErB,QAAI,OAAO;AACT,YAAM,WAAW,KAAK,MAAM;AAC5B,YAAM,WAAW,KAAK,MAAM;AAC5B,aAAO,MAAM;AAAA,IACf;AAGA,YAAQ,aAAa,MAAM,QAAQ,gBAAgB,MAAM,kBAAkB;AAC3E,UAAM,OAAO,YAAY;AACzB,UAAM,WAAW,KAAK,MAAM;AAC5B,UAAM,WAAW,KAAK,MAAM;AAC5B,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,SAAU,YAAY,gBAAgB;AACzD,QAAI,CAAC,MAAM,QAAQ;AACjB,YAAM,SAAS,gBAAgB,MAAM,QAAQ,MAAM,kBAAkB;AAAA,IACvE;AAEA,QAAI,QAAQ;AAAA,MACV,KAAK,WAAW;AAAA,MAChB,KAAK,WAAW;AAAA,IAClB;AACA,UAAM,OAAO,kBAAkB;AAC/B,UAAM,WAAW,KAAK,MAAM;AAC5B,UAAM,WAAW,KAAK,MAAM;AAC5B,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,SAAU,KAAK,OAAO;AACzC,QAAI,SAAS,MAAM,MAAM;AAEzB,aAAS,IAAI,GAAG,IAAI,MAAM,oBAAoB,KAAK;AACjD,YAAM,OAAO,SAAS,KAAK,MAAM;AAAA,IACnC;AAAA,EACF;AAEA,YAAU,WAAW,SAAU,KAAK;AAClC,QAAI,cAAc,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACtF,QAAI,qBAAqB,MAAM,sBAAsB;AAErD,QAAI,YAAY,WAAW,oBAAoB;AAC7C,kBAAY,SAAS;AAAA,IACvB;AAEA,QAAI,SAAS,MAAM;AAGnB,QAAI,uBAAuB,GAAG;AAC5B,kBAAY,KAAK,MAAM,OAAO;AAAA,IAChC,WAAW,uBAAuB,GAAG;AACnC,kBAAY,KAAK,MAAM,OAAO;AAC9B,kBAAY,KAAK,MAAM,OAAO,SAAS;AAAA,IACzC,WAAW,uBAAuB,GAAG;AACnC,kBAAY,KAAK,MAAM,OAAO;AAC9B,kBAAY,KAAK,MAAM,OAAO,SAAS;AACvC,kBAAY,KAAK,MAAM,OAAO,SAAS;AAAA,IACzC,WAAW,uBAAuB,GAAG;AACnC,kBAAY,KAAK,MAAM,OAAO;AAC9B,kBAAY,KAAK,MAAM,OAAO,SAAS;AACvC,kBAAY,KAAK,MAAM,OAAO,SAAS;AACvC,kBAAY,KAAK,MAAM,OAAO,SAAS;AAAA,IACzC,OAAO;AACL,eAAS,IAAI,GAAG,IAAI,oBAAoB,KAAK;AAC3C,oBAAY,KAAK,MAAM,OAAO,SAAS;AAAA,MACzC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC9E,WAAO,MAAM,MAAM;AAAA,EACrB;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO;AAAA,EACtB;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO,SAAS,MAAM;AAAA,EACrC;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM;AAAA,EACf;AAIA,YAAU,WAAW,WAAY;AAC/B,WAAO,aAAY;AAAA,MACjB,OAAO;AAAA,MACP,MAAM,MAAM;AAAA,MACZ,UAAU,MAAM;AAAA,MAChB,oBAAoB,MAAM;AAAA,IAC5B,CAAC;AAAA,EACH;AAIA,YAAU,UAAU,WAAY;AAC9B,QAAI,CAAC,MAAM,MAAM;AACf,gBAAU,SAAS;AACnB,YAAM,OAAO,eAAe,OAAO,UAAU,SAAS,CAAC;AAAA,IACzD;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,UAAU,SAAU,YAAY,oBAAoB;AAC5D,UAAM,SAAS;AACf,UAAM,OAAO,WAAW;AACxB,UAAM,WAAW,YAAY,UAAU;AAEvC,QAAI,oBAAoB;AACtB,YAAM,qBAAqB;AAAA,IAC7B;AAEA,QAAI,MAAM,OAAO,MAAM,uBAAuB,GAAG;AAC/C,YAAM,qBAAqB;AAAA,IAC7B;AAEA,eAAW;AAAA,EACb;AAGA,YAAU,WAAW,WAAY;AAC/B,QAAI,MAAM,SAAS;AACjB,aAAO;AAAA,IACT;AAEA,QAAI,cAAc,eAAc,eAAc,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;AAAA,MAC5D,UAAU,UAAU,aAAa;AAAA,IACnC,CAAC;AAGD,gBAAY,SAAS,MAAM,KAAK,YAAY,MAAM;AAClD,WAAO,YAAY;AAEnB,WAAO,KAAK,WAAW,EAAE,QAAQ,SAAU,SAAS;AAClD,UAAI,CAAC,YAAY,UAAU;AACzB,eAAO,YAAY;AAAA,MACrB;AAAA,IACF,CAAC;AAED,QAAI,YAAY,CAAC;AACjB,WAAO,KAAK,WAAW,EAAE,KAAK,EAAE,QAAQ,SAAU,MAAM;AACtD,gBAAU,QAAQ,YAAY;AAAA,IAChC,CAAC;AAED,QAAI,UAAU,OAAO;AACnB,aAAO,UAAU;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AACF;AAeA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,MAAI,CAAC,MAAM,SAAS,CAAC,MAAM,UAAU,CAAC,MAAM,MAAM;AAChD,UAAM,IAAI,UAAU,6DAA6D;AAAA,EACnF;AAEA,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,SAAS,cAAc,MAAM,UAAU,MAAM,IAAI;AAAA,EACzD,WAAW,MAAM,QAAQ,MAAM,MAAM,GAAG;AACtC,UAAM,SAAS,kBAAkB,MAAM,UAAU,MAAM,MAAM;AAAA,EAC/D;AAEA,MAAI,MAAM,QAAQ;AAChB,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,WAAW,YAAY,MAAM,MAAM;AAAA,EAC3C;AAGA,MAAI,WAAW,KAAK;AACpB,MAAI,WAAW,OAAO,CAAC,QAAQ,oBAAoB,CAAC;AAEpD,eAAa,WAAW,KAAK;AAC/B;AAvZA,IAQI,kBACA,cA2IA,SAiOA,iBAoCA,cAEA;AA3ZJ;AAAA;AAAA;AACA;AACA;AACA;AAKA,IAAI,mBAAkB,WAAU;AAChC,IAAI,eAAe,CAAC;AA2IpB,IAAI,UAAS;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AA2NA,IAAI,kBAAiB;AAAA,MACnB,MAAM;AAAA,MACN,oBAAoB;AAAA,MACpB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,YAAY,CAAC,GAAG,CAAC;AAAA,IAGnB;AA4BA,IAAI,eAAc,YAAc,SAAQ,cAAc;AAEtD,IAAI,iBAAiB,eAAc,eAAc;AAAA,MAC/C,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM,GAAG,UAAS;AAAA;AAAA;;;AC9ZrB,IAAI,YAKA,qBAMA;AAXJ;AAAA;AAAA,IAAI,aAAa;AAAA,MACf,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,IACb;AACA,IAAI,sBAAsB;AAAA,MACxB,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,KAAK;AAAA,MACL,MAAM;AAAA,IACR;AACA,IAAI,qBAAqB;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACdA,IAAI,WAKA,YAQA,UAIA;AAjBJ;AAAA;AAAA,IAAI,YAAY;AAAA,MACd,SAAS;AAAA,MACT,aAAa;AAAA,MACb,gBAAgB;AAAA,IAClB;AACA,IAAI,aAAa;AAAA,MACf,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,IAClB;AACA,IAAI,WAAW;AAAA,MACb,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AACA,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACfA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAezf,yBAAyB,GAAG;AAC1B,SAAO;AACT;AAEA,2BAA2B,GAAG;AAC5B,SAAO,KAAK,MAAM,IAAI,MAAQ,GAAG;AACnC;AAKA,6BAA4B,WAAW,OAAO;AAE5C,QAAM,eAAe,KAAK,oBAAoB;AAE9C,YAAU,2BAA2B,WAAY;AAC/C,WAAO,UAAU,cAAc,YAAW,SAAS;AAAA,EACrD;AAEA,YAAU,2BAA2B,WAAY;AAC/C,WAAO,UAAU,cAAc,YAAW,SAAS;AAAA,EACrD;AAEA,YAAU,2BAA2B,WAAY;AAC/C,WAAO,UAAU,cAAc,YAAW,SAAS;AAAA,EACrD;AAEA,YAAU,QAAQ,WAAY;AAAA,EAAC;AAE/B,YAAU,WAAW,WAAY;AAC/B,WAAO;AAAA,EACT;AAGA,YAAU,iBAAiB,SAAU,QAAQ,aAAa;AACxD,QAAI,UAAU,CAAC,eAAe,CAAC,UAAU,aAAa;AACpD;AAAA,IACF;AAEA,QAAI,UAAU,eAAe,OAAO,WAAW,YAAY,QAAQ;AACjE,qBAAc,0EAA0E;AACxF;AAAA,IACF;AAEA,UAAM,kBAAkB,CAAC;AAEzB,QAAI,eAAe,QAAQ;AACzB,UAAI,MAAM,YAAY;AAEtB,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,cAAM,gBAAgB,KAAK;AAAA,UACzB,OAAO,OAAO;AAAA,UACd,YAAY,OAAO,YAAY,EAAE;AAAA,QACnC,CAAC;AAAA,MACH;AAAA,IACF;AAEA,cAAU,wBAAwB;AAClC,cAAU,SAAS;AAAA,EACrB;AAGA,YAAU,gBAAgB,SAAU,OAAO,YAAY;AACrD,QAAI,IAAI,UAAU,uBAAuB,KAAK;AAC9C,QAAI,WAAW;AAEf,QAAI,KAAK,GAAG;AACV,UAAI,MAAM,gBAAgB,GAAG,eAAe,YAAY;AACtD,cAAM,gBAAgB,GAAG,aAAa;AACtC,mBAAW;AAAA,MACb;AAAA,IACF,OAAO;AACL,YAAM,gBAAgB,KAAK;AAAA,QACzB;AAAA,QACA;AAAA,MACF,CAAC;AACD,UAAI,MAAM,gBAAgB,SAAS;AACnC,iBAAW;AAAA,IACb;AAEA,QAAI,UAAU;AACZ,gBAAU,wBAAwB;AAClC,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,6BAA6B,WAAY;AACjD,WAAO,MAAM,gBAAgB;AAAA,EAC/B;AAGA,YAAU,oBAAoB,SAAU,KAAK;AAC3C,QAAI,MAAM,KAAK,OAAO,MAAM,gBAAgB,QAAQ;AAClD,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,gBAAgB,KAAK;AAAA,EACpC;AAGA,YAAU,gBAAgB,SAAU,KAAK;AACvC,QAAI,MAAM,gBAAgB,SAAS,QAAW;AAC5C,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,gBAAgB,KAAK;AAAA,EACpC;AAGA,YAAU,yBAAyB,SAAU,KAAK;AAChD,WAAO,MAAM,gBAAgB,SAAS,UAAU,uBAAuB,GAAG,IAAI;AAAA,EAChF;AAGA,YAAU,mBAAmB,SAAU,OAAO;AAC5C,QAAI,IAAI,UAAU,uBAAuB,KAAK;AAC9C,QAAI,eAAe,KAAK;AAExB,QAAI,cAAc;AAChB,YAAM,gBAAgB,OAAO,GAAG,CAAC;AACjC,gBAAU,wBAAwB;AAClC,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,mBAAmB,WAAY;AACvC,UAAM,kBAAkB,CAAC;AACzB,UAAM,oBAAoB,CAAC;AAC3B,cAAU,SAAS;AAAA,EACrB;AAGA,YAAU,qBAAqB,SAAU,KAAK,MAAM;AAClD,QAAI,MAAM,eAAe;AACvB,UAAI,IAAI,UAAU,uBAAuB,GAAG;AAC5C,gBAAU,gBAAgB,GAAG,IAAI;AAAA,IACnC,OAAO;AACL,gBAAU,SAAS,WAAW,GAAG,GAAG,IAAI;AACxC,WAAK,KAAK;AAAA,IACZ;AAAA,EACF;AAGA,YAAU,yBAAyB,SAAU,OAAO;AAClD,WAAO,UAAU,+BAA+B,KAAK;AAAA,EACvD;AAKA,YAAU,iCAAiC,SAAU,OAAO;AAC1D,QAAI,MAAM,kBAAkB,WAAW,QAAW;AAChD,UAAI,KAAK,MAAM,gBAAgB;AAC/B,aAAO,MAAM,kBAAkB,SAAS;AAAA,IAC1C;AAGA,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,SAAU,KAAK,MAAM;AAC/C,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACZ;AAGA,YAAU,0BAA0B,WAAY;AAC9C,UAAM,oBAAoB,CAAC;AAC3B,QAAI,KAAK,MAAM,gBAAgB;AAE/B,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,YAAM,kBAAkB,MAAM,gBAAgB,GAAG,SAAS;AAAA,IAC5D;AAAA,EACF;AAkBA,YAAU,aAAa,SAAU,SAAS,WAAW,aAAa;AAChE,QAAI,qBAAqB,QAAQ,sBAAsB;AACvD,QAAI,YAAY;AAEhB,QAAI,cAAc,WAAU,WAAW,QAAQ,YAAY,MAAM,cAAa,iBAAiB,cAAc,WAAU,kBAAkB,SAAS;AAChJ,kBAAY,UAAU,cAAc,SAAS,oBAAoB,QAAQ,kBAAkB,CAAC;AAAA,IAC9F,OAAO;AACL,UAAI,aAAa;AAAA,QACf,MAAM;AAAA,QACN,MAAM;AAAA,QACN,oBAAoB;AAAA,QACpB,UAAU,cAAa;AAAA,MACzB;AACA,UAAI,IAAI,MAAM,cAAc,WAAW,UAAU,IAAI,QAAQ,kBAAkB,CAAC;AAChF,iBAAW,SAAS;AACpB,iBAAW,OAAO,EAAE;AACpB,kBAAY,eAAa,YAAY,UAAU;AAC/C,UAAI,YAAY;AAEhB,UAAI,YAAY,KAAK,qBAAqB,GAAG;AAC3C,kBAAU,uBAAuB,SAAS,WAAW,qBAAoB,MAAM,IAAI,EAAE;AAAA,MACvF,OAAO;AACL,YAAI,YAAY,GAAG;AACjB,sBAAY;AAAA,QACd;AAEA,YAAI,aAAa,oBAAoB;AACnC,sBAAY,qBAAqB;AAAA,QACnC;AAGA,kBAAU,uBAAuB,SAAS,WAAW,qBAAoB,MAAM,SAAS;AAAA,MAC1F;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,SAAU,OAAO,QAAQ,YAAY;AACrE,QAAI,SAAS,MAAM,kBAAkB;AACrC,QAAI,SAAS,MAAM,sBAAsB;AACzC,QAAI,UAAU,OAAO,QAAQ;AAC7B,QAAI,SAAS,MAAM,QAAQ;AAE3B,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,eAAO,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS;AAAA,MACtD;AAEA,cAAQ,KAAK,KAAK,KAAK,GAAG;AAAA,IAC5B;AAAA,EACF;AAIA,YAAU,yBAAyB,SAAU,OAAO,QAAQ,cAAc,mBAAmB,cAAc;AACzG,QAAI,aAAa,UAAU,cAAc;AACzC,QAAI,aAAa;AACjB,QAAI,kBAAkB;AACtB,QAAI,eAAe,MAAM,sBAAsB;AAE/C,QAAI,eAAe,YAAW,WAAW;AAEvC,UAAI,oBAAoB,IAAI;AAE1B,0BAAkB,UAAU,mBAAmB;AAAA,MACjD;AAEA,UAAI,kBAAkB,GAAG;AACvB,0BAAkB;AAAA,MACpB;AAEA,UAAI,mBAAmB,cAAc;AACnC,0BAAkB,eAAe;AAAA,MACnC;AAAA,IACF,OAAO;AAEL,UAAI,eAAe,IAAI;AAErB,qBAAa,UAAU,cAAc;AAAA,MACvC;AAEA,UAAI,cAAc,GAAG;AACnB,0BAAkB;AAClB,qBAAa;AAAA,MACf,OAAO;AACL,YAAI,kBAAkB,GAAG;AACvB,4BAAkB;AAAA,QACpB;AAEA,YAAI,mBAAmB,cAAc;AACnC,4BAAkB,eAAe;AAAA,QACnC;AAEA,YAAI,kBAAkB,aAAa,cAAc;AAC/C,uBAAa,eAAe;AAAA,QAC9B;AAAA,MACF;AAEA,UAAI,eAAe,YAAW,aAAc,kBAAiB,KAAK,eAAe,IAAI;AACnF,qBAAa,YAAW;AAAA,MAC1B;AAAA,IACF;AAGA,QAAI,cAAc;AAElB,QAAI,kBAAkB,GAAG;AACvB,oBAAc;AAAA,IAChB;AAGA,YAAQ;AAAA,WACD,YAAW,WACd;AACE,kBAAU,uBAAuB,OAAO,QAAQ,cAAc,WAAW;AACzE;AAAA,MACF;AAAA,WAEG,YAAW,WACd;AAIE;AAAA,MACF;AAAA,WAGG,YAAW;AAAA,eAEd;AACE,YAAI,YAAY,eAAa,YAAY;AAAA,UACvC,oBAAoB;AAAA,UACpB,QAAQ,IAAI,aAAa,MAAM,kBAAkB,CAAC;AAAA,QACpD,CAAC;AACD,kBAAU,sBAAsB,OAAO,WAAW,UAAU;AAC5D,kBAAU,uBAAuB,WAAW,QAAQ,cAAc,CAAC;AACnE;AAAA,MACF;AAAA;AAAA,EAEN;AAEA,YAAU,kBAAkB,SAAU,WAAW,QAAQ,OAAO,UAAU;AACxE,QAAI,IAAI,SAAS,KAAK;AACtB,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,YAAY,UAAU,QAAQ;AAClC,QAAI,OAAO,OAAO;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,aAAS,IAAI,WAAW,IAAI,MAAM,KAAK,OAAO;AAC5C,UAAI,IAAI,SAAS,OAAO,EAAE;AAC1B,gBAAU,QAAQ,KAAK;AACvB,gBAAU,QAAQ,IAAI,KAAK;AAC3B,gBAAU,QAAQ,IAAI,KAAK;AAC3B,gBAAU,QAAQ,IAAI,KAAK;AAC3B;AAAA,IACF;AAAA,EACF;AAEA,YAAU,uBAAuB,SAAU,WAAW,QAAQ,OAAO,UAAU;AAC7E,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,YAAY,UAAU,QAAQ;AAClC,QAAI,OAAO,OAAO;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,aAAS,IAAI,WAAW,IAAI,MAAM,KAAK,OAAO;AAC5C,UAAI,IAAI,SAAS,OAAO,EAAE;AAC1B,gBAAU,SAAS;AACnB,gBAAU,QAAQ,KAAK;AACvB,gBAAU,QAAQ,KAAK;AACvB,gBAAU,QAAQ,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI;AACjD,eAAS;AAAA,IACX;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,WAAW,QAAQ,OAAO,UAAU;AAClE,QAAI,IAAI,kBAAkB,KAAK;AAC/B,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,YAAY,UAAU,QAAQ;AAClC,QAAI,OAAO,OAAO;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,aAAS,IAAI,WAAW,IAAI,MAAM,KAAK,OAAO;AAC5C,gBAAU,QAAQ,KAAK,SAAS,OAAO,EAAE;AACzC,gBAAU,QAAQ,IAAI,KAAK,SAAS,OAAO,IAAI,EAAE;AACjD,gBAAU,QAAQ,IAAI,KAAK,SAAS,OAAO,IAAI,EAAE;AACjD,gBAAU,QAAQ,IAAI,KAAK;AAC3B;AAAA,IACF;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,WAAW,QAAQ,OAAO,UAAU;AACnE,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,YAAY,UAAU,QAAQ;AAClC,QAAI,OAAO,OAAO;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,aAAS,IAAI,WAAW,IAAI,MAAM,KAAK,OAAO;AAC5C,gBAAU,QAAQ,KAAK,SAAS,OAAO,EAAE;AACzC,gBAAU,QAAQ,IAAI,KAAK,SAAS,OAAO,IAAI,EAAE;AACjD,gBAAU,QAAQ,IAAI,KAAK,SAAS,OAAO,IAAI,EAAE;AACjD,gBAAU,QAAQ,IAAI,KAAK,SAAS,OAAO,IAAI,EAAE,IAAI;AACrD;AAAA,IACF;AAAA,EACF;AAGA,YAAU,gBAAgB,SAAU,QAAQ,SAAS,WAAW;AAC9D,QAAI,QAAQ,MAAM;AAElB,QAAI,YAAY,KAAK,SAAS,KAAO,OAAO,YAAY,MAAM,cAAa,eAAe;AACxF,aAAO;AAAA,IACT;AAEA,QAAI,YAAY,eAAa,YAAY;AAAA,MACvC,oBAAoB;AAAA,MACpB,OAAO;AAAA,MACP,MAAM,IAAI;AAAA,MACV,UAAU,cAAa;AAAA,IACzB,CAAC;AAED,QAAI,aAAa,GAAG;AAClB,aAAO;AAAA,IACT;AAEA,YAAQ,QAAQ,IAAI,QAAQ;AAC5B,YAAQ,QAAQ,IAAI,QAAQ;AAC5B,QAAI,WAAW;AAEf,QAAI,OAAO,YAAY,MAAM,cAAa,SAAS,OAAO,YAAY,MAAM,cAAa,QAAQ;AAC/F,iBAAW;AAAA,IACb;AAEA,YAAQ;AAAA,WACD;AACH,kBAAU,gBAAgB,WAAW,QAAQ,OAAO,QAAQ;AAC5D;AAAA,WAEG;AACH,kBAAU,qBAAqB,WAAW,QAAQ,QAAQ;AAC1D;AAAA,WAEG;AACH,kBAAU,UAAU,WAAW,QAAQ,OAAO,QAAQ;AACtD;AAAA,WAEG;AACH,kBAAU,WAAW,WAAW,QAAQ,OAAO,QAAQ;AACvD;AAAA;AAGA,uBAAc,uBAAuB;AACrC,eAAO;AAAA;AAGX,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,6BAA6B,WAAY;AACjD,WAAO,MAAM,MAAM;AAAA,EACrB;AAEA,YAAU,WAAW,SAAU,MAAK,MAAK;AACvC,WAAO,UAAU,gBAAgB,MAAK,IAAG;AAAA,EAC3C;AAEA,YAAU,WAAW,SAAU,MAAK,MAAK;AACvC,WAAO,UAAU,gBAAgB;AAAA,EACnC;AACF;AAgBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,eAAe,CAAC,GAAG,GAAG;AAC5B,QAAM,kBAAkB,CAAC;AACzB,QAAM,oBAAoB,CAAC;AAE3B,QAAM,OAAO,WAAW,OAAO,CAAC,cAAc,mBAAmB,cAAc,SAAS,eAAe,CAAC;AAExG,QAAM,SAAS,WAAW,OAAO,CAAC,cAAc,GAAG,CAAC;AAEpD,QAAM,SAAS,WAAW,OAAO,CAAC,cAAc,CAAC;AAGjD,sBAAmB,WAAW,KAAK;AACrC;AA3hBA,IAUI,sBACA,aACA,eACA,YACA,gBAifA,iBA8BA,cAEA;AA/hBJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA,IAAI,uBAAsB,mBAAqB;AAA/C,IACI,cAAa,mBAAqB;AACtC,IAAI,gBAAe,eAAa;AAChC,IAAI,aAAY,WAAU;AAC1B,IAAI,iBAAgB,MAAM;AAif1B,IAAI,kBAAiB;AAAA,MACnB,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,YAAY,YAAW;AAAA,MACvB,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,eAAe;AAAA,IACjB;AAqBA,IAAI,eAAc,MAAM,YAAY,SAAQ,oBAAoB;AAEhE,IAAI,uBAAuB,eAAc;AAAA,MACvC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,kBAAoB;AAAA;AAAA;;;ACliBvB,IAAI,YAMA,OAIA;AAVJ;AAAA;AAAA,IAAI,aAAa;AAAA,MACf,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,WAAW;AAAA,IACb;AACA,IAAI,QAAQ;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACPA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAczf,0CAA0C,KAAK,KAAK;AAClD,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AACvC,MAAI,IAAI,IAAI,OAAQ,KAAK,KAAK,IAAI,CAAC,IAAI;AACvC,MAAI,IAAI,IAAI,OAAQ,KAAK,MAAM,GAAG,CAAC,IAAI;AACvC,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACX;AAEA,0CAA0C,KAAK,KAAK;AAClD,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,KAAK,IAAI,KAAK,IAAI,CAAC;AACvB,MAAI,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;AACrC,MAAI,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;AACvC;AAIA,2CAA2C,KAAK,QAAQ;AACtD,MAAI,IAAI,MAAM,SAAS,KAAK;AAE1B,WAAO,IAAI;AAAA,EACb;AAIA,MAAI,UAAU,IAAI,KAAK,KAAK,KAAK,SAAS,SAAS,IAAI,KAAK,IAAI,EAAE,IAAK,KAAI,KAAK,KAAK,IAAI,IAAI,EAAE;AAE/F,MAAI,IAAI,KAAK,OAAO,KAAK,IAAI;AAC3B,WAAO,IAAI,KAAK;AAAA,EAClB;AAEA,SAAO,IAAI,KAAK;AAClB;AAEA,2CAA2C,IAAI,IAAI;AACjD,MAAI,QAAQ,KAAK;AAEjB,MAAI,QAAQ,GAAK;AACf,YAAQ,CAAC;AAAA,EACX;AAEA,SAAO,SAAS,IAAM,KAAK,IAAI;AAC7B,aAAS,IAAM,KAAK;AAAA,EACtB;AAEA,MAAI,QAAQ,KAAK,IAAI;AACnB,YAAQ,IAAM,KAAK,KAAK;AAAA,EAC1B;AAEA,SAAO;AACT;AAGA,sDAAsD,GAAG,MAAM,MAAM,QAAQ;AAC3E,MAAI,OAAO,CAAC;AACZ,MAAI,OAAO,CAAC;AACZ,UAAQ,MAAM,IAAI;AAClB,UAAQ,MAAM,IAAI;AAClB,MAAI,OAAO,CAAC;AACZ,MAAI,OAAO,CAAC;AACZ,mCAAiC,MAAM,IAAI;AAC3C,mCAAiC,MAAM,IAAI;AAG3C,MAAI,SAAS;AAEb,MAAI,KAAK,KAAK,QAAQ,KAAK,KAAK,QAAQ,kCAAkC,KAAK,IAAI,KAAK,EAAE,IAAI,OAAO,KAAK,IAAI;AAG5G,QAAI,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AACpC,WAAO,KAAK,IAAI,IAAM,IAAI;AAE1B,QAAI,IAAI,KAAK;AACX,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,KAAK;AACV,gBAAU;AAAA,IACZ,OAAO;AACL,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,KAAK;AACV,eAAS,IAAM,SAAS;AAAA,IAC1B;AAAA,EACF;AAKA,MAAI,KAAK,KAAK,QAAQ,KAAK,KAAK,MAAM;AACpC,SAAK,KAAK,kCAAkC,MAAM,KAAK,EAAE;AAAA,EAC3D,WAAW,KAAK,KAAK,QAAQ,KAAK,KAAK,MAAM;AAC3C,SAAK,KAAK,kCAAkC,MAAM,KAAK,EAAE;AAAA,EAC3D;AAEA,MAAI,SAAS,CAAC;AACd,SAAO,KAAM,KAAI,UAAU,KAAK,KAAK,SAAS,KAAK;AACnD,SAAO,KAAM,KAAI,UAAU,KAAK,KAAK,SAAS,KAAK;AACnD,SAAO,KAAM,KAAI,UAAU,KAAK,KAAK,SAAS,KAAK;AAEnD,MAAI,SAAS,CAAC;AACd,mCAAiC,QAAQ,MAAM;AAC/C,UAAQ,QAAQ,MAAM;AACxB;AAKA,kCAAkC,WAAW,OAAO;AAElD,QAAM,eAAe,KAAK,0BAA0B;AAEpD,YAAU,UAAU,WAAY;AAC9B,WAAO,MAAM,MAAM;AAAA,EACrB;AAIA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG,GAAG;AAC5C,WAAO,UAAU,gBAAgB,GAAG,GAAG,GAAG,GAAG,KAAK,CAAG;AAAA,EACvD;AAIA,YAAU,kBAAkB,SAAU,GAAG,GAAG,GAAG,GAAG;AAChD,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAGpF,QAAI,WAAW,KAAO,WAAW,GAAK;AACpC,qBAAc,mCAAmC;AACjD,aAAO;AAAA,IACT;AAEA,QAAI,YAAY,KAAO,YAAY,GAAK;AACtC,qBAAc,oCAAoC;AAClD,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,MAAM,uBAAuB;AAChC,gBAAU,YAAY,CAAC;AAAA,IACzB;AAGA,QAAI,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,MAAM,KAAK,IAAI;AACrB,cAAU,mBAAmB;AAG7B,QAAI,IAAI;AAER,WAAO,IAAI,MAAM,MAAM,QAAQ,KAAK;AAClC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAG;AAC1B;AAAA,MACF;AAAA,IACF;AAIA,QAAI,IAAI,MAAM,MAAM,QAAQ;AAC1B,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAIA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG,GAAG;AAC5C,WAAO,UAAU,gBAAgB,GAAG,GAAG,GAAG,GAAG,KAAK,CAAG;AAAA,EACvD;AAIA,YAAU,kBAAkB,SAAU,GAAG,GAAG,GAAG,GAAG;AAChD,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,YAAQ,KAAK,GAAG;AAChB,WAAO,UAAU,YAAY,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,UAAU,SAAS;AAAA,EAC7E;AAIA,YAAU,WAAW,SAAU,OAAO;AACpC,QAAI,MAAM,UAAU,OAAO;AACzB,UAAI,SAAS,KAAK,UAAU,MAAM,KAAK;AACvC,YAAM,QAAQ;AACd,UAAI,QAAQ,KAAK,UAAU,MAAM,KAAK;AAEtC,UAAI,UAAU,mBAAmB,KAAK,WAAW,OAAO;AACtD,kBAAU,SAAS;AACnB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAKA,YAAU,qBAAqB,WAAY;AACzC,QAAI,SAAS,KAAK,UAAU,MAAM,KAAK;AACvC,UAAM,MAAM,KAAK,SAAU,GAAG,GAAG;AAC/B,aAAO,EAAE,IAAI,EAAE;AAAA,IACjB,CAAC;AACD,QAAI,QAAQ,KAAK,UAAU,MAAM,KAAK;AACtC,QAAI,kBAAkB,UAAU,YAAY;AAE5C,QAAI,CAAC,mBAAmB,WAAW,OAAO;AACxC,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,cAAc,WAAY;AAClC,QAAI,WAAW,CAAC,CAAC;AACjB,aAAS,KAAK,MAAM,aAAa;AACjC,aAAS,KAAK,MAAM,aAAa;AACjC,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,MAAM;AACR,YAAM,aAAa,KAAK,MAAM,MAAM,GAAG;AACvC,YAAM,aAAa,KAAK,MAAM,MAAM,OAAO,GAAG;AAAA,IAChD,OAAO;AACL,YAAM,aAAa,KAAK;AACxB,YAAM,aAAa,KAAK;AAAA,IAC1B;AAGA,QAAI,SAAS,OAAO,MAAM,aAAa,MAAM,SAAS,OAAO,MAAM,aAAa,IAAI;AAClF,aAAO;AAAA,IACT;AAEA,cAAU,SAAS;AACnB,WAAO;AAAA,EACT;AAIA,YAAU,cAAc,SAAU,GAAG;AAGnC,QAAI,IAAI;AAER,WAAO,IAAI,MAAM,MAAM,QAAQ,KAAK;AAClC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAG;AAC1B;AAAA,MACF;AAAA,IACF;AAEA,QAAI,SAAS;AAEb,QAAI,KAAK,MAAM,MAAM,QAAQ;AAC3B,aAAO;AAAA,IACT;AAIA,QAAI,kBAAkB;AACtB,UAAM,MAAM,OAAO,GAAG,CAAC;AAEvB,QAAI,MAAM,KAAK,MAAM,MAAM,MAAM,QAAQ;AACvC,wBAAkB,UAAU,YAAY;AAAA,IAC1C;AAEA,QAAI,CAAC,iBAAiB;AACpB,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,YAAY,SAAU,MAAM,MAAM;AAC1C,QAAI,SAAS,MAAM;AAEjB;AAAA,IACF;AAEA,cAAU,YAAY,IAAI;AAE1B,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,UAAI,MAAM,MAAM,GAAG,MAAM,MAAM;AAC7B,cAAM,MAAM,GAAG,IAAI;AACnB,kBAAU,mBAAmB;AAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAIA,YAAU,kBAAkB,WAAY;AACtC,UAAM,QAAQ,CAAC;AACf,cAAU,mBAAmB;AAAA,EAC/B;AAIA,YAAU,gBAAgB,SAAU,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAElE,cAAU,mBAAmB;AAE7B,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,UAAS;AACvC,UAAI,MAAM,MAAM,GAAG,KAAK,MAAM,MAAM,MAAM,GAAG,KAAK,IAAI;AACpD,cAAM,MAAM,OAAO,GAAG,CAAC;AAAA,MACzB,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAGA,cAAU,gBAAgB,IAAI,IAAI,IAAI,IAAI,KAAK,CAAG;AAClD,cAAU,gBAAgB,IAAI,IAAI,IAAI,IAAI,KAAK,CAAG;AAClD,cAAU,SAAS;AAAA,EACrB;AAIA,YAAU,gBAAgB,SAAU,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAClE,QAAI,OAAO,CAAC,IAAI,IAAI,EAAE;AACtB,QAAI,OAAO,CAAC,IAAI,IAAI,EAAE;AACtB,QAAI,OAAO,CAAC;AACZ,QAAI,OAAO,CAAC;AACZ,YAAQ,MAAM,IAAI;AAClB,YAAQ,MAAM,IAAI;AAClB,cAAU,cAAc,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EACtF;AAIA,YAAU,WAAW,SAAU,GAAG;AAChC,QAAI,MAAM,CAAC;AACX,cAAU,SAAS,GAAG,GAAG;AACzB,WAAO,CAAC,KAAK,MAAM,MAAQ,IAAI,KAAK,GAAG,GAAG,KAAK,MAAM,MAAQ,IAAI,KAAK,GAAG,GAAG,KAAK,MAAM,MAAQ,IAAI,KAAK,GAAG,GAAG,GAAG;AAAA,EACnH;AAIA,YAAU,WAAW,SAAU,GAAG,KAAK;AACrC,QAAI,MAAM,eAAe;AACvB,UAAI,WAAW,UAAU,QAAQ;AAEjC,UAAI,MAAM,UAAU,+BAA+B,CAAC;AAEpD,UAAI,MAAM,KAAK,aAAa,GAAG;AAC7B,kBAAU,YAAY,GAAG;AAAA,MAC3B,OAAO;AACL,YAAI,UAAU,CAAC;AACf,kBAAU,aAAa,MAAM,UAAU,OAAO;AAC9C,YAAI,KAAK,QAAQ;AACjB,YAAI,KAAK,QAAQ;AACjB,YAAI,KAAK,QAAQ;AAAA,MACnB;AAEA;AAAA,IACF;AAEA,cAAU,SAAS,GAAG,GAAG,GAAG,GAAG;AAAA,EACjC;AAIA,YAAU,cAAc,SAAU,GAAG;AACnC,QAAI,MAAM,CAAC;AACX,cAAU,SAAS,GAAG,GAAG;AACzB,WAAO,IAAI;AAAA,EACb;AAIA,YAAU,gBAAgB,SAAU,GAAG;AACrC,QAAI,MAAM,CAAC;AACX,cAAU,SAAS,GAAG,GAAG;AACzB,WAAO,IAAI;AAAA,EACb;AAIA,YAAU,eAAe,SAAU,GAAG;AACpC,QAAI,MAAM,CAAC;AACX,cAAU,SAAS,GAAG,GAAG;AACzB,WAAO,IAAI;AAAA,EACb;AAIA,YAAU,WAAW,SAAU,QAAQ,MAAM,MAAM,OAAO;AAIxD,QAAI,MAAM,MAAM,KAAK,MAAM,IAAI,GAAG;AAChC,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,cAAM,IAAI,IAAI,KAAK,MAAM,SAAS;AAClC,cAAM,IAAI,IAAI,KAAK,MAAM,SAAS;AAClC,cAAM,IAAI,IAAI,KAAK,MAAM,SAAS;AAAA,MACpC;AAEA;AAAA,IACF;AAEA,QAAI,MAAM;AACV,QAAI,WAAW,MAAM,MAAM;AAI3B,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,QAAI,aAAa,GAAG;AAClB,cAAQ,MAAM,MAAM,WAAW,GAAG;AAClC,cAAQ,MAAM,MAAM,WAAW,GAAG;AAClC,cAAQ,MAAM,MAAM,WAAW,GAAG;AAAA,IACpC;AAEA,QAAI,IAAI;AACR,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,OAAO,CAAC,GAAK,GAAK,CAAG;AACzB,QAAI,OAAO,CAAC,GAAK,GAAK,CAAG;AACzB,QAAI,WAAW;AACf,QAAI,YAAY;AAChB,QAAI,SAAS,CAAC;AAEd,QAAI,gBAAgB,MAAM,UAAU,OAAM;AAE1C,QAAI,eAAe;AAEjB,sBAAgB,MAAM,aAAa,KAAK;AAAA,IAC1C;AAEA,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,OAAO;AAEX,QAAI,eAAe;AACjB,iBAAW,KAAK,MAAM,MAAM;AAC5B,eAAS,KAAK,MAAM,IAAI;AAAA,IAC1B;AAGA,aAAS,KAAK,GAAG,KAAK,MAAM,MAAM;AAEhC,UAAI,OAAO,IAAI;AAIf,UAAI,OAAO,GAAG;AACZ,YAAI,eAAe;AACjB,iBAAO,WAAW,KAAM,QAAO,KAAQ,UAAS;AAChD,cAAI,KAAK,IAAI,IAAM,IAAI;AAAA,QACzB,OAAO;AACL,cAAI,SAAS,KAAM,QAAO,KAAQ,QAAO;AAAA,QAC3C;AAAA,MACF,WAAW,eAAe;AACxB,eAAO,MAAO,YAAW;AACzB,YAAI,KAAK,IAAI,IAAM,IAAI;AAAA,MACzB,OAAO;AACL,YAAI,MAAO,UAAS;AAAA,MACtB;AAKA,UAAI,MAAM,YAAY;AACpB,YAAI,QAAQ,MAAM;AAElB,YAAI,KAAK,MAAM,MAAM,KAAK,MAAM,IAAI;AAClC,cAAI,iBAAiB,MAAM;AAC3B,cAAI,aAAa,MAAM,KAAK,MAAM;AAElC,cAAI,kBAAkB,GAAG;AACvB,gBAAI,MAAM,KAAK,aAAa;AAAA,UAC9B,OAAO;AAEL,gBAAI,KAAM,KAAI,MAAM,MAAM;AAE1B,gBAAI,kBAAkB,MAAM,iBAAiB,EAAE;AAE/C,gBAAI,MAAM,KAAK,kBAAmB,kBAAiB,KAAK;AAAA,UAC1D;AAAA,QACF;AAAA,MACF;AAGA,aAAO,MAAM,YAAY,IAAI,MAAM,MAAM,KAAK,GAAG;AAC/C;AAKA,YAAI,MAAM,UAAU;AAClB,eAAK,MAAM,MAAM,MAAM,GAAG;AAC1B,eAAK,MAAM,MAAM,KAAK;AAEtB,cAAI,eAAe;AACjB,iBAAK,KAAK,MAAM,EAAE;AAClB,iBAAK,KAAK,MAAM,EAAE;AAAA,UACpB;AAEA,eAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AAC/B,eAAK,KAAK,MAAM,MAAM,KAAK;AAC3B,eAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AAC/B,eAAK,KAAK,MAAM,MAAM,KAAK;AAC3B,eAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AAC/B,eAAK,KAAK,MAAM,MAAM,KAAK;AAG3B,qBAAW,MAAM,MAAM,MAAM,GAAG;AAChC,sBAAY,MAAM,MAAM,MAAM,GAAG;AAGjC,cAAI,WAAW,MAAS;AACtB,uBAAW;AAAA,UACb;AAEA,cAAI,WAAW,SAAS;AACtB,uBAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAGA,UAAI,IAAI,MAAM,aAAa,IAAI;AAC7B,cAAM,QAAQ;AACd,cAAM,OAAO,KAAK;AAClB,cAAM,OAAO,KAAK;AAElB,YAAI,MAAM,UAAU;AAClB,cAAI,UAAU,sBAAsB,GAAG;AACrC,kBAAM,QAAQ,MAAM,gBAAgB;AACpC,kBAAM,OAAO,KAAK,MAAM,gBAAgB;AACxC,kBAAM,OAAO,KAAK,MAAM,gBAAgB;AAAA,UAC1C,OAAO;AACL,kBAAM,QAAQ;AACd,kBAAM,OAAO,KAAK;AAClB,kBAAM,OAAO,KAAK;AAAA,UACpB;AAAA,QACF;AAAA,MACF,WAAW,IAAI,MAAM,aAAa,MAAM,MAAM,CAAC,KAAK,IAAI,GAAG;AAGzD,cAAM,QAAQ;AACd,cAAM,OAAO,KAAK;AAClB,cAAM,OAAO,KAAK;AAElB,YAAI,MAAM,UAAU;AAClB,cAAI,UAAU,sBAAsB,GAAG;AACrC,kBAAM,QAAQ,MAAM,gBAAgB;AACpC,kBAAM,OAAO,KAAK,MAAM,gBAAgB;AACxC,kBAAM,OAAO,KAAK,MAAM,gBAAgB;AAAA,UAC1C,WAAW,WAAW,GAAG;AACvB,kBAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,kBAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AACjC,kBAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AAAA,UACnC;AAAA,QACF;AAAA,MACF,WAAW,QAAQ,KAAM,MAAK,IAAI,IAAI,MAAM,IAAI,QAAQ,MAAM,aAAa;AACzE,YAAI,WAAW,GAAG;AAChB,gBAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,gBAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AACjC,gBAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AAAA,QACnC,OAAO;AACL,gBAAM,QAAQ;AACd,gBAAM,OAAO,KAAK;AAClB,gBAAM,OAAO,KAAK;AAAA,QACpB;AAAA,MACF,OAAO;AAML,YAAI,IAAI;AAER,YAAI,eAAe;AACjB,cAAK,QAAO,MAAO,MAAK;AAAA,QAC1B,OAAO;AACL,cAAK,KAAI,MAAO,MAAK;AAAA,QACvB;AAGA,YAAI,IAAI,UAAU;AAChB,cAAI,MAAM,IAAI;AAAA,QAChB,OAAO;AACL,cAAI,MAAM,MAAO,KAAI,YAAa,KAAM;AAAA,QAC1C;AAIA,YAAI,YAAY,MAAM;AAEpB,cAAI,IAAI,KAAK;AACX,kBAAM,QAAQ,KAAK;AACnB,kBAAM,OAAO,KAAK,KAAK;AACvB,kBAAM,OAAO,KAAK,KAAK;AACvB;AAAA,UACF,OAAO;AAEL,kBAAM,QAAQ,KAAK;AACnB,kBAAM,OAAO,KAAK,KAAK;AACvB,kBAAM,OAAO,KAAK,KAAK;AACvB;AAAA,UACF;AAAA,QACF;AAIA,YAAI,YAAY,MAAM;AAEpB,cAAI,MAAM,eAAe,YAAW,KAAK;AACvC,kBAAM,QAAS,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AAC3C,kBAAM,OAAO,KAAM,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AAC/C,kBAAM,OAAO,KAAM,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AAAA,UACjD,WAAW,MAAM,eAAe,YAAW,KAAK;AAC9C,gBAAI,OAAO,CAAC;AACZ,gBAAI,OAAO,CAAC;AACZ,oBAAQ,MAAM,IAAI;AAClB,oBAAQ,MAAM,IAAI;AAElB,gBAAI,MAAM,WAAY,MAAK,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM;AACzE,kBAAI,KAAK,KAAK,KAAK,IAAI;AACrB,qBAAK,MAAM;AAAA,cACb,OAAO;AACL,qBAAK,MAAM;AAAA,cACb;AAAA,YACF;AAEA,gBAAI,SAAS,CAAC;AACd,mBAAO,KAAM,KAAM,KAAK,KAAK,KAAK,IAAI,KAAK;AAE3C,gBAAI,OAAO,KAAK,GAAK;AACnB,qBAAO,MAAM;AAAA,YACf;AAEA,mBAAO,KAAM,KAAM,KAAK,KAAK,KAAK,IAAI,KAAK;AAC3C,mBAAO,KAAM,KAAM,KAAK,KAAK,KAAK,IAAI,KAAK;AAE3C,oBAAQ,QAAQ,MAAM;AACtB,kBAAM,QAAQ,OAAO;AACrB,kBAAM,OAAO,KAAK,OAAO;AACzB,kBAAM,OAAO,KAAK,OAAO;AAAA,UAC3B,WAAW,MAAM,eAAe,YAAW,KAAK;AAC9C,gBAAI,OAAO,CAAC;AACZ,gBAAI,OAAO,CAAC;AACZ,oBAAQ,MAAM,IAAI;AAClB,oBAAQ,MAAM,IAAI;AAClB,gBAAI,SAAS,CAAC;AACd,mBAAO,KAAM,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AACzC,mBAAO,KAAM,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AACzC,mBAAO,KAAM,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK;AAEzC,oBAAQ,QAAQ,MAAM;AACtB,kBAAM,QAAQ,OAAO;AACrB,kBAAM,OAAO,KAAK,OAAO;AACzB,kBAAM,OAAO,KAAK,OAAO;AAAA,UAC3B,WAAW,MAAM,eAAe,YAAW,WAAW;AACpD,yDAA6C,GAAG,MAAM,MAAM,MAAM;AAClE,kBAAM,QAAQ,OAAO;AACrB,kBAAM,OAAO,KAAK,OAAO;AACzB,kBAAM,OAAO,KAAK,OAAO;AAAA,UAC3B,OAAO;AACL,2BAAc,oCAAoC,MAAM,UAAU;AAAA,UACpE;AAEA;AAAA,QACF;AAQA,YAAI,IAAI,KAAK;AACX,cAAI,MAAM,KAAK,IAAI,IAAI,GAAK,IAAM,KAAO,SAAS;AAAA,QACpD,WAAW,IAAI,KAAK;AAClB,cAAI,IAAM,MAAM,KAAK,IAAK,KAAM,KAAK,GAAG,IAAI,KAAO,SAAS;AAAA,QAC9D;AAGA,YAAI,KAAK,IAAI;AACb,YAAI,MAAM,KAAK;AACf,YAAI,KAAK,IAAM,MAAM,IAAI,KAAK;AAC9B,YAAI,KAAK,KAAK,MAAM,IAAI;AACxB,YAAI,KAAK,MAAM,IAAI,KAAK;AACxB,YAAI,KAAK,MAAM;AACf,YAAI,QAAQ;AACZ,YAAI,IAAI;AAER,YAAI,MAAM,eAAe,YAAW,KAAK;AACvC,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,oBAAQ,KAAK,KAAK,KAAK;AACvB,gBAAK,KAAM,aAAa;AAExB,kBAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK;AAAA,UAChE;AAAA,QACF,WAAW,MAAM,eAAe,YAAW,KAAK;AAC9C,cAAI,OAAO,CAAC;AACZ,cAAI,QAAQ,CAAC;AACb,kBAAQ,MAAM,IAAI;AAClB,kBAAQ,MAAM,KAAK;AAEnB,cAAI,MAAM,WAAY,MAAK,KAAK,MAAM,KAAK,OAAO,MAAM,KAAK,KAAK,KAAK,MAAM;AAC3E,gBAAI,KAAK,KAAK,MAAM,IAAI;AACtB,mBAAK,MAAM;AAAA,YACb,OAAO;AACL,oBAAM,MAAM;AAAA,YACd;AAAA,UACF;AAEA,cAAI,UAAU,CAAC;AAEf,mBAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAE7B,oBAAQ,MAAM,MAAM,KAAK;AACzB,gBAAK,KAAM,aAAa;AAExB,oBAAQ,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,MAAM,KAAK,IAAI,KAAK;AAE7D,gBAAI,OAAO,KAAK,QAAQ,MAAM,GAAK;AACjC,sBAAQ,OAAO;AAAA,YACjB;AAAA,UACF;AAGA,kBAAQ,SAAS,MAAM;AACvB,gBAAM,QAAQ,OAAO;AACrB,gBAAM,OAAO,KAAK,OAAO;AACzB,gBAAM,OAAO,KAAK,OAAO;AAAA,QAC3B,WAAW,MAAM,eAAe,YAAW,KAAK;AAC9C,cAAI,OAAO,CAAC;AACZ,cAAI,QAAQ,CAAC;AACb,kBAAQ,MAAM,IAAI;AAClB,kBAAQ,MAAM,KAAK;AACnB,cAAI,UAAU,CAAC;AAEf,mBAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAEhC,oBAAQ,MAAM,OAAO,KAAK;AAC1B,gBAAK,KAAM,aAAa;AAExB,oBAAQ,OAAO,KAAK,KAAK,OAAO,KAAK,MAAM,OAAO,KAAK,IAAI,KAAK;AAAA,UAClE;AAGA,kBAAQ,SAAS,MAAM;AACvB,gBAAM,QAAQ,OAAO;AACrB,gBAAM,OAAO,KAAK,OAAO;AACzB,gBAAM,OAAO,KAAK,OAAO;AAAA,QAC3B,WAAW,MAAM,eAAe,YAAW,WAAW;AAIpD,uDAA6C,GAAG,MAAM,MAAM,MAAM;AAClE,gBAAM,QAAQ,OAAO;AACrB,gBAAM,OAAO,KAAK,OAAO;AACzB,gBAAM,OAAO,KAAK,OAAO;AAAA,QAC3B,OAAO;AACL,yBAAc,kCAAkC;AAAA,QAClD;AAGA,iBAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,gBAAM,OAAO,OAAO,MAAM,OAAO,OAAO,IAAM,IAAM,MAAM,OAAO;AACjE,gBAAM,OAAO,OAAO,MAAM,OAAO,OAAO,IAAM,IAAM,MAAM,OAAO;AAAA,QACnE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,YAAU,gBAAgB,SAAU,QAAQ,MAAM,MAAM;AACtD,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEpF,QAAI,UAAU,SAAS,KAAK,MAAM,aAAa,MAAM,cAAc,QAAQ,MAAM,mBAAmB,WAAW;AAC7G,aAAO,MAAM;AAAA,IACf;AAEA,QAAI,MAAM,MAAM,WAAW,GAAG;AAC5B,qBAAc,6DAA6D;AAC3E,aAAO,MAAM;AAAA,IACf;AAEA,QAAI,aAAa,YAAY,IAAI;AAEjC,QAAI,MAAM,cAAc,QAAQ,MAAM,mBAAmB,WAAW;AAClE,YAAM,QAAQ,IAAI,WAAW,OAAO,UAAU;AAC9C,YAAM,YAAY;AAClB,YAAM,iBAAiB;AAAA,IACzB;AAEA,QAAI,WAAW,CAAC;AAChB,cAAU,SAAS,QAAQ,MAAM,MAAM,QAAQ;AAE/C,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,YAAM,MAAM,IAAI,aAAa,KAAK,KAAK,MAAM,SAAS,IAAI,IAAI,KAAK,MAAQ,GAAG;AAC9E,YAAM,MAAM,IAAI,aAAa,KAAK,KAAK,MAAM,SAAS,IAAI,IAAI,KAAK,MAAQ,GAAG;AAC9E,YAAM,MAAM,IAAI,aAAa,KAAK,KAAK,MAAM,SAAS,IAAI,IAAI,KAAK,MAAQ,GAAG;AAE9E,UAAI,WAAW;AACb,cAAM,MAAM,IAAI,aAAa,KAAK;AAAA,MACpC;AAAA,IACF;AAEA,UAAM,UAAU,SAAS;AACzB,WAAO,MAAM;AAAA,EACf;AAGA,YAAU,yBAAyB,SAAU,QAAQ,MAAM,MAAM,OAAO;AACtE,QAAI,MAAM;AACV,cAAU,gBAAgB;AAE1B,QAAI,OAAO,GAAG;AACZ,YAAO,QAAO,UAAW,QAAO;AAAA,IAClC;AAEA,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,UAAI,OAAO;AAAA,QACT,GAAG,SAAS,MAAM;AAAA,QAClB,GAAG,MAAM,IAAI;AAAA,QACb,GAAG,MAAM,IAAI,IAAI;AAAA,QACjB,GAAG,MAAM,IAAI,IAAI;AAAA,QACjB,WAAW;AAAA,QACX,UAAU;AAAA,MACZ;AACA,YAAM,MAAM,KAAK,IAAI;AAAA,IACvB;AAEA,cAAU,mBAAmB;AAAA,EAC/B;AAIA,YAAU,eAAe,SAAU,OAAO,KAAK;AAC7C,QAAI,QAAQ,KAAK,SAAS,MAAM,MAAM,QAAQ;AAC5C,qBAAc,qBAAqB;AACnC,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,WAAO;AAAA,EACT;AAIA,YAAU,eAAe,SAAU,OAAO,KAAK;AAC7C,QAAI,QAAQ,KAAK,SAAS,MAAM,MAAM,QAAQ;AAC5C,qBAAc,qBAAqB;AACnC,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,MAAM,MAAM,OAAO;AAC9B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,WAAW,IAAI;AAClC,UAAM,MAAM,OAAO,YAAY,IAAI;AAEnC,QAAI,SAAS,IAAI,IAAI;AAGnB,gBAAU,mBAAmB;AAAA,IAE/B,OAAO;AACL,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,6BAA6B,WAAY;AACjD,QAAI,MAAM,iBAAiB,UAAU,QAAQ,GAAG;AAC9C,aAAO,UAAU,QAAQ;AAAA,IAC3B;AAEA,QAAI,MAAM,WAAW;AAInB,aAAO,MAAM;AAAA,IACf;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,SAAU,KAAK,MAAM;AAC/C,QAAI,IAAI,UAAU,QAAQ;AAE1B,QAAI,IAAI,KAAK,OAAO,GAAG;AACrB,UAAI,YAAY,CAAC;AACjB,gBAAU,aAAa,MAAM,GAAG,SAAS;AAEzC,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,aAAK,KAAK,UAAU,IAAI;AAAA,MAC1B;AAEA,WAAK,KAAK;AAEV;AAAA,IACF;AAEA,cAAU,YAAY,IAAI;AAC1B,SAAK,KAAK;AAAA,EACZ;AAGA,YAAU,sBAAsB,SAAU,IAAI,KAAK;AACjD,QAAI,MAAM,KAAK,CAAC,KAAK;AACnB;AAAA,IACF;AAEA,cAAU,gBAAgB;AAE1B,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,gBAAU,YAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IAClF;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,MAAK,MAAK;AAC9C,QAAI,QAAQ,CAAC,MAAK,IAAG;AACrB,QAAI,gBAAgB,UAAU,SAAS;AAEvC,QAAI,cAAc,OAAO,MAAM,MAAM,cAAc,OAAO,MAAM,IAAI;AAClE;AAAA,IACF;AAEA,QAAI,MAAM,OAAO,MAAM,IAAI;AACzB,qBAAc,uCAAuC;AACrD;AAAA,IACF;AAEA,QAAI,QAAS,OAAM,KAAK,MAAM,MAAO,eAAc,KAAK,cAAc;AACtE,QAAI,QAAQ,MAAM,KAAK,cAAc,KAAK;AAE1C,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,EAAE,GAAG;AAC3C,YAAM,MAAM,GAAG,IAAI,MAAM,MAAM,GAAG,IAAI,QAAQ;AAAA,IAChD;AAEA,UAAM,aAAa,KAAK,MAAM;AAC9B,UAAM,aAAa,KAAK,MAAM;AAC9B,cAAU,SAAS;AAAA,EACrB;AAGA,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,gBAAgB,UAAU,SAAS;AAEvC,QAAI,MAAM,CAAC;AAEX,QAAI,cAAc,KAAK,MAAM,IAAI;AAC/B,gBAAU,SAAS,MAAM,IAAI,GAAG;AAChC,gBAAU,YAAY,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IACxD,OAAO;AACL,gBAAU,SAAS,cAAc,IAAI,GAAG;AACxC,gBAAU,YAAY,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IACxD;AAEA,QAAI,cAAc,KAAK,MAAM,IAAI;AAC/B,gBAAU,SAAS,MAAM,IAAI,GAAG;AAChC,gBAAU,YAAY,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IACxD,OAAO;AACL,gBAAU,SAAS,cAAc,IAAI,GAAG;AACxC,gBAAU,YAAY,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IACxD;AAGA,cAAU,mBAAmB;AAE7B,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,UAAS;AACvC,UAAI,MAAM,MAAM,GAAG,KAAK,MAAM,MAAM,MAAM,MAAM,GAAG,KAAK,MAAM,IAAI;AAChE,cAAM,MAAM,OAAO,GAAG,CAAC;AAAA,MACzB,OAAO;AACL,UAAE;AAAA,MACJ;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,6BAA6B,SAAU,IAAI,IAAI;AACvD,QAAI,IAAI,UAAU,qBAAqB;AACvC,WAAO,KAAK,KAAM,MAAK,MAAM,CAAC;AAAA,EAChC;AAGA,YAAU,uBAAuB,WAAY;AAC3C,QAAI,MAAM,MAAM,SAAS,GAAG;AAC1B,aAAO;AAAA,IACT;AAEA,QAAI,WAAW,OAAO;AAEtB,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,SAAS,GAAG,KAAK;AAC/C,UAAI,cAAc,MAAM,MAAM,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG;AAExD,UAAI,cAAc,UAAU;AAC1B,mBAAW;AAAA,MACb;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,yBAAyB,SAAU,OAAO,QAAQ,WAAW,aAAa;AAClF,QAAI,UAAU,QAAQ,MAAM,GAAG;AAC7B,qBAAc,kCAAkC;AAChD;AAAA,IACF;AAEA,QAAI,MAAM,eAAe;AACvB,gBAAU,eAAe,OAAO,QAAQ,WAAW,WAAW;AAAA,IAChE,OAAO;AACL,gBAAU,QAAQ,OAAO,QAAQ,WAAW,WAAW;AAAA,IACzD;AAAA,EACF;AAGA,YAAU,UAAU,SAAU,OAAO,QAAQ,WAAW,aAAa;AACnE,QAAI,UAAU,QAAQ,MAAM,GAAG;AAC7B,uBAAgB,kCAAkC;AAClD;AAAA,IACF;AAEA,QAAI,QAAQ,KAAK,MAAM,UAAU,SAAS,IAAI,MAAQ,GAAG;AACzD,QAAI,SAAS,MAAM,kBAAkB;AACrC,QAAI,SAAS,MAAM,sBAAsB;AACzC,QAAI,UAAU,OAAO,QAAQ;AAC7B,QAAI,SAAS,MAAM,QAAQ;AAC3B,QAAI,MAAM,CAAC;AAEX,QAAI,cAAc,qBAAoB,MAAM;AAC1C,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAI,IAAI,OAAO,IAAI,SAAS;AAC5B,kBAAU,SAAS,GAAG,GAAG;AACzB,gBAAQ,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AAChD,gBAAQ,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AACpD,gBAAQ,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AACpD,gBAAQ,IAAI,IAAI,KAAK;AAAA,MACvB;AAAA,IACF;AAEA,QAAI,cAAc,qBAAoB,KAAK;AACzC,eAAS,MAAM,GAAG,MAAM,QAAQ,OAAO;AACrC,YAAI,KAAK,OAAO,MAAM,SAAS;AAC/B,kBAAU,SAAS,IAAI,GAAG;AAC1B,gBAAQ,MAAM,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AAClD,gBAAQ,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AACtD,gBAAQ,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAQ,GAAG;AAAA,MACxD;AAAA,IACF;AAEA,QAAI,cAAc,qBAAoB,WAAW;AAC/C,eAAS,MAAM,GAAG,MAAM,QAAQ,OAAO;AACrC,YAAI,MAAM,OAAO,MAAM,SAAS;AAChC,kBAAU,SAAS,KAAK,GAAG;AAC3B,gBAAQ,OAAO,KAAK,MAAM,IAAI,KAAK,OAAO,IAAI,KAAK,SAAS,IAAI,KAAK,QAAQ,GAAG;AAAA,MAClF;AAAA,IACF;AAEA,QAAI,cAAc,qBAAoB,iBAAiB;AACrD,eAAS,MAAM,GAAG,MAAM,QAAQ,OAAO;AACrC,YAAI,MAAM,OAAO,MAAM,SAAS;AAChC,kBAAU,SAAS,KAAK,GAAG;AAC3B,gBAAQ,MAAM,KAAK,KAAK,MAAM,IAAI,KAAK,OAAO,IAAI,KAAK,SAAS,IAAI,KAAK,QAAQ,GAAG;AACpF,gBAAQ,MAAM,IAAI,KAAK;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AAGA,YAAU,gBAAgB,SAAU,UAAU;AAC5C,QAAI,SAAS,YAAY;AACvB,YAAM,aAAa,YAAW,SAAS,WAAW,YAAY;AAE9D,UAAI,MAAM,eAAe,QAAW;AAClC,uBAAc,cAAc,OAAO,SAAS,YAAY,mCAAmC,CAAC;AAC5F,cAAM,aAAa,YAAW;AAAA,MAChC;AAAA,IACF;AAEA,QAAI,SAAS,UAAU;AACrB,YAAM,WAAW,CAAC,EAAE,OAAO,SAAS,QAAQ;AAE5C,aAAO,MAAM,SAAS,SAAS,GAAG;AAChC,cAAM,SAAS,KAAK,CAAG;AAAA,MACzB;AAAA,IACF;AAEA,QAAI,SAAS,WAAW;AACtB,UAAI,OAAO,SAAS,UAAU;AAC9B,YAAM,QAAQ,CAAC;AACf,UAAI,WAAW;AACf,UAAI,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK,GAAG;AAChC,cAAM,MAAM,KAAK;AAAA,UACf,GAAG,SAAS,UAAU;AAAA,UACtB,GAAG,SAAS,UAAU,IAAI;AAAA,UAC1B,GAAG,SAAS,UAAU,IAAI;AAAA,UAC1B,GAAG,SAAS,UAAU,IAAI;AAAA,UAC1B;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAOA,cAAU,mBAAmB;AAAA,EAC/B;AACF;AAwBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,uBAAmB,OAAO,WAAW,OAAO,aAAa;AAEzD,QAAM,QAAQ,CAAC;AACf,QAAM,QAAQ,CAAC;AACf,QAAM,WAAW,CAAC,KAAK,GAAK,GAAK,CAAG;AACpC,QAAM,kBAAkB,CAAC,GAAK,GAAK,GAAK,CAAG;AAC3C,QAAM,kBAAkB,CAAC,GAAK,GAAK,GAAK,CAAG;AAC3C,QAAM,YAAY,CAAC;AACnB,QAAM,IAAI,MAAM,SAAS;AAEzB,QAAM,IAAI,WAAW,OAAO,CAAC,aAAa,cAAc,CAAC;AAEzD,QAAM,OAAO,WAAW,OAAO,CAAC,sBAAsB,sBAAsB,cAAc,cAAc,gBAAgB,CAAC;AACzH,QAAM,SAAS,WAAW,OAAO,CAAC,YAAY,mBAAmB,iBAAiB,GAAG,CAAC;AAEtF,QAAM,SAAS,WAAW,OAAO,CAAC,YAAY,mBAAmB,iBAAiB,CAAC;AAGnF,2BAAyB,WAAW,KAAK;AAC3C;AAhsCA,IASI,aACA,QACA,sBACA,gBACA,gBACA,kBAwoCA,iBA4CA,cAEA;AApsCJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA,IAAI,cAAa,WAAU;AAA3B,IACI,SAAQ,WAAU;AACtB,IAAI,uBAAsB,qBAAmB;AAC7C,IAAI,iBAAgB,MAAM;AAA1B,IACI,iBAAgB,MAAM;AAD1B,IAEI,mBAAkB,MAAM;AAwoC5B,IAAI,kBAAiB;AAAA,MACnB,UAAU;AAAA,MACV,YAAY,YAAW;AAAA,MACvB,SAAS;AAAA,MACT,OAAO,OAAM;AAAA,MACb,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,OAAO;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,gBAAgB;AAAA,IAClB;AA2BA,IAAI,eAAc,MAAM,YAAY,SAAQ,0BAA0B;AAEtE,IAAI,6BAA6B,eAAc;AAAA,MAC7C,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,UAAS;AAAA;AAAA;;;ACjsCZ,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,UAAU,WAAY;AAC9B,WAAO,MAAM,MAAM;AAAA,EACrB;AAUA,YAAU,UAAU,WAAY;AAC9B,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI,eAAe;AAEnB,QAAI,MAAM,MAAM,SAAS,GAAG;AAC1B,kBAAY,MAAM,MAAM,GAAG;AAAA,IAC7B;AAEA,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,cAAQ,MAAM,MAAM,GAAG;AAEvB,UAAI,UAAU,WAAW;AACvB,YAAI,QAAQ,WAAW;AACrB,kBAAQ;AAAA,iBACD;AAAA,iBACA;AACH,6BAAe;AAEf;AAAA,iBAEG;AAAA;AAEH,6BAAe;AAEf;AAAA;AAAA,QAEN,OAAO;AAEL,kBAAQ;AAAA,iBACD;AAAA,iBACA;AACH,6BAAe;AAEf;AAAA,iBAEG;AAAA;AAEH,6BAAe;AAEf;AAAA;AAAA,QAEN;AAAA,MACF;AAEA,kBAAY;AAEZ,UAAI,iBAAiB,GAAG;AACtB;AAAA,MACF;AAAA,IACF;AAEA,YAAQ;AAAA,WACD;AACH,eAAO;AAAA,WAEJ;AACH,eAAO;AAAA,WAEJ;AACH,eAAO;AAAA,WAEJ;AAAA;AAEH,eAAO;AAAA;AAAA,EAEb;AAKA,YAAU,iBAAiB,WAAY;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,UAAM,WAAW;AAEjB,QAAI,OAAO,GAAG;AACZ,YAAM,WAAW,CAAC;AAElB,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,cAAM,SAAS,IAAI,KAAK,MAAM,MAAM,GAAG;AACvC,cAAM,SAAS,IAAI,IAAI,KAAK,MAAM,MAAM,GAAG;AAAA,MAC7C;AAAA,IACF;AAEA,WAAO,MAAM;AAAA,EACf;AAIA,YAAU,uBAAuB,WAAY;AAE3C,QAAI,MAAM,MAAM,WAAW,GAAG;AAC5B,aAAO;AAAA,IACT;AAEA,QAAI,UAAU;AACd,QAAI,IAAI;AACR,QAAI,IAAI;AAER,WAAO,IAAI,MAAM,MAAM,QAAQ,KAAK;AAClC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAK;AAC5B,kBAAU;AACV;AAAA,MACF;AAAA,IACF;AAIA,QAAI,SAAS;AACX,UAAI,OAAO;AAAA,IACb,WAAW,IAAI,GAAG;AAGhB,UAAI,MAAM,MAAM,IAAI,GAAG;AAAA,IACzB,WAAW,MAAM,UAAU;AAIzB,UAAI,CAAC,OAAO;AAAA,IACd,OAAO;AACL,UAAI,MAAM,MAAM,GAAG;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,eAAe,SAAU,OAAO,KAAK;AAC7C,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,QAAQ,KAAK,SAAS,MAAM;AAC9B,qBAAc,qBAAqB;AACnC,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,QAAI,KAAK,MAAM,MAAM,OAAO;AAC5B,WAAO;AAAA,EACT;AAGA,YAAU,eAAe,SAAU,OAAO,KAAK;AAC7C,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,QAAQ,KAAK,SAAS,MAAM;AAC9B,qBAAc,qBAAqB;AACnC,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,MAAM,MAAM,OAAO;AAC9B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,IAAI,IAAI;AAC3B,UAAM,MAAM,OAAO,WAAW,IAAI;AAClC,UAAM,MAAM,OAAO,YAAY,IAAI;AAEnC,QAAI,SAAS,IAAI,IAAI;AAGnB,gBAAU,mBAAmB;AAAA,IAE/B,OAAO;AACL,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAMA,YAAU,WAAW,SAAU,GAAG,GAAG;AACnC,WAAO,UAAU,aAAa,GAAG,GAAG,KAAK,CAAG;AAAA,EAC9C;AAGA,YAAU,eAAe,SAAU,GAAG,GAAG,UAAU,WAAW;AAE5D,QAAI,WAAW,KAAO,WAAW,GAAK;AACpC,qBAAc,mCAAmC;AACjD,aAAO;AAAA,IACT;AAEA,QAAI,YAAY,KAAO,YAAY,GAAK;AACtC,qBAAc,oCAAoC;AAClD,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,MAAM,uBAAuB;AAChC,gBAAU,YAAY,CAAC;AAAA,IACzB;AAGA,QAAI,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,MAAM,KAAK,IAAI;AACrB,cAAU,mBAAmB;AAE7B,QAAI;AAEJ,SAAK,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACvC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAG;AAC1B;AAAA,MACF;AAAA,IACF;AAIA,QAAI,IAAI,MAAM,MAAM,QAAQ;AAC1B,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,QAAI,MAAM,UAAU,OAAO;AACzB,YAAM,QAAQ;AACd,gBAAU,mBAAmB;AAAA,IAC/B;AAAA,EACF;AAIA,YAAU,qBAAqB,WAAY;AACzC,UAAM,MAAM,KAAK,SAAU,GAAG,GAAG;AAC/B,aAAO,EAAE,IAAI,EAAE;AAAA,IACjB,CAAC;AACD,QAAI,kBAAkB,UAAU,YAAY;AAE5C,QAAI,CAAC,iBAAiB;AACpB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAGA,YAAU,cAAc,WAAY;AAClC,QAAI,WAAW,MAAM,MAAM,MAAM;AACjC,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,MAAM;AACR,YAAM,MAAM,KAAK,MAAM,MAAM,GAAG;AAChC,YAAM,MAAM,KAAK,MAAM,MAAM,OAAO,GAAG;AAAA,IACzC,OAAO;AACL,YAAM,MAAM,KAAK;AACjB,YAAM,MAAM,KAAK;AAAA,IACnB;AAGA,QAAI,SAAS,OAAO,MAAM,MAAM,MAAM,SAAS,OAAO,MAAM,MAAM,IAAI;AACpE,aAAO;AAAA,IACT;AAEA,cAAU,SAAS;AACnB,WAAO;AAAA,EACT;AAIA,YAAU,cAAc,SAAU,GAAG;AAGnC,QAAI;AAEJ,SAAK,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACvC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAG;AAC1B;AAAA,MACF;AAAA,IACF;AAGA,QAAI,KAAK,MAAM,MAAM,QAAQ;AAC3B,aAAO;AAAA,IACT;AAEA,QAAI,SAAS;AAGb,QAAI,kBAAkB;AACtB,UAAM,MAAM,OAAO,GAAG,CAAC;AAEvB,QAAI,MAAM,KAAK,MAAM,MAAM,MAAM,QAAQ;AACvC,wBAAkB,UAAU,YAAY;AAAA,IAC1C;AAEA,QAAI,CAAC,iBAAiB;AACpB,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,WAAY;AACtC,UAAM,QAAQ,CAAC;AACf,cAAU,mBAAmB;AAAA,EAC/B;AAIA,YAAU,aAAa,SAAU,IAAI,IAAI,IAAI,IAAI;AAE/C,cAAU,mBAAmB;AAE7B,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,UAAS;AACvC,UAAI,MAAM,MAAM,GAAG,KAAK,MAAM,MAAM,MAAM,GAAG,KAAK,IAAI;AACpD,cAAM,MAAM,OAAO,GAAG,CAAC;AAAA,MACzB,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAGA,cAAU,SAAS,IAAI,IAAI,KAAK,CAAG;AACnC,cAAU,SAAS,IAAI,IAAI,KAAK,CAAG;AAAA,EACrC;AAGA,YAAU,WAAW,SAAU,GAAG;AAChC,QAAI,QAAQ,CAAC;AACb,cAAU,SAAS,GAAG,GAAG,GAAG,KAAK;AACjC,WAAO,MAAM;AAAA,EACf;AAKA,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,MAAM,SAAS,GAAG;AACpB,aAAO;AAAA,IACT;AAEA,QAAI,gBAAgB,UAAU,SAAS;AAEvC,QAAI,cAAc,KAAK,MAAM,IAAI;AAC/B,gBAAU,SAAS,MAAM,IAAI,UAAU,SAAS,MAAM,EAAE,CAAC;AAAA,IAC3D,OAAO;AACL,gBAAU,SAAS,MAAM,IAAI,UAAU,SAAS,cAAc,EAAE,CAAC;AAAA,IACnE;AAEA,QAAI,cAAc,KAAK,MAAM,IAAI;AAC/B,gBAAU,SAAS,MAAM,IAAI,UAAU,SAAS,MAAM,EAAE,CAAC;AAAA,IAC3D,OAAO;AACL,gBAAU,SAAS,MAAM,IAAI,UAAU,SAAS,cAAc,EAAE,CAAC;AAAA,IACnE;AAGA,cAAU,mBAAmB;AAE7B,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,UAAS;AACvC,UAAI,MAAM,MAAM,GAAG,KAAK,MAAM,MAAM,MAAM,MAAM,GAAG,KAAK,MAAM,IAAI;AAChE,cAAM,MAAM,OAAO,GAAG,CAAC;AAAA,MACzB,OAAO;AACL,UAAE;AAAA,MACJ;AAAA,IACF;AAEA,cAAU,mBAAmB;AAC7B,WAAO;AAAA,EACT;AAGA,YAAU,6BAA6B,SAAU,IAAI,IAAI;AACvD,QAAI,IAAI,UAAU,qBAAqB;AACvC,WAAO,KAAK,KAAM,MAAK,MAAM,CAAC;AAAA,EAChC;AAGA,YAAU,uBAAuB,WAAY;AAC3C,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,OAAO,GAAG;AACZ,aAAO;AAAA,IACT;AAEA,QAAI,WAAW,MAAM,MAAM,GAAG,IAAI,MAAM,MAAM,GAAG;AAEjD,aAAS,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK;AACjC,UAAI,cAAc,MAAM,MAAM,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG;AAExD,UAAI,cAAc,UAAU;AAC1B,mBAAW;AAAA,MACb;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAOA,YAAU,WAAW,SAAU,QAAQ,MAAM,MAAM,OAAO;AACxD,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAI;AACJ,QAAI,MAAM;AACV,QAAI,WAAW,MAAM,MAAM;AAI3B,QAAI,YAAY;AAEhB,QAAI,aAAa,GAAG;AAClB,kBAAY,MAAM,MAAM,WAAW,GAAG;AAAA,IACxC;AAEA,QAAI,IAAI;AACR,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,WAAW;AACf,QAAI,YAAY;AAEhB,SAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AAEzB,UAAI,OAAO,SAAS;AAIpB,UAAI,OAAO,GAAG;AACZ,YAAI,SAAS,IAAK,QAAO,KAAQ,QAAO;AAAA,MAC1C,OAAO;AACL,YAAI,MAAO,UAAS;AAAA,MACtB;AAGA,aAAO,MAAM,YAAY,IAAI,MAAM,MAAM,KAAK,GAAG;AAC/C;AAKA,YAAI,MAAM,UAAU;AAClB,eAAK,MAAM,MAAM,MAAM,GAAG;AAC1B,eAAK,MAAM,MAAM,KAAK;AACtB,eAAK,MAAM,MAAM,MAAM,GAAG;AAC1B,eAAK,MAAM,MAAM,KAAK;AAGtB,qBAAW,MAAM,MAAM,MAAM,GAAG;AAChC,sBAAY,MAAM,MAAM,MAAM,GAAG;AAGjC,cAAI,WAAW,MAAS;AACtB,uBAAW;AAAA,UACb;AAEA,cAAI,WAAW,SAAS;AACtB,uBAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAGA,UAAI,OAAO,UAAU;AACnB,cAAM,QAAQ,MAAM,WAAW,YAAY;AAAA,MAC7C,WAAW,QAAQ,GAAG;AAEpB,cAAM,QAAQ,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI;AAAA,MACpD,OAAO;AAML,YAAI,IAAK,KAAI,MAAO,MAAK;AAEzB,YAAI,IAAI,UAAU;AAChB,cAAI,MAAM,IAAI;AAAA,QAChB,OAAO;AACL,cAAI,MAAM,MAAO,KAAI,YAAa,KAAM;AAAA,QAC1C;AAIA,YAAI,YAAY,MAAM;AAEpB,cAAI,IAAI,KAAK;AACX,kBAAM,QAAQ;AACd;AAAA,UACF,OAAO;AAEL,kBAAM,QAAQ;AACd;AAAA,UACF;AAAA,QACF;AAIA,YAAI,YAAY,MAAM;AAEpB,gBAAM,QAAS,KAAI,KAAK,KAAK,IAAI;AACjC;AAAA,QACF;AAQA,YAAI,IAAI,KAAK;AACX,cAAI,MAAM,KAAK,IAAI,IAAI,GAAG,IAAM,KAAK,SAAS;AAAA,QAChD,WAAW,IAAI,KAAK;AAClB,cAAI,IAAM,MAAM,KAAK,IAAK,KAAM,KAAK,GAAG,IAAI,KAAK,SAAS;AAAA,QAC5D;AAGA,YAAI,KAAK,IAAI;AACb,YAAI,MAAM,KAAK;AACf,YAAI,KAAK,IAAI,MAAM,IAAI,KAAK;AAC5B,YAAI,KAAK,KAAK,MAAM,IAAI;AACxB,YAAI,KAAK,MAAM,IAAI,KAAK;AACxB,YAAI,KAAK,MAAM;AAEf,YAAI,QAAQ,KAAK;AACjB,YAAI,IAAK,KAAM,aAAa;AAE5B,cAAM,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK;AAGhD,YAAI,OAAM,KAAK,KAAK,KAAK;AACzB,YAAI,OAAM,KAAK,KAAK,KAAK;AACzB,cAAM,QAAQ,MAAM,QAAQ,OAAM,OAAM,MAAM;AAC9C,cAAM,QAAQ,MAAM,QAAQ,OAAM,OAAM,MAAM;AAAA,MAChD;AAAA,IACF;AAAA,EACF;AACF;AAgBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,QAAM,QAAQ,CAAC;AAEf,QAAM,OAAO,WAAW,OAAO,CAAC,yBAAyB,UAAU,CAAC;AACpE,QAAM,SAAS,WAAW,OAAO,CAAC,OAAO,GAAG,CAAC;AAE7C,QAAM,SAAS,WAAW,OAAO,CAAC,OAAO,CAAC;AAG1C,uBAAqB,WAAW,KAAK;AACvC;AA/kBA,IAEI,gBAujBA,iBAwBA,eAEA;AAnlBJ;AAAA;AAAA;AAEA,IAAI,iBAAgB,MAAM;AAujB1B,IAAI,kBAAiB;AAAA,MAEnB,OAAO,CAAC,GAAG,CAAC;AAAA,MACZ,UAAU;AAAA,MACV,uBAAuB;AAAA,IACzB;AAmBA,IAAI,gBAAc,MAAM,YAAY,SAAQ,sBAAsB;AAElE,IAAI,yBAAyB;AAAA,MAC3B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACtlBA,IAAI,mBAKA,aAIA;AATJ;AAAA;AAAA,IAAI,oBAAoB;AAAA,MACtB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,aAAa;AAAA,IACf;AACA,IAAI,cAAc;AAAA,MAChB,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB;AACA,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACNA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAQzf,2BAA2B,WAAW,OAAO;AAE3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,WAAW,WAAY;AAC/B,QAAI,QAAQ,MAAM;AAClB,QAAI;AAEJ,aAAS,QAAQ,GAAG,QAAQ,gBAAgB,SAAS;AAEnD,UAAI,MAAM,cAAc,OAAO,kBAAkB,GAAG;AAClD,YAAI,MAAM,cAAc,OAAO,sBAAsB;AAEnD,iBAAO,MAAM,cAAc,OAAO,qBAAqB,SAAS;AAChE,kBAAQ,QAAQ,OAAO,QAAQ;AAAA,QACjC;AAAA,MACF,WAAW,MAAM,cAAc,OAAO,kBAAkB,GAAG;AACzD,YAAI,MAAM,cAAc,OAAO,qBAAqB;AAElD,iBAAO,MAAM,cAAc,OAAO,oBAAoB,SAAS;AAC/D,kBAAQ,QAAQ,OAAO,QAAQ;AAAA,QACjC;AAAA,MACF;AAGA,UAAI,MAAM,cAAc,OAAO,eAAe;AAE5C,eAAO,MAAM,cAAc,OAAO,cAAc,SAAS;AACzD,gBAAQ,QAAQ,OAAO,QAAQ;AAAA,MACjC;AAEA,UAAI,MAAM,cAAc,OAAO,iBAAiB;AAC9C,YAAI,CAAC,MAAM,cAAc,OAAO,wBAAwB;AAEtD,iBAAO,MAAM,cAAc,OAAO,gBAAgB,SAAS;AAC3D,kBAAQ,QAAQ,OAAO,QAAQ;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,OAAO;AAC5C,QAAI,QAAQ,KAAK,QAAQ,GAAG;AAC1B,qBAAc,qCAAqC;AACnD,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,cAAc,OAAO;AAAA,EACpC;AAGA,YAAU,0BAA0B,SAAU,OAAO,MAAM;AACzD,QAAI,WAAW;AAEf,QAAI,MAAM,cAAc,OAAO,yBAAyB,MAAM;AAC5D,YAAM,cAAc,OAAO,uBAAuB;AAClD,iBAAW;AAAA,IACb;AAEA,QAAI,MAAM,cAAc,OAAO,kBAAkB,GAAG;AAClD,YAAM,cAAc,OAAO,gBAAgB;AAC3C,iBAAW;AAAA,IACb;AAEA,QAAI,UAAU;AACZ,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,0BAA0B,SAAU,OAAO;AACnD,QAAI,MAAM,cAAc,OAAO,yBAAyB,MAAM;AAC5D,YAAM,cAAc,OAAO,uBAAuB,uBAAqB,YAAY;AACnF,YAAM,cAAc,OAAO,qBAAqB,SAAS,GAAG,CAAG;AAC/D,YAAM,cAAc,OAAO,qBAAqB,SAAS,MAAM,CAAG;AAElE,UAAI,MAAM,cAAc,OAAO,kBAAkB,GAAG;AAClD,cAAM,cAAc,OAAO,gBAAgB;AAAA,MAC7C;AAEA,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO,MAAM,cAAc,OAAO;AAAA,EACpC;AAGA,YAAU,yBAAyB,SAAU,OAAO,MAAM;AACxD,QAAI,WAAW;AAEf,QAAI,MAAM,cAAc,OAAO,wBAAwB,MAAM;AAC3D,YAAM,cAAc,OAAO,sBAAsB;AACjD,iBAAW;AAAA,IACb;AAEA,QAAI,MAAM,cAAc,OAAO,kBAAkB,GAAG;AAClD,YAAM,cAAc,OAAO,gBAAgB;AAC3C,iBAAW;AAAA,IACb;AAEA,QAAI,UAAU;AACZ,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,yBAAyB,SAAU,OAAO;AAClD,QAAI,MAAM,cAAc,OAAO,wBAAwB,MAAM;AAC3D,YAAM,cAAc,OAAO,sBAAsB,2BAAyB,YAAY;AACtF,YAAM,cAAc,OAAO,oBAAoB,YAAY,GAAG,GAAK,GAAK,CAAG;AAC3E,YAAM,cAAc,OAAO,oBAAoB,YAAY,MAAM,GAAK,GAAK,CAAG;AAE9E,UAAI,MAAM,cAAc,OAAO,kBAAkB,GAAG;AAClD,cAAM,cAAc,OAAO,gBAAgB;AAAA,MAC7C;AAEA,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO,MAAM,cAAc,OAAO;AAAA,EACpC;AAGA,YAAU,mBAAmB,SAAU,OAAO,MAAM;AAClD,QAAI,MAAM,cAAc,OAAO,kBAAkB,MAAM;AACrD,YAAM,cAAc,OAAO,gBAAgB;AAC3C,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,mBAAmB,SAAU,OAAO;AAC5C,QAAI,MAAM,cAAc,OAAO,kBAAkB,MAAM;AACrD,YAAM,cAAc,OAAO,gBAAgB,uBAAqB,YAAY;AAC5E,YAAM,cAAc,OAAO,cAAc,SAAS,GAAG,CAAG;AACxD,YAAM,cAAc,OAAO,cAAc,SAAS,MAAM,CAAG;AAC3D,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO,MAAM,cAAc,OAAO;AAAA,EACpC;AAEA,YAAU,qBAAqB,SAAU,OAAO,OAAO;AACrD,QAAI,QAAQ,KAAK,SAAS,gBAAgB;AACxC,qBAAc,eAAe;AAC7B,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC;AAExC,QAAI,MAAM,cAAc,OAAO,oBAAoB,KAAK;AACtD,YAAM,cAAc,OAAO,kBAAkB;AAC7C,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,OAAO;AAC9C,QAAI,QAAQ,KAAK,SAAS,gBAAgB;AACxC,qBAAc,eAAe;AAC7B,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,cAAc,OAAO;AAAA,EACpC;AAEA,YAAU,gCAAgC,WAAY;AACpD,WAAO,UAAU,qBAAqB,mBAAkB,OAAO;AAAA,EACjE;AAEA,YAAU,+BAA+B,WAAY;AACnD,WAAO,UAAU,qBAAqB,mBAAkB,MAAM;AAAA,EAChE;AAEA,YAAU,mCAAmC,WAAY;AACvD,WAAO,UAAU,qBAAqB,mBAAkB,WAAW;AAAA,EACrE;AAEA,YAAU,+BAA+B,WAAY;AACnD,WAAO,MAAM,aAAa,oBAAmB,MAAM,iBAAiB;AAAA,EACtE;AAEA,MAAI,OAAO,CAAC,sBAAsB,6BAA6B,+BAA+B,iCAAiC,+BAA+B,iCAAiC,aAAa;AAC5M,OAAK,QAAQ,SAAU,KAAK;AAC1B,QAAI,MAAM,MAAM,WAAW,GAAG;AAE9B,cAAU,MAAM,OAAO,GAAG,KAAK,SAAU,OAAO,OAAO;AACrD,UAAI,MAAM,cAAc,OAAO,GAAG,OAAO,GAAG,OAAO,OAAO;AACxD,cAAM,cAAc,OAAO,GAAG,OAAO,GAAG,KAAK;AAC7C,kBAAU,SAAS;AACnB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACD,MAAI,OAAO,CAAC,sBAAsB,6BAA6B,+BAA+B,iCAAiC,+BAA+B,iCAAiC,aAAa;AAC5M,OAAK,QAAQ,SAAU,KAAK;AAC1B,QAAI,MAAM,MAAM,WAAW,GAAG;AAE9B,cAAU,MAAM,OAAO,GAAG,KAAK,SAAU,OAAO;AAC9C,aAAO,MAAM,cAAc,OAAO,GAAG,OAAO,GAAG;AAAA,IACjD;AAAA,EACF,CAAC;AACH;AAiBA,iBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,iBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,MAAI,CAAC,MAAM,eAAe;AACxB,UAAM,gBAAgB,CAAC;AAEvB,aAAS,IAAI,GAAG,IAAI,gBAAgB,EAAE,GAAG;AACvC,YAAM,cAAc,KAAK;AAAA,QACvB,eAAe;AAAA,QACf,sBAAsB;AAAA,QACtB,qBAAqB;AAAA,QACrB,eAAe;AAAA,QACf,2BAA2B;AAAA,QAC3B,aAAa,aAAY;AAAA,QACzB,6BAA6B;AAAA,QAC7B,+BAA+B;AAAA,QAC/B,6BAA6B;AAAA,QAC7B,+BAA+B;AAAA,QAC/B,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,MACnB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,QAAM,OAAO,WAAW,OAAO,CAAC,yBAAyB,qBAAqB,SAAS,WAAW,WAAW,YAAY,iBAAiB,mBAAmB,uBAAuB,CAAC;AAErL,oBAAkB,WAAW,KAAK;AACpC;AAtRA,IASI,oBACA,cACA,gBACA,gBAgOA,iBA4CA,eAEA;AA1RJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA,IAAI,qBAAoB,WAAU;AAAlC,IACI,eAAc,WAAU;AAC5B,IAAI,iBAAgB,MAAM;AAC1B,IAAI,iBAAiB;AAgOrB,IAAI,kBAAiB;AAAA,MACnB,uBAAuB;AAAA,MACvB,mBAAmB,mBAAkB;AAAA,MACrC,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,IACzB;AAkCA,IAAI,gBAAc,MAAM,YAAY,SAAQ,mBAAmB;AAE/D,IAAI,sBAAsB,eAAc;AAAA,MACtC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,UAAS;AAAA;AAAA;;;AC7RZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,YAAU,aAAa,WAAY;AACjC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,oBAAkB;AAE3C,YAAU,cAAc,WAAY;AAClC,QAAI,MAAM,aAAa,MAAM;AAC3B,YAAM,WAAW,UAAU,aAAa;AAAA,IAC1C;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,YAAY,WAAY;AAChC,QAAI,MAAM,WAAW,MAAM;AACzB,aAAO,MAAM;AAAA,IACf;AAGA,QAAI,MAAM,MAAM,OAAO,UAAU;AAEjC,QAAI,CAAC,OAAO,IAAI,WAAW,GAAG;AAC5B,aAAO;AAAA,IACT;AAGA,QAAI,IAAI,KAAK,IAAI,IAAI;AACnB,YAAM,eAAe,IAAI,OAAO;AAEhC,YAAM,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AACnC,YAAM,YAAY,SAAS;AAC3B,aAAO;AAAA,IACT;AAOA,QAAI,MAAM,cAAa,MAAM;AAC3B,aAAO,KAAK,GAAG,IAAI,SAAU,GAAG,GAAG;AACjC,eAAO,KAAK,IAAI,SAAU,KAAK;AAC7B,iBAAO,IAAI;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,QAAI,CAAC,MAAM,gBAAgB,CAAC,IAAI,CAAC,KAAK,MAAM,YAAY,CAAC,EAAE,OAAO,SAAU,GAAG,GAAG;AAChF,aAAO,KAAK,EAAE,OAAO,EAAE;AAAA,IACzB,GAAG,IAAI,KAAK,UAAU,SAAS,IAAI,MAAM,YAAY,SAAS,GAAG;AAC/D,qBAAc,uBAAuB;AACrC,YAAM,eAAe,IAAI,IAAI,SAAU,GAAG;AACxC,eAAO;AAAA,MACT,CAAC;AACD,UAAI,OAAO,CAAC;AACZ,qBAAe,WAAW,KAAK,IAAI;AACnC,gBAAU,cAAc;AACxB,UAAI,OAAO,IAAI,aAAa,EAAE;AAC9B,mBAAK,UAAU,MAAM,MAAM,MAAM;AACjC,WAAK,QAAQ,SAAU,IAAI;AACzB,eAAO,aAAK,cAAc,IAAI,IAAI,IAAI;AAAA,MACxC,CAAC;AAGD,YAAM,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,OAAO;AAC7D,YAAM,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,CAAC,OAAO;AAG9D,YAAM,SAAS,MAAM,OAAO,IAAI,SAAU,GAAG,GAAG;AAC9C,eAAO,IAAI,MAAM,IAAI,KAAK,OAAO,SAAU,GAAG,GAAG;AAC/C,iBAAO,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK;AAAA,QACnC,GAAG,CAAC,IAAI,KAAK,OAAO,SAAU,GAAG,GAAG;AAClC,iBAAO,IAAI,EAAG,KAAI,KAAK,KAAK,EAAG,KAAI,KAAK,KAAK;AAAA,QAC/C,GAAG,CAAC;AAAA,MACN,CAAC;AACD,YAAM,YAAY,SAAS;AAAA,IAC7B;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,MAAM;AAEf,QAAI,MAAM,aAAa,MAAM;AAC3B,UAAI,OAAO,MAAM,SAAS,SAAS;AACnC,WAAK,OAAO,KAAK,OAAO;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,KAAK,MAAM;AAEf,QAAI,MAAM,WAAW,MAAM;AACzB,UAAI,OAAO,MAAM,OAAO,SAAS;AACjC,WAAK,OAAO,KAAK,OAAO;AAExB,UAAI,MAAM,OAAO,SAAS,MAAM,MAAM;AAEpC,cAAM,OAAO,kBAAkB,EAAE,OAAO;AACxC,eAAO,MAAM,OAAO,SAAS,EAAE,SAAS;AACxC,aAAK,OAAO,KAAK,OAAO;AAAA,MAC1B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,cAAU,OAAO,WAAW,OAAO,aAAa;AAEhD,QAAM,cAAc,CAAC;AACrB,QAAM,IAAI,MAAM,WAAW;AAE3B,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,CAAC;AACxC,QAAM,OAAO,WAAW,OAAO,CAAC,QAAQ,CAAC;AACzC,QAAM,SAAS,WAAW,OAAO,CAAC,QAAQ,GAAG,CAAC;AAE9C,YAAU,WAAW,KAAK;AAC5B;AArJA,IAMI,gBA2HA,kBAsBA,eAEA;AAzJJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAI,iBAAgB,MAAM;AA2H1B,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,IAC9B;AAkBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,WAAW;AAEvD,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACrJA,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,YAAU,QAAQ,SAAU,SAAS;AAAA,EAAC;AAGtC,YAAU,SAAS,SAAU,SAAS;AAAA,EAAC;AAEvC,YAAU,WAAW,SAAU,YAAY;AAGzC,QAAI,gBAAgB,WAAW,qBAAqB;AACpD,QAAI,KAAK,UAAU;AAEnB,QAAI,IAAI;AACN,SAAG,UAAU;AACb;AAAA,IACF;AAGA,cAAU,MAAM,YAAY,IAAI;AAEhC,aAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,SAAS;AAC1D,YAAM,SAAS,OAAO,SAAS,UAAU;AAAA,IAC3C;AAEA,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,QAAQ,SAAU,YAAY,SAAS;AAC/C,QAAI,mBAAmB,UAAU,WAAW,aAAa;AAEzD,QAAI,kBAAkB;AACpB,uBAAiB,SAAS,UAAU;AAAA,IACtC;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,YAAY;AAC/C,QAAI,MAAM,eAAe,YAAY;AACnC,aAAO;AAAA,IACT;AAEA,aAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,EAAE,OAAO;AAC1D,UAAI,QAAQ,MAAM,SAAS;AAC3B,UAAI,KAAK,MAAM,eAAe,UAAU;AAExC,UAAI,IAAI;AACN,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,yBAAyB,SAAU,MAAM;AACjD,QAAI,CAAC,MAAM,SAAS;AAClB,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,QAAQ,IAAI,IAAI,GAAG;AAC3B,aAAO,MAAM;AAAA,IACf;AAEA,WAAO,MAAM,QAAQ,uBAAuB,IAAI;AAAA,EAClD;AAEA,YAAU,iBAAiB,SAAU,MAAM;AACzC,QAAI,CAAC,MAAM;AACT;AAAA,IACF;AAEA,QAAI,SAAS,MAAM,oBAAoB,IAAI,IAAI;AAG/C,QAAI,WAAW,QAAW;AACxB,aAAO,WAAW,IAAI;AAAA,IACxB,OAAO;AAEL,UAAI,UAAU,UAAU,eAAe,IAAI;AAE3C,UAAI,SAAS;AACX,gBAAQ,UAAU,SAAS;AAC3B,gBAAQ,WAAW,IAAI;AAEvB,cAAM,oBAAoB,IAAI,MAAM,OAAO;AAE3C,cAAM,SAAS,KAAK,OAAO;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAEA,YAAU,kBAAkB,SAAU,UAAU;AAC9C,QAAI,CAAC,YAAY,CAAC,SAAS,QAAQ;AACjC;AAAA,IACF;AAEA,aAAS,QAAQ,GAAG,QAAQ,SAAS,QAAQ,EAAE,OAAO;AACpD,UAAI,OAAO,SAAS;AAEpB,UAAI,SAAS,MAAM,oBAAoB,IAAI,IAAI;AAG/C,UAAI,WAAW,QAAW;AACxB,eAAO,WAAW,IAAI;AAAA,MACxB,OAAO;AAEL,YAAI,UAAU,UAAU,eAAe,IAAI;AAE3C,YAAI,SAAS;AACX,kBAAQ,UAAU,SAAS;AAC3B,kBAAQ,WAAW,IAAI;AAEvB,gBAAM,oBAAoB,IAAI,MAAM,OAAO;AAE3C,gBAAM,SAAS,KAAK,OAAO;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,eAAe,WAAY;AACnC,aAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,EAAE,OAAO;AAC1D,YAAM,SAAS,OAAO,WAAW,KAAK;AAAA,IACxC;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,KAAK;AACpC,UAAM,UAAU;AAAA,EAClB;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,UAAU;AAEd,aAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,EAAE,OAAO;AAC1D,UAAI,QAAQ,MAAM,SAAS;AAC3B,UAAI,UAAU,MAAM,WAAW;AAE/B,UAAI,CAAC,SAAS;AACZ,YAAI,aAAa,MAAM,cAAc;AAErC,YAAI,YAAY;AACd,gBAAM,oBAAoB,OAAO,UAAU;AAAA,QAC7C;AAEA,YAAI,CAAC,SAAS;AACZ,oBAAU,CAAC;AAAA,QACb;AAEA,gBAAQ,KAAK,KAAK;AAAA,MACpB,OAAO;AACL,cAAM,WAAW,KAAK;AAAA,MACxB;AAAA,IACF;AAEA,QAAI,SAAS;AAEX,YAAM,WAAW,MAAM,SAAS,OAAO,SAAU,IAAI;AACnD,eAAO,CAAC,QAAQ,SAAS,EAAE;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAC5C,QAAI,CAAC,MAAM,WAAW;AACpB,qBAAc,iDAAiD;AAC/D,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,MAAM,UAAU,WAAW,OAAO;AAE5C,QAAI,KAAK;AACP,UAAI,cAAc,OAAO;AAAA,IAC3B;AAEA,WAAO;AAAA,EACT;AACF;AAaA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,MAAM,WAAW,OAAO,OAAO;AACrC,QAAM,sBAAsB,oBAAI,IAAI;AACpC,QAAM,IAAI,WAAW,OAAO,CAAC,SAAS,CAAC;AACvC,QAAM,OAAO,WAAW,OAAO,CAAC,WAAW,cAAc,WAAW,CAAC;AACrE,QAAM,SAAS,WAAW,OAAO,CAAC,UAAU,CAAC;AAC7C,QAAM,gBAAgB,WAAW,OAAO,CAAC,QAAQ,CAAC;AAElD,cAAY,WAAW,KAAK;AAC9B;AAlNA,IAEI,gBACA,YA0LA,kBAwBA,eAEA;AAvNJ;AAAA;AAAA;AAEA,IAAI,iBAAgB,MAAM;AAC1B,IAAI,aAAa,CAAC,SAAS,QAAQ;AA0LnC,IAAI,mBAAiB;AAAA,MAEnB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU,CAAC;AAAA,MACX,SAAS;AAAA,IACX;AAkBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;AC3NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,4BAA4B,WAAW,OAAO;AAE5C,MAAI,CAAC,MAAM,WAAW;AACpB,UAAM,YAAY,CAAC;AAAA,EACrB;AAGA,QAAM,eAAe,KAAK,oBAAoB;AAE9C,YAAU,aAAa,SAAU,YAAY;AAC3C,QAAI,WAAW,UAAU,GAAG;AAC1B,aAAO;AAAA,IACT;AAEA,QAAI,MAAM;AACV,QAAI,YAAY,WAAW,aAAa,KAAK;AAC7C,QAAI,WAAW;AACf,QAAI,OAAO,OAAO,KAAK,MAAM,SAAS;AAEtC,WAAO,aAAa,CAAC,UAAU;AAC7B,UAAI,KAAK,QAAQ,SAAS,MAAM,IAAI;AAClC,mBAAW;AAAA,MACb,OAAO;AACL,oBAAY,WAAW,aAAa,KAAK;AAAA,MAC3C;AAAA,IACF;AAEA,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,MAAM,UAAU,WAAW;AACpC,OAAG,aAAa,SAAS;AACzB,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,WAAW,MAAM;AACtD,UAAM,UAAU,aAAa;AAAA,EAC/B;AACF;AAQA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,qBAAmB,WAAW,KAAK;AACrC;AA3DA,IAiDI,kBAYA,eAEA;AA/DJ;AAAA;AAAA;AAiDA,IAAI,mBAAiB,CACrB;AAWA,IAAI,gBAAc,MAAM,YAAY,UAAQ,oBAAoB;AAEhE,IAAI,uBAAuB;AAAA,MACzB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC9DA,0BAA0B,WAAW,IAAI;AACvC,gBAAc,aAAa;AAC7B;AAIA,kCAAkC,WAAW,OAAO;AAElD,QAAM,eAAe,KAAK,0BAA0B;AACtD;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,YAAY;AAElB,uBAAqB,OAAO,WAAW,OAAO,aAAa;AAE3D,2BAAyB,WAAW,KAAK;AAC3C;AA7BA,IAGI,eAeA,kBAaA,eAEA;AAjCJ;AAAA;AAAA;AACA;AAEA,IAAI,gBAAgB,uBAAO,OAAO,IAAI;AAetC,IAAI,mBAAiB,CAAC;AAatB,IAAI,gBAAc,MAAM,YAAY,UAAQ,0BAA0B;AAEtE,IAAI,sBAAqB;AAAA,MACvB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,sBAAsB,MAAM,eAAe,UAAU;AAC3D,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AAGA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AACX,UAAI,QAAQ,MAAM,eAAe,sBAAsB;AACvD,YAAM,QAAQ,SAAS,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,KAAK;AACnF,YAAM,QAAQ,QAAQ,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,KAAK;AAAA,IACpF;AAAA,EACF;AAEA,YAAU,kBAAkB,UAAU;AACtC,YAAU,oBAAoB,UAAU;AACxC,YAAU,aAAa,UAAU;AAEjC,YAAU,iBAAiB,SAAU,KAAK;AAExC,QAAI,QAAQ,MAAM,gBAAgB,MAAM,oBAAoB,SAAS,IAAI,MAAM,cAAc,SAAS,KAAK,UAAU,SAAS,IAAI,MAAM,cAAc,SAAS,KAAK,IAAI,SAAS,IAAI,MAAM,cAAc,SAAS,KAAK,MAAM,WAAW,SAAS,IAAI,MAAM,cAAc,SAAS,GAAG;AACnR,mBAAK,KAAK,MAAM,YAAY,MAAM,MAAM,WAAW,cAAc,CAAC;AAClE,mBAAK,SAAS,MAAM,YAAY,cAAc,MAAM,YAAY,IAAI;AACpE,mBAAK,OAAO,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAC1E,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AAC7D,UAAI,cAAc,MAAM,eAAe,eAAe;AACtD,mBAAK,KAAK,MAAM,YAAY,MAAM,MAAM,WAAW,oBAAoB,aAAa,IAAI,CAAC,CAAC;AAC1F,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AAC7D,mBAAK,SAAS,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AACpF,YAAM,cAAc,SAAS;AAC7B,YAAM,eAAe;AAAA,IACvB;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,aAAa;AAEvB,QAAM,cAAc;AAAA,IAClB,cAAc,IAAI,aAAa,CAAC;AAAA,IAChC,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,EAC3B;AAEA,SAAO,WAAW,OAAO,CAAC,WAAW,eAAe,CAAC;AAErD,kBAAgB,WAAW,KAAK;AAClC;AAhFA,IAuDI,kBA2BA,eAEA;AApFJ;AAAA;AAAA;AACA;AACA;AACA;AAoDA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,eAAe;AAAA,MACf,aAAa;AAAA,IACf;AAsBA,IAAI,gBAAc,YAAc,QAAM;AAEtC,IAAI,aAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,aAAa,aAAW;AAAA;AAAA;;;ACzFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,2BAA2B,WAAW,OAAO;AAE3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,gBAAU,aAAa;AACvB,gBAAU,aAAa;AACvB,gBAAU,eAAe,MAAM,WAAW,gBAAgB,CAAC;AAC3D,gBAAU,gBAAgB,MAAM,WAAW,4BAA4B,CAAC;AACxE,gBAAU,kBAAkB;AAAA,IAC9B;AAAA,EACF;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,QAAQ;AACZ,QAAI,SAAS,MAAM,WAAW,qBAAqB;AAEnD,aAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,EAAE,OAAO;AAClD,UAAI,OAAO,OAAO,UAAU,IAAI,GAAK;AACnC;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,OAAO;AACV,qBAAc,iCAAiC;AAC/C,YAAM,WAAW,YAAY;AAAA,IAC/B;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,SAAS;AAC/C,QAAI,SAAS;AACX,UAAI,YAAY;AAChB,UAAI,KAAK,MAAM;AAEf,UAAI,CAAC,MAAM,WAAW,eAAe,GAAG;AACtC,cAAM,QAAQ,WAAW,GAAK,GAAK,GAAK,CAAG;AAC3C,qBAAa,GAAG;AAAA,MAClB;AAEA,UAAI,CAAC,MAAM,WAAW,uBAAuB,GAAG;AAC9C,WAAG,WAAW,CAAG;AACjB,qBAAa,GAAG;AAChB,cAAM,QAAQ,UAAU,IAAI;AAAA,MAC9B;AAEA,UAAI,KAAK,UAAU,sBAAsB;AACzC,SAAG,OAAO,GAAG,YAAY;AACzB,SAAG,QAAQ,GAAG,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK;AAC3D,SAAG,SAAS,GAAG,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK;AAC5D,SAAG,UAAU,MAAM,MAAM,MAAM,IAAI;AACnC,SAAG,MAAM,SAAS;AAClB,SAAG,OAAO,GAAG,UAAU;AAAA,IACzB;AAAA,EACF;AAGA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AACX,gBAAU,MAAM;AAAA,IAClB;AAAA,EACF;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,OAAO,MAAM,QAAQ,mBAAmB;AAE5C,QAAI,WAAW,MAAM,WAAW,uBAAuB;AACvD,WAAO,KAAK,KAAM,UAAS,KAAK,SAAS,MAAQ,WAAS,KAAK,SAAS,MAAM,KAAK;AAAA,EACrF;AAEA,YAAU,wBAAwB,WAAY;AAC5C,QAAI,QAAQ,MAAM,WAAW,uBAAuB;AAEpD,QAAI,eAAe,CAAC,GAAK,GAAK,GAAK,CAAG;AAGtC,QAAI,MAAM,MAAM,KAAK,aAAa;AAClC,QAAI,MAAM,MAAM,KAAK,aAAa;AAElC,QAAI,OAAO,MAAM,QAAQ,2BAA2B,KAAK,GAAG;AAE5D,QAAI,aAAa,KAAK,MAAM,KAAK,EAAE;AACnC,QAAI,aAAa,KAAK,MAAM,KAAK,EAAE;AAGnC,QAAI,OAAO,MAAM,KAAK,aAAa;AACnC,QAAI,OAAO,MAAM,KAAK,aAAa;AAEnC,QAAI,QAAQ,MAAM,QAAQ,2BAA2B,MAAM,IAAI;AAI/D,QAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,IAAI;AACnC,QAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,IAAI;AAEnC,QAAI,QAAQ,GAAG;AACb,cAAQ;AAAA,IACV;AAEA,QAAI,QAAQ,GAAG;AACb,cAAQ;AAAA,IACV;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,YAAU,QAAQ,WAAY;AAC5B,QAAI,YAAY;AAChB,QAAI,KAAK,MAAM;AAEf,QAAI,CAAC,MAAM,WAAW,eAAe,GAAG;AACtC,UAAI,aAAa,MAAM,WAAW,yBAAyB;AAE3D,YAAM,QAAQ,WAAW,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,EAAE;AACnF,mBAAa,GAAG;AAAA,IAClB;AAEA,QAAI,CAAC,MAAM,WAAW,uBAAuB,GAAG;AAC9C,SAAG,WAAW,CAAG;AACjB,mBAAa,GAAG;AAChB,YAAM,QAAQ,UAAU,IAAI;AAAA,IAC9B;AAEA,OAAG,UAAU,MAAM,MAAM,MAAM,IAAI;AACnC,QAAI,KAAK,UAAU,sBAAsB;AACzC,OAAG,OAAO,GAAG,YAAY;AACzB,OAAG,QAAQ,GAAG,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK;AAC3D,OAAG,SAAS,GAAG,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK;AAC5D,OAAG,MAAM,SAAS;AAClB,OAAG,OAAO,GAAG,UAAU;AAAA,EAEzB;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,MAAM,aAAa,MAAM;AAC3B,YAAM,SAAS,yBAAyB;AAAA,IAC1C;AAAA,EACF;AAEA,YAAU,wBAAwB,SAAU,IAAI;AAC9C,QAAI,MAAM,wBAAwB,IAAI;AACpC;AAAA,IACF;AAEA,cAAU,yBAAyB;AACnC,UAAM,sBAAsB;AAC5B,UAAM,UAAU;AAEhB,QAAI,IAAI;AACN,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,MAAI,WAAW,OAAO,CAAC,aAAa,CAAC;AACrC,SAAO,WAAW,OAAO,CAAC,UAAU,CAAC;AAErC,oBAAkB,WAAW,KAAK;AACpC;AAlMA,IAII,gBA8KA,kBAkBA,eAEA;AAtMJ;AAAA;AAAA;AACA;AACA;AAEA,IAAI,iBAAgB;AA8KpB,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,qBAAqB;AAAA,MACrB,UAAU;AAAA,IACZ;AAcA,IAAI,gBAAc,YAAc,UAAQ,mBAAmB;AAE3D,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,eAAe,aAAW;AAAA;AAAA;;;AC3M3C,IAAI,aASA;AATJ;AAAA;AAAA,IAAI,cAAc;AAAA,MAChB,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AACA,IAAI,aAAY;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;ACXA,IAAI,YAKA;AALJ;AAAA;AAAA,IAAI,aAAa;AAAA,MACf,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,IAClB;AACA,IAAI,aAAY;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;ACHA,kBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,wBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,SAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,SAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAYzf,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,uBAAqB,MAAM;AACzB,YAAQ;AAAA,WACD,YAAW;AACd,eAAO,MAAM,QAAQ;AAAA,WAElB,YAAW;AACd,YAAI,oBAAoB,MAAM,SAAS;AACrC,iBAAO,MAAM,QAAQ;AAAA,QACvB;AAAA,WAKG,YAAW;AAAA;AAEd,eAAO,MAAM,QAAQ;AAAA;AAAA,EAI3B;AAEA,MAAI,eAAe;AACnB,MAAI,iBAAiB;AACrB,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,YAAU,UAAU,WAAY;AAC9B,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,SAAU,OAAO;AACnC,mBAAe;AAAA,EACjB;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,WAAY;AAC9B,WAAO,UAAU;AAAA,EACnB;AAEA,YAAU,iBAAiB,SAAU,MAAM;AACzC,QAAI,eAAe,YAAY,IAAI;AAEnC,QAAI,mBAAmB,MAAM;AAC3B,uBAAiB,MAAM,QAAQ,aAAa;AAC5C,qBAAe;AAAA,IACjB;AAEA,WAAO,YAAY,YAAY,MAAM;AAAA,EACvC;AAEA,YAAU,SAAS,SAAU,MAAM,MAAM;AAEvC,QAAI,mBAAmB,UAAU,eAAe,IAAI;AAEpD,QAAI,CAAC,kBAAkB;AACrB,cAAQ;AACR,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,YAAY,YAAY,GAAG,cAAc;AAClE,UAAM,QAAQ,WAAW,YAAY,YAAY,GAAG,MAAM,MAAM,QAAQ,WAAW;AACnF,YAAQ;AACR,WAAO;AAAA,EACT;AAEA,YAAU,OAAO,WAAY;AAC3B,QAAI,CAAC,gBAAgB;AACnB,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,YAAY,YAAY,GAAG,cAAc;AAClE,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,WAAY;AAC9B,QAAI,CAAC,gBAAgB;AACnB,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,YAAY,YAAY,GAAG,IAAI;AACxD,WAAO;AAAA,EACT;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,mBAAmB,MAAM;AAC3B,YAAM,QAAQ,WAAW,YAAY,YAAY,GAAG,IAAI;AACxD,YAAM,QAAQ,aAAa,cAAc;AACzC,uBAAiB;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,wBAAwB,SAAU,IAAI;AAC9C,QAAI,MAAM,wBAAwB,IAAI;AACpC;AAAA,IACF;AAEA,cAAU,yBAAyB;AACnC,UAAM,sBAAsB;AAC5B,UAAM,UAAU;AAEhB,QAAI,IAAI;AACN,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AAEA,YAAU,WAAW,WAAY;AAC/B,WAAO;AAAA,EACT;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,qBAAqB,CAAC;AACnD,QAAM,gBAAgB,WAAW,OAAO,CAAC,oBAAoB,CAAC;AAC9D,wBAAsB,WAAW,KAAK;AACxC;AAxJA,IAOI,aAOA,SA4HA,kBAgBA,eAEA;AA5JJ;AAAA;AAAA;AACA;AACA;AAKA,IAAI,cAAa,WAAU;AAO3B,IAAI,UAAS,CAAC;AA4Hd,IAAI,mBAAiB;AAAA,MACnB,YAAY,YAAW;AAAA,MAEvB,SAAS;AAAA,IACX;AAYA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,kBAAkB,eAAc,eAAc;AAAA,MAChD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM,GAAG,UAAS;AAAA;AAAA;;;AC/JrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,SAKA,gBAKA,eACA;AAXJ;AAAA;AAAA,IAAI,UAAU;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,IACT;AACA,IAAI,iBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AACA,IAAI,gBAAgB;AACpB,IAAI,gBAAgB;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACLA,2CAA2C,YAAY,YAAY;AACjE,MAAI,eAAe,IAAI,aAAa,CAAC;AACrC,eAAK,QAAQ,cAAc,UAAU;AACrC,MAAI,SAAS,IAAI,aAAa,EAAE;AAChC,eAAK,6BAA6B,QAAQ,aAAK,OAAO,GAAG,YAAY,YAAY;AACjF,SAAO;AACT;AAEA,uCAAuC,YAAY,YAAY;AAC7D,MAAI,eAAe,QAAQ,eAAe,MAAM;AAC9C,WAAO;AAAA,EACT;AAEA,SAAO,CAAE,cAAK,YAAY,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,aAAK,YAAY,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC;AAC5F;AAKA,wCAAwC,WAAW,OAAO;AAExD,QAAM,eAAe,KAAK,gCAAgC;AAC1D,YAAU,QAAQ,WAAW,YAAY;AAEzC,YAAU,YAAY,SAAU,WAAW,OAAO,QAAQ,SAAS;AACjE,QAAI,CAAC,UAAU,QAAQ,KAAK,CAAC,UAAU,QAAQ,EAAE,QAAQ;AACvD,YAAM,eAAe;AACrB,aAAO;AAAA,IACT;AAGA,UAAM,YAAY;AAClB,UAAM,eAAe;AACrB,UAAM,eAAe;AACrB,UAAM,eAAe;AACrB,UAAM,mBAAmB;AACzB,UAAM,kBAAkB;AACxB,UAAM,cAAc;AACpB,UAAM,aAAa,CAAC;AACpB,QAAI,YAAY,QAAQ,OAAO,QAAQ;AACvC,QAAI,aAAa;AACjB,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,kBAAkB,QAAQ,SAAS,QAAQ,OAAO,sBAAsB,IAAI;AAChF,QAAI,oBAAoB,QAAQ,UAAU,QAAQ,QAAQ,sBAAsB,IAAI;AAEpF,QAAI,QAAQ,SAAS;AACnB,YAAM,eAAe,IAAI,MAAM;AAC/B,YAAM,aAAa;AACnB,mBAAa,QAAQ,QAAQ,QAAQ;AAAA,IACvC;AAEA,QAAI,QAAQ,kBAAkB;AAC5B,cAAQ,iBAAiB,QAAQ,SAAU,GAAG;AAC5C,YAAI,GAAG;AACL,gBAAM,WAAW,KAAK;AAAA,YACpB,MAAM,EAAE,QAAQ;AAAA,YAChB,QAAQ,IAAI,MAAM;AAAA,YAClB,YAAY,EAAE,sBAAsB;AAAA,YACpC,MAAM,EAAE,QAAQ;AAAA,UAClB,CAAC;AACD,gBAAM,aAAa,EAAE,sBAAsB;AAAA,QAC7C;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAI,QAAQ,SAAS;AACnB,YAAM,eAAe,IAAI,MAAM;AAC/B,YAAM,mBAAmB;AACzB,YAAM,aAAa;AACnB,mBAAa,QAAQ,QAAQ,QAAQ;AAAA,IACvC;AAEA,QAAI,QAAQ,QAAQ;AAClB,YAAM,kBAAkB,QAAQ,OAAO,sBAAsB;AAC7D,YAAM,cAAc;AACpB,kBAAY,QAAQ,OAAO,QAAQ;AAEnC,UAAI,CAAC,MAAM,SAAS;AAClB,cAAM,UAAU,gBAAgB,YAAY;AAAA,MAC9C;AAEA,YAAM,QAAQ,sBAAsB,MAAM,mBAAmB;AAAA,IAC/D,OAAO;AACL,YAAM,UAAU;AAAA,IAClB;AAEA,UAAM,SAAS,IAAI,MAAM;AACzB,QAAI,WAAW;AACf,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,WAAW;AACf,QAAI,UAAU;AACd,QAAI,YAAY;AAChB,QAAI;AACJ,QAAI,eAAe;AAAA,MAEjB,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ;AACtE,iBAAS,KAAI,GAAG,KAAI,YAAW,EAAE,IAAG;AAClC,oBAAU,QAAQ,SAAS,GAAE;AAAA,QAC/B;AAAA,MACF;AAAA,MACA,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ;AAEtE,iBAAS,KAAI,GAAG,KAAI,aAAY,GAAG,EAAE,IAAG;AACtC,oBAAU,QAAQ,SAAS,GAAE;AAC7B,oBAAU,QAAQ,SAAS,KAAI,EAAE;AAAA,QACnC;AAAA,MACF;AAAA,MACA,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ;AAEtE,YAAI,aAAY,GAAG;AACjB,mBAAS,KAAI,GAAG,KAAI,YAAW,EAAE,IAAG;AAClC,sBAAU,QAAQ,SAAS,GAAE;AAC7B,sBAAU,QAAQ,SAAU,MAAI,KAAK,WAAU;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AAAA,MACA,mBAAmB,4BAA2B,YAAW,SAAS,QAAQ;AACxE,YAAI,aAAY,GAAG;AAEjB,mBAAS,KAAI,GAAG,KAAI,aAAY,GAAG,EAAE,IAAG;AACtC,sBAAU,QAAQ,SAAS,GAAE;AAC7B,sBAAU,QAAQ,SAAS,KAAI,EAAE;AAAA,UACnC;AAEA,mBAAS,KAAK,GAAG,KAAK,aAAY,GAAG,MAAM;AACzC,sBAAU,QAAQ,SAAS,GAAG;AAC9B,sBAAU,QAAQ,SAAS,KAAK,EAAE;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAAA,MACA,gBAAgB,yBAAwB,MAAM,SAAS,QAAQ;AAC7D,iBAAS,KAAI,GAAG,KAAI,OAAO,GAAG,MAAK;AACjC,oBAAU,QAAQ,SAAS,EAAE;AAC7B,oBAAU,QAAQ,SAAS,KAAI,EAAE;AACjC,oBAAU,QAAQ,SAAS,KAAI,EAAE;AAAA,QACnC;AAAA,MACF;AAAA,MACA,iBAAiB,0BAAyB,MAAM,SAAS,QAAQ;AAC/D,iBAAS,KAAI,GAAG,KAAI,OAAO,GAAG,MAAK;AACjC,oBAAU,QAAQ,SAAS,GAAE;AAC7B,oBAAU,QAAQ,SAAS,KAAI,IAAI,KAAI,EAAE;AACzC,oBAAU,QAAQ,SAAS,KAAI,IAAK,MAAI,KAAK,EAAE;AAAA,QACjD;AAAA,MACF;AAAA,IACF;AACA,QAAI,gBAAe;AAAA,MAEjB,kBAAkB,2BAA0B,YAAW,SAAS;AAC9D,eAAO;AAAA,MACT;AAAA,MACA,kBAAkB,2BAA0B,YAAW,SAAS;AAC9D,YAAI,aAAY,GAAG;AACjB,iBAAQ,cAAY,KAAK;AAAA,QAC3B;AAEA,eAAO;AAAA,MACT;AAAA,MACA,kBAAkB,2BAA0B,YAAW,SAAS;AAC9D,YAAI,aAAY,GAAG;AACjB,iBAAO,aAAY;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,mBAAmB,4BAA2B,YAAW,SAAS;AAChE,YAAI,aAAY,GAAG;AACjB,iBAAO,aAAY,IAAI;AAAA,QACzB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,gBAAgB,yBAAwB,MAAM,SAAS;AACrD,YAAI,OAAO,GAAG;AACZ,iBAAQ,QAAO,KAAK;AAAA,QACtB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,iBAAiB,0BAAyB,MAAM,SAAS,QAAQ;AAC/D,YAAI,OAAO,GAAG;AACZ,iBAAQ,QAAO,KAAK;AAAA,QACtB;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAI,OAAO;AACX,QAAI,YAAY;AAEhB,QAAI,WAAW,eAAe,UAAU,UAAU,SAAS;AACzD,aAAO,aAAa;AACpB,kBAAY,cAAa;AAAA,IAC3B,WAAW,WAAW,eAAe,aAAa,UAAU,SAAS;AACnE,aAAO,aAAa,GAAG,OAAO,OAAO,aAAa;AAClD,kBAAY,cAAa,GAAG,OAAO,OAAO,aAAa;AAAA,IACzD,OAAO;AACL,aAAO,aAAa,GAAG,OAAO,OAAO,WAAW;AAChD,kBAAY,cAAa,GAAG,OAAO,OAAO,WAAW;AAAA,IACvD;AAEA,QAAI,QAAQ,UAAU,QAAQ;AAC9B,QAAI,OAAO,MAAM;AACjB,QAAI,YAAY;AAEhB,aAAS,QAAQ,GAAG,QAAQ,QAAO;AACjC,mBAAa,UAAU,MAAM,QAAQ,KAAK;AAC1C,eAAS,MAAM,SAAS;AAAA,IAC1B;AAEA,QAAI,cAAc;AAClB,QAAI,YAAY,IAAI,aAAa,YAAY,MAAM,SAAS;AAE5D,QAAI,WAAW;AACb,oBAAc,IAAI,WAAW,YAAY,CAAC;AAAA,IAC5C;AAEA,QAAI,SAAS;AACb,QAAI,QAAQ;AAGZ,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,UAAI,QAAQ,QAAQ,OAAO,SAAS,CAAC;AACrC,UAAI,QAAQ,MAAM,KAAK,MAAM;AAC7B,gBAAU,QAAQ;AAClB,UAAI,YAAY,MAAO,OAAM,KAAK,MAAM;AACxC,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,mBAAmB,SAAS,KAAM,MAAK,IAAI,MAAM,IAAI,SAAS,OAClE,KAAK,IAAI,KAAK,MAAM,MAAM,CAAC,IAAI,KAC/B,WAAW,KAAK,SAAS;AAEzB,QAAI,kBAAkB;AAEpB,UAAI,aAAa,IAAI,aAAa,CAAC;AACnC,UAAI,aAAa,IAAI,aAAa,CAAC;AAEnC,eAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,YAAI,SAAS,QAAQ,OAAO,SAAS,GAAG;AAExC,YAAI,SAAS,OAAO,KAAK,OAAO;AAEhC,mBAAW,OAAO,MAAO,QAAO,KAAK,OAAO;AAC5C,mBAAW,OAAO,SAAS,IAAI,IAAM,SAAS;AAAA,MAChD;AAEA,gBAAU,sBAAsB,YAAY,UAAU;AAAA,IACxD,WAAW,MAAM,8BAA8B,MAAM;AAEnD,gBAAU,sBAAsB,MAAM,IAAI;AAAA,IAC5C;AAEA,gBAAY,uBAAuB,IAAG;AAEpC,iBAAW,KAAI;AAEf,UAAI,CAAC,MAAM,2BAA2B;AACpC,kBAAU,YAAY,UAAU;AAChC,kBAAU,YAAY,UAAU;AAChC,kBAAU,YAAY,UAAU;AAAA,MAClC,OAAO;AAEL,kBAAU,YAAa,WAAU,cAAc,MAAM,WAAW,MAAM,MAAM,WAAW;AACvF,kBAAU,YAAa,WAAU,cAAc,MAAM,WAAW,MAAM,MAAM,WAAW;AACvF,kBAAU,YAAa,WAAU,cAAc,MAAM,WAAW,MAAM,MAAM,WAAW;AAAA,MACzF;AAEA,UAAI,eAAe,MAAM;AACvB,YAAI,QAAQ,iBAAiB;AAC3B,sBAAa,aAAY,QAAQ,cAAc;AAAA,QACjD,OAAO;AACL,sBAAY,KAAI;AAAA,QAClB;AAEA,kBAAU,YAAY,WAAW;AACjC,kBAAU,YAAY,WAAW;AACjC,kBAAU,YAAY,WAAW;AAAA,MACnC;AAEA,YAAM,WAAW,QAAQ,SAAU,MAAM;AACvC,kBAAU,KAAI,KAAK;AAEnB,iBAAS,KAAI,GAAG,KAAI,KAAK,YAAY,EAAE,IAAG;AACxC,oBAAU,YAAY,KAAK,KAAK;AAAA,QAClC;AAAA,MACF,CAAC;AAED,UAAI,eAAe,MAAM;AACvB,oBAAY,KAAI;AAEhB,iBAAS,IAAI,GAAG,IAAI,mBAAmB,EAAE,GAAG;AAC1C,oBAAU,YAAY,WAAW;AAAA,QACnC;AAAA,MACF;AAEA,UAAI,cAAc,MAAM;AACtB,YAAI,QAAQ,iBAAiB;AAC3B,qBAAY,aAAY,QAAQ,cAAc;AAAA,QAChD,OAAO;AACL,qBAAW,KAAI;AAAA,QACjB;AAEA,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,oBAAoB,IAAI,UAAU,cAAc;AAAA,MACzE;AAAA,IACF;AAEA,aAAS,SAAS,GAAG,SAAS,QAAO;AACnC,WAAK,MAAM,SAAS,OAAO,SAAS,CAAC;AACrC,gBAAU,MAAM,UAAU;AAC1B;AAAA,IACF;AAEA,UAAM,eAAe;AACrB,cAAU,OAAO,WAAW,WAAW,YAAY;AAEnD,QAAI,MAAM,SAAS;AACjB,YAAM,gBAAgB;AACtB,YAAM,QAAQ,OAAO,aAAa,WAAW,YAAY;AAAA,IAC3D;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,SAAU,YAAY,YAAY;AAClE,QAAI,eAAe,QAAS,YAAW,gBAAgB,gBAAgB,WAAW,WAAW,IAAI;AAC/F,qBAAc,kDAAkD;AAChE;AAAA,IACF;AAEA,QAAI,eAAe,QAAS,YAAW,gBAAgB,gBAAgB,WAAW,WAAW,IAAI;AAC/F,qBAAc,kDAAkD;AAChE;AAAA,IACF;AAEA,QAAI,MAAM,eAAe,QAAQ,eAAe,QAAQ,CAAC,aAAK,OAAO,YAAY,MAAM,UAAU,GAAG;AAClG,YAAM,aAAa;AAAA,IACrB;AAEA,QAAI,MAAM,eAAe,QAAQ,eAAe,QAAQ,CAAC,aAAK,OAAO,YAAY,MAAM,UAAU,GAAG;AAClG,YAAM,aAAa;AAAA,IACrB;AAEA,UAAM,4BAA4B,8BAA8B,MAAM,YAAY,MAAM,UAAU;AAElG,QAAI,MAAM,2BAA2B;AACnC,YAAM,6BAA6B,kCAAkC,MAAM,YAAY,MAAM,UAAU;AAAA,IACzG,OAAO;AACL,YAAM,6BAA6B;AAAA,IACrC;AAAA,EACF;AACF;AAuBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,kBAAgB,OAAO,WAAW,OAAO,aAAa;AACtD,QAAM,OAAO,WAAW,OAAO,CAAC,WAAW,gBAAgB,UAAU,iBAAiB,gBAAgB,gBAAgB,gBAAgB,oBAAoB,eAAe,mBAAmB,YAAY,CAAC;AACzM,QAAM,IAAI,WAAW,OAAO,CAAC,cAAc,cAAc,6BAA6B,4BAA4B,CAAC;AAEnH,iCAA+B,WAAW,KAAK;AACjD;AAhZA,IAMI,gBA+WA,kBA6BA,eAEA;AApZJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAI,iBAAgB,MAAM;AA+W1B,IAAI,mBAAiB;AAAA,MACnB,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,YAAY,CAAC;AAAA,MACb,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,IAC9B;AAaA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,2BAA2B;AAAA,MAC7B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AChZA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,YAAU,UAAU,WAAY;AAC9B,QAAI,QAAQ,MAAM,QAAQ;AAE1B,QAAI,CAAC,MAAM,UAAU,CAAC,MAAM,OAAO,UAAU,MAAM,eAAe,WAAW;AAC3E,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,QAAQ,aAAa,MAAM,MAAM;AACvC,YAAM,SAAS;AAAA,IACjB;AAEA,YAAQ,MAAM;AAAA,WAIP;AACH,gBAAQ,MAAM,QAAQ;AACtB;AAAA,WAEG;AAAA;AAEH,gBAAQ,MAAM,QAAQ;AACtB;AAAA;AAGJ,UAAM,SAAS,MAAM,QAAQ,aAAa,KAAK;AAC/C,UAAM,QAAQ,aAAa,MAAM,QAAQ,MAAM,MAAM;AACrD,UAAM,QAAQ,cAAc,MAAM,MAAM;AACxC,QAAI,aAAa,MAAM,QAAQ,mBAAmB,MAAM,QAAQ,MAAM,QAAQ,cAAc;AAE5F,QAAI,CAAC,YAAY;AACf,UAAI,YAAY,MAAM,QAAQ,iBAAiB,MAAM,MAAM;AAC3D,qBAAc,2BAA2B,OAAO,MAAM,QAAQ,KAAK,EAAE,OAAO,SAAS,CAAC;AACtF,YAAM,QAAQ,aAAa,MAAM,MAAM;AACvC,YAAM,SAAS;AACf,aAAO;AAAA,IACT;AAGA,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,WAAY;AAC9B,QAAI,MAAM,eAAe,aAAa,MAAM,WAAW,GAAG;AACxD;AAAA,IACF;AAEA,UAAM,QAAQ,aAAa,MAAM,MAAM;AACvC,UAAM,SAAS;AACf,UAAM,QAAQ;AAAA,EAChB;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,cAAc,UAAU,SAAS,UAAU,SAAS,CAAC;AAErF,YAAU,WAAW,KAAK;AAC5B;AAtFA,IAEI,gBAmEA,kBAmBA,eAEA;AA1FJ;AAAA;AAAA;AAEA,IAAI,iBAAgB,MAAM;AAmE1B,IAAI,mBAAiB;AAAA,MACnB,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAYA,IAAI,gBAAc,MAAM,YAAY,UAAQ,WAAW;AAEvD,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACtFA,oBAAoB,QAAQ,QAAQ,SAAS;AAC3C,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC9E,MAAI,aAAa,MAAM,QAAQ,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI;AAC/D,MAAI,WAAW;AAEf,MAAI,OAAO,OAAO,MAAM,MAAM,IAAI;AAChC,eAAW;AAAA,EACb;AAEA,MAAI,QAAQ;AAEZ,MAAI,KAAK;AACP,YAAQ;AAAA,EACV;AAEA,MAAI,QAAQ,IAAI,OAAO,QAAQ,KAAK;AACpC,MAAI,YAAY,OAAO,QAAQ,OAAO,UAAU;AAChD,SAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,EACV;AACF;AAKA,0BAA0B,WAAW,OAAO;AAE1C,QAAM,eAAe,KAAK,kBAAkB;AAE5C,YAAU,gBAAgB,WAAY;AACpC,QAAI,CAAC,MAAM,aAAa,QAAQ,GAAG;AACjC,sBAAc,MAAM,aAAa,UAAU,EAAE,MAAM,IAAI,EAAE,IAAI,SAAU,MAAM,OAAO;AAClF,eAAO,GAAG,OAAO,OAAO,IAAI,EAAE,OAAO,IAAI;AAAA,MAC3C,CAAC,EAAE,KAAK,IAAI,CAAC;AACb,sBAAc,MAAM,aAAa,SAAS,CAAC;AAC3C,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,eAAe,QAAQ,GAAG;AACnC,sBAAc,MAAM,eAAe,UAAU,EAAE,MAAM,IAAI,EAAE,IAAI,SAAU,MAAM,OAAO;AACpF,eAAO,GAAG,OAAO,OAAO,IAAI,EAAE,OAAO,IAAI;AAAA,MAC3C,CAAC,EAAE,KAAK,IAAI,CAAC;AACb,sBAAc,MAAM,eAAe,SAAS,CAAC;AAC7C,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,UAAU,aAAa,MAAM,YAAY,GAAG;AAC/C,sBAAc,MAAM,KAAK;AACzB,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,UAAU,aAAa,MAAM,cAAc,GAAG;AACjD,sBAAc,MAAM,KAAK;AACzB,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,UAAU,KAAK,GAAG;AACrB,sBAAc,iBAAiB,OAAO,MAAM,KAAK,CAAC;AAClD,aAAO;AAAA,IACT;AAEA,cAAU,YAAY,IAAI;AAC1B,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,WAAY;AAC9B,QAAI,MAAM,eAAe,aAAa,MAAM,WAAW,GAAG;AACxD;AAAA,IACF;AAEA,UAAM,QAAQ,aAAa,MAAM,MAAM;AACvC,UAAM,SAAS;AAAA,EACjB;AAEA,YAAU,OAAO,WAAY;AAC3B,QAAI,CAAC,MAAM,UAAU,CAAC,UAAU,KAAK,GAAG;AACtC,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,MAAM,MAAM;AACrC,cAAU,SAAS,IAAI;AACvB,WAAO;AAAA,EACT;AAEA,YAAU,UAAU,WAAY;AAC9B,WAAO,CAAC,CAAC,MAAM;AAAA,EACjB;AAEA,YAAU,UAAU,WAAY;AAC9B,UAAM,QAAQ,WAAW,IAAI;AAC7B,cAAU,SAAS,KAAK;AAAA,EAC1B;AAEA,YAAU,aAAa,SAAU,KAAK;AACpC,UAAM,aAAa,WAAW,GAAG;AACjC,UAAM,eAAe,WAAW,GAAG;AACnC,UAAM,eAAe,WAAW,GAAG;AAAA,EACrC;AAEA,YAAU,OAAO,WAAY;AAC3B,QAAI,MAAM,OAAO;AACf,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAGA,UAAM,cAAc,CAAC;AACrB,UAAM,QAAQ,YAAY,MAAM,MAAM;AACtC,QAAI,aAAa,MAAM,QAAQ,oBAAoB,MAAM,QAAQ,MAAM,QAAQ,WAAW;AAE1F,QAAI,CAAC,YAAY;AACf,UAAI,YAAY,MAAM,QAAQ,kBAAkB,MAAM,MAAM;AAC5D,sBAAc,wBAAwB,OAAO,SAAS,CAAC;AACvD,YAAM,SAAS;AACf,aAAO;AAAA,IACT;AAEA,cAAU,UAAU,IAAI;AACxB,UAAM,gBAAgB,CAAC;AACvB,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,MAAM,GAAG;AAC9C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,UAAM,QAAQ,iBAAiB,UAAU,OAAO,GAAG;AACnD,WAAO;AAAA,EACT;AAEA,YAAU,sBAAsB,SAAU,MAAM,GAAG;AACjD,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,UAAM,QAAQ,iBAAiB,UAAU,OAAO,GAAG;AACnD,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,SAAU,MAAM,GAAG;AACzC,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,UAAU,UAAU,CAAC;AACnC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM,GAAG;AAC1C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,SAAU,MAAM,GAAG;AACzC,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,UAAU,UAAU,CAAC;AACnC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM,GAAG;AAC1C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM,IAAI,IAAI;AAC/C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,QAAW;AACpB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,IAAI,EAAE;AACxC,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM,IAAI,IAAI;AAC/C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,QAAW;AACpB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,IAAI,EAAE;AACxC,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM,IAAI,IAAI,IAAI;AACnD,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,QAAW;AACpB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,IAAI,IAAI,EAAE;AAC5C,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,MAAM,GAAG;AAC/C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,QAAQ,CAAC,KAAK,EAAE,WAAW,GAAG;AACvC,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAClD,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM;AACvC,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,OAAO,IAAI,OAAO,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC1G,WAAK,OAAO,KAAK,UAAU;AAAA,IAC7B;AAEA,QAAI,QAAQ;AAEZ,QAAI,MAAM,WAAW,KAAK,MAAM,QAAQ,MAAM,EAAE,GAAG;AACjD,cAAQ,MAAM;AAAA,IAChB;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE;AAC9D,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM;AACvC,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjH,WAAK,QAAQ,KAAK,UAAU;AAAA,IAC9B;AAEA,QAAI,QAAQ;AAEZ,QAAI,MAAM,WAAW,KAAK,MAAM,QAAQ,MAAM,EAAE,GAAG;AACjD,cAAQ,MAAM;AAAA,IAChB;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE;AACxE,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM;AACvC,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjH,WAAK,QAAQ,KAAK,UAAU;AAAA,IAC9B;AAEA,QAAI,QAAQ;AAEZ,QAAI,MAAM,WAAW,KAAK,MAAM,QAAQ,MAAM,EAAE,GAAG;AACjD,cAAQ,MAAM;AAAA,IAChB;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC3D;AAEA,UAAM,QAAQ,UAAU,UAAU,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE;AACxE,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM,GAAG;AAC3C,QAAI,WAAW,UAAU,YAAY,IAAI;AAEzC,QAAI,aAAa,IAAI;AACnB,YAAM,QAAQ,yBAAyB,OAAO,MAAM,qBAAqB;AACzE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,UAAU,CAAC;AACpC,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,SAAU,MAAM;AACtC,QAAI,CAAC,QAAQ,CAAC,MAAM,QAAQ;AAC1B,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,MAAM,YAAY;AAE5B,QAAI,QAAQ,QAAW;AACrB,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,QAAQ,mBAAmB,MAAM,QAAQ,IAAI;AAEzD,QAAI,QAAQ,MAAM;AAChB,YAAM,QAAQ,WAAW,OAAO,MAAM,uCAAuC;AAC7E,YAAM,YAAY,QAAQ;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,YAAY,QAAQ;AAC1B,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,MAAM;AACxC,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,MAAM,YAAY;AAE5B,QAAI,QAAQ,QAAW;AACrB,aAAO,QAAQ;AAAA,IACjB;AAEA,QAAI,CAAC,MAAM,QAAQ;AACjB,sBAAc,+DAA+D;AAC7E,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,QAAQ,mBAAmB,MAAM,QAAQ,IAAI;AACzD,UAAM,YAAY,QAAQ;AAE1B,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,kBAAkB,SAAU,MAAM;AAC1C,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,OAAO,KAAK,MAAM,aAAa,EAAE,QAAQ,IAAI;AAEvD,QAAI,QAAQ,IAAI;AACd,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,QAAQ;AACjB,sBAAc,+DAA+D;AAC7E,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,QAAQ,kBAAkB,MAAM,QAAQ,IAAI;AAExD,QAAI,QAAQ,IAAI;AACd,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,QAAQ;AAC5B,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,QAAQ;AACzC,QAAI,OAAO,UAAU,MAAM,GAAG;AAC5B,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,cAAc,MAAM,WAAW;AACxC,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,UAAI,UAAU,MAAM,QAAQ,cAAc;AAE1C,UAAI,YAAY,GAAG;AACjB,cAAM,QAAQ;AACd,eAAO;AAAA,MACT;AAEA,YAAM,SAAS;AACf,YAAM,SAAS;AAAA,IACjB;AAEA,QAAI,OAAO,cAAc,MAAM,UAAU;AACvC,UAAI,MAAM,uBAAuB,GAAG;AAClC,cAAM,SAAS,aAAa,MAAM,QAAQ,MAAM,kBAAkB;AAAA,MACpE;AAEA,YAAM,qBAAqB,OAAO,UAAU;AAAA,IAC9C;AAEA,QAAI,OAAO,cAAc,MAAM,YAAY;AACzC,UAAI,MAAM,yBAAyB,GAAG;AACpC,cAAM,QAAQ,aAAa,MAAM,QAAQ,MAAM,oBAAoB;AAAA,MACrE;AAEA,YAAM,uBAAuB,OAAO,UAAU;AAAA,IAChD;AAEA,UAAM,QAAQ,aAAa,MAAM,QAAQ,OAAO,UAAU,CAAC;AAC3D,cAAU,UAAU,KAAK;AACzB,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,QAAQ;AACzC,QAAI,OAAO,UAAU,MAAM,GAAG;AAC5B,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,cAAc,MAAM,WAAW;AACxC,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,QAAQ;AAAA,IAChB;AAEA,YAAQ,OAAO,cAAc;AAAA,WACtB;AACH,YAAI,MAAM,uBAAuB,OAAO,UAAU,GAAG;AACnD,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,cAAM,QAAQ,aAAa,MAAM,QAAQ,OAAO,UAAU,CAAC;AAC3D,cAAM,qBAAqB;AAC3B,cAAM,SAAS;AACf,eAAO;AAAA,WAEJ;AACH,YAAI,MAAM,yBAAyB,OAAO,UAAU,GAAG;AACrD,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,cAAM,QAAQ,aAAa,MAAM,QAAQ,OAAO,UAAU,CAAC;AAC3D,cAAM,uBAAuB;AAC7B,cAAM,SAAS;AACf,eAAO;AAAA;AAGP,eAAO;AAAA;AAAA,EAEb;AAEA,YAAU,aAAa,SAAU,KAAK;AACpC,UAAM,UAAU;AAChB,UAAM,aAAa,WAAW,GAAG;AACjC,UAAM,eAAe,WAAW,GAAG;AACnC,UAAM,eAAe,WAAW,GAAG;AAAA,EACrC;AAEA,YAAU,qBAAqB,SAAU,OAAO;AAC9C,UAAM,kBAAkB;AAAA,EAC1B;AAmBF;AAyBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,iBAAiB,CAAC;AACxB,QAAM,cAAc,CAAC;AACrB,QAAM,eAAe,YAAU,YAAY;AAC3C,QAAM,aAAa,cAAc,QAAQ;AACzC,QAAM,iBAAiB,YAAU,YAAY;AAC7C,QAAM,eAAe,cAAc,UAAU;AAC7C,QAAM,iBAAiB,YAAU,YAAY;AAC7C,QAAM,eAAe,cAAc,UAAU;AAE7C,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,iBAAiB,CAAC;AAC/C,QAAM,OAAO,WAAW,OAAO,CAAC,SAAS,UAAU,YAAY,SAAS,WAAW,gBAAgB,kBAAkB,kBAAkB,QAAQ,CAAC;AAEhJ,mBAAiB,WAAW,KAAK;AACnC;AAnpBA,IAGI,iBA0mBA,kBAyCA,eAEA;AAxpBJ;AAAA;AAAA;AACA;AAEA,IAAI,kBAAgB,MAAM;AA0mB1B,IAAI,mBAAiB;AAAA,MACnB,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,SAAS;AAAA,MACT,iBAAiB;AAAA,IACnB;AAuBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,kBAAkB;AAE9D,IAAI,qBAAqB;AAAA,MACvB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;ACtpBA,oCAAoC,WAAW,OAAO;AAEpD,QAAM,eAAe,KAAK,4BAA4B;AAEtD,YAAU,gBAAgB,WAAY;AAAA,EACtC;AAEA,YAAU,aAAa,WAAY;AACjC,UAAM,sBAAsB;AAE5B,QAAI,CAAC,MAAM,oBAAoB,UAAU,GAAG;AAC1C,YAAM,sBAAsB,MAAM,QAAQ,aAAa,wBAAwB;AAAA,IACjF;AAEA,QAAI,CAAC,MAAM,kBAAkB,MAAM,uBAAuB,MAAM,oBAAoB,UAAU,GAAG;AAC/F,YAAM,YAAY;AAClB,YAAM,YAAY;AAClB,YAAM,YAAY,MAAM,QAAQ,kBAAkB;AAAA,IACpD,OAAO;AACL,YAAM,YAAY,MAAM,QAAQ,aAAa,yBAAyB;AAEtE,UAAI,CAAC,MAAM,kBAAkB,MAAM,WAAW;AAC5C,cAAM,YAAY;AAClB,cAAM,YAAY,MAAM,UAAU,qBAAqB;AAAA,MACzD,OAAO;AACL,cAAM,YAAY;AAAA,MACpB;AAAA,IACF;AAAA,EACF;AAEA,YAAU,UAAU,WAAY;AAC9B,WAEE,MAAM,cAAc,KAAK,MAAM,cAAc;AAAA,EAEjD;AAEA,YAAU,OAAO,WAAY;AAE3B,QAAI,CAAC,UAAU,QAAQ,GAAG;AACxB,gBAAU,WAAW;AAAA,IACvB;AAEA,QAAI,UAAU,QAAQ,KAAK,MAAM,WAAW;AAC1C,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,mBAAmB,MAAM,SAAS;AAAA,MACpD,OAAO;AACL,cAAM,QAAQ,gBAAgB,MAAM,SAAS;AAAA,MAC/C;AAAA,IACF,WAAW,UAAU,QAAQ,GAAG;AAC9B,UAAI,KAAK,MAAM;AAEf,eAAS,QAAQ,GAAG,QAAQ,MAAM,QAAQ,QAAQ,EAAE,OAAO;AACzD,YAAI,OAAO,MAAM,QAAQ;AACzB,cAAM,QAAQ,WAAW,GAAG,cAAc,KAAK,MAAM;AAErD,iBAAS,OAAO,GAAG,OAAO,KAAK,WAAW,QAAQ,EAAE,MAAM;AACxD,cAAI,SAAS,KAAK,WAAW;AAC7B,cAAI,cAAc,OAAO,WAAW,OAAO,OAAO;AAElD,mBAAS,IAAI,GAAG,IAAI,aAAa,EAAE,GAAG;AACpC,eAAG,wBAAwB,OAAO,QAAQ,CAAC;AAC3C,eAAG,oBAAoB,OAAO,QAAQ,GAAG,OAAO,MAAM,OAAO,MAAM,OAAO,WAAW,OAAO,QAAQ,OAAO,SAAS,OAAO,SAAS,IAAI,OAAO,IAAI;AAEnJ,gBAAI,OAAO,UAAU,GAAG;AACtB,kBAAI,MAAM,qBAAqB;AAC7B,sBAAM,oBAAoB,yBAAyB,OAAO,QAAQ,GAAG,CAAC;AAAA,cACxE,OAAO;AACL,mBAAG,oBAAoB,OAAO,QAAQ,GAAG,CAAC;AAAA,cAC5C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,UAAU,WAAY;AAE9B,QAAI,UAAU,QAAQ,KAAK,MAAM,WAAW;AAC1C,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,mBAAmB,IAAI;AAAA,MACzC,OAAO;AACL,cAAM,QAAQ,gBAAgB,IAAI;AAAA,MACpC;AAAA,IACF,WAAW,UAAU,QAAQ,GAAG;AAC9B,UAAI,KAAK,MAAM;AAEf,eAAS,QAAQ,GAAG,QAAQ,MAAM,QAAQ,QAAQ,EAAE,OAAO;AACzD,YAAI,OAAO,MAAM,QAAQ;AACzB,cAAM,QAAQ,WAAW,GAAG,cAAc,KAAK,MAAM;AAErD,iBAAS,OAAO,GAAG,OAAO,KAAK,WAAW,QAAQ,EAAE,MAAM;AACxD,cAAI,SAAS,KAAK,WAAW;AAC7B,cAAI,cAAc,OAAO,WAAW,OAAO,OAAO;AAElD,mBAAS,IAAI,GAAG,IAAI,aAAa,EAAE,GAAG;AACpC,eAAG,wBAAwB,OAAO,QAAQ,CAAC;AAC3C,eAAG,oBAAoB,OAAO,QAAQ,GAAG,OAAO,MAAM,OAAO,MAAM,OAAO,WAAW,OAAO,QAAQ,OAAO,SAAS,OAAO,SAAS,IAAI,OAAO,IAAI;AAEnJ,gBAAI,OAAO,UAAU,GAAG;AACtB,kBAAI,MAAM,qBAAqB;AAC7B,sBAAM,oBAAoB,yBAAyB,OAAO,QAAQ,GAAG,CAAC;AAAA,cACxE,OAAO;AACL,mBAAG,oBAAoB,OAAO,QAAQ,GAAG,CAAC;AAAA,cAC5C;AAAA,YACF;AAEA,eAAG,yBAAyB,OAAO,QAAQ,CAAC;AAAA,UAC9C;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,uBAAuB,WAAY;AAC3C,cAAU,QAAQ;AAElB,QAAI,MAAM,WAAW;AACnB,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,qBAAqB,MAAM,SAAS;AAAA,MACtD,OAAO;AACL,cAAM,QAAQ,kBAAkB,MAAM,SAAS;AAAA,MACjD;AAAA,IACF;AAEA,UAAM,YAAY;AAClB,UAAM,gBAAgB;AAAA,EACxB;AAEA,YAAU,2BAA2B,WAAY;AAC/C,cAAU,qBAAqB;AAE/B,QAAI,MAAM,WAAW;AACnB,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,qBAAqB,MAAM,SAAS;AAAA,MACtD,OAAO;AACL,cAAM,QAAQ,kBAAkB,MAAM,SAAS;AAAA,MACjD;AAAA,IACF;AAEA,UAAM,YAAY;AAClB,UAAM,YAAY;AAClB,UAAM,gBAAgB;AAAA,EACxB;AAEA,YAAU,oBAAoB,SAAU,SAAS,QAAQ,MAAM,QAAQ,QAAQ,aAAa,kBAAkB,YAAW;AACvH,WAAO,UAAU,6BAA6B,SAAS,QAAQ,MAAM,QAAQ,QAAQ,aAAa,kBAAkB,YAAW,GAAG,KAAK;AAAA,EACzI;AAEA,YAAU,+BAA+B,SAAU,SAAS,QAAQ,MAAM,QAAQ,QAAQ,aAAa,kBAAkB,YAAW,SAAS,UAAU;AACrJ,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,QAAQ,QAAQ,KAAK,OAAO,UAAU,MAAM,KAAK,OAAO,QAAQ,MAAM,WAAW,cAAc;AAClG,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,kBAAkB,GAAG;AAC7B,YAAM,gBAAgB,QAAQ,UAAU;AAAA,IAC1C;AAEA,QAAI,CAAC,UAAU,QAAQ,GAAG;AACxB,gBAAU,WAAW;AAAA,IACvB;AAEA,QAAI,CAAC,UAAU,QAAQ,KAAK,MAAM,kBAAkB,QAAQ,UAAU,GAAG;AACvE,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,MAAM;AACf,QAAI,UAAU,CAAC;AACf,YAAQ,OAAO;AACf,YAAQ,QAAQ,GAAG,kBAAkB,MAAM,eAAe,IAAI;AAC9D,YAAQ,SAAS;AACjB,YAAQ,SAAS;AACjB,YAAQ,OAAO;AACf,YAAQ,OAAO;AACf,YAAQ,YAAY;AACpB,YAAQ,WAAW;AACnB,YAAQ,UAAU;AAElB,QAAI,QAAQ,UAAU,IAAI;AACxB,aAAO;AAAA,IACT;AAIA,WAAO,KAAK;AACZ,OAAG,wBAAwB,QAAQ,KAAK;AACxC,OAAG,oBAAoB,QAAQ,OAAO,QAAQ,MAAM,QAAQ,MAAM,QAAQ,WAAW,QAAQ,QAAQ,QAAQ,MAAM;AAEnH,QAAI,UAAU,GAAG;AACf,UAAI,MAAM,qBAAqB;AAC7B,cAAM,oBAAoB,yBAAyB,QAAQ,OAAO,CAAC;AAAA,MACrE,OAAO;AACL,WAAG,oBAAoB,QAAQ,OAAO,CAAC;AAAA,MACzC;AAAA,IACF;AAEA,YAAQ,SAAS,OAAO,UAAU;AAElC,QAAI,CAAC,MAAM,WAAW;AAEpB,UAAI,YAAY;AAEhB,eAAS,QAAQ,GAAG,QAAQ,MAAM,QAAQ,QAAQ,EAAE,OAAO;AACzD,YAAI,OAAO,MAAM,QAAQ;AAEzB,YAAI,KAAK,WAAW,QAAQ,QAAQ;AAClC,sBAAY;AACZ,cAAI,QAAQ;AAEZ,mBAAS,OAAO,GAAG,OAAO,KAAK,WAAW,QAAQ,EAAE,MAAM;AACxD,gBAAI,SAAS,KAAK,WAAW;AAE7B,gBAAI,OAAO,SAAS,MAAM;AACxB,sBAAQ;AACR,mBAAK,WAAW,QAAQ;AAAA,YAC1B;AAAA,UACF;AAEA,cAAI,CAAC,OAAO;AACV,iBAAK,WAAW,KAAK,OAAO;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAEA,UAAI,CAAC,WAAW;AACd,cAAM,QAAQ,KAAK;AAAA,UACjB,QAAQ,QAAQ;AAAA,UAChB,YAAY,CAAC,OAAO;AAAA,QACtB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gCAAgC,SAAU,SAAS,QAAQ,MAAM,QAAQ,QAAQ,aAAa,kBAAkB,YAAW,SAAS;AAE5I,QAAI,SAAS,UAAU,6BAA6B,SAAS,QAAQ,MAAM,QAAQ,QAAQ,aAAa,kBAAkB,YAAW,SAAS,IAAI;AAElJ,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,MAAM;AACf,QAAI,QAAQ,GAAG,kBAAkB,MAAM,eAAe,IAAI;AAE1D,aAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACzC,SAAG,wBAAwB,QAAQ,CAAC;AACpC,SAAG,oBAAoB,QAAQ,GAAG,kBAAkB,aAAa,YAAW,QAAQ,SAAS,SAAS,IAAI,gBAAgB;AAE1H,UAAI,UAAU,GAAG;AACf,YAAI,MAAM,qBAAqB;AAC7B,gBAAM,oBAAoB,yBAAyB,QAAQ,GAAG,CAAC;AAAA,QACjE,OAAO;AACL,aAAG,oBAAoB,QAAQ,GAAG,CAAC;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,uBAAuB,SAAU,MAAM;AAC/C,QAAI,CAAC,UAAU,QAAQ,KAAK,MAAM,kBAAkB,GAAG;AACrD,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,MAAM,WAAW;AACpB,eAAS,QAAQ,GAAG,QAAQ,MAAM,QAAQ,QAAQ,EAAE,OAAO;AACzD,YAAI,OAAO,MAAM,QAAQ;AAEzB,iBAAS,OAAO,GAAG,OAAO,KAAK,WAAW,QAAQ,EAAE,MAAM;AACxD,cAAI,SAAS,KAAK,WAAW;AAE7B,cAAI,OAAO,SAAS,MAAM;AACxB,iBAAK,WAAW,OAAO,MAAM,CAAC;AAE9B,gBAAI,CAAC,KAAK,WAAW,QAAQ;AAC3B,oBAAM,QAAQ,OAAO,OAAO,CAAC;AAAA,YAC/B;AAEA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,SAAU,IAAI;AAC9C,QAAI,MAAM,wBAAwB,IAAI;AACpC;AAAA,IACF;AAEA,cAAU,yBAAyB;AACnC,UAAM,sBAAsB;AAC5B,UAAM,UAAU;AAEhB,QAAI,IAAI;AACN,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AACF;AAeA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,UAAU,CAAC;AAEjB,QAAM,IAAI,WAAW,KAAK;AAE1B,QAAM,IAAI,WAAW,OAAO,CAAC,WAAW,CAAC;AAEzC,QAAM,OAAO,WAAW,OAAO,CAAC,gBAAgB,CAAC;AAGjD,6BAA2B,WAAW,KAAK;AAC7C;AA1VA,IAkUI,kBA0BA,eAEA;AA9VJ;AAAA;AAAA;AACA;AAiUA,IAAI,mBAAiB;AAAA,MACnB,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,MACT,SAAS;AAAA,IAEX;AAkBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,4BAA4B;AAExE,IAAI,uBAAuB;AAAA,MACzB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACzVA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,wBAAwB,SAAU,KAAK;AAC/C,UAAM,QAAQ,WAAW,IAAI,WAAW,CAAC;AACzC,UAAM,IAAI,sBAAsB,GAAG;AACnC,UAAM,KAAK,sBAAsB,GAAG;AAAA,EACtC;AAEA,YAAU,2BAA2B,SAAU,QAAQ;AACrD,UAAM,IAAI,yBAAyB;AACnC,UAAM,KAAK,yBAAyB;AACpC,UAAM,KAAK,gBAAgB,CAAC;AAAA,EAC9B;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,mBAAmB,CAAC;AAC1B,QAAM,IAAI,MAAM,gBAAgB;AAChC,QAAM,sBAAsB,CAAC;AAC7B,QAAM,IAAI,MAAM,mBAAmB;AACnC,QAAM,OAAO,WAAW,OAAO,CAAC,WAAW,oBAAoB,OAAO,uBAAuB,QAAQ,eAAe,CAAC;AACrH,QAAM,UAAU,mBAAiB,YAAY;AAC7C,QAAM,MAAM,qBAAqB,YAAY;AAC7C,QAAM,OAAO,yBAAyB,YAAY;AAElD,kBAAgB,WAAW,KAAK;AAClC;AApDA,IA4BI,kBA0BA,eAEA;AAxDJ;AAAA;AAAA;AACA;AACA;AACA;AAyBA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,KAAK;AAAA,MACL,qBAAqB;AAAA,MACrB,MAAM;AAAA,MACN,eAAe;AAAA,IACjB;AAmBA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,YAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,MAKA,QAQA;AAbJ;AAAA;AAAA,IAAI,OAAO;AAAA,MACT,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,iBAAiB;AAAA,IACnB;AACA,IAAI,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,wBAAwB;AAAA,MACxB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,IACxB;AACA,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACPA,gBAAgB,KAAK;AACnB,YAAU,KAAK;AACf,MAAI,IAAI,UAAU;AAClB,MAAI,OAAO,KAAK,KAAK;AAGrB,MAAI,IAAI,KAAK,KAAK;AAGlB,MAAI,IAAI,KAAK,KAAK;AAMlB,MAAI,IAAI,KAAK;AACX,WAAO;AAAA,EACT;AAIA,MAAI,IAAI,KAAK;AACX,YAAQ;AAIR,YAAS,OAAM,MAAM,IAAI,MAAM,IAAI;AACnC,WAAO;AAAA,EACT;AAIA,MAAI,IAAI,KAAK;AACX,SAAK;AAIL,YAAS,MAAK,MAAM,KAAM,MAAK,MAAM,IAAI;AACzC,WAAO;AAAA,EACT;AAEA,UAAQ,IAAI,OAAO,KAAK,KAAK;AAI7B,UAAQ,IAAI;AACZ,SAAO;AACT;AAEA,kBAAkB,GAAG;AACnB,MAAI,IAAK,KAAI,UAAW;AACxB,MAAI,IAAK,KAAI,UAAW;AACxB,MAAI,IAAI,IAAI;AAEZ,MAAI,MAAM,GAAG;AACX,WAAQ,KAAI,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,IAAK,KAAI,KAAK,IAAI,GAAG,EAAE;AAAA,EAC9D;AAEA,MAAI,MAAM,IAAM;AACd,WAAO,IAAI,MAAO,KAAI,KAAK,KAAK;AAAA,EAClC;AAEA,SAAQ,KAAI,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,EAAE,IAAK,KAAI,IAAI,KAAK,IAAI,GAAG,EAAE;AACrE;AAxEA,IACI,WACA,WAwEA;AA1EJ;AAAA;AACA,IAAI,YAAY,IAAI,aAAa,CAAC;AAClC,IAAI,YAAY,IAAI,WAAW,UAAU,MAAM;AAwE/C,IAAI,YAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAUzf,0BAA0B,WAAW,OAAO;AAC1C,MAAI,QAAQ;AAGZ,QAAM,eAAe,KAAK,kBAAkB;AAE5C,YAAU,SAAS,WAAY;AAC7B,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEjF,QAAI,QAAQ;AACV,YAAM,sBAAsB;AAAA,IAC9B,OAAO;AACL,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAE3E,YAAM,sBAAsB,MAAM,eAAe,UAAU;AAAA,IAC7D;AAEA,UAAM,UAAU,MAAM,oBAAoB,WAAW;AAErD,QAAI,MAAM,WAAW,eAAe,GAAG;AACrC,UAAI,MAAM,gBAAgB;AACxB,kBAAU,sBAAsB,QAAO,oBAAoB;AAAA,MAC7D,OAAO;AACL,kBAAU,sBAAsB,QAAO,MAAM;AAAA,MAC/C;AAEA,gBAAU,uBAAuB,QAAO,MAAM;AAAA,IAChD,OAAO;AACL,gBAAU,sBAAsB,QAAO,OAAO;AAC9C,gBAAU,uBAAuB,QAAO,OAAO;AAAA,IACjD;AAEA,QAAI,MAAM,WAAW,UAAU,GAAG;AAChC,gBAAU,SAAS,MAAK,MAAM;AAC9B,gBAAU,SAAS,MAAK,MAAM;AAC9B,gBAAU,SAAS,MAAK,MAAM;AAAA,IAChC;AAGA,QAAI,MAAM,WAAW,aAAa,GAAG;AACnC,YAAM,WAAW,SAAS,IAAI;AAAA,IAChC;AAGA,QAAI,CAAC,MAAM,UAAU,MAAM,WAAW,SAAS,IAAI,MAAM,iBAAiB,SAAS,GAAG;AAEpF,UAAI,MAAM,WAAW,SAAS,MAAM,MAAM;AACxC,YAAI,MAAM,WAAW,eAAe,GAAG;AACrC,gBAAM,iBAAiB;AACvB,oBAAU,sBAAsB,QAAO,oBAAoB;AAAA,QAC7D;AAGA,YAAI,MAAM,WAAW,SAAS,KAAK,MAAM,WAAW,eAAe,GAAG;AACpE,oBAAU,kBAAkB,MAAM,WAAW,SAAS,CAAC;AACvD,oBAAU,SAAS;AACnB,oBAAU,eAAe;AACzB,gBAAM,iBAAiB,SAAS;AAAA,QAClC;AAAA,MACF;AAGA,UAAI,MAAM,WAAW,UAAU,MAAM,MAAM;AACzC,YAAI,MAAM,WAAW,eAAe,GAAG;AACrC,gBAAM,iBAAiB;AACvB,oBAAU,sBAAsB,QAAO,oBAAoB;AAAA,QAC7D;AAEA,YAAI,SAAS,MAAM,WAAW,UAAU;AACxC,kBAAU,gBAAgB,OAAO,OAAO,OAAO,QAAQ,GAAG,cAAa,eAAe,QAAQ,IAAI;AAClG,kBAAU,SAAS;AACnB,kBAAU,eAAe;AACzB,cAAM,iBAAiB,SAAS;AAAA,MAClC;AAGA,UAAI,MAAM,WAAW,eAAe,MAAM,MAAM;AAC9C,YAAI,OAAO,MAAM,WAAW,eAAe;AAE3C,YAAI,MAAM,WAAW,eAAe,GAAG;AACrC,gBAAM,iBAAiB;AACvB,oBAAU,sBAAsB,QAAO,oBAAoB;AAAA,QAC7D;AAEA,kBAAU,gBAAgB,KAAK,OAAO,KAAK,QAAQ,GAAG,cAAa,eAAe,KAAK,MAAM,IAAI;AACjG,kBAAU,SAAS;AACnB,kBAAU,eAAe;AACzB,cAAM,iBAAiB,SAAS;AAAA,MAClC;AAGA,UAAI,QAAQ,MAAM,WAAW,aAAa,CAAC;AAE3C,UAAI,SAAS,MAAM,aAAa,EAAE,WAAW,GAAG;AAC9C,YAAI,MAAM,MAAM,UAAU;AAC1B,YAAI,YAAY,MAAM,aAAa,EAAE,WAAW;AAEhD,YAAI,OAAO,CAAC;AAEZ,iBAAS,IAAI,GAAG,IAAI,MAAM,WAAW,sBAAsB,GAAG,EAAE,GAAG;AACjE,cAAI,SAAS,MAAM,WAAW,aAAa,CAAC;AAC5C,cAAI,UAAU,SAAS,OAAO,aAAa,EAAE,WAAW,EAAE,QAAQ,IAAI;AAEtE,cAAI,SAAS;AACX,iBAAK,KAAK,OAAO;AAAA,UACnB;AAAA,QACF;AAEA,YAAI,MAAM,WAAW,eAAe,KAAK,UAAU,sBAAsB,MAAM,GAAG;AAChF,gBAAM,iBAAiB;AACvB,oBAAU,sBAAsB,QAAO,oBAAoB;AAAA,QAC7D;AAEA,YAAI,KAAK,SAAS,MAAM,GAAG;AACzB,oBAAU,kBAAkB,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,GAAG,UAAU,sBAAsB,GAAG,UAAU,YAAY,GAAG,IAAI;AAAA,QACxI,OAAO;AACL,oBAAU,gBAAgB,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,GAAG,UAAU,sBAAsB,GAAG,UAAU,YAAY,GAAG,UAAU,QAAQ,CAAC;AAAA,QACrJ;AAEA,kBAAU,SAAS;AACnB,kBAAU,eAAe;AACzB,cAAM,iBAAiB,SAAS;AAAA,MAClC;AAAA,IACF;AAEA,QAAI,MAAM,QAAQ;AAChB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAGA,YAAU,iBAAiB,WAAY;AAErC,cAAU,WAAW;AAErB,QAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,YAAM,QAAQ,cAAc,MAAM,MAAM;AAAA,IAC1C;AAEA,UAAM,SAAS;AACf,UAAM,qBAAqB;AAC3B,UAAM,SAAS;AACf,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,cAAU,mBAAmB;AAAA,EAC/B;AAGA,YAAU,gBAAgB,WAAY;AAEpC,QAAI,CAAC,MAAM,QAAQ;AACjB,YAAM,SAAS,MAAM,QAAQ,cAAc;AAE3C,UAAI,MAAM,QAAQ;AAChB,cAAM,QAAQ,YAAY,MAAM,QAAQ,MAAM,MAAM;AAIpD,cAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,oBAAoB,UAAU,oBAAoB,MAAM,kBAAkB,CAAC;AACnI,cAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,oBAAoB,UAAU,oBAAoB,MAAM,mBAAmB,CAAC;AACpI,cAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAChH,cAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAEhH,YAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,gBAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAAA,QAClH;AAEA,cAAM,QAAQ,YAAY,MAAM,QAAQ,IAAI;AAAA,MAC9C;AAAA,IACF;AAAA,EACF;AAGA,YAAU,iBAAiB,WAAY;AACrC,QAAI,MAAM,qBAAqB;AAC7B,aAAO,MAAM,oBAAoB,yBAAyB,SAAS;AAAA,IACrE;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,WAAW,WAAY;AAE/B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,KAAK;AAAA,EACjB;AAGA,YAAU,aAAa,WAAY;AACjC,QAAI,MAAM,qBAAqB;AAC7B,YAAM,oBAAoB,kBAAkB,SAAS;AAAA,IACvD;AAAA,EACF;AAGA,YAAU,2BAA2B,SAAU,MAAM;AACnD,QAAI,QAAQ,MAAM,QAAQ;AACxB,WAAK,gBAAgB,SAAS;AAC9B,WAAK,kBAAkB,SAAS;AAChC,YAAM,QAAQ,cAAc,MAAM,MAAM;AACxC,YAAM,SAAS;AACf,YAAM,qBAAqB;AAC3B,YAAM,SAAS;AACf,YAAM,iBAAiB;AACvB,YAAM,SAAS;AACf,YAAM,iBAAiB;AACvB,YAAM,aAAa;AACnB,YAAM,QAAQ;AACd,YAAM,SAAS;AACf,YAAM,QAAQ;AAAA,IAChB;AAEA,QAAI,MAAM,eAAe;AACvB,YAAM,cAAc,yBAAyB,IAAI;AACjD,YAAM,gBAAgB;AAAA,IACxB;AAAA,EACF;AAGA,YAAU,OAAO,WAAY;AAC3B,UAAM,QAAQ,YAAY,MAAM,QAAQ,MAAM,MAAM;AAEpD,QAAI,MAAM,kBAAkB,UAAU,SAAS,IAAI,MAAM,mBAAmB,SAAS,GAAG;AACtF,gBAAU,eAAe;AAAA,IAC3B;AAAA,EACF;AAGA,YAAU,UAAU,WAAY;AAC9B,QAAI,SAAS;AAEb,QAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,UAAI,SAAS;AAEb,cAAQ,MAAM;AAAA,aACP,MAAM,QAAQ;AACjB,mBAAS,MAAM,QAAQ;AACvB;AAAA;AAGA,2BAAgB,iBAAiB;AACjC;AAAA;AAGJ,UAAI,MAAM,MAAM,QAAQ,YAAY,MAAM;AAC1C,eAAS,QAAQ,MAAM;AAAA,IACzB;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,iBAAiB,WAAY;AACrC,UAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAChH,UAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAEhH,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,YAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,gBAAgB,UAAU,kBAAkB,MAAM,KAAK,CAAC;AAAA,IAClH;AAEA,UAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,oBAAoB,UAAU,oBAAoB,MAAM,kBAAkB,CAAC;AACnI,UAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,oBAAoB,UAAU,oBAAoB,MAAM,mBAAmB,CAAC;AAEpI,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,YAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,oBAAoB,MAAM,SAAS;AAC3F,YAAM,QAAQ,cAAc,MAAM,QAAQ,MAAM,QAAQ,mBAAmB,MAAM,QAAQ;AAAA,IAC3F;AAIA,UAAM,mBAAmB,SAAS;AAAA,EACpC;AAGA,YAAU,oBAAoB,SAAU,SAAS,UAAU;AACzD,QAAI,CAAC,MAAM,gBAAgB;AACzB,YAAM,iBAAiB,UAAU,yBAAyB,SAAS,QAAQ;AAAA,IAC7E;AAEA,QAAI,CAAC,MAAM,gBAAgB;AACzB,qBAAc,iDAAiD,OAAO,SAAS,OAAO,EAAE,OAAO,QAAQ,CAAC;AAAA,IAC1G;AAEA,WAAO,MAAM;AAAA,EACf;AAGA,YAAU,2BAA2B,SAAU,SAAS,UAAU;AAChE,QAAI,SAAS;AAEb,aAAS,MAAM,oBAAoB,gCAAgC,SAAS,UAAU,KAAK;AAE3F,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAGA,aAAS,MAAM,oBAAoB,gCAAgC,SAAS,UAAU,IAAI;AAE1F,QAAI,CAAC,QAAQ;AACX,qBAAc,oCAAoC;AAClD,qBAAc,iDAAiD,OAAO,SAAS,OAAO,EAAE,OAAO,QAAQ,CAAC;AAAA,IAC1G;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,oBAAoB,SAAU,SAAS;AAC/C,QAAI,YAAY,MAAM,gBAAgB;AACpC,YAAM,iBAAiB;AACvB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAGA,YAAU,YAAY,SAAU,SAAS,UAAU;AACjD,UAAM,SAAS,UAAU,iBAAiB,SAAS,QAAQ;AAC3D,WAAO,MAAM;AAAA,EACf;AAGA,YAAU,mBAAmB,SAAU,SAAS,UAAU;AACxD,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,cAAQ;AAAA,aACD;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA;AAGrB,iBAAO,MAAM,QAAQ;AAAA;AAAA,IAE3B,OAAO;AAEL,cAAQ;AAAA,aACD;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA,aAElB;AACH,iBAAO,MAAM,QAAQ;AAAA;AAGrB,iBAAO,MAAM,QAAQ;AAAA;AAAA,IAE3B;AAAA,EACF;AAGA,YAAU,qBAAqB,WAAY;AACzC,UAAM,SAAS;AACf,UAAM,iBAAiB;AACvB,UAAM,iBAAiB;AAAA,EACzB;AAGA,YAAU,qBAAqB,SAAU,eAAe;AACtD,QAAI,mBAAmB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAG3F,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,cAAQ;AAAA,aAGD,cAAa;AAChB,iBAAO,MAAM,QAAQ;AAAA,aAElB,qBAAoB,cAAa;AACpC,iBAAO,MAAM,QAAQ;AAAA,aAElB,qBAAoB,cAAa;AACpC,iBAAO,MAAM,QAAQ;AAAA,aAMlB,cAAa;AAAA,aACb,cAAa;AAAA;AAGhB,iBAAO,MAAM,QAAQ;AAAA;AAAA,IAE3B;AAEA,YAAQ;AAAA,WAGD,cAAa;AAChB,eAAO,MAAM,QAAQ;AAAA,WAUlB,cAAa;AAAA,WACb,cAAa;AAAA;AAGhB,YAAI,MAAM,QAAQ,aAAa,mBAAmB,KAAK,MAAM,QAAQ,aAAa,0BAA0B,GAAG;AAC7G,iBAAO,MAAM,QAAQ;AAAA,QACvB;AAEA;AACE,cAAI,YAAY,MAAM,QAAQ,aAAa,wBAAwB;AAEnE,cAAI,aAAa,MAAM,QAAQ,aAAa,+BAA+B,GAAG;AAC5E,mBAAO,UAAU;AAAA,UACnB;AAAA,QACF;AACA,eAAO,MAAM,QAAQ;AAAA;AAAA,EAE3B;AAGA,YAAU,oBAAoB,SAAU,eAAe;AACrD,QAAI,mBAAmB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE3F,QAAI,CAAC,MAAM,gBAAgB;AACzB,YAAM,iBAAiB,UAAU,mBAAmB,eAAe,gBAAgB;AAAA,IACrF;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,YAAQ,MAAM;AAAA,WACP,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ,QAAQ;AAChB;AAAA,WAEG,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ;AACR;AAAA,WAEG,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ,QAAQ;AAChB;AAAA,WAEG,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ;AACR;AAAA,WAEG,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ,QAAQ;AAChB;AAAA,WAEG,MAAM,QAAQ;AACjB,gBAAQ;AACR,gBAAQ;AACR;AAAA,WAEG,MAAM,QAAQ;AAAA;AAGrB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,YAAU,sBAAsB,SAAU,OAAO;AAC/C,YAAQ;AAAA,WACD,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA,WAElB,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA,WAElB,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA,WAElB,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA,WAElB,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA,WAElB,QAAO;AACV,eAAO,MAAM,QAAQ;AAAA;AAGrB,eAAO,MAAM,QAAQ;AAAA;AAAA,EAE3B;AAGA,YAAU,oBAAoB,SAAU,SAAS;AAC/C,YAAQ;AAAA,WACD,MAAK;AACR,eAAO,MAAM,QAAQ;AAAA,WAElB,MAAK;AACR,eAAO,MAAM,QAAQ;AAAA,WAElB,MAAK;AACR,eAAO,MAAM,QAAQ;AAAA;AAGrB,eAAO,MAAM,QAAQ;AAAA;AAAA,EAE3B;AAGA,+BAA6B,UAAU,MAAM;AAC3C,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,QAAI,UAAU,CAAC;AACf,QAAI,WAAW,MAAM,QAAQ,MAAM,SAAS,MAAM;AAElD,QAAI,OAAO;AACT,kBAAY,MAAM;AAAA,IACpB;AAIA,QAAI,aAAa,cAAa,SAAS,MAAM,mBAAmB,MAAM,QAAQ,OAAO;AACnF,eAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,OAAO;AAC1C,YAAI,KAAK,MAAM;AACb,cAAI,WAAW,IAAI,aAAa,QAAQ;AAExC,mBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,qBAAS,KAAK,KAAK,KAAK;AAAA,UAC1B;AAEA,kBAAQ,KAAK,QAAQ;AAAA,QACvB,OAAO;AACL,kBAAQ,KAAK,IAAI;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAIA,QAAI,aAAa,cAAa,iBAAiB,MAAM,mBAAmB,MAAM,QAAQ,eAAe;AACnG,eAAS,OAAO,GAAG,OAAO,KAAK,QAAQ,QAAQ;AAC7C,YAAI,KAAK,OAAO;AACd,cAAI,YAAY,IAAI,WAAW,QAAQ;AAEvC,mBAAS,KAAK,GAAG,KAAK,UAAU,MAAM;AACpC,sBAAU,MAAM,KAAK,MAAM;AAAA,UAC7B;AAEA,kBAAQ,KAAK,SAAS;AAAA,QACxB,OAAO;AACL,kBAAQ,KAAK,IAAI;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAIA,QAAI,eAAe,MAAM,QAAQ,aAAa,wBAAwB;AACtE,QAAI,YAAY,MAAM,oBAAoB,UAAU,IAAI,MAAM,mBAAmB,MAAM,QAAQ,aAAa,gBAAgB,MAAM,mBAAmB,aAAa;AAElK,QAAI,WAAW;AACb,eAAS,QAAQ,GAAG,QAAQ,KAAK,QAAQ,SAAS;AAChD,YAAI,KAAK,QAAQ;AACf,cAAI,aAAa,IAAI,YAAY,QAAQ;AAEzC,mBAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,uBAAW,OAAO,UAAU,OAAO,KAAK,OAAO,IAAI;AAAA,UACrD;AAEA,kBAAQ,KAAK,UAAU;AAAA,QACzB,OAAO;AACL,kBAAQ,KAAK,IAAI;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAGA,QAAI,QAAQ,WAAW,GAAG;AACxB,eAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,OAAO;AAC1C,gBAAQ,KAAK,KAAK,IAAI;AAAA,MACxB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,2CAAyC,MAAM;AAC7C,QAAI,MAAM,oBAAoB,UAAU,GAAG;AAEzC,aAAO;AAAA,IACT;AAEA,QAAI,UAAU,CAAC;AACf,QAAI,QAAQ,MAAM;AAClB,QAAI,SAAS,MAAM;AACnB,QAAI,WAAW,MAAM;AAErB,QAAI,QAAS,EAAC,aAAa,KAAK,KAAK,CAAC,aAAa,MAAM,IAAI;AAE3D,UAAI,YAAY,MAAM,QAAQ,aAAa,wBAAwB;AACnE,UAAI,WAAW,kBAAkB,KAAK;AACtC,UAAI,YAAY,kBAAkB,MAAM;AACxC,UAAI,WAAW,WAAW,YAAY,MAAM;AAE5C,eAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,OAAO;AAC1C,YAAI,KAAK,SAAS,MAAM;AACtB,cAAI,WAAW;AACf,cAAI,UAAU,SAAS;AACvB,cAAI,UAAU,QAAQ;AACtB,cAAI,YAAY;AAEhB,cAAI,MAAM,mBAAmB,MAAM,QAAQ,OAAO;AAChD,uBAAW,IAAI,aAAa,QAAQ;AAAA,UACtC,WAAW,aAAa,MAAM,mBAAmB,UAAU,gBAAgB;AACzE,uBAAW,IAAI,YAAY,QAAQ;AACnC,wBAAY;AAAA,UACd,OAAO;AACL,uBAAW,IAAI,WAAW,QAAQ;AAAA,UACpC;AAEA,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAI,OAAO,IAAI,WAAW;AAC1B,gBAAI,OAAO,IAAI;AACf,gBAAI,OAAO,KAAK,MAAM,IAAI;AAC1B,gBAAI,MAAM,KAAK,KAAK,IAAI;AAExB,gBAAI,OAAO,QAAQ;AACjB,oBAAM,SAAS;AAAA,YACjB;AAEA,gBAAI,OAAO,OAAO;AAClB,gBAAI,QAAQ,IAAM;AAClB,mBAAO,OAAO,QAAQ;AACtB,kBAAM,MAAM,QAAQ;AAEpB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,kBAAI,OAAO,IAAI;AACf,kBAAI,OAAO,IAAI;AACf,kBAAI,OAAO,KAAK,MAAM,IAAI;AAC1B,kBAAI,MAAM,KAAK,KAAK,IAAI;AAExB,kBAAI,OAAO,OAAO;AAChB,sBAAM,QAAQ;AAAA,cAChB;AAEA,kBAAI,OAAO,OAAO;AAClB,sBAAQ;AACR,qBAAO;AAEP,uBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,oBAAI,WAAW;AACb,2BAAS,OAAO,OAAO,KAAK,UAAU,OAAO,UAAU,SAAS,KAAK,KAAK,OAAO,OAAO,EAAE,IAAI,QAAS,KAAM,QAAQ,UAAU,SAAS,KAAK,KAAK,OAAO,MAAM,EAAE,IAAI,QAAQ,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,OAAO,EAAE,IAAI,OAAQ,KAAM,QAAQ,UAAU,SAAS,KAAK,KAAK,MAAM,MAAM,EAAE,IAAI,OAAO,IAAI;AAAA,gBACtT,OAAO;AACL,2BAAS,OAAO,OAAO,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK,QAAS,KAAM,QAAQ,KAAK,KAAK,OAAO,MAAM,KAAK,QAAQ,OAAO,KAAK,KAAK,MAAM,OAAO,KAAK,OAAQ,KAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,OAAO;AAAA,gBACjN;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,kBAAQ,KAAK,QAAQ;AACrB,gBAAM,QAAQ;AACd,gBAAM,SAAS;AAAA,QACjB,OAAO;AACL,kBAAQ,KAAK,IAAI;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAGA,QAAI,QAAQ,WAAW,GAAG;AACxB,eAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,OAAO;AAC1C,gBAAQ,KAAK,KAAK,IAAI;AAAA,MACxB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,SAAU,OAAO,QAAQ,UAAU,UAAU,MAAM;AAC7E,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE/E,cAAU,kBAAkB,QAAQ;AACpC,cAAU,kBAAkB,UAAU,QAAQ;AAC9C,cAAU,UAAU,UAAU,QAAQ;AAEtC,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAE3B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,cAAc;AACxB,cAAU,KAAK;AAEf,QAAI,YAAY,CAAC,IAAI;AACrB,QAAI,UAAU,oBAAoB,UAAU,SAAS;AACrD,QAAI,aAAa,gCAAgC,OAAO;AAExD,UAAM,QAAQ,YAAY,MAAM,QAAQ,qBAAqB,IAAI;AACjE,UAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB,CAAC;AAC3D,UAAM,QAAQ,WAAW,MAAM,QAAQ,GAAG,MAAM,gBAAgB,MAAM,OAAO,MAAM,QAAQ,GAAG,MAAM,QAAQ,MAAM,gBAAgB,WAAW,EAAE;AAE/I,QAAI,MAAM,gBAAgB;AACxB,YAAM,QAAQ,eAAe,MAAM,MAAM;AAAA,IAC3C;AAGA,QAAI,MAAM;AACR,YAAM,QAAQ,YAAY,MAAM,QAAQ,qBAAqB,KAAK;AAAA,IACpE;AAEA,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAGA,YAAU,oBAAoB,SAAU,OAAO,QAAQ,UAAU,UAAU,MAAM;AAE/E,cAAU,kBAAkB,QAAQ;AACpC,cAAU,kBAAkB,UAAU,QAAQ;AAC9C,cAAU,UAAU,UAAU,QAAQ;AAEtC,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAE3B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,UAAM,WAAW,KAAK,SAAS,IAAI;AACnC,cAAU,cAAc;AACxB,cAAU,KAAK;AACf,QAAI,UAAU,oBAAoB,UAAU,IAAI;AAChD,QAAI,aAAa,gCAAgC,OAAO;AAIxD,QAAI,eAAe,CAAC;AACpB,QAAI,aAAa,MAAM;AACvB,QAAI,cAAc,MAAM;AAExB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,UAAI,IAAI,MAAM,KAAK,MAAM,GAAG;AAC1B,sBAAc;AACd,uBAAe;AAAA,MACjB;AAEA,mBAAa,KAAK,cAAc,UAAU,cAAc,aAAa,MAAM,UAAU;AAErF,eAAS,IAAI,GAAG,IAAI,aAAa,EAAE,GAAG;AACpC,YAAI,OAAO,IAAI,aAAa,MAAM;AAClC,YAAI,OAAQ,eAAc,IAAI,KAAK,aAAa,MAAM;AACtD,qBAAa,GAAG,IAAI,WAAW,GAAG,MAAM,MAAM,OAAO,aAAa,MAAM,UAAU,GAAG,IAAI;AAAA,MAC3F;AAAA,IACF;AAGA,UAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB,CAAC;AAE3D,aAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAEhC,UAAI,IAAI;AACR,UAAI,IAAI,MAAM;AACd,UAAI,IAAI,MAAM;AAEd,aAAO,KAAK,KAAK,KAAK,GAAG;AAIvB,YAAI,WAAW;AAEf,YAAI,KAAK,MAAM,UAAU;AACvB,qBAAW,aAAa,IAAI,IAAI;AAAA,QAClC;AAEA,cAAM,QAAQ,WAAW,MAAM,QAAQ,8BAA8B,KAAK,GAAG,MAAM,gBAAgB,GAAG,GAAG,GAAG,MAAM,QAAQ,MAAM,gBAAgB,QAAQ;AACxJ;AACA,aAAK;AACL,aAAK;AAAA,MACP;AAAA,IACF;AAIA,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAGA,YAAU,qBAAqB,SAAU,OAAO,QAAQ,UAAU,MAAM;AAEtE,cAAU,kBAAkB,QAAQ;AACpC,UAAM,SAAS,MAAM,QAAQ;AAE7B,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,UAAI,aAAa,cAAa,OAAO;AACnC,cAAM,iBAAiB,MAAM,QAAQ;AAAA,MACvC,OAAO;AACL,cAAM,iBAAiB,MAAM,QAAQ;AAAA,MACvC;AAAA,IACF,OAAO;AACL,YAAM,iBAAiB,MAAM,QAAQ;AAAA,IACvC;AAEA,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAE3B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,cAAc;AACxB,cAAU,KAAK;AAGf,UAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB,CAAC;AAC3D,UAAM,QAAQ,WAAW,MAAM,QAAQ,GAAG,MAAM,gBAAgB,MAAM,OAAO,MAAM,QAAQ,GAAG,MAAM,QAAQ,MAAM,gBAAgB,IAAI;AAEtI,QAAI,MAAM,gBAAgB;AACxB,YAAM,QAAQ,eAAe,MAAM,MAAM;AAAA,IAC3C;AAEA,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAGA,YAAU,oBAAoB,SAAU,OAAO;AAE7C,cAAU,kBAAkB,cAAa,aAAa;AACtD,cAAU,kBAAkB,cAAa,eAAe,CAAC;AACzD,cAAU,UAAU,cAAa,eAAe,CAAC;AAEjD,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ,MAAM;AACpB,UAAM,SAAS,MAAM;AACrB,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAE3B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,cAAc;AACxB,cAAU,KAAK;AAGf,UAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB,CAAC;AAE3D,QAAI,wBAAwB,CAAC,aAAa,MAAM,KAAK,KAAK,CAAC,aAAa,MAAM,MAAM;AACpF,QAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,WAAO,QAAQ,wBAAwB,kBAAkB,MAAM,KAAK,IAAI,MAAM;AAC9E,WAAO,SAAS,wBAAwB,kBAAkB,MAAM,MAAM,IAAI,MAAM;AAChF,QAAI,MAAM,OAAO,WAAW,IAAI;AAChC,QAAI,UAAU,GAAG,OAAO,MAAM;AAC9B,QAAI,MAAM,GAAG,EAAE;AACf,QAAI,UAAU,OAAO,GAAG,GAAG,MAAM,OAAO,MAAM,QAAQ,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AACvF,QAAI,YAAY;AAChB,UAAM,QAAQ,WAAW,MAAM,QAAQ,GAAG,MAAM,gBAAgB,MAAM,QAAQ,MAAM,gBAAgB,SAAS;AAE7G,QAAI,MAAM,gBAAgB;AACxB,YAAM,QAAQ,eAAe,MAAM,MAAM;AAAA,IAC3C;AAEA,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAEA,+BAA6B,UAAU,aAAa,MAAM;AAExD,QAAI,OAAM,CAAC;AACX,QAAI,OAAM,CAAC;AAEX,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,WAAI,KAAK,KAAK;AACd,WAAI,KAAK,KAAK;AAAA,IAChB;AAEA,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,aAAa,EAAE,GAAG;AACpC,eAAS,KAAK,GAAG,KAAK,UAAU,EAAE,IAAI;AACpC,YAAI,KAAK,SAAS,KAAI,KAAK;AACzB,eAAI,MAAM,KAAK;AAAA,QACjB;AAEA,YAAI,KAAK,SAAS,KAAI,KAAK;AACzB,eAAI,MAAM,KAAK;AAAA,QACjB;AAEA;AAAA,MACF;AAAA,IACF;AAEA,QAAI,SAAS,CAAC;AACd,QAAI,QAAQ,CAAC;AAEb,aAAS,MAAM,GAAG,MAAM,UAAU,EAAE,KAAK;AACvC,UAAI,KAAI,SAAS,KAAI,MAAM;AACzB,aAAI,OAAO,KAAI,OAAO;AAAA,MACxB;AAEA,aAAO,OAAO,KAAI;AAClB,YAAM,OAAO,KAAI,OAAO,KAAI;AAAA,IAC9B;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,6BAA2B,QAAQ,OAAO;AAExC,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,OAAM,OAAO;AACjB,UAAI,OAAM,MAAM,KAAK;AAErB,UAAI,OAAM,SAAS,OAAM,QAAQ,OAAM,SAAS,OAAM,MAAM;AAC1D,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,6BAA2B,UAAU,QAAQ,OAAO,wBAAwB;AAC1E,QAAI,mBAAmB;AACvB,cAAU,kBAAkB,UAAU,gBAAgB;AACtD,QAAI,eAAe,MAAM,QAAQ,aAAa,wBAAwB;AACtE,QAAI,eAAe,MAAM,oBAAoB,UAAU,IAAI,MAAM,mBAAmB,MAAM,QAAQ,aAAa,gBAAgB,MAAM,mBAAmB,aAAa;AAErK,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AAIA,QAAI,CAAC,kBAAkB,QAAQ,KAAK,KAAK,CAAC,wBAAwB;AAChE,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,SAAU,OAAO,QAAQ,OAAO,UAAU,UAAU,MAAM;AAEpF,QAAI,mBAAmB;AACvB,cAAU,kBAAkB,UAAU,gBAAgB;AAEtD,cAAU,kBAAkB,UAAU,QAAQ;AAC9C,cAAU,UAAU,UAAU,QAAQ;AAEtC,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAE3B,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,cAAc;AACxB,cAAU,KAAK;AAEf,QAAI,YAAY,CAAC,IAAI;AACrB,QAAI,YAAY;AAChB,QAAI,UAAU,oBAAoB,UAAU,WAAW,SAAS;AAChE,QAAI,aAAa,gCAAgC,OAAO;AAIxD,UAAM,QAAQ,WAAW,MAAM,QAAQ,GAAG,MAAM,gBAAgB,MAAM,OAAO,MAAM,QAAQ,MAAM,OAAO,GAAG,MAAM,QAAQ,MAAM,gBAAgB,WAAW,EAAE;AAE5J,QAAI,MAAM,gBAAgB;AACxB,YAAM,QAAQ,eAAe,MAAM,MAAM;AAAA,IAC3C;AAEA,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAIA,YAAU,4BAA4B,SAAU,OAAO,QAAQ,OAAO,UAAU,UAAU,MAAM;AAC9F,QAAI,yBAAyB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjG,QAAI,cAAc,QAAQ,SAAS;AAEnC,QAAI,SAAS,CAAC;AACd,QAAI,QAAQ,CAAC;AAEb,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,aAAO,KAAK;AACZ,YAAM,KAAK;AAAA,IACb;AAOA,UAAM,aAAa;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAGA,QAAI,uBAAuB,oBAAoB,UAAU,aAAa,IAAI,GACtE,iBAAiB,qBAAqB,QACtC,gBAAgB,qBAAqB;AAEzC,UAAM,WAAW,oBAAoB;AACrC,UAAM,WAAW,qBAAqB;AACtC,QAAI,eAAe,kBAAkB,UAAU,gBAAgB,eAAe,sBAAsB;AAEpG,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,UAAI,aAAa,cAAa,SAAS,gBAAiB,cAAa,cAAa,SAAS,aAAa,cAAa,iBAAiB;AACpI,eAAO,UAAU,gBAAgB,OAAO,QAAQ,OAAO,UAAU,UAAU,IAAI;AAAA,MACjF;AAEA,UAAI,aAAa,cAAa,eAAe;AAC3C,iBAAS,MAAM,GAAG,MAAM,UAAU,EAAE,KAAK;AACvC,gBAAM,WAAW,MAAM,OAAO;AAAA,QAChC;AAEA,eAAO,UAAU,gBAAgB,OAAO,QAAQ,OAAO,UAAU,UAAU,IAAI;AAAA,MACjF;AAGA,UAAI,aAAa,IAAI,aAAa,cAAc,QAAQ;AAGxD,YAAM,WAAW,SAAS;AAC1B,YAAM,WAAW,QAAQ;AACzB,UAAI,QAAQ;AACZ,UAAI,eAAe,cAAc,IAAI,SAAU,GAAG;AAChD,eAAO,IAAI;AAAA,MACb,CAAC;AAED,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,iBAAS,KAAK,GAAG,KAAK,UAAU,MAAM;AACpC,qBAAW,SAAU,MAAK,SAAS,eAAe,OAAO,aAAa;AACtE;AAAA,QACF;AAAA,MACF;AAEA,aAAO,UAAU,gBAAgB,OAAO,QAAQ,OAAO,UAAU,cAAa,OAAO,UAAU;AAAA,IACjG;AAKA,QAAI,MAAM,oBAAoB,UAAU,aAAa,IAAI;AAEzD,QAAI,cAAc,sBAAqB,UAAU,SAAQ,SAAS,MAAM,MAAM;AAC5E,eAAS,WAAU;AAAA,IACrB;AAEA,QAAI,gBAAgB,cAAa;AAEjC,QAAI,aAAa,cAAa,eAAe;AAC3C,eAAS,MAAM,GAAG,MAAM,UAAU,EAAE,KAAK;AACvC,YAAI,OAAO,OAAO;AAClB,YAAI,MAAM,OAAO;AAAA,MACnB;AAAA,IACF,WAAW,MAAM,QAAQ,aAAa,mBAAmB,KAAK,MAAM,QAAQ,aAAa,0BAA0B,GAAG;AAEpH,sBAAgB,cAAa;AAE7B,oBAAc,sBAAqB,UAAU,SAAQ,SAAS,SAAS,QAAQ;AAC7E,iBAAS,WAAW,WAAU,WAAW;AAAA,MAC3C;AAAA,IACF,OAAO;AAEL,sBAAgB,cAAa;AAE7B,oBAAc,sBAAqB,UAAU,SAAQ,SAAS,SAAS,QAAQ;AAC7E,iBAAS,WAAU,MAAS,WAAU,WAAW;AAAA,MACnD;AAAA,IACF;AAGA,cAAU,kBAAkB,aAAa;AACzC,cAAU,kBAAkB,eAAe,QAAQ;AACnD,cAAU,UAAU,eAAe,QAAQ;AAE3C,QAAI,CAAC,MAAM,kBAAkB,CAAC,MAAM,UAAU,CAAC,MAAM,gBAAgB;AACnE,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAGA,UAAM,SAAS,MAAM,QAAQ;AAC7B,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,qBAAqB;AAU3B,QAAI,YAAY,MAAM,QAAQ,aAAa,MAAM,QAAQ,gBAAgB;AAEzE,QAAI,YAAY,QAAS,mBAAkB,cAAa,SAAS,YAAY,IAAI;AAC/E,kBAAY;AAAA,IACd;AAGA,QAAI,UAAU;AACd,QAAI,UAAU;AAEd,QAAI,cAAc,YAAY,WAAW;AACvC,gBAAU,KAAK,KAAK,KAAK,KAAK,cAAe,aAAY,UAAU,CAAC;AACpE,gBAAU;AAAA,IACZ;AAEA,QAAI,cAAc,KAAK,KAAK,WAAW,IAAI;AAC3C,kBAAc,kBAAkB,WAAW;AAE3C,QAAI,QAAQ,KAAK,MAAM,cAAc,UAAU,KAAK;AACpD,QAAI,QAAQ,KAAK,KAAK,QAAQ,KAAK;AACnC,QAAI,eAAe,kBAAkB,SAAS,QAAQ,OAAO;AAC7D,UAAM,QAAQ;AACd,UAAM,SAAS;AAEf,UAAM,oBAAoB,gBAAgB,SAAS;AAEnD,cAAU,cAAc;AACxB,cAAU,KAAK;AAEf,UAAM,WAAW,QAAQ;AACzB,UAAM,WAAW,QAAQ;AACzB,UAAM,WAAW,UAAU;AAC3B,UAAM,WAAW,UAAU;AAC3B,UAAM,WAAW,SAAS,IAAI;AAC9B,UAAM,WAAW,QAAQ,IAAI;AAG7B,QAAI;AACJ,QAAI,WAAW,cAAc,eAAe;AAE5C,QAAI,kBAAkB,cAAa,OAAO;AACxC,iBAAW,IAAI,aAAa,QAAQ;AAAA,IACtC,OAAO;AACL,iBAAW,IAAI,WAAW,QAAQ;AAAA,IACpC;AAIA,QAAI,SAAS;AACb,QAAI,YAAY,KAAK,MAAM,QAAQ,OAAO;AAC1C,QAAI,aAAa,KAAK,MAAM,SAAS,OAAO;AAE5C,aAAS,OAAO,GAAG,OAAO,OAAO,QAAQ;AACvC,UAAI,eAAe,KAAK,IAAI,OAAO,QAAQ,OAAO,KAAK;AACvD,UAAI,eAAe,WAAY,OAAM,QAAQ,eAAe,KAAK,MAAM,QAAQ,OAAO;AAEtF,eAAS,QAAQ,GAAG,QAAQ,YAAY,SAAS;AAC/C,iBAAS,OAAO,GAAG,OAAO,cAAc,QAAQ;AAC9C,cAAI,WAAW,WAAa,SAAO,QAAQ,QAAQ,QAAQ,SAAS,UAAU,QAAQ;AAEtF,mBAAS,QAAQ,GAAG,QAAQ,WAAW,SAAS;AAE9C,qBAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,0BAAY,UAAU,QAAQ,KAAK,WAAW,UAAU,QAAQ,WAAW,MAAM,IAAI,OAAO,MAAM,IAAI,MAAM,IAAI;AAChH;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,kBAAU;AAAA,MACZ;AAAA,IACF;AAIA,UAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB,CAAC;AAC3D,UAAM,QAAQ,WAAW,MAAM,QAAQ,GAAG,MAAM,gBAAgB,MAAM,OAAO,MAAM,QAAQ,GAAG,MAAM,QAAQ,MAAM,gBAAgB,QAAQ;AAC1I,cAAU,WAAW;AACrB,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,SAAU,IAAI;AAC9C,QAAI,MAAM,wBAAwB,IAAI;AACpC;AAAA,IACF;AAEA,cAAU,yBAAyB;AACnC,UAAM,sBAAsB;AAC5B,UAAM,UAAU;AAEhB,QAAI,IAAI;AACN,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AAGA,YAAU,wBAAwB,SAAU,KAAK;AAC/C,QAAI,OAAO,IAAI,UAAU,GAAG;AAC1B,aAAO,IAAI,YAAY,IAAI,gBAAgB;AAAA,IAC7C;AAEA,WAAO;AAAA,EACT;AACF;AAgCA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,qBAAqB,CAAC;AAC5B,MAAI,MAAM,oBAAoB;AAAA,IAC5B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,mBAAmB,CAAC;AAC1B,MAAI,MAAM,kBAAkB;AAAA,IAC1B,OAAO;AAAA,EACT,CAAC;AAED,MAAI,WAAW,OAAO,CAAC,UAAU,gBAAgB,CAAC;AAClD,SAAO,WAAW,OAAO,CAAC,iBAAiB,sBAAsB,uBAAuB,SAAS,SAAS,SAAS,gBAAgB,CAAC;AACpI,MAAI,WAAW,OAAO,CAAC,SAAS,UAAU,cAAc,cAAc,UAAU,QAAQ,CAAC;AAEzF,mBAAiB,WAAW,KAAK;AACnC;AA/zCA,IAYI,OACA,SACA,eACA,gBACA,iBACA,kBAgwCA,kBAgDA,eAEA;AAn0CJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,QAAO,WAAU;AAArB,IACI,UAAS,WAAU;AACvB,IAAI,gBAAe,eAAa;AAChC,IAAI,iBAAgB;AAApB,IACI,kBAAgB;AADpB,IAEI,mBAAkB;AAgwCtB,IAAI,mBAAiB;AAAA,MACnB,qBAAqB;AAAA,MACrB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,OAAO,MAAK;AAAA,MACZ,OAAO,MAAK;AAAA,MACZ,OAAO,MAAK;AAAA,MACZ,oBAAoB,QAAO;AAAA,MAC3B,qBAAqB,QAAO;AAAA,MAC5B,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AAuBA,IAAI,gBAAc,YAAc,UAAQ,kBAAkB;AAE1D,IAAI,qBAAqB,gBAAc;AAAA,MACrC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,UAAS;AAEZ,qBAAiB,cAAc,aAAW;AAAA;AAAA;;;ACx0C1C,IAAI;AAAJ;AAAA;AAAA,IAAI,qBAAoB;AAAA,MACtB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACHA,IAAI;AAAJ;AAAA;AAAA,IAAI,gBAAgB;AAAA;AAAA;;;ACApB,IAAI;AAAJ;AAAA;AAAA,IAAI,gBAAgB;AAAA;AAAA;;;ACEpB,gDAAgD,WAAW,OAAO;AAEhE,YAAU,gCAAgC,SAAU,SAAS,KAAK,OAAO;AACvE,QAAI,KAAK,UAAU,wBAAwB,KAAK,KAAK;AAMrD,QAAI,MAAO,IAAG,WAAW,KAAO,GAAG,WAAW,IAAM;AAClD,UAAI,WAAW,QAAQ;AACvB,iBAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,0BAA0B,wBAAwB,CAAC,EAAE;AAEjI,UAAI,MAAM,QAAQ,aAAa,gBAAgB,GAAG;AAChD,YAAI,GAAG,WAAW,GAAK;AACrB,qBAAW,mBAAiB,WAAW,UAAU,4BAA4B,CAAC,2EAA2E,0BAA0B,GAAG,KAAK,EAAE;AAC7L,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,uEAAuE,EAAE;AAAA,QAClJ,OAAO;AACL,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,sDAAsD,EAAE;AAAA,QACjI;AAAA,MACF;AAEA,UAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,YAAI,GAAG,WAAW,GAAK;AACrB,qBAAW,mBAAiB,WAAW,UAAU,4BAA4B,CAAC,2EAA2E,0BAA0B,GAAG,KAAK,EAAE;AAC7L,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,oEAAoE,EAAE;AAAA,QAC/I,OAAO;AACL,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,mDAAmD,EAAE;AAAA,QAC9H;AAAA,MACF;AAEA,cAAQ,WAAW;AAAA,IACrB;AAAA,EACF;AACF;AApCA,IAsCI;AAtCJ;AAAA;AAAA;AAsCA,IAAI,6BAA6B;AAAA,MAC/B;AAAA,IACF;AAAA;AAAA;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,2BAA2B,UAAU,IAAI,oBAAoB;AAC3D,MAAI,QAAQ,GAAG,MAAM,QAAQ;AAE7B,MAAI,OAAO;AACT,QAAI,SAAS,SAAS,yBAAyB;AAC/C,WAAO,GAAG,OAAO,SAAS,SAAS,GAAG,GAAG,EAAE,OAAO,QAAQ,GAAG,EAAE,OAAO,kBAAkB;AAAA,EAC1F;AAEA,SAAO;AACT;AAKA,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,oBAAoB;AAC1B,YAAM,mBAAmB,UAAU,uBAAuB,qBAAqB;AAC/E,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,sBAAsB,MAAM,eAAe,UAAU;AAC3D,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,YAAM,KAAK,sBAAsB,MAAM,mBAAmB;AAC1D,YAAM,cAAc,sBAAsB,MAAM,mBAAmB;AACnE,YAAM,aAAa,sBAAsB,MAAM,mBAAmB;AAClE,YAAM,WAAW,sBAAsB,MAAM,mBAAmB;AAChE,UAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,YAAM,eAAe,MAAM,eAAe,eAAe,IAAI,gBAAgB,CAAC;AAE9E,UAAI,MAAM,WAAW,qBAAqB,GAAG;AAC3C,cAAM,WAAW,mBAAmB,IAAI,gBAAgB,CAAC;AAAA,MAC3D;AAAA,IACF;AAAA,EACF;AAEA,YAAU,kBAAkB,SAAU,SAAS,YAAY;AACzD,QAAI,SAAS;AACX,YAAM,oBAAoB;AAC1B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS;AAC/C,QAAI,SAAS;AACX,YAAM,uBAAuB;AAC7B,YAAM,cAAc;AACpB,gBAAU,OAAO;AACjB,YAAM,cAAc;AAAA,IACtB;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AACX,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,0BAA0B,SAAU,KAAK,OAAO;AACxD,QAAI,MAAM,WAAW,6BAA6B,GAAG;AACnD,aAAO,MAAM,WAAW,6CAA6C;AAAA,IACvE;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,SAAS,WAAY;AAC7B,QAAI,QAAQ,MAAM,iBAAiB,cAAc;AACjD,QAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,cAAU,YAAY,KAAK,KAAK;AAAA,EAClC;AAEA,YAAU,eAAe,SAAU,SAAS,KAAK,OAAO;AACtD,cAAU,kBAAkB,SAAS,KAAK,KAAK;AAE/C,QAAI,MAAM,iCAAiC;AACzC,YAAM,gCAAgC,OAAO;AAAA,IAC/C;AAEA,cAAU,oBAAoB,SAAS,KAAK,KAAK;AAAA,EACnD;AAEA,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,0BAA0B,CAAC,EAAE;AACrG,eAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,wCAAwC,CAAC,EAAE;AACxH,eAAW,mBAAiB,WAAW,UAAU,uBAAuB,8BAA8B,EAAE;AACxG,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,yDAAyD,EAAE;AAClI,QAAI,WAAW,MAAM,cAAc,cAAc;AACjD,QAAI,SAAS,MAAM,YAAY,EAAE,yBAAyB;AAC1D,QAAI,YAAY;AAAA,MAAC;AAAA,MACjB;AAAA,MAA0B;AAAA,MAC1B;AAAA,MAA4B;AAAA,MAA4B;AAAA,MAA+B;AAAA,MAAoC;AAAA,MAAkC;AAAA,IAAwB;AAErL,QAAI,QAAQ;AACV,eAAS,OAAO,GAAG,OAAO,UAAU,QAAQ;AAC1C,oBAAY,UAAU,OAAO;AAAA,UAC7B,uBAAuB,OAAO,MAAM,GAAG;AAAA,UAAG,uBAAuB,OAAO,MAAM,GAAG;AAAA,UACjF,yBAAyB,OAAO,MAAM,GAAG;AAAA,UAAG,yBAAyB,OAAO,MAAM,GAAG;AAAA,QAAC,CAAC;AAAA,MACzF;AAOA,cAAQ;AAAA,aACD;AACH,sBAAY,UAAU,OAAO,CAAC,uBAAuB,qBAAqB,CAAC;AAC3E;AAAA,aAEG;AACH,sBAAY,UAAU,OAAO,CAAC,uBAAuB,uBAAuB,wBAAwB,sBAAsB,CAAC;AAC3H;AAAA,aAEG;AACH,sBAAY,UAAU,OAAO,CAAC,uBAAuB,uBAAuB,uBAAuB,wBAAwB,uBAAuB,sBAAsB,CAAC;AACzK;AAAA,aAEG;AACH,sBAAY,UAAU,OAAO,CAAC,uBAAuB,uBAAuB,uBAAuB,uBAAuB,yBAAyB,yBAAyB,yBAAyB,uBAAuB,CAAC;AAC7N;AAAA;AAGA,0BAAc,gDAAgD;AAAA;AAAA,IAEpE;AAEA,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,SAAS,EAAE;AAElF,QAAI,QAAQ;AACV,UAAI,OAAO,CAAC,KAAK,KAAK,KAAK,GAAG;AAC9B,UAAI,aAAa,CAAC,sDAAsD;AAExE,eAAS,QAAQ,GAAG,QAAQ,UAAU,SAAS;AAC7C,qBAAa,WAAW,OAAO,CAAC,cAAc,OAAO,OAAO,QAAQ,EAAE,OAAO,OAAO,0CAA0C,EAAE,OAAO,KAAK,QAAQ,WAAW,EAAE,OAAO,OAAO,WAAW,EAAE,OAAO,OAAO,UAAU,EAAE,OAAO,OAAO,SAAS,GAAG,mBAAmB,OAAO,OAAO,QAAQ,EAAE,OAAO,OAAO,wCAAwC,EAAE,OAAO,KAAK,QAAQ,aAAa,EAAE,OAAO,OAAO,aAAa,EAAE,OAAO,OAAO,UAAU,EAAE,OAAO,OAAO,OAAO,CAAC,CAAC;AAAA,MACtc;AAEA,cAAQ;AAAA,aACD;AACH,uBAAa,WAAW,OAAO,CAAC,8CAA8C,CAAC;AAC/E;AAAA,aAEG;AACH,uBAAa,WAAW,OAAO,CAAC,gDAAgD,8HAA8H,CAAC;AAC/M;AAAA,aAEG;AACH,uBAAa,WAAW,OAAO,CAAC,8DAA8D,0KAA0K,CAAC;AACzQ;AAAA,aAEG;AACH,uBAAa,WAAW,OAAO,CAAC,4EAA4E,sNAAsN,CAAC;AACnU;AAAA;AAGA,0BAAc,gDAAgD;AAAA;AAGlE,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,UAAU,EAAE;AAAA,IACtF,OAAO;AAEL,cAAQ;AAAA,aACD;AACH,qBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,8DAA8D,yFAAyF,iGAAiG,yDAAyD,CAAC,EAAE;AAC7X;AAAA,aAEG;AACH,qBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,wDAAwD,iDAAiD,4GAA4G,CAAC,EAAE;AACjS;AAAA;AAGA,qBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,6EAA6E,yEAAyE,qDAAqD,8DAA8D,CAAC,EAAE;AAAA;AAAA,IAE3V;AAEA,QAAI,MAAM,sBAAsB;AAC9B,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,2BAA2B,EAAE;AACrG,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,4BAA4B,mDAAmD,qCAAqC,mCAAmC,4CAA4C,CAAC,EAAE;AAAA,IAClR;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,cAAU,kBAAkB,SAAS,KAAK,KAAK;AAC/C,cAAU,8BAA8B,SAAS,KAAK,KAAK;AAAA,EAC7D;AAEA,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AAEvB,QAAI,MAAM,WAAW,0BAA0B,GAAG;AAChD,UAAI,gBAAgB,MAAM,WAAW,0BAA0B;AAE/D,UAAI,gBAAgB,GAAG;AACrB,sBAAgB,yCAAyC;AACzD,wBAAgB;AAAA,MAClB;AAEA,iBAAW,mBAAiB,WAAW,UAAU,oBAAoB,CAAC,8BAA8B,+BAA+B,yCAAyC,CAAC,EAAE;AAC/K,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,oDAAoD,SAAS,sCAAsC,aAAa,kBAAkB,aAAa,8EAA8E,OAAO,CAAC,EAAE;AAC9S,iBAAW,mBAAiB,WAAW,UAAU,oBAAoB,CAAC,8BAA8B,yCAAyC,CAAC,EAAE;AAChJ,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,oDAAoD,SAAS,sCAAsC,aAAa,kBAAkB,aAAa,2DAA2D,OAAO,CAAC,EAAE;AAAA,IAC7R;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,0BAA0B,SAAU,QAAQ,KAAK,OAAO;AAMhE,QAAI,WAAW,MAAM,cAAc,cAAc;AACjD,QAAI,QAAQ,MAAM,YAAY,EAAE,yBAAyB;AAEzD,QAAI,cAAc;AAElB,QAAI,CAAC,MAAM,qBAAqB,MAAM,iCAAiC;AACrE,oBAAc;AACd,YAAM,kCAAkC;AAAA,IAC1C;AAEA,QAAI,MAAM,qBAAqB,MAAM,kBAAkB,qBAAqB,MAAM,MAAM,iCAAiC;AACvH,YAAM,kCAAkC,MAAM,kBAAkB,qBAAqB;AACrF,oBAAc;AAAA,IAChB;AAEA,QAAI,eAAe,MAAM,6BAA6B,MAAM,wBAAwB,OAAO,WAAW,MAAM,KAAK,MAAM,0BAA0B,YAAY,MAAM,8BAA8B,OAAO;AACtM,YAAM,2BAA2B,MAAM;AACvC,YAAM,wBAAwB;AAC9B,YAAM,4BAA4B;AAClC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,QAAQ,KAAK,OAAO;AACtD,UAAM,cAAc;AAEpB,QAAI,UAAU,wBAAwB,QAAQ,KAAK,KAAK,GAAG;AACzD,UAAI,UAAU;AAAA,QACZ,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AACA,gBAAU,aAAa,SAAS,KAAK,KAAK;AAE1C,UAAI,YAAY,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ;AAGrI,UAAI,cAAc,OAAO,WAAW,GAAG;AACrC,eAAO,WAAW,SAAS;AAE3B,eAAO,OAAO,EAAE,yBAAyB;AAAA,MAC3C;AAEA,aAAO,oBAAoB,EAAE,SAAS;AAAA,IACxC,OAAO;AACL,YAAM,oBAAoB,eAAe,EAAE,mBAAmB,OAAO,WAAW,CAAC;AAAA,IACnF;AAEA,WAAO,OAAO,EAAE,KAAK;AACrB,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,4BAA4B,QAAQ,KAAK,KAAK;AAAA,EAC1D;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAElE,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,eAAe,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,IAAI;AACnM,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACnD,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,MAAM,QAAQ,KAAK,GAAG;AACxM,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,KAAK,OAAO,QAAQ,EAAE,gBAAgB,GAAG;AACzF,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,OAAO,QAAQ,EAAE,oBAAoB,GAAG,MAAM,QAAQ,KAAK,GAAG;AAC7O,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF;AAEA,aAAO,uBAAuB,EAAE,SAAS;AAAA,IAC3C;AAEA,QAAI,UAAU,MAAM,cAAc,eAAe;AACjD,WAAO,WAAW,EAAE,YAAY,YAAY,OAAO;AACnD,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,QAAI,SAAS,MAAM,YAAY,EAAE,yBAAyB;AAE1D,QAAI,QAAQ;AACV,eAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAChC,eAAO,WAAW,EAAE,YAAY,MAAM,OAAO,CAAC,GAAG,MAAM,YAAY,EAAE,mBAAmB,CAAC,CAAC;AAAA,MAC5F;AAAA,IACF;AAEA,QAAI,gBAAgB,MAAM,cAAc,iBAAiB;AAGzD,aAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACnC,UAAI,KAAK,MAAM,YAAY,EAAE,eAAe;AAC5C,UAAI,KAAK,MAAM,YAAY,EAAE,cAAc;AAC3C,UAAI,SAAS,SAAS,KAAK;AAC3B,UAAI,OAAO,MAAM,YAAY,EAAE,uBAAuB,MAAM;AAE5D,UAAI,QAAQ,MAAM,YAAY,EAAE,6BAA6B,GAAG;AAC9D,YAAI,SAAS,KAAK,SAAS;AAC3B,aAAK,OAAO,KAAK,OAAO;AACxB,aAAK,MAAO,QAAO,KAAK,OAAO;AAAA,MACjC;AAEA,UAAI,QAAQ,cAAc,QAAQ;AAClC,UAAI,QAAS,eAAc,QAAQ,MAAM,KAAK;AAC9C,aAAO,WAAW,EAAE,YAAY,SAAS,OAAO,EAAE,GAAG,KAAK;AAC1D,aAAO,WAAW,EAAE,YAAY,SAAS,OAAO,EAAE,GAAG,KAAK;AAAA,IAC5D;AAGA,aAAS,MAAM,GAAG,MAAM,SAAS,OAAO;AACtC,UAAI,WAAW;AACf,UAAI,WAAW;AAEf,UAAI,UAAU,SAAS,MAAM;AAE7B,UAAI,QAAQ,MAAM,YAAY,EAAE,qBAAqB,OAAO;AAE5D,UAAI,OAAO;AACT,YAAI,WAAW,MAAM,SAAS;AAC9B,YAAI,SAAS,SAAS,KAAK,SAAS;AACpC,YAAI,MAAM,MAAO,UAAS,KAAK,SAAS;AACxC,mBAAW,cAAc,QAAQ;AACjC,mBAAY,eAAc,QAAQ,OAAO,SAAS;AAAA,MACpD;AAEA,aAAO,WAAW,EAAE,YAAY,WAAW,OAAO,GAAG,GAAG,QAAQ;AAChE,aAAO,WAAW,EAAE,YAAY,WAAW,OAAO,GAAG,GAAG,QAAQ;AAAA,IAClE;AAEA,QAAI,MAAM,sBAAsB;AAC9B,aAAO,WAAW,EAAE,YAAY,gBAAgB,MAAM,cAAc,IAAI,CAAC;AAAA,IAC3E;AAGA,QAAI,OAAO,WAAW,EAAE,cAAc,SAAS,GAAG;AAChD,UAAI,KAAK,UAAU,wBAAwB,KAAK,KAAK;AACrD,aAAO,WAAW,EAAE,YAAY,WAAW,GAAG,MAAM;AAEpD,UAAI,OAAO,WAAW,EAAE,cAAc,SAAS,GAAG;AAChD,eAAO,WAAW,EAAE,YAAY,WAAW,GAAG,MAAM;AAAA,MACtD;AAAA,IACF;AAEA,QAAI,eAAe,MAAM,aAAa,eAAe;AACrD,WAAO,WAAW,EAAE,YAAY,iBAAiB,YAAY;AAC7D,QAAI,iBAAiB,MAAM,WAAW,eAAe;AACrD,WAAO,WAAW,EAAE,YAAY,eAAe,cAAc;AAE7D,QAAI,MAAM,WAAW,0BAA0B,GAAG;AAEhD,UAAI,gBAAgB,MAAM,WAAW,0BAA0B;AAE/D,UAAI,gBAAgB,GAAG;AACrB,sBAAgB,yCAAyC;AACzD,wBAAgB;AAAA,MAClB;AAEA,UAAI,QAAQ,MAAM;AAClB,UAAI,UAAU,MAAM,gBAAgB;AACpC,UAAI,oBAAoB,OAAO,QAAQ,EAAE,6BAA6B;AACtE,UAAI,0BAA0B,oBAAoB,OAAO,QAAQ,EAAE,8BAA8B,IAAI;AACrG,UAAI,MAAM,0BAA0B,aAAK,KAAK,MAAM,aAAa,MAAM,UAAU,CAAC,IAAI,MAAM,UAAU;AAEtG,UAAI,yBAAyB;AAC3B,qBAAK,UAAU,KAAK,GAAG;AACvB,qBAAK,SAAS,KAAK,KAAK,uBAAuB;AAC/C,qBAAK,UAAU,KAAK,GAAG;AAAA,MACzB;AAEA,mBAAK,SAAS,MAAM,aAAa,KAAK,OAAO;AAC7C,UAAI,iBAAiB,CAAC;AAEtB,eAAS,MAAM,GAAG,MAAM,eAAe,OAAO;AAC5C,YAAI,gBAAgB,CAAC;AACrB,cAAM,WAAW,6BAA6B,MAAM,aAAa,KAAK,aAAa;AAEnF,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,yBAAe,KAAK,cAAc,EAAE;AAAA,QACtC;AAAA,MACF;AAEA,aAAO,WAAW,EAAE,YAAY,iBAAiB,aAAa;AAC9D,aAAO,WAAW,EAAE,cAAc,cAAc,cAAc;AAAA,IAChE;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,UAAU,MAAM,iBAAiB,eAAe;AACpD,QAAI,QAAQ,MAAM;AAClB,QAAI,UAAU,MAAM,gBAAgB;AACpC,iBAAK,SAAS,MAAM,UAAU,QAAQ,MAAM,OAAO;AACnD,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,iBAAK,SAAS,MAAM,UAAU,QAAQ,MAAM,MAAM,QAAQ;AAE1D,QAAI,OAAO,QAAQ,EAAE,6BAA6B,GAAG;AACnD,UAAI,uBAAuB,OAAO,QAAQ,EAAE,8BAA8B;AAC1E,mBAAK,SAAS,MAAM,UAAU,MAAM,UAAU,oBAAoB;AAAA,IACpE;AAEA,YAAQ,iBAAiB,cAAc,MAAM,QAAQ;AAAA,EACvD;AAEA,YAAU,8BAA8B,SAAU,QAAQ,KAAK,OAAO;AACpE,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,OAAO,MAAM,YAAY;AAC7B,QAAI,UAAU,KAAK,WAAW;AAC9B,YAAQ,YAAY,WAAW,OAAO;AAAA,EACxC;AAEA,YAAU,mBAAmB,SAAU,KAAK,OAAO;AAEjD,cAAU,oBAAoB,KAAK,KAAK;AAExC,UAAM,cAAc;AAAA,EACtB;AAEA,YAAU,kBAAkB,SAAU,KAAK,OAAO;AAChD,QAAI,KAAK,MAAM;AAEf,UAAM,cAAc,SAAS;AAC7B,UAAM,aAAa,SAAS;AAC5B,UAAM,WAAW,SAAS;AAE1B,QAAI,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG;AAE1C,gBAAU,cAAc,MAAM,MAAM,KAAK,KAAK;AAC9C,SAAG,WAAW,GAAG,WAAW,GAAG,MAAM,KAAK,QAAQ,EAAE,gBAAgB,CAAC;AACrE,YAAM,KAAK,OAAO,EAAE,QAAQ;AAAA,IAC9B;AAEA,UAAM,cAAc,WAAW;AAC/B,UAAM,aAAa,WAAW;AAC9B,UAAM,WAAW,WAAW;AAAA,EAC9B;AAEA,YAAU,oBAAoB,SAAU,KAAK,OAAO;AAAA,EAAC;AAErD,YAAU,cAAc,SAAU,KAAK,OAAO;AAK5C,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AACD,UAAM,WAAW,OAAO;AACxB,UAAM,eAAe,MAAM,WAAW,aAAa;AACnD,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,WAAW;AACzB;AAAA,IACF;AAEA,cAAU,iBAAiB,KAAK,KAAK;AACrC,cAAU,gBAAgB,KAAK,KAAK;AACpC,cAAU,kBAAkB,KAAK,KAAK;AAAA,EACxC;AAEA,YAAU,gBAAgB,SAAU,KAAK,OAAO;AAC9C,QAAI,CAAC,UAAU,SAAS,GAAG;AACzB,yBAAmB,MAAM,MAAM;AAC/B;AAAA,IACF;AAEA,UAAM,SAAS,UAAU,SAAS,EAAE,UAAU;AAAA,EAChD;AAEA,YAAU,sBAAsB,SAAU,KAAK,OAAO;AAEpD,QAAI,UAAU,8BAA8B,KAAK,KAAK,GAAG;AACvD,gBAAU,mBAAmB,KAAK,KAAK;AAAA,IACzC;AAAA,EACF;AAEA,YAAU,gCAAgC,SAAU,KAAK,OAAO;AAE9D,QAAI,MAAM,aAAa,SAAS,IAAI,UAAU,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,WAAW,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,YAAY,EAAE,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,aAAa,SAAS,GAAG;AAC9S,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,QAAQ,MAAM;AAElB,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,QAAI,aAAa,MAAM,aAAa,KAAK,MAAM,aAAa,EAAE,WAAW;AAEzE,QAAI,CAAC,YAAY;AACf;AAAA,IACF;AAEA,QAAI,gBAAgB,MAAM,YAAY;AAEtC,QAAI,QAAQ,cAAc,qBAAqB;AAE/C,QAAI,UAAU,mBAAkB,SAAS;AACvC,YAAM,aAAa,sBAAsB,OAAO,OAAO;AACvD,YAAM,aAAa,uBAAuB,OAAO,OAAO;AACxD,YAAM,WAAW,sBAAsB,OAAO,OAAO;AACrD,YAAM,WAAW,uBAAuB,OAAO,OAAO;AAAA,IACxD,OAAO;AACL,YAAM,aAAa,sBAAsB,OAAO,MAAM;AACtD,YAAM,aAAa,uBAAuB,OAAO,MAAM;AACvD,YAAM,WAAW,sBAAsB,OAAO,MAAM;AACpD,YAAM,WAAW,uBAAuB,OAAO,MAAM;AAAA,IACvD;AAEA,QAAI,UAAU,WAAW,sBAAsB;AAC/C,QAAI,SAAS,cAAc,yBAAyB;AACpD,QAAI,YAAY,SAAS,UAAU;AACnC,QAAI,gBAAgB,SAAS,IAAI,YAAY;AAC7C,QAAI,eAAe,kBAAkB,eAAe,cAAc,wBAAwB,SAAS;AAEnG,QAAI,MAAM,uBAAuB,cAAc;AAC7C,UAAI,SAAS;AACb,UAAI,QAAQ,SAAS,gBAAgB;AACrC,UAAI,SAAS,IAAI,WAAW,KAAK;AACjC,UAAI,OAAO,cAAc,uBAAuB;AAEhD,UAAI,MAAM;AACR,YAAI,WAAW,IAAI,aAAa,SAAS,CAAC;AAE1C,iBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,iBAAO,cAAc,uBAAuB,CAAC;AAC7C,cAAI,SAAS,KAAK,SAAS;AAC3B,eAAK,SAAS,OAAO,IAAI,OAAO,IAAI,QAAQ,UAAU,CAAC;AAEvD,cAAI,QAAQ;AACV,qBAAS,IAAI,GAAG,IAAI,SAAS,GAAG,KAAK;AACnC,qBAAO,IAAI,SAAS,IAAI,KAAK,MAAQ,SAAS;AAC9C,qBAAO,IAAI,SAAS,IAAI,IAAI,SAAS,KAAK,MAAQ,SAAS;AAAA,YAC7D;AAAA,UACF,OAAO;AACL,qBAAS,MAAM,GAAG,MAAM,SAAS,GAAG,OAAO;AACzC,qBAAO,IAAI,SAAS,IAAI,OAAO,MAAQ,SAAS;AAAA,YAClD;AAAA,UACF;AAAA,QACF;AAEA,cAAM,aAAa,gBAAgB,QAAQ,eAAe,GAAG,aAAa,eAAe,MAAM;AAAA,MACjG,OAAO;AACL,iBAAS,MAAM,GAAG,MAAM,SAAS,GAAG,EAAE,KAAK;AACzC,iBAAO,OAAO,MAAQ,MAAQ,WAAS,KAAK;AAC5C,iBAAO,MAAM,KAAK,MAAQ,MAAQ,WAAS,KAAK;AAChD,iBAAO,MAAM,KAAK,MAAQ,MAAQ,WAAS,KAAK;AAAA,QAClD;AAEA,cAAM,aAAa,gBAAgB,QAAQ,GAAG,GAAG,aAAa,eAAe,MAAM;AAAA,MACrF;AAEA,YAAM,qBAAqB;AAAA,IAC7B;AAKA,QAAI,gBAAgB,kBAAkB,eAAe,cAAc,sBAAsB,SAAS;AAElG,QAAI,MAAM,qBAAqB,eAAe;AAC5C,UAAI,WAAW;AACf,UAAI,UAAU,WAAW;AACzB,UAAI,WAAW,IAAI,WAAW,OAAO;AACrC,UAAI,QAAQ,cAAc,qBAAqB;AAE/C,YAAM,WAAW,mBAAmB;AAEpC,UAAI,OAAO;AACT,YAAI,gBAAgB,IAAI,aAAa,OAAO;AAE5C,YAAI,YAAY,IAAI,aAAa,QAAQ;AAEzC,iBAAS,KAAK,GAAG,KAAK,WAAW,EAAE,IAAI;AACrC,kBAAQ,cAAc,qBAAqB,EAAE;AAE7C,cAAI,UAAU,MAAM;AAElB,0BAAc,KAAK,CAAG;AAAA,UACxB,OAAO;AACL,gBAAI,WAAW,MAAM,SAAS;AAC9B,kBAAM,SAAS,SAAS,IAAI,SAAS,IAAI,UAAU,WAAW,CAAC;AAE/D,gBAAI,QAAQ;AACV,uBAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,8BAAc,KAAK,WAAW,IAAI,OAAO,UAAU;AACnD,8BAAc,KAAK,WAAW,IAAI,MAAM,YAAY,UAAU;AAAA,cAChE;AAAA,YACF,OAAO;AACL,uBAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,8BAAc,KAAK,WAAW,IAAI,OAAO,UAAU;AAAA,cACrD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,cAAM,WAAW,gBAAgB,UAAU,eAAe,GAAG,aAAa,OAAO,aAAa;AAAA,MAChG,OAAO;AAEL,iBAAS,KAAK,GAAK;AACnB,cAAM,WAAW,gBAAgB,UAAU,GAAG,GAAG,aAAa,eAAe,QAAQ;AAAA,MACvF;AAEA,YAAM,mBAAmB;AAAA,IAC3B;AAGA,QAAI,wBAAwB,MAAM,WAAW,kBAAkB,GAC3D,UAAU,sBAAsB;AAGpC,QAAI,QAAQ,MAAM,WAAW,SAAS;AAEtC,QAAI,YAAY,MAAM,WAAW,eAAe,GAAG;AAEjD,cAAQ,MAAM,WAAW,mBAAmB,KAAK;AAAA,IACnD;AAEA,QAAI,SAAS,KAAK,MAAM,KAAK;AAE7B,QAAI,MAAM,MAAM,UAAU;AAC1B,QAAI;AAEJ,QAAI,YAAY,aAAY,GAAG;AAC7B,oBAAc,SAAS,IAAI;AAAA,IAC7B;AAEA,QAAI,YAAY,aAAY,GAAG;AAC7B,oBAAc,SAAS,IAAI;AAAA,IAC7B;AAEA,QAAI,YAAY,aAAY,KAAK,YAAY,aAAY,MAAM;AAC7D,oBAAc,SAAS,IAAI;AAAA,IAC7B;AAGA,QAAI,WAAW,GAAG,OAAO,OAAO,GAAG,EAAE,OAAO,MAAM,SAAS,GAAG,GAAG,EAAE,OAAO,WAAW,SAAS,GAAG,GAAG,EAAE,OAAO,UAAU,SAAS,GAAG,GAAG,EAAE,OAAO,MAAM,WAAW,eAAe,GAAG,GAAG,EAAE,OAAO,MAAM,YAAY,EAAE,SAAS,CAAC;AAE5N,QAAI,MAAM,mBAAmB,UAAU;AAErC,UAAI,OAAO,MAAM,cAAc;AAE/B,UAAI,UAAU,mBAAkB,SAAS;AACvC,YAAI,YAAY,GAAG;AACjB,gBAAM,cAAc,kBAAkB,IAAI;AAC1C,gBAAM,cAAc,sBAAsB,OAAO,OAAO;AAAA,QAC1D,OAAO;AACL,gBAAM,cAAc,sBAAsB,OAAO,OAAO;AAAA,QAC1D;AAEA,cAAM,cAAc,uBAAuB,OAAO,OAAO;AAAA,MAC3D,OAAO;AACL,YAAI,YAAY,GAAG;AACjB,gBAAM,cAAc,kBAAkB,IAAI;AAC1C,gBAAM,cAAc,sBAAsB,OAAO,oBAAoB;AAAA,QACvE,OAAO;AACL,gBAAM,cAAc,sBAAsB,OAAO,MAAM;AAAA,QACzD;AAEA,cAAM,cAAc,uBAAuB,OAAO,MAAM;AAAA,MAC1D;AAEA,YAAM,cAAc,SAAS,KAAK,aAAa;AAC/C,YAAM,cAAc,SAAS,KAAK,aAAa;AAC/C,UAAI,YAAY,KAAK,KAAK,KAAK,KAAK;AACpC,UAAI,WAAW,IAAI,aAAa,EAAE;AAClC,UAAI,cAAc,IAAI,aAAa,CAAC;AAEpC,eAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,oBAAY,MAAM,KAAK,MAAM,IAAI,IAAM;AACvC,oBAAY,MAAM,IAAI,KAAK,MAAM,IAAI,IAAM;AAAA,MAC7C;AAKA,UAAI,aAAa,CAAC,aAAY,GAAG,aAAY,GAAG,aAAY,CAAC,EAAE,SAAS,MAAM,WAAW,eAAe,CAAC,IAAI,QAAQ;AACrH,UAAI,aAAa,MAAM,iBAAiB;AACxC,UAAI,eAAe,WAAW,QAAQ;AACtC,UAAI,UAAU;AAEd,UAAI,YAAY,aAAY,GAAG;AAC7B,kBAAU,IAAI,aAAa,YAAY,KAAK,KAAK,KAAK,KAAK,OAAO;AAClE,YAAI,KAAK;AAET,iBAAS,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK;AAChC,mBAAS,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK;AAChC,gBAAI,QAAS,eAAc,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM;AAClE,iBAAM,KAAI,KAAK,KAAK,KAAK;AACzB,oBAAQ,IAAI,aAAa,SAAS,OAAO,QAAQ,OAAO,GAAG,EAAE;AAAA,UAC/D;AAAA,QACF;AAEA,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,MAAM,WAAW;AAC1B,iBAAS,MAAM,WAAW;AAAA,MAC5B,WAAW,YAAY,aAAY,GAAG;AACpC,kBAAU,IAAI,aAAa,YAAY,KAAK,KAAK,KAAK,KAAK,OAAO;AAClE,YAAI,MAAM;AAEV,iBAAS,KAAK,GAAG,KAAK,KAAK,IAAI,MAAM;AACnC,mBAAS,MAAM,GAAG,MAAM,KAAK,IAAI,OAAO;AACtC,gBAAI,SAAU,OAAM,cAAc,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAEtE,kBAAO,MAAK,KAAK,KAAK,OAAO;AAC7B,oBAAQ,IAAI,aAAa,SAAS,QAAQ,SAAS,OAAO,GAAG,GAAG;AAAA,UAClE;AAAA,QACF;AAEA,aAAK,KAAK,KAAK;AACf,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,MAAM;AACf,iBAAS,MAAM,WAAW;AAAA,MAC5B,WAAW,YAAY,aAAY,KAAK,YAAY,aAAY,MAAM;AACpE,kBAAU,aAAa,SAAS,cAAc,WAAY,eAAc,KAAK,SAAS;AACtF,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK,WAAW;AACzB,iBAAS,KAAK;AACd,iBAAS,KAAK,WAAW;AACzB,iBAAS,MAAM,WAAW;AAC1B,iBAAS,MAAM;AAAA,MACjB,OAAO;AACL,wBAAc,qCAAqC;AAAA,MACrD;AAEA,YAAM,cAAc,gBAAgB,KAAK,IAAI,KAAK,IAAI,SAAS,WAAW,YAAY,GAAG,OAAO;AAChG,YAAM,cAAc,SAAS;AAC7B,YAAM,cAAc,eAAe;AACnC,YAAM,cAAc,WAAW;AAC/B,UAAI,SAAS,eAAa,YAAY;AAAA,QACpC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,aAAO,QAAQ,QAAQ;AACvB,UAAI,UAAU,eAAa,YAAY;AAAA,QACrC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,cAAQ,QAAQ,SAAS;AACzB,UAAI,YAAY,IAAI,YAAY,CAAC;AACjC,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,UAAI,QAAQ,eAAa,YAAY;AAAA,QACnC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,YAAM,KAAK,QAAQ,EAAE,UAAU,OAAO,SAAS,eAAe,SAAS;AAAA,QACrE;AAAA,QACA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,YAAM,aAAa,SAAS;AAC5B,YAAM,iBAAiB;AAAA,IACzB;AAAA,EACF;AACF;AAmBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,6BAA2B,uCAAuC,WAAW,OAAO,aAAa;AACjG,QAAM,OAAO,UAAU,YAAY;AACnC,QAAM,gBAAgB,mBAAiB,YAAY;AACnD,QAAM,eAAe,mBAAiB,YAAY;AAClD,QAAM,aAAa,mBAAiB,YAAY;AAChD,QAAM,WAAW,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACnD,QAAM,cAAc,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAEtD,SAAO,WAAW,OAAO,CAAC,CAAC;AAC3B,QAAM,eAAe,CAAC;AACtB,MAAI,MAAM,YAAY;AAEtB,uBAAqB,WAAW,KAAK;AACvC;AA72BA,IAkBI,iBACA,cA0zBA,kBAkCA,eAEA;AAj3BJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB;AACpB,IAAI,eAAc,WAAU;AA0zB5B,IAAI,mBAAiB;AAAA,MACnB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,MACb,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,IACzB;AAsBA,IAAI,gBAAc,YAAc,UAAQ,sBAAsB;AAE9D,IAAI,iBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,kBAAkB,aAAW;AAAA;AAAA;;;ACt3B9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,6BAA6B,WAAW,OAAO;AAE7C,QAAM,eAAe,KAAK,qBAAqB;AAE/C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,IACF;AAEA,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,YAAM,sBAAsB,UAAU,uBAAuB,uBAAuB;AACpF,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,gBAAU,aAAa;AACvB,gBAAU,eAAe,MAAM,WAAW,UAAU,CAAC;AACrD,gBAAU,kBAAkB;AAAA,IAC9B;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,YAAY;AAC1D,cAAU,mBAAmB,UAAU;AAAA,EACzC;AAGA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,CAAC,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAClL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,QAAQ,SAAU,OAAO;AACtC,YAAM,SAAS,UAAU;AAAA,IAC3B,CAAC;AACD,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAGA,YAAU,0BAA0B,SAAU,YAAY;AACxD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AACjL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,QAAQ,SAAU,OAAO;AACtC,YAAM,SAAS,UAAU;AAAA,IAC3B,CAAC;AACD,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,UAAI,MAAM,WAAW,YAAY,GAAG;AAClC,mBAAW,0BAA0B;AAAA,MACvC,OAAO;AACL,mBAAW,+BAA+B;AAAA,MAC5C;AAAA,IACF;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS,YAAY;AAC3D,WAAO,UAAU,WAAW,SAAS,UAAU;AAAA,EACjD;AAGA,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,IAAI;AAAA,IAC9B;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,SAAS,YAAY;AACzD,UAAM,QAAQ,UAAU,CAAC,OAAO;AAAA,EAClC;AAEA,YAAU,iBAAiB,WAAY;AAErC,QAAI,MAAM,WAAW,SAAS,IAAI,MAAM,cAAc,SAAS,GAAG;AAChE,mBAAK,KAAK,MAAM,YAAY,MAAM,MAAM,WAAW,UAAU,CAAC;AAC9D,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AAC7D,YAAM,cAAc,SAAS;AAAA,IAC/B;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,eAAe;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,MAAM,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAAA,EAC1C;AAEA,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AAEpC,sBAAoB,WAAW,KAAK;AACtC;AAhIA,IA0GI,kBAwBA,eAEA;AApIJ;AAAA;AAAA;AACA;AACA;AACA;AAuGA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,aAAa;AAAA,IACf;AAoBA,IAAI,gBAAc,YAAc,UAAQ,qBAAqB;AAE7D,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,iBAAiB,aAAW;AAAA;AAAA;;;ACzI7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,IACF;AAEA,QAAI,SAAS;AACX,YAAM,sBAAsB,UAAU,uBAAuB,uBAAuB;AACpF,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,gBAAU,aAAa;AACvB,gBAAU,eAAe,MAAM,WAAW,UAAU,CAAC;AACrD,gBAAU,kBAAkB;AAAA,IAC9B;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,iBAAW,qBAAqB;AAAA,IAClC;AAAA,EACF;AAEA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAC/I;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,GAAG,SAAS,UAAU;AACrC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAGA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,IACF;AAEA,UAAM,QAAQ,UAAU,CAAC,OAAO;AAAA,EAClC;AAEA,YAAU,iBAAiB,WAAY;AAErC,QAAI,MAAM,WAAW,SAAS,IAAI,MAAM,cAAc,SAAS,GAAG;AAChE,YAAM,WAAW,cAAc;AAC/B,mBAAK,KAAK,MAAM,YAAY,MAAM,WAAW,UAAU,CAAC;AACxD,mBAAK,UAAU,MAAM,YAAY,MAAM,UAAU;AAEjD,UAAI,MAAM,WAAW,cAAc,GAAG;AACpC,qBAAK,SAAS,MAAM,YAAY;AAAA,MAClC,OAAO;AACL,qBAAK,SAAS,MAAM,cAAc,MAAM,UAAU;AAClD,qBAAK,OAAO,MAAM,cAAc,MAAM,YAAY;AAAA,MACpD;AAEA,YAAM,cAAc,SAAS;AAAA,IAC/B;AAEA,WAAO;AAAA,MACL,MAAM,MAAM;AAAA,MACZ,cAAc,MAAM;AAAA,IACtB;AAAA,EACF;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,eAAe;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AAED,QAAM,eAAe,IAAI,aAAa,CAAC;AACvC,QAAM,aAAa,IAAI,aAAa,EAAE;AAEtC,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AAEpC,kBAAgB,WAAW,KAAK;AAClC;AA1GA,IAmFI,kBAyBA,eAEA;AA9GJ;AAAA;AAAA;AACA;AACA;AACA;AAgFA,IAAI,mBAAiB,CAKrB;AAoBA,IAAI,gBAAc,YAAc,UAAQ,iBAAiB;AAEzD,IAAI,aAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,aAAa,aAAW;AAAA;AAAA;;;AC3GzC,wBAAwB,WAAW,OAAO;AAExC,QAAM,eAAe,KAAK,gBAAgB;AAE1C,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM,QAAQ;AAAA,EACvB;AAIA,YAAU,gCAAgC,SAAU,QAAQ;AAC1D,QAAI,OAAO,OAAO,WAAW,cAAc,SAAS,UAAU,YAAY;AAC1E,cAAU,oBAAoB,IAAI;AAClC,cAAU,mBAAmB,IAAI;AAAA,EACnC;AAEA,YAAU,sBAAsB,SAAU,QAAQ;AAChD,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,wEAAwE;AACtF;AAAA,IACF;AAEA,QAAI,KAAK,MAAM;AACf,UAAM,sBAAsB,GAAG,aAAa,MAAM,QAAQ,mBAAmB;AAC7E,UAAM,4BAA4B,MAAM,oBAAoB,qBAAqB;AAAA,EACnF;AAEA,YAAU,qBAAqB,SAAU,QAAQ;AAAA,EACjD;AAEA,YAAU,oCAAoC,SAAU,QAAQ;AAC9D,QAAI,OAAO,OAAO,WAAW,cAAc,SAAS,UAAU,YAAY;AAC1E,cAAU,wBAAwB,IAAI;AACtC,cAAU,uBAAuB,IAAI;AAAA,EACvC;AAEA,YAAU,0BAA0B,SAAU,QAAQ;AACpD,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,4EAA4E;AAC1F;AAAA,IACF;AAEA,QAAI,KAAK,MAAM;AACf,OAAG,gBAAgB,GAAG,aAAa,MAAM,mBAAmB;AAE5D,UAAM,oBAAoB,qBAAqB,MAAM,yBAAyB;AAAA,EAChF;AAEA,YAAU,yBAAyB,SAAU,QAAQ;AAAA,EACrD;AAEA,YAAU,OAAO,WAAY;AAC3B,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAClF,QAAI,OAAO;AAEX,QAAI,SAAS,MAAM;AACjB,aAAO,MAAM,QAAQ;AAAA,IACvB;AAEA,UAAM,QAAQ,gBAAgB,MAAM,MAAM,aAAa;AAEvD,aAAS,IAAI,GAAG,IAAI,MAAM,aAAa,QAAQ,KAAK;AAClD,YAAM,aAAa,GAAG,KAAK;AAAA,IAC7B;AAEA,UAAM,oBAAoB,qBAAqB,SAAS;AAAA,EAC1D;AAEA,YAAU,SAAS,SAAU,OAAO,QAAQ;AAC1C,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,2DAA2D;AACzE;AAAA,IACF;AAEA,UAAM,gBAAgB,MAAM,QAAQ,kBAAkB;AACtD,UAAM,cAAc,QAAQ;AAC5B,UAAM,cAAc,SAAS;AAAA,EAC/B;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAC5C,QAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,QAAI,KAAK,MAAM;AAEf,QAAI,CAAC,IAAI;AACP,oBAAc,mEAAmE;AACjF;AAAA,IACF;AAEA,QAAI,eAAe,GAAG;AAEtB,QAAI,aAAa,GAAG;AAClB,UAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,wBAAgB;AAAA,MAClB,OAAO;AACL,sBAAc,yDAAyD;AACvE;AAAA,MACF;AAAA,IACF;AAEA,UAAM,aAAa,cAAc;AACjC,OAAG,qBAAqB,GAAG,aAAa,cAAc,GAAG,YAAY,QAAQ,UAAU,GAAG,CAAC;AAAA,EAC7F;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,QAAI,KAAK,MAAM;AAEf,QAAI,CAAC,IAAI;AACP,oBAAc,sEAAsE;AACpF;AAAA,IACF;AAEA,QAAI,eAAe,GAAG;AAEtB,QAAI,aAAa,GAAG;AAClB,UAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,wBAAgB;AAAA,MAClB,OAAO;AACL,sBAAc,yDAAyD;AACvE;AAAA,MACF;AAAA,IACF;AAEA,OAAG,qBAAqB,GAAG,aAAa,cAAc,GAAG,YAAY,MAAM,CAAC;AAC5E,UAAM,eAAe,MAAM,aAAa,OAAO,YAAY,CAAC;AAAA,EAC9D;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAC5C,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,mEAAmE;AACjF;AAAA,IACF;AAEA,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,UAAI,KAAK,MAAM;AACf,SAAG,qBAAqB,GAAG,aAAa,GAAG,kBAAkB,GAAG,YAAY,QAAQ,UAAU,GAAG,CAAC;AAAA,IACpG,OAAO;AACL,oBAAc,yDAAyD;AAAA,IACzE;AAAA,EACF;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,sEAAsE;AACpF;AAAA,IACF;AAEA,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,UAAI,KAAK,MAAM;AACf,SAAG,qBAAqB,GAAG,aAAa,GAAG,kBAAkB,GAAG,YAAY,MAAM,CAAC;AAAA,IACrF,OAAO;AACL,oBAAc,kEAAkE;AAAA,IAClF;AAAA,EACF;AAEA,YAAU,mBAAmB,WAAY;AACvC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,wBAAwB,SAAU,IAAI;AAC9C,QAAI,MAAM,wBAAwB,IAAI;AACpC;AAAA,IACF;AAEA,cAAU,yBAAyB;AACnC,UAAM,sBAAsB;AAC5B,UAAM,UAAU;AAEhB,QAAI,IAAI;AACN,YAAM,UAAU,MAAM,oBAAoB,WAAW;AAAA,IACvD;AAAA,EACF;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,MAAM,eAAe;AACvB,YAAM,QAAQ,kBAAkB,MAAM,aAAa;AAAA,IACrD;AAAA,EACF;AAEA,YAAU,UAAU,WAAY;AAC9B,QAAI,OAAO,CAAC,GAAG,CAAC;AAEhB,QAAI,MAAM,kBAAkB,MAAM;AAChC,WAAK,KAAK,MAAM,cAAc;AAC9B,WAAK,KAAK,MAAM,cAAc;AAAA,IAChC;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,sBAAsB,WAAY;AAC1C,QAAI,CAAC,MAAM,SAAS;AAClB,oBAAc,wEAAwE;AACtF;AAAA,IACF;AAEA,cAAU,KAAK;AACf,QAAI,KAAK,MAAM;AACf,QAAI,UAAU,mBAAiB,YAAY;AAC3C,YAAQ,sBAAsB,MAAM,mBAAmB;AACvD,YAAQ,sBAAsB,OAAO,MAAM;AAC3C,YAAQ,uBAAuB,OAAO,MAAM;AAC5C,YAAQ,gBAAgB,MAAM,cAAc,OAAO,MAAM,cAAc,QAAQ,GAAG,aAAa,eAAe,IAAI;AAClH,cAAU,eAAe,OAAO;AAGhC,UAAM,eAAe,GAAG,mBAAmB;AAC3C,OAAG,iBAAiB,GAAG,cAAc,MAAM,YAAY;AACvD,OAAG,oBAAoB,GAAG,cAAc,GAAG,mBAAmB,MAAM,cAAc,OAAO,MAAM,cAAc,MAAM;AACnH,OAAG,wBAAwB,GAAG,aAAa,GAAG,kBAAkB,GAAG,cAAc,MAAM,YAAY;AAAA,EACrG;AAGA,YAAU,kBAAkB,WAAY;AACtC,WAAO,MAAM,aAAa;AAAA,EAC5B;AACF;AAiBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,MAAI,WAAW,KAAK;AAEpB,MAAI,MAAM,cAAc;AACtB,kBAAc,uGAAuG;AAAA,EACvH;AAEA,QAAM,eAAe,CAAC;AACtB,WAAS,WAAW,OAAO,CAAC,cAAc,CAAC;AAG3C,iBAAe,WAAW,KAAK;AACjC;AAhQA,IAqOI,kBA6BA,eAEA;AApQJ;AAAA;AAAA;AACA;AACA;AACA;AAkOA,IAAI,mBAAiB;AAAA,MAEnB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,2BAA2B;AAAA,IAC7B;AAmBA,IAAI,gBAAc,YAAc,UAAQ,gBAAgB;AAExD,IAAI,uBAAuB;AAAA,MACzB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACvQA,IAAI;AAAJ;AAAA;AAAA,IAAI,cAAc;AAAA;AAAA;;;ACAlB,IAAI;AAAJ;AAAA;AAAA,IAAI,cAAclB;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,qBAAqB,GAAG,GAAG;AACzB,MAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AACjC,QAAI,EAAE,OAAO,EAAE,IAAI;AACjB,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAKA,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,YAAU,YAAY,WAAY;AAChC,UAAM,iBAAiB;AAAA,EACzB;AAIA,YAAU,oBAAoB,SAAU,SAAS,YAAY;AAC3D,QAAI,SAAS;AACX,UAAI,MAAM,WAAW,kBAAkB;AAEvC,UAAI,QAAQ,MAAM,gBAAgB;AAChC,cAAM,iBAAiB;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AAGA,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,QAAI,SAAS;AACX,YAAM,sBAAsB,UAAU,uBAAuB,uBAAuB;AACpF,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,YAAM,KAAK,sBAAsB,MAAM,mBAAmB;AAC1D,YAAM,cAAc,sBAAsB,MAAM,mBAAmB;AACnE,YAAM,YAAY,sBAAsB,MAAM,mBAAmB;AAEjE,YAAM,cAAc,sBAAsB,MAAM,mBAAmB;AACnE,YAAM,aAAa,sBAAsB,MAAM,mBAAmB;AAClE,YAAM,eAAe,sBAAsB,MAAM,mBAAmB;AACpE,YAAM,eAAe,UAAU,uBAAuB,iBAAiB;AACvE,UAAI,QAAQ,MAAM,aAAa,cAAc;AAC7C,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,UAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,YAAM,eAAe,MAAM,eAAe,eAAe,IAAI,gBAAgB,CAAC;AAC9E,gBAAU,YAAY,KAAK,KAAK;AAAA,IAClC;AAAA,EACF;AAEA,YAAU,eAAe,SAAU,SAAS,KAAK,OAAO;AACtD,cAAU,kBAAkB,SAAS,KAAK,KAAK;AAC/C,cAAU,oBAAoB,SAAS,KAAK,KAAK;AAAA,EACnD;AAEA,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,WAAW,QAAQ;AAEvB,QAAI,QAAQ,MAAM,YAAY,EAAE,qBAAqB;AAErD,QAAI,UAAU,kBAAkB,QAAQ;AACtC,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,wBAAwB,EAAE;AAAA,IACnG;AAEA,QAAI,uBAAuB,MAAM,YAAY,EAAE,mBAAmB;AAElE,QAAI,yBAAyB,MAAM;AACjC,iBAAW,mBAAiB,WAAW,UAAU,8BAA8B,gCAAgC,EAAE;AAAA,IACnH;AAEA,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,eAAW,mBAAiB,WAAW,UAAU,wBAAwB,4BAA4B,OAAO,OAAO,CAAC,EAAE;AACtH,QAAI,SAAS,MAAM,YAAY,EAAE,yBAAyB;AAE1D,QAAI,QAAQ;AACV,iBAAW,mBAAiB,WAAW,UAAU,kCAAkC,oCAAoC,EAAE;AAEzH,UAAI,yBAAyB,CAAC;AAE9B,eAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACnC,YAAI,MAAM,YAAY,EAAE,eAAe,EAAE,MAAM,YAAY,cAAc;AACvE,iCAAuB,KAAK,uBAAuB,OAAO,IAAI,cAAc,CAAC;AAAA,QAC/E;AAAA,MACF;AAEA,UAAI,uBAAuB,SAAS,GAAG;AACrC,mBAAW,mBAAiB,WAAW,UAAU,oCAAoC,uBAAuB,KAAK,IAAI,CAAC,EAAE;AAAA,MAC1H;AAAA,IACF;AAQA,QAAI,MAAM,MAAM,aAAa,iBAAiB;AAC9C,QAAI,MAAM,MAAM,aAAa,WAAW;AACxC,QAAI,QAAQ,IAAI,aAAa,CAAC;AAC9B,iBAAK,IAAI,OAAQ,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,EAAE;AAClG,QAAI,aAAa,aAAK,OAAO,KAAK,IAAI,MAAM,WAAW,kBAAkB;AACzE,eAAW,mBAAiB,WAAW,UAAU,8BAA8B,GAAG,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,EAAE;AAEjH,eAAW,mBAAiB,WAAW,UAAU,0BAA0B,8BAA8B,OAAO,MAAM,mBAAmB,CAAC,EAAE;AAE5I,UAAM,WAAW,MAAM,YAAY,EAAE,sBAAsB,CAAC;AAE5D,aAAS,MAAM,GAAG,UAAU,CAAC,MAAM,YAAY,MAAM,SAAS,EAAE,KAAK;AACnE,UAAI,MAAM,YAAY,EAAE,sBAAsB,GAAG,GAAG;AAClD,cAAM,WAAW;AAAA,MACnB;AAAA,IACF;AAEA,QAAI,MAAM,UAAU;AAClB,iBAAW,mBAAiB,WAAW,UAAU,4BAA4B,8BAA8B,EAAE;AAAA,IAC/G;AAGA,QAAI,MAAM,mBAAmB,MAAM;AACjC,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,qCAAqC,0BAA0B,yBAAyB,CAAC,EAAE;AACpK,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,uGAAuG,yDAAyD,gCAAgC,4FAA4F,8BAA8B,gCAAgC,CAAC,EAAE;AAAA,IACza;AAGA,eAAW,mBAAiB,WAAW,UAAU,oBAAoB,GAAG,OAAO,MAAM,WAAW,aAAa,CAAC,CAAC,EAAE;AACjH,YAAQ,WAAW;AACnB,cAAU,mBAAmB,SAAS,KAAK,KAAK;AAChD,cAAU,2BAA2B,SAAS,KAAK,KAAK;AAAA,EAC1D;AAEA,YAAU,qBAAqB,SAAU,SAAS,KAAK,OAAO;AAC5D,QAAI,WAAW,QAAQ;AAEvB,QAAI,eAAe;AAEnB,YAAQ,MAAM;AAAA,WACP;AAAA,WAEA;AAAA,WAEA,GACH;AAEE,YAAI,WAAW;AACf,YAAI,UAAU,EAAE,QAAQ,SAAU,OAAO;AACvC,cAAI,SAAS,MAAM,UAAU;AAE7B,cAAI,SAAS,GAAG;AACd,uBAAW,mBAAiB,WAAW,UAAU,qBAAqB;AAAA,cACtE,0BAA0B,OAAO,UAAU,GAAG;AAAA,cAAG,gCAAgC,OAAO,UAAU,iBAAiB;AAAA,cAAG,gCAAgC,OAAO,UAAU,iBAAiB;AAAA,cAAG;AAAA,YAAmB,GAAG,KAAK,EAAE;AACxN,uBAAW,mBAAiB,WAAW,UAAU,sBAAsB;AAAA,cACvE,qDAAqD,OAAO,UAAU,KAAK;AAAA,cAAG,oBAAoB,OAAO,cAAc,gBAAgB,EAAE,OAAO,UAAU,IAAI;AAAA,cAG9J,+CAA+C,OAAO,UAAU,iCAAiC;AAAA,cAAG,uBAAuB,OAAO,cAAc,gBAAgB,EAAE,OAAO,UAAU,IAAI;AAAA,cACvL;AAAA,YAAsB,GAAG,KAAK,EAAE;AAChC;AAAA,UACF;AAAA,QACF,CAAC;AACD;AAAA,MACF;AAAA;AAGJ,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,6BAA6B,SAAU,SAAS,KAAK,OAAO;AACpE,QAAI,WAAW,QAAQ;AAEvB,QAAI,MAAM,WAAW,kBAAkB,EAAE,SAAS,GAAG;AACnD,UAAI,gBAAgB,MAAM,WAAW,kBAAkB,EAAE;AACzD,iBAAW,mBAAiB,WAAW,UAAU,yBAAyB,CAAC,sCAAsC,yCAAyC,uBAAuB,GAAG,KAAK,EAAE;AAC3L,iBAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,sBAAsB,OAAO,eAAe,UAAU,GAAG,4DAA4D,kGAAkG,6BAA6B,OAAO,oDAAoD,iBAAiB,OAAO,yDAAyD,4DAA4D,0CAA0C,KAAK,wBAAwB,GAAG,KAAK,EAAE;AAAA,IAC3lB;AAEA,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,0BAA0B,SAAU,QAAQ,KAAK,OAAO;AAEhE,QAAI,kBAAkB;AAEtB,QAAI,MAAM,YAAY,EAAE,SAAS,KAAK,MAAM,WAAW,aAAa,MAAM,UAAU,iBAAiB;AAGnG,wBAAkB;AAClB,YAAM,iBAAiB;AACvB,UAAI,UAAU,EAAE,QAAQ,SAAU,OAAO;AACvC,YAAI,SAAS,MAAM,UAAU;AAE7B,YAAI,SAAS,GAAG;AACd,gBAAM;AAEN,cAAI,oBAAoB,GAAG;AACzB,8BAAkB;AAAA,UACpB;AAAA,QACF;AAEA,YAAI,oBAAoB,KAAM,OAAM,iBAAiB,KAAK,MAAM,aAAa,MAAM,KAAO,CAAC,MAAM,qBAAqB,IAAI;AACxH,4BAAkB;AAAA,QACpB;AAEA,YAAI,kBAAkB,KAAK,MAAM,cAAc,GAAG;AAChD,4BAAkB;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAI,cAAc;AAElB,QAAI,MAAM,wBAAwB,iBAAiB;AACjD,YAAM,sBAAsB;AAC5B,oBAAc;AAAA,IAChB;AAEA,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,QAAI,SAAS,MAAM,YAAY,EAAE,yBAAyB;AAC1D,QAAI,6BAA6B;AACjC,QAAI,yBAAyB,CAAC;AAE9B,QAAI,QAAQ;AAEV,eAAS,KAAK,GAAG,KAAK,SAAS,MAAM;AACnC,+BAAuB,KAAK,MAAM,YAAY,EAAE,eAAe,EAAE,CAAC;AAAA,MACpE;AAEA,UAAI,uBAAuB,SAAS,GAAG;AACrC,qCAA6B;AAAA,MAC/B;AAAA,IACF;AAEA,QAAI,MAAM,MAAM,aAAa,iBAAiB;AAC9C,QAAI,MAAM,MAAM,aAAa,WAAW;AACxC,QAAI,QAAQ,IAAI,aAAa,CAAC;AAC9B,iBAAK,IAAI,OAAQ,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,EAAE;AAClG,QAAI,aAAa,aAAK,OAAO,KAAK,IAAI,MAAM,WAAW,kBAAkB;AACzE,QAAI,QAAQ;AAAA,MACV,mBAAmB,MAAM,YAAY,EAAE,qBAAqB;AAAA,MAC5D,iBAAiB,MAAM,YAAY,EAAE,mBAAmB;AAAA,MACxD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,oBAAoB,MAAM,YAAY,EAAE,sBAAsB,CAAC;AAAA,MAC/D,WAAW,MAAM,WAAW,aAAa;AAAA,MACzC;AAAA,IACF;AAGA,QAAI,CAAC,MAAM,iBAAiB,MAAM,cAAc,sBAAsB,MAAM,qBAAqB,MAAM,cAAc,oBAAoB,MAAM,mBAAmB,MAAM,cAAc,YAAY,MAAM,WAAW,MAAM,cAAc,+BAA+B,MAAM,8BAA8B,MAAM,cAAc,WAAW,MAAM,UAAU,MAAM,cAAc,eAAe,MAAM,cAAc,MAAM,cAAc,uBAAuB,MAAM,sBAAsB,MAAM,cAAc,cAAc,MAAM,aAAa,CAAC,YAAY,MAAM,cAAc,wBAAwB,MAAM,sBAAsB,GAAG;AAClmB,YAAM,gBAAgB,gBAAc,CAAC,GAAG,KAAK;AAC7C,aAAO;AAAA,IACT;AAGA,QAAI,OAAO,WAAW,MAAM,KAAK,eAAe,MAAM,6BAA6B,MAAM,wBAAwB,CAAC,CAAC,MAAM,uBAAuB,CAAC,CAAC,MAAM,kBAAkB,OAAO,oBAAoB,EAAE,SAAS,IAAI,UAAU,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,MAAM,WAAW,SAAS,GAAG;AACjT,YAAM,qBAAqB,MAAM;AACjC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,QAAQ,KAAK,OAAO;AACtD,UAAM,cAAc;AAEpB,QAAI,UAAU,wBAAwB,QAAQ,KAAK,KAAK,GAAG;AACzD,UAAI,UAAU;AAAA,QACZ,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AACA,gBAAU,aAAa,SAAS,KAAK,KAAK;AAE1C,UAAI,YAAY,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ;AAGrI,UAAI,cAAc,OAAO,WAAW,GAAG;AACrC,eAAO,WAAW,SAAS;AAE3B,eAAO,OAAO,EAAE,yBAAyB;AAAA,MAC3C;AAEA,aAAO,oBAAoB,EAAE,SAAS;AAAA,IACxC,OAAO;AACL,YAAM,oBAAoB,eAAe,EAAE,mBAAmB,OAAO,WAAW,CAAC;AAAA,IACnF;AAEA,WAAO,OAAO,EAAE,KAAK;AACrB,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,4BAA4B,QAAQ,KAAK,KAAK;AACxD,cAAU,iCAAiC,QAAQ,KAAK,KAAK;AAAA,EAC/D;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAElE,QAAI,UAAU,OAAO,WAAW;AAEhC,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,aAAa,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,IAAI;AAC9M,UAAI,QAAQ,gBAAgB,UAAU,GAAG;AACvC,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,SAAS,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,MAAM,QAAQ,KAAK,GAAG;AAC5L,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF;AAEA,aAAO,uBAAuB,EAAE,SAAS;AAAA,IAC3C;AAEA,YAAQ,YAAY,YAAY,MAAM,cAAc,eAAe,CAAC;AACpE,YAAQ,YAAY,kBAAkB,MAAM,WAAW,kBAAkB,CAAC;AAC1E,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,QAAI,gBAAgB,MAAM,WAAW,iBAAiB;AACtD,QAAI,UAAU,CAAC;AACf,QAAI,UAAU,CAAC;AAEf,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,cAAQ,KAAK,cAAc,KAAK,QAAQ,kBAAkB,KAAK,QAAQ,mBAAmB;AAC1F,cAAQ,KAAK,cAAc,KAAK,QAAQ,kBAAkB,KAAK,QAAQ,mBAAmB;AAE1F,cAAQ,KAAM,SAAQ,KAAK,QAAQ,OAAO,MAAM,QAAQ,MAAM;AAC9D,cAAQ,KAAM,SAAQ,KAAK,QAAQ,OAAO,MAAM,QAAQ,MAAM;AAAA,IAChE;AAEA,YAAQ,aAAa,oBAAoB,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACvF,YAAQ,aAAa,oBAAoB,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AAEvF,QAAI,MAAM,mBAAmB,MAAM;AACjC,cAAQ,YAAY,kBAAkB,MAAM,eAAe,eAAe,CAAC;AAC3E,UAAI,OAAO,UAAU,oBAAoB;AACzC,cAAQ,YAAY,WAAW,KAAK,EAAE;AACtC,cAAQ,YAAY,YAAY,KAAK,EAAE;AAAA,IACzC;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAGlE,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,QAAI,UAAU,MAAM,aAAa,eAAe;AAChD,iBAAK,SAAS,MAAM,aAAa,QAAQ,MAAM,QAAQ,IAAI;AAC3D,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,MAAM,MAAM,aAAa,cAAc;AAC3C,QAAI,SAAS,IAAI,iBAAiB;AAClC,YAAQ,YAAY,YAAY,OAAO,KAAK,OAAO,EAAE;AACrD,YAAQ,YAAY,WAAW,OAAO,EAAE;AACxC,YAAQ,YAAY,UAAU,OAAO,EAAE;AACvC,QAAI,SAAS,MAAM,aAAa,UAAU;AAC1C,QAAI,OAAO,MAAM,aAAa,cAAc;AAG5C,QAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,QAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,mBAAK,IAAI,KAAK,OAAO,IAAI,IAAI,OAAO,IAAI,KAAK,MAAM,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,MAAM,IAAI,CAAC,EAAE;AAC7F,mBAAK,cAAc,KAAK,KAAK,MAAM,WAAW;AAE9C,UAAI,CAAC,IAAI,sBAAsB,GAAG;AAChC,qBAAK,UAAU,KAAK,GAAG;AAMvB,YAAI,IAAI,CAAC,OAAO,KAAK,IAAI;AACzB,qBAAK,MAAM,KAAK,KAAK,CAAC;AAAA,MACxB;AAGA,mBAAK,cAAc,KAAK,KAAK,QAAQ,IAAI;AACzC,eAAS,KAAK,IAAI,IAAI,IAAI,MAAM;AAChC,eAAS,KAAK,IAAI,IAAI,IAAI,MAAM;AAChC,eAAS,KAAK,IAAI,IAAI,IAAI,MAAM;AAChC,eAAS,KAAK,IAAI,IAAI,IAAI,MAAM;AAAA,IAClC;AAEA,YAAQ,YAAY,UAAU,MAAM;AACpC,YAAQ,YAAY,UAAU,MAAM;AACpC,YAAQ,YAAY,UAAU,MAAM;AACpC,YAAQ,YAAY,UAAU,MAAM;AAEpC,QAAI,QAAQ,cAAc,gBAAgB,GAAG;AAC3C,cAAQ,YAAY,kBAAkB,IAAI,sBAAsB,CAAC;AAAA,IACnE;AAEA,QAAI,MAAM,MAAM,aAAa,iBAAiB;AAC9C,QAAI,MAAM,MAAM,aAAa,WAAW;AACxC,QAAI,QAAQ,IAAI,aAAa,CAAC;AAC9B,iBAAK,IAAI,OAAQ,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,IAAK,KAAI,KAAK,IAAI,MAAM,IAAI,EAAE;AAClG,YAAQ,aAAa,YAAY,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACvD,iBAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACpC,UAAM,aAAa,iBAAiB,KAAK,GAAG;AAC5C,iBAAK,cAAc,KAAK,KAAK,MAAM,WAAW;AAC9C,YAAQ,aAAa,aAAa,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAExD,QAAI,UAAU,MAAM,aAAa,gBAAgB;AACjD,iBAAK,SAAS,MAAM,WAAW,MAAM,aAAa,OAAO;AACzD,iBAAK,SAAS,MAAM,iBAAiB,QAAQ,cAAc,QAAQ,YAAY;AAC/E,iBAAK,SAAS,MAAM,iBAAiB,MAAM,iBAAiB,MAAM,aAAa,aAAa,CAAC;AAC7F,QAAI,aAAa,aAAK,OAAO,KAAK,IAAI,MAAM,WAAW,kBAAkB;AAEzE,QAAI,aAAa,MAAM,WAAW,wBAAwB,GAAG;AAC3D,uBAAgB,gCAAgC,OAAO,KAAK,KAAK,UAAU,GAAG,iEAAiE,EAAE,OAAO,MAAM,WAAW,wBAAwB,GAAG,4GAA4G,CAAC;AAAA,IACnT;AAEA,QAAI,UAAU,IAAI,aAAa,CAAC;AAChC,iBAAK,IAAI,SAAS,GAAK,GAAK,CAAG;AAC/B,iBAAK,OAAO,SAAS,SAAS,KAAK;AACnC,YAAQ,aAAa,YAAY,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACnE,YAAQ,aAAa,oBAAoB,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAElE,QAAI,CAAC,MAAM,oBAAoB,UAAU,GAAG;AAC1C,UAAI,UAAU,MAAM,cAAc,cAAc;AAChD,cAAQ,YAAY,YAAY,MAAM,cAAc,SAAS,CAAC;AAC9D,cAAQ,YAAY,aAAa,MAAM,cAAc,UAAU,CAAC;AAChE,cAAQ,YAAY,SAAS,QAAQ,KAAK;AAC1C,cAAQ,YAAY,WAAW,QAAQ,OAAO;AAC9C,cAAQ,YAAY,WAAW,QAAQ,OAAO;AAAA,IAChD;AAIA,QAAI,SAAS,IAAI,aAAa,CAAC;AAC/B,QAAI,OAAO,IAAI,aAAa,CAAC;AAE7B,aAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC7B,cAAQ;AAAA,aACD;AACH,uBAAK,IAAI,QAAQ,IAAM,GAAK,CAAG;AAC/B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA,aAEG;AACH,uBAAK,IAAI,QAAQ,GAAK,GAAK,CAAG;AAC9B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA,aAEG;AACH,uBAAK,IAAI,QAAQ,GAAK,IAAM,CAAG;AAC/B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA,aAEG;AACH,uBAAK,IAAI,QAAQ,GAAK,GAAK,CAAG;AAC9B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA,aAEG;AACH,uBAAK,IAAI,QAAQ,GAAK,GAAK,EAAI;AAC/B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA,aAEG;AAAA;AAEH,uBAAK,IAAI,QAAQ,GAAK,GAAK,CAAG;AAC9B,uBAAK,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACrC;AAAA;AAGJ,mBAAK,cAAc,QAAQ,QAAQ,MAAM,eAAe;AACxD,mBAAK,cAAc,MAAM,MAAM,MAAM,SAAS;AAC9C,UAAI,OAAO,KAAO,aAAK,IAAI,MAAM,MAAM;AAGvC,cAAQ,aAAa,eAAe,OAAO,EAAE,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AAC/E,cAAQ,YAAY,iBAAiB,OAAO,EAAE,GAAG,IAAI;AAErD,UAAI,MAAM,YAAY,EAAE,mBAAmB,GAAG;AAC5C,YAAI,QAAQ,MAAM;AAClB,YAAI,eAAe,MAAM,gBAAgB;AACzC,gBAAQ,iBAAiB,YAAY,YAAY;AAEjD,qBAAK,OAAO,MAAM,mBAAmB,QAAQ,IAAI;AACjD,gBAAQ,iBAAiB,cAAc,MAAM,iBAAiB;AAC9D,YAAI,OAAO,UAAU,oBAAoB;AACzC,gBAAQ,YAAY,WAAW,KAAK,EAAE;AACtC,gBAAQ,YAAY,YAAY,KAAK,EAAE;AACvC,YAAI,SAAS,UAAU,sBAAsB;AAC7C,gBAAQ,YAAY,aAAa,OAAO,KAAK,KAAK,EAAE;AACpD,gBAAQ,YAAY,aAAa,OAAO,KAAK,KAAK,EAAE;AAAA,MACtD;AAAA,IACF;AAEA,iBAAK,OAAO,MAAM,kBAAkB,QAAQ,IAAI;AAChD,YAAQ,iBAAiB,cAAc,MAAM,gBAAgB;AAE7D,YAAQ,MAAM;AAAA,WACP;AAAA,WAEA;AAAA,WAEA,GACH;AAGE,YAAI,WAAW;AACf,YAAI,aAAa,CAAC;AAClB,YAAI,UAAU,EAAE,QAAQ,SAAU,OAAO;AACvC,cAAI,SAAS,MAAM,UAAU;AAE7B,cAAI,SAAS,GAAG;AACd,gBAAI,SAAS,MAAM,SAAS;AAC5B,gBAAI,YAAY,MAAM,aAAa;AACnC,uBAAW,KAAK,OAAO,KAAK;AAC5B,uBAAW,KAAK,OAAO,KAAK;AAC5B,uBAAW,KAAK,OAAO,KAAK;AAC5B,oBAAQ,kBAAkB,aAAa,OAAO,QAAQ,GAAG,UAAU;AACnE,gBAAI,OAAO,MAAM,aAAa;AAC9B,yBAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAC1C,yBAAK,cAAc,QAAQ,QAAQ,QAAQ,YAAY;AACvD,oBAAQ,aAAa,mBAAmB,OAAO,QAAQ,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AAEzF,gBAAI,YAAY,CAAC,OAAO,OAAO,IAAI,OAAO,OAAO,IAAI,OAAQ,QAAO,KAAK,EAAI;AAC7E,oBAAQ,kBAAkB,mBAAmB,OAAO,QAAQ,GAAG,SAAS;AACxE;AAAA,UACF;AAAA,QACF,CAAC;AAED;AAAA,MACF;AAAA;AAAA,EAEN;AAEA,YAAU,8BAA8B,SAAU,QAAQ,KAAK,OAAO;AACpE,QAAI,UAAU,OAAO,WAAW;AAChC,YAAQ,YAAY,YAAY,MAAM,aAAa,eAAe,CAAC;AACnE,YAAQ,YAAY,YAAY,MAAM,eAAe,eAAe,CAAC;AACrE,YAAQ,YAAY,YAAY,MAAM,cAAc,eAAe,CAAC;AACpE,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,QAAI,QAAQ,MAAM,YAAY;AAE9B,QAAI,UAAU,MAAM,cAAc,cAAc;AAChD,QAAI,SAAS,MAAM,YAAY,EAAE,yBAAyB;AAE1D,QAAI,UAAU,WAAW,GAAG;AAC1B,eAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAChC,gBAAQ,YAAY,MAAM,OAAO,CAAC,GAAG,MAAM,YAAY,EAAE,mBAAmB,CAAC,CAAC;AAAA,MAChF;AAAA,IACF;AAIA,aAAS,MAAM,GAAG,MAAM,SAAS,OAAO;AACtC,UAAI,SAAS,SAAS,MAAM;AAC5B,UAAI,SAAS,QAAQ,MAAM;AAC3B,UAAI,OAAO,MAAM,iBAAiB,MAAM;AACxC,UAAI,SAAS,KAAK,SAAS;AAC3B,UAAI,SAAS,SAAU,QAAO,KAAK,OAAO;AAC1C,UAAI,SAAU,SAAQ,OAAO,OAAO,OAAO,MAAO,QAAO,KAAK,OAAO;AACrE,cAAQ,YAAY,SAAS,OAAO,GAAG,GAAG,MAAM;AAChD,cAAQ,YAAY,SAAS,OAAO,GAAG,GAAG,MAAM;AAChD,UAAI,OAAO,MAAM,uBAAuB,MAAM;AAC9C,UAAI,SAAS,KAAK,SAAS;AAC3B,cAAQ,YAAY,SAAS,OAAO,GAAG,GAAI,SAAQ,OAAO,OAAO,OAAO,MAAO,QAAO,KAAK,OAAO,GAAG;AACrG,cAAQ,YAAY,SAAS,OAAO,GAAG,GAAG,SAAU,QAAO,KAAK,OAAO,GAAG;AAAA,IAC5E;AAEA,QAAI,MAAM,UAAU;AAClB,UAAI,QAAQ;AACV,iBAAS,KAAK,GAAG,KAAK,SAAS,EAAE,IAAI;AACnC,cAAI,UAAU,QAAQ,MAAM;AAC5B,cAAI,QAAQ,MAAM,sBAAsB,EAAE;AAE1C,cAAI,OAAO;AACT,gBAAI,QAAQ,MAAM,iCAAiC,EAAE;AACrD,gBAAI,QAAQ,MAAM,iCAAiC,EAAE;AACrD,oBAAQ,YAAY,QAAQ,OAAO,EAAE,GAAG,KAAK;AAC7C,oBAAQ,YAAY,QAAQ,OAAO,EAAE,GAAG,KAAK;AAC7C,gBAAI,UAAU,CAAC,MAAM,+BAA+B,EAAE,GAAG,MAAM,+BAA+B,EAAE,CAAC;AACjG,oBAAQ,YAAY,UAAU,OAAO,EAAE,GAAG,UAAW,SAAQ,SAAU,SAAQ,KAAK,QAAQ,GAAG;AAC/F,oBAAQ,YAAY,UAAU,OAAO,EAAE,GAAG,CAAC,QAAQ,KAAM,SAAQ,SAAU,SAAQ,KAAK,QAAQ,MAAM,KAAK;AAAA,UAC7G,OAAO;AACL,oBAAQ,YAAY,QAAQ,OAAO,EAAE,GAAG,CAAG;AAC3C,oBAAQ,YAAY,QAAQ,OAAO,EAAE,GAAG,CAAG;AAC3C,oBAAQ,YAAY,UAAU,OAAO,EAAE,GAAG,CAAG;AAC7C,oBAAQ,YAAY,UAAU,OAAO,EAAE,GAAG,CAAG;AAAA,UAC/C;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,WAAW,QAAQ,MAAM,UAAU;AAEvC,YAAI,SAAS,MAAM,iCAAiC,CAAC;AAErD,YAAI,SAAS,MAAM,iCAAiC,CAAC;AAErD,gBAAQ,YAAY,UAAU,MAAM;AACpC,gBAAQ,YAAY,UAAU,MAAM;AACpC,YAAI,WAAW,CAAC,MAAM,+BAA+B,CAAC,GAAG,MAAM,+BAA+B,CAAC,CAAC;AAChG,gBAAQ,YAAY,YAAY,WAAY,UAAS,UAAW,UAAS,KAAK,SAAS,GAAG;AAC1F,gBAAQ,YAAY,YAAY,CAAC,SAAS,KAAM,UAAS,UAAW,UAAS,KAAK,SAAS,MAAM,MAAM;AAAA,MACzG;AAAA,IACF;AAEA,QAAI,uBAAuB,MAAM,YAAY,EAAE,mBAAmB;AAElE,QAAI,yBAAyB,MAAM;AACjC,UAAI,wBAAwB,MAAM,YAAY,EAAE,yBAAyB;AACzE,cAAQ,YAAY,oBAAoB,qBAAqB;AAAA,IAC/D;AAEA,QAAI,MAAM,sBAAsB,GAAG;AACjC,cAAQ,YAAY,YAAY,MAAM,WAAW,CAAC;AAClD,cAAQ,YAAY,YAAY,MAAM,WAAW,CAAC;AAClD,cAAQ,YAAY,aAAa,MAAM,YAAY,CAAC;AACpD,cAAQ,YAAY,kBAAkB,MAAM,iBAAiB,CAAC;AAAA,IAChE;AAAA,EACF;AAEA,YAAU,mCAAmC,SAAU,QAAQ,KAAK,OAAO;AACzE,QAAI,MAAM,WAAW,kBAAkB,EAAE,SAAS,GAAG;AACnD,UAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,UAAI,mBAAmB,CAAC;AACxB,UAAI,qBAAqB,CAAC;AAC1B,UAAI,aAAa,MAAM,WAAW,kBAAkB;AACpD,UAAI,gBAAgB,WAAW;AAE/B,eAAS,IAAI,GAAG,IAAI,eAAe,EAAE,GAAG;AACtC,YAAI,kBAAkB,WAAW,GAAG,UAAU;AAC9C,YAAI,eAAe,WAAW,GAAG,UAAU;AAC3C,qBAAK,cAAc,iBAAiB,iBAAiB,QAAQ,YAAY;AACzE,qBAAK,cAAc,cAAc,cAAc,QAAQ,IAAI;AAC3D,YAAI,gBAAgB,KAAO,aAAK,IAAI,cAAc,eAAe;AACjE,yBAAiB,KAAK,gBAAgB,EAAE;AACxC,yBAAiB,KAAK,gBAAgB,EAAE;AACxC,yBAAiB,KAAK,gBAAgB,EAAE;AACxC,2BAAmB,KAAK,aAAa;AAAA,MACvC;AAEA,UAAI,UAAU,OAAO,WAAW;AAChC,cAAQ,cAAc,qBAAqB,gBAAgB;AAC3D,cAAQ,aAAa,uBAAuB,kBAAkB;AAAA,IAChE;AAAA,EACF;AAGA,YAAU,SAAS,MAAM,WAAY;AACnC,QAAI,MAAM,4BAA4B;AACpC,YAAM,2BAA2B,YAAY;AAE7C,YAAM,6BAA6B;AAAA,IACrC;AAAA,EACF,GAAG,UAAU,MAAM;AAEnB,YAAU,sBAAsB,WAAY;AAC1C,QAAI,MAAM,mBAAmB;AAC3B,aAAO,CAAC,MAAM,qBAAqB,MAAM,oBAAoB;AAAA,IAC/D;AAEA,QAAI,wBAAwB,MAAM,eAAe,sBAAsB,GACnE,QAAQ,sBAAsB,OAC9B,QAAQ,sBAAsB;AAElC,WAAO,CAAC,OAAO,KAAK;AAAA,EACtB;AAEA,YAAU,wBAAwB,WAAY;AAC5C,QAAI,yBAAyB,MAAM,eAAe,sBAAsB,GACpE,aAAa,uBAAuB,YACpC,aAAa,uBAAuB;AAExC,WAAO,CAAC,YAAY,UAAU;AAAA,EAChC;AAEA,YAAU,mBAAmB,SAAU,KAAK,OAAO;AACjD,QAAI,MAAM,IAAI,aAAa,EAAE,cAAc;AAC3C,UAAM,oBAAoB;AAE1B,QAAI,IAAI,YAAY,KAAK,MAAM,aAAa,KAAK;AAC/C,YAAM,oBAAoB;AAAA,IAC5B;AAEA,QAAI,CAAC,MAAM,4BAA4B;AAErC,YAAM,6BAA6B,IAAI,2BAA2B,WAAY;AAC5E,YAAI,MAAM,WAAW,6BAA6B,GAAG;AACnD,cAAI,QAAQ,IAAI,4BAA4B;AAC5C,cAAI,aAAa,IAAI,qBAAqB,IAAI;AAE9C,cAAI,aAAa,QAAQ,aAAa,MAAM;AAC1C,kBAAM,cAAc;AAAA,UACtB;AAKA,cAAI,MAAM,aAAa,KAAK;AAC1B,kBAAM,aAAa;AAAA,UACrB;AAEA,cAAI,MAAM,aAAa,KAAK;AAC1B,kBAAM,aAAa;AAAA,UACrB;AAAA,QACF,OAAO;AACL,gBAAM,aAAa,MAAM,WAAW,uBAAuB,IAAI,MAAM,WAAW,uBAAuB;AAAA,QACzG;AAEA,YAAI,QAAO,MAAM,oBAAoB,mBAAmB;AAExD,cAAM,sBAAsB,KAAK,KAAK,MAAK,KAAK,KAAK,KAAK,MAAM,UAAU,CAAC;AAC3E,cAAM,uBAAuB,KAAK,KAAK,MAAK,KAAK,KAAK,KAAK,MAAM,UAAU,CAAC;AAAA,MAC9E,CAAC;AAAA,IACH;AAGA,QAAI,MAAM,mBAAmB;AAC3B,UAAI,OAAO,MAAM,oBAAoB,mBAAmB;AAGxD,UAAI,MAAM,uBAAuB,KAAK,IAAI;AACxC,cAAM,uBAAuB,KAAK;AAAA,MACpC;AAEA,UAAI,MAAM,sBAAsB,KAAK,IAAI;AACvC,cAAM,sBAAsB,KAAK;AAAA,MACnC;AAEA,YAAM,YAAY,8BAA8B;AAEhD,UAAI,MAAM,YAAY,iBAAiB,MAAM,MAAM;AACjD,cAAM,YAAY,OAAO,KAAK,IAAI,KAAK,EAAE;AACzC,cAAM,YAAY,oBAAoB;AAAA,MACxC,OAAO;AACL,YAAI,SAAS,MAAM,YAAY,QAAQ;AAEvC,YAAI,OAAO,OAAO,KAAK,MAAM,OAAO,OAAO,KAAK,IAAI;AAClD,gBAAM,YAAY,OAAO,KAAK,IAAI,KAAK,EAAE;AACzC,gBAAM,YAAY,oBAAoB;AAAA,QACxC;AAAA,MACF;AAEA,YAAM,YAAY,KAAK;AACvB,UAAI,KAAK,MAAM;AACf,SAAG,WAAW,GAAK,GAAK,GAAK,CAAG;AAChC,SAAG,UAAU,MAAM,MAAM,MAAM,IAAI;AACnC,SAAG,MAAM,GAAG,gBAAgB;AAC5B,SAAG,SAAS,GAAG,GAAG,MAAM,qBAAqB,MAAM,oBAAoB;AACvE,YAAM,MAAM,CAAC,MAAM,sBAAsB,KAAK,IAAI,MAAM,uBAAuB,KAAK,EAAE;AAAA,IACxF;AAEA,UAAM,QAAQ,QAAQ,MAAM,QAAQ,UAAU;AAE9C,cAAU,oBAAoB,KAAK,KAAK;AAExC,QAAI,QAAQ,MAAM,YAAY,EAAE,qBAAqB;AAErD,QAAI,UAAU,kBAAkB,SAAS;AACvC,YAAM,cAAc,sBAAsB,OAAO,OAAO;AACxD,YAAM,cAAc,uBAAuB,OAAO,OAAO;AAAA,IAC3D,OAAO;AACL,YAAM,cAAc,sBAAsB,OAAO,MAAM;AACvD,YAAM,cAAc,uBAAuB,OAAO,MAAM;AAAA,IAC1D;AAGA,UAAM,cAAc;AAEpB,QAAI,MAAM,mBAAmB,MAAM;AACjC,YAAM,eAAe,SAAS;AAAA,IAChC;AAAA,EACF;AAEA,YAAU,kBAAkB,SAAU,KAAK,OAAO;AAChD,QAAI,KAAK,MAAM;AAEf,UAAM,cAAc,SAAS;AAC7B,UAAM,eAAe,SAAS;AAC9B,UAAM,aAAa,SAAS;AAC5B,UAAM,cAAc,SAAS;AAC7B,cAAU,cAAc,MAAM,MAAM,KAAK,KAAK;AAK9C,OAAG,WAAW,GAAG,WAAW,GAAG,MAAM,KAAK,QAAQ,EAAE,gBAAgB,CAAC;AACrE,UAAM,KAAK,OAAO,EAAE,QAAQ;AAC5B,UAAM,cAAc,WAAW;AAC/B,UAAM,aAAa,WAAW;AAC9B,UAAM,eAAe,WAAW;AAChC,UAAM,cAAc,WAAW;AAAA,EACjC;AAEA,YAAU,oBAAoB,SAAU,KAAK,OAAO;AAElD,QAAI,MAAM,mBAAmB,MAAM;AACjC,YAAM,eAAe,WAAW;AAAA,IAClC;AAEA,QAAI,MAAM,mBAAmB;AAG3B,YAAM,YAAY,kCAAkC;AAEpD,UAAI,MAAM,eAAe,MAAM;AAC7B,cAAM,aAAa,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,CAAC,sBAAsB,4BAA4B,yBAAyB,wBAAwB,8GAA8G,EAAE,KAAK,IAAI,GAAG,CAAC,sBAAsB,sBAAsB,+BAA+B,wBAAwB,8DAA8D,EAAE,KAAK,IAAI,GAAG,EAAE;AACxe,YAAI,UAAU,MAAM;AACpB,cAAM,UAAU,qBAAqB,YAAY;AACjD,cAAM,QAAQ,sBAAsB,MAAM,mBAAmB;AAC7D,cAAM,KAAK,QAAQ,EAAE,KAAK;AAE1B,YAAI,CAAC,MAAM,QAAQ,kBAAkB,SAAS,MAAM,KAAK,QAAQ,GAAG,YAAY,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG,MAAM,KAAK,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,MAAM,QAAQ,KAAK,GAAG;AACtM,0BAAc,4CAA4C;AAAA,QAC5D;AAAA,MACF,OAAO;AACL,cAAM,oBAAoB,eAAe,EAAE,mBAAmB,MAAM,UAAU;AAAA,MAChF;AAEA,UAAI,OAAO,MAAM,oBAAoB,mBAAmB;AAExD,YAAM,QAAQ,SAAS,GAAG,GAAG,KAAK,IAAI,KAAK,EAAE;AAE7C,UAAI,MAAM,MAAM,YAAY,gBAAgB;AAC5C,UAAI,SAAS;AACb,YAAM,WAAW,YAAY,WAAW,IAAI,eAAe,CAAC;AAC5D,YAAM,WAAW,aAAa,WAAW,MAAM,IAAI,IAAI,MAAM,IAAI,EAAE;AACnE,UAAI,KAAK,MAAM;AACf,SAAG,kBAAkB,GAAG,KAAK,GAAG,qBAAqB,GAAG,KAAK,GAAG,mBAAmB;AAEnF,YAAM,QAAQ,WAAW,MAAM,QAAQ,WAAW,GAAG,MAAM,KAAK,QAAQ,EAAE,gBAAgB,CAAC;AAC3F,UAAI,WAAW;AACf,SAAG,kBAAkB,GAAG,WAAW,GAAG,qBAAqB,GAAG,KAAK,GAAG,mBAAmB;AAAA,IAC3F;AAAA,EACF;AAEA,YAAU,cAAc,SAAU,KAAK,OAAO;AAC5C,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AACD,UAAM,WAAW,OAAO;AACxB,UAAM,eAAe,MAAM,WAAW,aAAa;AACnD,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAED,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,WAAW;AACzB;AAAA,IACF;AAEA,cAAU,iBAAiB,KAAK,KAAK;AACrC,cAAU,gBAAgB,KAAK,KAAK;AACpC,cAAU,kBAAkB,KAAK,KAAK;AAAA,EACxC;AAEA,YAAU,gBAAgB,SAAU,KAAK,OAAO;AAC9C,QAAI,CAAC,UAAU,SAAS,GAAG;AACzB,yBAAmB,MAAM,MAAM;AAC/B;AAAA,IACF;AAEA,UAAM,SAAS,UAAU,SAAS,EAAE,UAAU;AAAA,EAChD;AAEA,YAAU,sBAAsB,SAAU,KAAK,OAAO;AAEpD,QAAI,UAAU,8BAA8B,KAAK,KAAK,GAAG;AACvD,gBAAU,mBAAmB,KAAK,KAAK;AAAA,IACzC;AAAA,EACF;AAEA,YAAU,gCAAgC,SAAU,KAAK,OAAO;AAE9D,QAAI,MAAM,aAAa,SAAS,IAAI,UAAU,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,WAAW,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,YAAY,EAAE,SAAS,KAAK,MAAM,aAAa,SAAS,IAAI,MAAM,aAAa,SAAS,GAAG;AAC9S,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,QAAQ,MAAM;AAElB,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,QAAI,UAAU,MAAM,aAAa,KAAK,MAAM,aAAa,EAAE,WAAW;AAEtE,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,YAAY;AAE9B,QAAI,CAAC,MAAM,cAAc,UAAU,GAAG;AACpC,UAAI,SAAS,IAAI,WAAW,KAAK,EAAE;AAEnC,eAAS,IAAI,GAAG,IAAI,KAAK,IAAI,EAAE,GAAG;AAChC,eAAO,KAAK,MAAQ,KAAK,OAAO;AAAA,MAClC;AAEA,YAAM,cAAc,sBAAsB,OAAO,MAAM;AACvD,YAAM,cAAc,uBAAuB,OAAO,MAAM;AACxD,YAAM,cAAc,gBAAgB,IAAI,IAAI,GAAG,aAAa,eAAe,MAAM;AAAA,IACnF;AAEA,QAAI,UAAU,QAAQ,sBAAsB;AAC5C,QAAI,SAAS,MAAM,yBAAyB;AAC5C,QAAI,YAAY,SAAS,UAAU;AAEnC,QAAI,WAAW,GAAG,OAAO,MAAM,SAAS,CAAC;AAEzC,QAAI,MAAM,yBAAyB,UAAU;AAC3C,UAAI,SAAS;AACb,UAAI,QAAQ,SAAS,IAAI;AACzB,UAAI,UAAU,IAAI,aAAa,KAAK;AACpC,UAAI,WAAW,IAAI,aAAa,MAAM;AAEtC,eAAS,IAAI,GAAG,IAAI,WAAW,EAAE,GAAG;AAClC,YAAI,OAAO,MAAM,iBAAiB,CAAC;AACnC,YAAI,gBAAgB,MAAM,WAAW,kBAAkB,IAAI,MAAM,6BAA6B,CAAC;AAC/F,YAAI,SAAS,KAAK,SAAS;AAC3B,aAAK,SAAS,OAAO,IAAI,OAAO,IAAI,QAAQ,UAAU,CAAC;AAEvD,iBAAS,MAAM,GAAG,MAAM,QAAQ,EAAE,KAAK;AACrC,kBAAQ,IAAI,SAAS,IAAI,OAAO,IAAM,KAAK,IAAI,IAAM,SAAS,MAAM,aAAa;AACjF,kBAAQ,IAAI,SAAS,IAAI,MAAM,UAAU,QAAQ,IAAI,SAAS,IAAI;AAAA,QACpE;AAAA,MACF;AAEA,YAAM,eAAe,yBAAyB,MAAM,mBAAmB;AACvE,YAAM,eAAe,sBAAsB,OAAO,MAAM;AACxD,YAAM,eAAe,uBAAuB,OAAO,MAAM;AAKzD,UAAI,MAAM,oBAAoB,UAAU,KAAK,MAAM,QAAQ,aAAa,mBAAmB,KAAK,MAAM,QAAQ,aAAa,0BAA0B,GAAG;AACtJ,cAAM,eAAe,gBAAgB,QAAQ,IAAI,WAAW,GAAG,aAAa,OAAO,OAAO;AAAA,MAC5F,OAAO;AACL,YAAI,UAAU,IAAI,WAAW,KAAK;AAElC,iBAAS,MAAM,GAAG,MAAM,OAAO,EAAE,KAAK;AACpC,kBAAQ,OAAO,MAAQ,QAAQ;AAAA,QACjC;AAEA,cAAM,eAAe,gBAAgB,QAAQ,IAAI,WAAW,GAAG,aAAa,eAAe,OAAO;AAAA,MACpG;AAEA,YAAM,uBAAuB;AAAA,IAC/B;AAGA,eAAW,GAAG,OAAO,MAAM,SAAS,CAAC;AAErC,QAAI,MAAM,uBAAuB,UAAU;AACzC,UAAI,SAAS;AACb,UAAI,QAAQ,SAAS,IAAI,YAAY;AACrC,UAAI,SAAS,IAAI,WAAW,KAAK;AAEjC,UAAI,YAAY,IAAI,aAAa,SAAS,CAAC;AAE3C,eAAS,KAAK,GAAG,KAAK,WAAW,EAAE,IAAI;AACrC,YAAI,OAAO,MAAM,uBAAuB,EAAE;AAC1C,YAAI,SAAS,KAAK,SAAS;AAC3B,aAAK,SAAS,OAAO,IAAI,OAAO,IAAI,QAAQ,WAAW,CAAC;AAExD,iBAAS,MAAM,GAAG,MAAM,SAAS,GAAG,EAAE,KAAK;AACzC,iBAAO,KAAK,SAAS,IAAI,OAAO,MAAQ,UAAU;AAClD,iBAAO,KAAK,SAAS,IAAI,MAAM,SAAS,KAAK,MAAQ,UAAU;AAAA,QACjE;AAAA,MACF;AAEA,YAAM,aAAa,yBAAyB,MAAM,mBAAmB;AACrE,YAAM,aAAa,sBAAsB,OAAO,MAAM;AACtD,YAAM,aAAa,uBAAuB,OAAO,MAAM;AACvD,YAAM,aAAa,gBAAgB,QAAQ,IAAI,WAAW,GAAG,aAAa,eAAe,MAAM;AAC/F,YAAM,qBAAqB;AAAA,IAC7B;AAGA,eAAW,GAAG,OAAO,MAAM,SAAS,CAAC;AAErC,QAAI,MAAM,wBAAwB,UAAU;AAE1C,UAAI,OAAO,MAAM,cAAc;AAC/B,YAAM,cAAc,yBAAyB,MAAM,mBAAmB;AACtE,YAAM,cAAc,mBAAmB;AACvC,YAAM,cAAc,0BAA0B,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,SAAS,QAAQ,YAAY,GAAG,QAAQ,QAAQ,GAAG,MAAM,WAAW,0BAA0B,CAAC;AACxK,YAAM,sBAAsB;AAAA,IAC9B;AAEA,QAAI,CAAC,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG;AAE3C,UAAI,WAAW,IAAI,aAAa,EAAE;AAElC,eAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,iBAAS,MAAM,KAAK,MAAM,IAAI,IAAI;AAClC,iBAAS,MAAM,IAAI,KAAK,MAAM,IAAI,IAAM;AACxC,iBAAS,MAAM,IAAI,KAAK;AAAA,MAC1B;AAEA,UAAI,YAAY,IAAI,YAAY,CAAC;AACjC,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AAyBf,UAAI,SAAS,eAAa,YAAY;AAAA,QACpC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,aAAO,QAAQ,QAAQ;AACvB,UAAI,QAAQ,eAAa,YAAY;AAAA,QACnC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,YAAM,KAAK,QAAQ,EAAE,UAAU,OAAO,SAAS,eAAe,SAAS;AAAA,QACrE;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAEA,UAAM,aAAa,SAAS;AAAA,EAC9B;AACF;AAiCA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,eAAe,CAAC;AACtB,MAAI,MAAM,cAAc;AAAA,IACtB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,OAAO,UAAU,YAAY;AACnC,QAAM,gBAAgB,mBAAiB,YAAY;AACnD,QAAM,iBAAiB,mBAAiB,YAAY;AACpD,QAAM,eAAe,mBAAiB,YAAY;AAClD,QAAM,gBAAgB,mBAAiB,YAAY;AACnD,QAAM,cAAc,SAAS,KAAK,MAAM;AACxC,QAAM,cAAc,SAAS,KAAK,MAAM;AACxC,QAAM,cAAc,qBAAqB,YAAY;AACrD,QAAM,YAAY,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACpD,QAAM,kBAAkB,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AACzD,QAAM,cAAc,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACtD,QAAM,mBAAmB,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAC3D,QAAM,oBAAoB,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAC5D,QAAM,aAAa;AAEnB,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AAEpC,wBAAsB,WAAW,KAAK;AACxC;AA3nCA,IAuBI,kBACA,iBA4iCA,kBAyDA,eAEA;AA/nCJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,mBAAkB;AAAtB,IACI,kBAAgB;AA4iCpB,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,MAAM;AAAA,MACN,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,cAAc;AAAA,IAChB;AA+BA,IAAI,gBAAc,YAAc,UAAQ,uBAAuB;AAE/D,IAAI,kBAAkB;AAAA,MACpB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,mBAAmB,aAAW;AAAA;AAAA;;;ACpoC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,2CAA2C,WAAW,OAAO;AAC3D,QAAM,eAAe,KAAK,mCAAmC;AAE7D,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,UAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,UAAM,sBAAsB,MAAM,eAAe,UAAU;AAC3D,QAAI,cAAc,MAAM,eAAe,eAAe;AACtD,QAAI,SAAS,MAAM,iBAAiB,MAAM,eAAe,cAAc,EAAE,gBAAgB,IAAI;AAC7F,QAAI,QAAQ,MAAM,eAAe,sBAAsB;AACvD,QAAI,SAAS;AAEb,QAAI,MAAM,WAAW,cAAc,GAAG;AACpC,UAAI,MAAM,WAAW,kBAAkB;AACvC,UAAI,QAAQ,KAAK,MAAM,IAAI,SAAS,CAAC;AACrC,UAAI,SAAS,KAAK,MAAM,IAAI,UAAU,CAAC;AAEvC,UAAI,KAAK,MAAM,oBAAoB,WAAW;AAE9C,UAAI,KAAK;AAET,UAAI,KAAK,WAAW,eAAe;AAEnC,UAAI,CAAC,IAAI;AACP,uBAAc,gCAAgC;AAAA,MAChD,OAAO;AAEL,WAAG,8BAA8B;AAAA,MACnC;AAEA,UAAI,cAAc,GAAG,kBAAkB;AACvC,SAAG,gBAAgB,GAAG,aAAa,WAAW;AAC9C,SAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,IAAI,UAAU,GAAG,CAAC;AAE/F,UAAI,GAAG,uBAAuB,GAAG,WAAW,MAAM,GAAG,sBAAsB;AACzE,iBAAS,IAAI,WAAW,QAAQ,SAAS,CAAC;AAC1C,WAAG,SAAS,GAAG,GAAG,OAAO,MAAM;AAC/B,WAAG,WAAW,GAAG,GAAG,OAAO,QAAQ,GAAG,MAAM,GAAG,eAAe,MAAM;AAAA,MACtE;AAGA,UAAI,IAAI;AACN,WAAG,kCAAkC;AAAA,MACvC;AAEA,SAAG,kBAAkB,WAAW;AAAA,IAClC;AAEA,UAAM,WAAW,eAAe,MAAM,WAAW,aAAa,GAAG,QAAQ,aAAa,OAAO,MAAM;AAAA,EACrG;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,MAAM,WAAW,cAAc,GAAG;AACpC,mBAAW,aAAa;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,oCAAkC,WAAW,KAAK;AACpD;AAhFA,IAKI,gBAkEA,kBAWA,eAEA;AApFJ;AAAA;AAAA;AACA;AACA;AAGA,IAAI,iBAAgB;AAkEpB,IAAI,mBAAiB,CAAC;AAWtB,IAAI,gBAAc,YAAc,UAAQ,mCAAmC;AAE3E,IAAI,8BAA8B;AAAA,MAChC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,+BAA+B,aAAW;AAAA;AAAA;;;ACrF3D,2BAA0B,WAAW,IAAI;AACvC,iBAAc,aAAa;AAC7B;AAIA,kCAAkC,WAAW,OAAO;AAElD,QAAM,eAAe,KAAK,0BAA0B;AACtD;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,YAAY;AAElB,uBAAmB,OAAO,WAAW,OAAO,aAAa;AAEzD,2BAAyB,WAAW,KAAK;AAC3C;AA7BA,IAGI,gBAeA,kBAaA;AA/BJ;AAAA;AAAA;AACA;AAEA,IAAI,iBAAgB,uBAAO,OAAO,IAAI;AAetC,IAAI,mBAAiB,CAAC;AAatB,IAAI,gBAAc,MAAM,YAAY,UAAQ,0BAA0B;AAAA;AAAA;;;ACvBtE,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,sBAAsB,SAAU,QAAQ,QAAQ,QAAQ,cAAc;AAC9E,iBAAK,SAAS,MAAM;AAEpB,QAAI,MAAM,WAAW,sBAAsB,GAAG;AAE5C,UAAI,gBAAgB,MAAM,WAAW,iBAAiB;AACtD,UAAI,QAAQ,gBAAgB;AAC5B,UAAI,SAAS;AACb,UAAI,OAAQ,cAAa,KAAK,KAAO;AACrC,UAAI,OAAQ,cAAa,KAAK,KAAO;AACrC,UAAI,OAAQ,cAAa,KAAK,KAAO;AACrC,UAAI,OAAQ,cAAa,KAAK,KAAO;AACrC,UAAI,KAAK,IAAO,QAAO;AACvB,UAAI,KAAK,IAAO,QAAO;AACvB,aAAO,KAAK,IAAM;AAClB,aAAO,KAAK,IAAM;AAClB,aAAO,MAAM,IAAO,QAAO,KAAK,OAAO;AACvC,aAAO,MAAO,QAAO,QAAQ;AAC7B,aAAO,MAAO,QAAO,QAAQ;AAC7B,aAAO,MAAM,OAAO,KAAM,QAAO,KAAK,OAAO;AAAA,IAC/C,OAAO;AACL,UAAI,MAAM,KAAK,IAAI,KAAK,KAAK,MAAM,WAAW,aAAa,IAAI,GAAK;AAEpE,UAAI;AAEJ,UAAI;AAEJ,UAAI,MAAM,WAAW,0BAA0B,MAAM,MAAM;AACzD,iBAAS,OAAO,KAAK;AACrB,kBAAU,OAAO,KAAK,MAAM;AAAA,MAC9B,OAAO;AACL,iBAAS,OAAO,KAAK,MAAM;AAC3B,kBAAU,OAAO,KAAK;AAAA,MACxB;AAEA,UAAI,QAAS,cAAa,KAAK,KAAO;AAEtC,UAAI,QAAS,cAAa,KAAK,KAAO;AAEtC,UAAI,QAAS,cAAa,KAAK,KAAO;AAEtC,UAAI,QAAS,cAAa,KAAK,KAAO;AAEtC,aAAO,KAAK,IAAM,OAAO,KAAM,SAAQ;AACvC,aAAO,KAAK,IAAM,OAAO,KAAM,SAAQ;AACvC,aAAO,MAAO,SAAQ,SAAU,SAAQ;AACxC,aAAO,MAAO,SAAQ,SAAU,SAAQ;AACxC,aAAO,MAAM;AACb,aAAO,MAAM,OAAO;AACpB,aAAO,MAAM;AACb,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,YAAU,uBAAuB,SAAU,KAAK;AAC9C,QAAI,MAAM,WAAW,sBAAsB,GAAG;AAC5C,aAAO,IAAM;AAAA,IACf;AAEA,QAAI,SAAS,MAAM,WAAW,4BAA4B;AAC1D,QAAI,OAAO,CAAC,OAAO,KAAK;AACxB,WAAQ,QAAO,KAAK,OAAO,MAAO,QAAO,KAAK,OAAO,MAAM,IAAM,OAAO,KAAK,OAAO,KAAM,QAAQ,QAAO,KAAK,OAAO;AACrH,WAAO,MAAM,OAAO;AAAA,EACtB;AAEA,YAAU,iBAAiB,SAAU,gBAAgB;AAEnD,QAAI,MAAM,eAAe,cAAc;AACvC,QAAI,qBAAqB,eAAe,UAAU;AAElD,QAAI,KAAK,IAAI,mBAAmB,SAAS,GAAG,UAAU,SAAS,GAAG,IAAI,SAAS,GAAG,MAAM,WAAW,SAAS,GAAG,eAAe,kBAAkB,CAAC,IAAI,MAAM,cAAc,SAAS,GAAG;AACnL,UAAI,OAAO,MAAM,WAAW,cAAc;AAC1C,mBAAK,KAAK,MAAM,YAAY,cAAc,IAAI;AAE9C,YAAM,YAAY,aAAa,KAAK;AACpC,YAAM,YAAY,aAAa,KAAK;AACpC,YAAM,YAAY,aAAa,MAAM;AACrC,mBAAK,OAAO,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAC1E,mBAAK,UAAU,MAAM,YAAY,MAAM,IAAI;AAC3C,UAAI,SAAS,eAAe,+BAA+B;AAC3D,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM;AACrE,UAAI,cAAc,eAAe,eAAe;AAChD,UAAI,SAAS,MAAM,WAAW,4BAA4B;AAC1D,gBAAU,oBAAoB,MAAM,YAAY,MAAM,aAAa,QAAQ,MAAM,WAAW,2BAA2B,CAAC;AACxH,mBAAK,SAAS,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AACpF,mBAAK,OAAO,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AAC1D,YAAM,cAAc,SAAS;AAAA,IAC/B;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,CAAC;AACvB,QAAM,IAAI,MAAM,aAAa;AAE7B,QAAM,cAAc;AAAA,IAClB,cAAc,IAAI,aAAa,EAAE;AAAA,IACjC,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,EAC3B;AAEA,QAAM,OAAO,WAAW,OAAO,CAAC,eAAe,CAAC;AAEhD,kBAAgB,WAAW,KAAK;AAClC;AArIA,IA4GI,kBA2BA;AAvIJ;AAAA;AAAA;AACA;AACA;AACA;AAyGA,IAAI,mBAAiB;AAAA,MACnB,eAAe;AAAA,MACf,aAAa;AAAA,IACf;AAwBA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAO1C,sBAAiB,aAAa,aAAW;AAAA;AAAA;;;ACzIzC,4BAA4B,WAAW,OAAO;AAE5C,QAAM,eAAe,KAAK,oBAAoB;AAE9C,YAAU,eAAe,SAAU,WAAW;AAE5C,QAAI,MAAM,UAAU,WAAW,UAAU,QAAQ;AAC/C,UAAI,WAAW;AAEf,eAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,YAAI,MAAM,UAAU,OAAO,UAAU,IAAI;AACvC,qBAAW;AAAA,QACb;AAAA,MACF;AAEA,UAAI,UAAU;AACZ;AAAA,MACF;AAAA,IACF;AAGA,UAAM,YAAY;AAClB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,qBAAqB,SAAU,QAAQ;AAC/C,QAAI,UAAU,CAAC;AAEf,aAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,UAAI,QAAQ,MAAM,UAAU,GAAG,wBAAwB;AACvD,YAAM,UAAU;AAChB,cAAQ,KAAK,KAAK;AAAA,IACpB;AAEA,WAAO,OAAO,mBAAmB;AAAA,MAC/B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,eAAe,SAAU,QAAQ;AAEzC,QAAI,QAAQ,UAAU,SAAS;AAE/B,aAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,UAAI,KAAK,MAAM,UAAU,GAAG,iBAAiB,EAAE,SAAS;AACxD,cAAQ,KAAK,QAAQ,KAAK;AAAA,IAC5B;AAEA,QAAI,QAAQ,MAAM,cAAc,SAAS,GAAG;AAC1C,aAAO,MAAM;AAAA,IACf;AAEA,QAAI,UAAU,CAAC;AAEf,aAAS,KAAK,GAAG,KAAK,MAAM,UAAU,QAAQ,MAAM;AAClD,UAAI,QAAQ,MAAM,UAAU,IAAI,kBAAkB;AAElD,YAAM,UAAU;AAChB,cAAQ,KAAK,KAAK;AAAA,IACpB;AAEA,UAAM,YAAY,OAAO,UAAU,EAAE,gBAAgB;AAAA,MACnD,QAAQ,UAAU,mBAAmB,MAAM;AAAA,MAC3C;AAAA,MACA,OAAO,MAAM;AAAA,IACf,CAAC;AACD,UAAM,cAAc,SAAS;AAC7B,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,gBAAgB,SAAU,UAAU;AAC5C,QAAI,QAAQ,CAAC;AACb,QAAI,SAAS,SAAS,wBAAwB,MAAM,KAAK;AAEzD,aAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,YAAM,KAAK,MAAM,UAAU,GAAG,cAAc,GAAG,MAAM,CAAC;AAAA,IACxD;AAEA,WAAO,MAAM,KAAK,IAAI;AAAA,EACxB;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,YAAY,CAAC;AACnB,QAAM,gBAAgB,CAAC;AACvB,QAAM,IAAI,MAAM,eAAe;AAAA,IAC7B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,IAAI,WAAW,OAAO,CAAC,iBAAiB,UAAU,eAAe,OAAO,CAAC;AAC/E,QAAM,OAAO,WAAW,OAAO,CAAC,SAAS,UAAU,oBAAoB,YAAY,CAAC;AACpF,qBAAmB,WAAW,KAAK;AACrC;AA7GA,IA0FI,kBAqBA,eAEA;AAjHJ;AAAA;AAAA;AA0FA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAiBA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,uBAAuB;AAAA,MACzB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC/GA,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,YAAU,aAAa,SAAU,QAAQ,YAAY;AACnD,UAAM,SAAS;AAEf,UAAM,SAAS,MAAM,OAAO,UAAU,EAAE,mBAAmB;AAAA,MACzD,MAAM,WAAW,QAAQ;AAAA,IAC3B,CAAC;AAAA,EACH;AAIF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,iBAAiB,CAAC;AAC/C,QAAM,OAAO,WAAW,OAAO,CAAC,UAAU,QAAQ,CAAC;AAEnD,wBAAsB,WAAW,KAAK;AACxC;AAtCA,IAwBI,kBAiBA,eAEA;AA3CJ;AAAA;AAAA;AAwBA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAcA,IAAI,gBAAc,MAAM,YAAY,UAAQ,uBAAuB;AAEnE,IAAI,0BAA0B;AAAA,MAC5B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACxCA,qBAAoB,QAAQ,QAAQ,SAAS;AAC3C,MAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC9E,MAAI,aAAa,MAAM,QAAQ,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI;AAC/D,MAAI,WAAW;AAEf,MAAI,OAAO,OAAO,MAAM,MAAM,IAAI;AAChC,eAAW;AAAA,EACb;AAEA,MAAI,QAAQ;AAEZ,MAAI,KAAK;AACP,YAAQ;AAAA,EACV;AAEA,MAAI,QAAQ,IAAI,OAAO,QAAQ,KAAK;AACpC,MAAI,YAAY,OAAO,QAAQ,OAAO,UAAU;AAChD,SAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,EACV;AACF;AAKA,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,kBAAkB,SAAU,YAAY;AAEhD,QAAI,QAAQ,WAAW,QAAQ;AAC/B,QAAI,QAAQ,WAAW,QAAQ;AAE/B,QAAI,OAAO,MAAM,eAAe,KAAK;AAErC,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAI,MAAM,KAAK;AAEf,UAAI,IAAI,QAAQ,MAAM,SAAS,IAAI,QAAQ,MAAM,OAAO;AACtD,eAAO,MAAM,eAAe,IAAI,GAAG;AAAA,MACrC;AAAA,IACF;AAGA,QAAI,KAAK,wBAAsB,YAAY;AAC3C,OAAG,WAAW,MAAM,QAAQ,UAAU;AAEtC,UAAM,eAAe,IAAI,YAAY,EAAE;AAEvC,WAAO;AAAA,EACT;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,iBAAiB,oBAAI,IAAI;AAE/B,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,UAAU,QAAQ,CAAC;AAEnD,uBAAqB,WAAW,KAAK;AACvC;AAhFA,IAgEI,kBAkBA,eAEA;AApFJ;AAAA;AAAA;AACA;AA+DA,IAAI,mBAAiB;AAAA,MACnB,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAcA,IAAI,gBAAc,MAAM,YAAY,UAAQ,sBAAsB;AAElE,IAAI,yBAAyB;AAAA,MAC3B,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,IACd;AAAA;AAAA;;;ACnFA,2BAA2B,WAAW,OAAO;AAE3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,aAAa,SAAU,QAAQ,MAAM;AAE7C,UAAM,sBAAsB,MAAM,cAAc,oBAAoB;AACpE,UAAM,oBAAoB,UAAU,WAAW,MAAM;AACrD,UAAM,oBAAoB,SAAS,MAAM;AACzC,UAAM,oBAAoB,QAAQ;AAElC,QAAI,mBAAmB,CAAC;AAExB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,QAAQ,KAAK;AAC7C,uBAAiB,KAAK,MAAM,QAAQ,GAAG,MAAM;AAAA,IAC/C;AAEA,UAAM,iBAAiB,OAAO,UAAU,EAAE,qBAAqB;AAAA,MAC7D;AAAA,IACF,CAAC;AACD,UAAM,oBAAoB,SAAS,MAAM;AAEzC,aAAS,KAAK,GAAG,KAAK,MAAM,mBAAmB,QAAQ,MAAM;AAC3D,UAAI,KAAK,MAAM,mBAAmB;AAClC,UAAI,KAAK,OAAO,gBAAgB,EAAE;AAElC,UAAI,GAAG,QAAQ,MAAM,UAAU;AAC7B,cAAM,oBAAoB,OAAO,SAAS,GAAG,UAAU;AACvD,cAAM,oBAAoB,OAAO,aAAa;AAAA,MAChD;AAEA,UAAI,GAAG,QAAQ,MAAM,YAAY;AAC/B,cAAM,oBAAoB,SAAS,SAAS,GAAG,UAAU;AACzD,cAAM,oBAAoB,SAAS,aAAa;AAAA,MAClD;AAAA,IACF;AAEA,UAAM,SAAS,OAAO,UAAU,EAAE,qBAAqB,MAAM,mBAAmB;AAAA,EAClF;AAEA,YAAU,uBAAuB,SAAU,OAAO;AAChD,aAAS,IAAI,GAAG,IAAI,MAAM,mBAAmB,QAAQ,KAAK;AACxD,UAAI,MAAM,mBAAmB,GAAG,QAAQ,MAAM;AAAO,eAAO,MAAM,mBAAmB;AAAA,IACvF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,WAAW;AAClD,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AAEA,UAAM,QAAQ,KAAK;AAAA,MACjB,QAAQ,UAAU,mBAAmB,MAAM,MAAM;AAAA,MACjD,OAAO,UAAU,SAAS;AAAA,IAC5B,CAAC;AAAA,EACH;AAEA,YAAU,qBAAqB,SAAU,KAAK;AAC5C,WAAO,MAAM,QAAQ,KAAK;AAAA,EAC5B;AAEA,YAAU,0BAA0B,SAAU,QAAQ;AACpD,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,QAAQ,KAAK;AAC7C,UAAI,MAAM,QAAQ,GAAG,UAAU,QAAQ;AACrC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,kBAAkB,SAAU,eAAe,QAAQ;AAC3D,WAAO,YAAY,aAAa;AAAA,EAClC;AACF;AAeA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,MAAI,WAAW,KAAK;AACpB,QAAM,UAAU,CAAC;AACjB,QAAM,qBAAqB,CAAC;AAC5B,MAAI,WAAW,OAAO,CAAC,UAAU,qBAAqB,CAAC;AACvD,SAAO,WAAW,OAAO,CAAC,UAAU,iBAAiB,YAAY,aAAa,CAAC;AAG/E,oBAAkB,WAAW,KAAK;AACpC;AAhHA,IA0FI,kBAwBA,eAEA;AApHJ;AAAA;AAAA;AA0FA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb,UAAU;AAAA,MACV,qBAAqB;AAAA,IACvB;AAgBA,IAAI,gBAAc,YAAc,UAAQ,mBAAmB;AAE3D,IAAI,sBAAsB;AAAA,MACxB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AChHA,oCAAoC,WAAW,OAAO;AAEpD,QAAM,eAAe,KAAK,4BAA4B;AAEtD,YAAU,YAAY,SAAU,MAAM;AACpC,WAAO,MAAM,YAAY,SAAS,IAAI;AAAA,EACxC;AAEA,YAAU,YAAY,SAAU,MAAM,MAAM;AAC1C,QAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACxF,UAAM,YAAY,KAAK,IAAI;AAC3B,UAAM,YAAY,KAAK,IAAI;AAC3B,UAAM,qBAAqB,KAAK,aAAa;AAAA,EAC/C;AAEA,YAAU,mBAAmB,SAAU,MAAM,MAAM;AACjD,UAAM,mBAAmB,KAAK,IAAI;AAClC,UAAM,mBAAmB,KAAK,IAAI;AAAA,EACpC;AAEA,YAAU,kBAAkB,SAAU,MAAM,MAAM;AAChD,UAAM,kBAAkB,KAAK,IAAI;AACjC,UAAM,kBAAkB,KAAK,IAAI;AAAA,EACnC;AAIA,YAAU,oBAAoB,SAAU,YAAY,aAAa;AAC/D,QAAI,YAAY,CAAC;AACjB,QAAI,QAAQ,CAAC;AAEb,QAAI,aAAa;AACf,gBAAU,KAAK,YAAY,cAAc,CAAC;AAAA,IAC5C;AAEA,QAAI,cAAc,MAAM,kBAAkB,QAAQ;AAChD,UAAI,cAAc,CAAC;AACnB,kBAAY,KAAK,UAAU,OAAO,MAAM,MAAM,UAAU,CAAC;AAEzD,UAAI,YAAY;AACd,YAAI,aAAa,WAAW,0BAA0B;AACtD,YAAI,aAAa,WAAW,0BAA0B;AACtD,YAAI,sBAAsB,WAAW,mCAAmC;AAExE,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,cAAI,oBAAoB,OAAO,QAAW;AACxC,wBAAY,KAAK,eAAe,OAAO,GAAG,iBAAiB,EAAE,OAAO,oBAAoB,IAAI,IAAI,EAAE,OAAO,WAAW,IAAI,KAAK,EAAE,OAAO,WAAW,IAAI,GAAG,CAAC;AAAA,UAC3J,OAAO;AACL,wBAAY,KAAK,eAAe,OAAO,GAAG,IAAI,EAAE,OAAO,WAAW,IAAI,KAAK,EAAE,OAAO,WAAW,IAAI,GAAG,CAAC;AAAA,UACzG;AAAA,QACF;AAAA,MACF;AAEA,eAAS,KAAK,GAAG,KAAK,MAAM,kBAAkB,QAAQ,MAAM;AAC1D,oBAAY,KAAK,KAAK,OAAO,MAAM,kBAAkB,KAAK,KAAK,EAAE,OAAO,MAAM,kBAAkB,KAAK,GAAG,CAAC;AAAA,MAC3G;AAEA,UAAI,YAAY,SAAS,GAAG;AAC1B,oBAAY,KAAK,IAAI;AACrB,gBAAQ;AACR,kBAAU,UAAU,SAAS,MAAM;AACnC,kBAAU,KAAK,UAAU,OAAO,MAAM,MAAM,OAAO,CAAC;AAAA,MACtD;AAAA,IACF;AAEA,QAAI,UAAU,QAAQ;AACpB,YAAM,OAAO,uBAAqB,WAAW,MAAM,MAAM,2BAA2B,SAAS,EAAE;AAAA,IACjG;AAEA,QAAI,MAAM,YAAY,SAAS,MAAM,mBAAmB,QAAQ;AAC9D,UAAI,eAAe,CAAC,UAAU,OAAO,MAAM,MAAM,WAAW,CAAC;AAE7D,eAAS,MAAM,GAAG,MAAM,MAAM,YAAY,QAAQ,OAAO;AACvD,YAAI,MAAM,qBAAqB,SAAS,QAAW;AACjD,uBAAa,KAAK,eAAe,OAAO,KAAK,iBAAiB,EAAE,OAAO,MAAM,qBAAqB,MAAM,IAAI,EAAE,OAAO,MAAM,YAAY,MAAM,KAAK,EAAE,OAAO,MAAM,YAAY,MAAM,GAAG,CAAC;AAAA,QACzL,OAAO;AACL,uBAAa,KAAK,eAAe,OAAO,KAAK,IAAI,EAAE,OAAO,MAAM,YAAY,MAAM,KAAK,EAAE,OAAO,MAAM,YAAY,MAAM,GAAG,CAAC;AAAA,QAC9H;AAAA,MACF;AAEA,eAAS,MAAM,GAAG,MAAM,MAAM,mBAAmB,QAAQ,OAAO;AAC9D,qBAAa,KAAK,KAAK,OAAO,MAAM,mBAAmB,MAAM,KAAK,EAAE,OAAO,MAAM,mBAAmB,MAAM,GAAG,CAAC;AAAA,MAChH;AAEA,mBAAa,KAAK,IAAI;AACtB,cAAQ,MAAM,OAAO,YAAY;AACjC,YAAM,OAAO,uBAAqB,WAAW,MAAM,MAAM,4BAA4B,CAAC,MAAM,OAAO,MAAM,MAAM,QAAQ,CAAC,CAAC,EAAE;AAAA,IAC7H;AAEA,UAAM,OAAO,uBAAqB,WAAW,MAAM,MAAM,yBAAyB,KAAK,EAAE;AAAA,EAC3F;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,cAAc,CAAC;AACrB,QAAM,cAAc,CAAC;AACrB,QAAM,uBAAuB,CAAC;AAC9B,QAAM,qBAAqB,CAAC;AAC5B,QAAM,qBAAqB,CAAC;AAC5B,QAAM,oBAAoB,CAAC;AAC3B,QAAM,oBAAoB,CAAC;AAE3B,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,QAAQ,QAAQ,MAAM,CAAC;AACvD,QAAM,SAAS,WAAW,OAAO,CAAC,eAAe,eAAe,sBAAsB,CAAC;AAEvF,6BAA2B,WAAW,KAAK;AAC7C;AAhIA,IAuGI,kBA2BA,eAEA;AApIJ;AAAA;AAAA;AACA;AAsGA,IAAI,mBAAiB;AAAA,MACnB,MAAM;AAAA,MAEN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,aAAa;AAAA,IACf;AAoBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,4BAA4B;AAExE,IAAI,+BAA+B;AAAA,MACjC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC6KA,qCAAqC,QAAQ;AAC3C,MAAI,CAAC,UAAU,OAAO,SAAS;AAAG,WAAO;AAEzC,MAAI,UAAU,mBAAmB,MAAM;AACrC,WAAO,eAAe;AAAA,EACxB;AAEA,gBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,SAAO;AACT;AAIA,uCAAuC,QAAQ;AAC7C,MAAI,CAAC,UAAU,OAAO,SAAS;AAAG,WAAO;AAEzC,MAAI,UAAU;AAEd,MAAI,OAAO,OAAO,SAAS,OAAO,KAAK;AACrC,cAAU,OAAO,OAAO,SAAS;AAAA,EACnC;AAEA,MAAI,YAAY,YAAY,IAAI,OAAO,SAAS,IAAI,OAAO,SAAS;AAGpE,MAAI,MAAM,OAAO,OAAO,UAAU;AAElC,MAAI,OAAO,MAAM,GAAG,GAAG;AACrB,kBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,WAAO;AAAA,EACT;AAEA,MAAI,WAAW,IAAI,MAAM;AACzB,SAAO,UAAU;AACnB;AAIA,+CAA+C,QAAQ;AACrD,MAAI,CAAC,UAAU,OAAO,SAAS;AAAG,WAAO;AAEzC,MAAI,UAAU;AAEd,MAAI,OAAO,OAAO,SAAS,OAAO,KAAK;AACrC,cAAU,OAAO,OAAO,SAAS;AAAA,EACnC;AAEA,SAAO;AACT;AAIA,uCAAuC,QAAQ;AAC7C,MAAI,CAAC,UAAU,OAAO,SAAS;AAAG,WAAO;AAEzC,MAAI;AAEJ,MAAI,OAAO,OAAO,KAAK;AACrB,aAAS;AAAA,EACX,WAAW,OAAO,OAAO,KAAK;AAC5B,aAAS;AAAA,EACX,WAAW,OAAO,OAAO,KAAK;AAC5B,aAAS;AAAA,EACX,OAAO;AACL,kBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,WAAO;AAAA,EACT;AAIA,MAAI,OAAO,OAAO,MAAM,GAAG,EAAE;AAC7B,MAAI,MAAM,OAAO,KAAK,KAAK,SAAS,EAAE;AAEtC,MAAI,OAAO,MAAM,GAAG,GAAG;AACrB,kBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,WAAO;AAAA,EACT;AAEA,YAAU,IAAK,KAAI,MAAM;AACzB,YAAU;AACV,SAAO;AACT;AAEA,uCAAuC,QAAQ;AAC7C,MAAI;AAEJ,MAAI,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AAC1C,eAAW;AAAA,EACb,WAAW,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AACjD,eAAW;AAAA,EACb,WAAW,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AACjD,eAAW;AAAA,EACb,OAAO;AACL,kBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,WAAO;AAAA,EACT;AAGA,MAAI,UAAU;AAEd,MAAI,OAAO,OAAO,SAAS,OAAO,KAAK;AACrC,cAAU,OAAO,OAAO,OAAO,SAAS,EAAE;AAAA,EAC5C;AAEA,MAAI,YAAY;AAAG,WAAO,QAAQ,OAAO,UAAU,GAAG;AACtD,MAAI,YAAY;AAAG,WAAO,QAAQ,OAAO,UAAU,GAAG;AACtD,MAAI,YAAY;AAAG,WAAO,QAAQ,OAAO,UAAU,GAAG;AACtD,SAAO;AACT;AAEA,uCAAuC,QAAQ;AAC7C,MAAI,CAAC;AAAQ,WAAO;AACpB,MAAI,UAAU;AAEd,MAAI,OAAO,UAAU,GAAG,CAAC,MAAM,OAAO;AACpC,cAAU,OAAO;AAAA,EACnB,WAAW,OAAO,UAAU,GAAG,CAAC,MAAM,OAAO;AAC3C,cAAU,OAAO,KAAK,OAAO;AAAA,EAC/B;AAEA,MAAI,WAAW;AACf,SAAO,UAAU;AACnB;AAEA,uCAAuC,QAAQ;AAC7C,MAAI,CAAC;AAAQ,WAAO;AACpB,MAAI,OAAO,SAAS,KAAK;AAAG,WAAO;AACnC,MAAI,OAAO,SAAS,KAAK;AAAG,WAAO;AACnC,MAAI,OAAO,SAAS,KAAK;AAAG,WAAO;AACnC,gBAAc,kBAAkB,OAAO,MAAM,CAAC;AAC9C,SAAO;AACT;AAvbA,IAeI,gBA0aA;AAzbJ;AAAA;AAAA;AAeA,IAAI,iBAAiB;AAAA,MAEnB,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACN,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACN,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MAEA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MAEA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACP,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACT,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,mBAAmB;AAAA,QACjB,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACT,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACT,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,mBAAmB;AAAA,QACjB,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MAEA,cAAc;AAAA,QACZ,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAAA,MACA,cAAc;AAAA,QACZ,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAAA,MACA,eAAe;AAAA,QACb,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAAA,MAEA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACT,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,aAAa;AAAA,QACX,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MAEA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACV,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,aAAa;AAAA,QACX,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MAEA,UAAU;AAAA,QACR,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,cAAc;AAAA,QACZ,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,aAAa;AAAA,QACX,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,MACA,wBAAwB;AAAA,QACtB,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAAA,MACA,cAAc;AAAA,QACZ,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAAA,IACF;AAuIA,IAAI,iBAAiB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC9bA,qBAAqB,GAAG,GAAG;AACzB,MAAI,MAAM;AAAG,WAAO;AACpB,MAAI,KAAK,QAAQ,KAAK;AAAM,WAAO;AACnC,MAAI,EAAE,WAAW,EAAE;AAAQ,WAAO;AAElC,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AACjC,QAAI,CAAC,EAAE,SAAS,EAAE,EAAE;AAAG,aAAO;AAAA,EAChC;AAEA,SAAO;AACT;AAKA,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,YAAY,SAAU,QAAQ,QAAQ;AAC9C,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,QAAI,QAAQ;AAEZ,QAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAQ,CAAC,KAAK;AAAA,IAChB;AAGA,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,UAAI,YAAY,MAAM,OAAO,GAAG,OAAO,KAAK,GAAG;AAC7C,YAAI,MAAM,OAAO,GAAG,WAAW,QAAQ;AACrC;AAAA,QACF;AAEA,cAAM,OAAO,GAAG,SAAS;AACzB;AAAA,MACF;AAAA,IACF;AAKA,UAAM,OAAO,KAAK;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,SAAS,MAAM,OAAO,KAAK,SAAU,IAAI,IAAI;AACjD,UAAI,GAAG,MAAM,KAAK,GAAG,MAAM,IAAI;AAC7B,eAAO;AAAA,MACT;AAEA,UAAI,GAAG,MAAM,KAAK,GAAG,MAAM,IAAI;AAC7B,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,YAAU,wBAAwB,SAAU,MAAM;AAChD,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,UAAI,MAAM,OAAO,GAAG,MAAM,SAAS,IAAI,GAAG;AACxC,cAAM,OAAO,OAAO,GAAG,CAAC;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,MAAM;AACpC,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,UAAI,MAAM,OAAO,GAAG,MAAM,SAAS,IAAI,GAAG;AACxC,eAAO,MAAM,OAAO,GAAG;AAAA,MACzB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM;AACvC,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,UAAI,MAAM,OAAO,GAAG,MAAM,SAAS,IAAI,GAAG;AACxC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,MAAM;AAC3C,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,UAAI,MAAM,OAAO,GAAG,MAAM,SAAS,IAAI,GAAG;AACxC,eAAO,MAAM,OAAO,GAAG,OAAO,cAAc;AAAA,MAC9C;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,WAAY;AACpC,QAAI,SAAS;AACb,QAAI,YAAY;AAEhB,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,eAAS,KAAK,GAAG,KAAK,MAAM,OAAO,GAAG,MAAM,QAAQ,MAAM;AACxD,YAAI,YAAY,MAAM,OAAO,GAAG,OAAO,oBAAoB,EAAE;AAC7D,YAAI,OAAO,eAAe,8BAA8B,UAAU,MAAM;AAExE,YAAI,YAAY,GAAG;AACjB,oBAAU;AAAA,QACZ;AAEA,iBAAS,GAAG,OAAO,QAAQ,cAAc,EAAE,OAAO,WAAW,IAAI,EAAE,OAAO,MAAM,OAAO,GAAG,MAAM,KAAK,KAAK,EAAE,OAAO,IAAI;AACvH;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,4BAA4B,WAAY;AAChD,QAAI,OAAO,CAAC;AAEZ,QAAI,MAAM,OAAO,QAAQ;AACvB,UAAI,gBAAgB,CAAC;AACrB,UAAI,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,YAAI,MAAM,MAAM,OAAO,GAAG;AAC1B,YAAI,SAAS;AAAA,UACX,aAAa,IAAI,iBAAiB;AAAA,UAClC,UAAU,MAAM,OAAO,GAAG;AAAA,UAC1B,YAAY,CAAC;AAAA,QACf;AACA,YAAI,YAAY,IAAI,oBAAoB;AAExC,iBAAS,KAAK,GAAG,KAAK,MAAM,OAAO,GAAG,MAAM,QAAQ,MAAM;AACxD,iBAAO,WAAW,KAAK;AAAA,YACrB,gBAAgB;AAAA,YAChB,QAAQ,UAAU,IAAI;AAAA,YACtB,QAAQ,UAAU,IAAI;AAAA,UACxB,CAAC;AACD;AAAA,QACF;AAEA,sBAAc,KAAK,MAAM;AAAA,MAC3B;AAEA,WAAK,UAAU;AAAA,IACjB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,SAAU,eAAe;AAC/C,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC5C,oBAAc,gBAAgB,GAAG,MAAM,OAAO,GAAG,OAAO,UAAU,CAAC;AAAA,IACrE;AAAA,EACF;AAEA,YAAU,WAAW,WAAY;AAAA,EAAC;AAElC,YAAU,2BAA2B,WAAY;AAC/C,QAAI,MAAM,SAAS;AACjB,YAAM,SAAS,CAAC;AAChB,YAAM,sBAAsB,CAAC;AAC7B,YAAM,wBAAwB,CAAC;AAAA,IACjC;AAAA,EACF;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,MAAI,WAAW,KAAK;AACpB,QAAM,sBAAsB,CAAC;AAC7B,QAAM,wBAAwB,CAAC;AAC/B,QAAM,SAAS,CAAC;AAChB,SAAO,WAAW,OAAO,CAAC,WAAW,UAAU,QAAQ,CAAC;AAGxD,uBAAqB,WAAW,KAAK;AACvC;AAlMA,IAgLI,kBAoBA,eAEA;AAtMJ;AAAA;AAAA;AACA;AA+KA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,IACzB;AAgBA,IAAI,gBAAc,YAAc,UAAQ,sBAAsB;AAE9D,IAAI,yBAAyB;AAAA,MAC3B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC5LA,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,YAAU,6BAA6B,SAAU,MAAM,UAAU,aAAa;AAE5E,QAAI,QAAQ,6BAA2B,YAAY;AAAA,MACjD,MAAM;AAAA,MACN;AAAA,MACA,MAAM,MAAM;AAAA,IACd,CAAC;AACD,QAAI,QAAQ,6BAA2B,YAAY;AAAA,MACjD,MAAM;AAAA,MACN;AAAA,MACA,MAAM,MAAM;AAAA,IACd,CAAC;AAED,QAAI,OAAO,SAAS,sBAAsB;AAC1C,SAAK,KAAK,KAAK;AACf,SAAK,KAAK,KAAK;AAEf,QAAI,QAAQ,MAAM,uBAAuB,MAAM;AAE/C,QAAI,KAAK,IAAI,OAAO,kBAAkB,GAAG;AACzC,QAAI,SAAS,MAAM,MAAM,EAAE,EAAE,OAAO,SAAU,GAAG,IAAG,GAAG;AACrD,aAAO,EAAE,QAAQ,CAAC,MAAM;AAAA,IAC1B,CAAC;AACD,QAAI,SAAS,OAAO,IAAI,SAAU,GAAG;AACnC,aAAO,gBAAgB,OAAO,EAAE,UAAU,GAAG,EAAE,SAAS,CAAC,CAAC;AAAA,IAC5D,CAAC;AAED,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,QAAQ,OAAO;AAEnB,UAAI,UAAU,4BAA4B,MAAM,mBAAmB,IAAI,KAAK,GAAG;AAC7E,cAAM,mBAAmB,IAAI,KAAK,EAAE,MAAM,UAAU,WAAW;AAAA,MACjE;AAAA,IACF;AAIA,cAAU,uBAAuB,MAAM,UAAU,WAAW;AAAA,EAE9D;AAEA,YAAU,yBAAyB,SAAU,MAAM,UAAU,aAAa;AACxE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,UAAM,kBAAkB,MAAM,WAAW;AACzC,QAAI,QAAQ,SAAS,qBAAqB,UAAU;AACpD,UAAM,kBAAkB,KAAK;AAAA,EAC/B;AAEA,YAAU,6BAA6B,SAAU,MAAM,UAAU,aAAa;AAC5E,UAAM,cAAc,kBAAkB,QAAQ;AAAA,EAChD;AAEA,QAAM,mBAAmB,IAAI,8BAA8B,UAAU,0BAA0B;AAE/F,YAAU,wBAAwB,SAAU,MAAM,UAAU,aAAa;AACvE,QAAI,CAAC,MAAM,gBAAgB;AACzB;AAAA,IACF;AAEA,QAAI,UAAU,MAAM,eAAe,aAAa,EAAE,cAAc,QAAQ;AACxE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,QAAI,OAAO,MAAM,QAAQ;AACzB,WAAO,uBAAqB,WAAW,MAAM,wBAAwB,CAAC,OAAO,CAAC,EAAE;AAChF,UAAM,QAAQ,IAAI;AAClB,QAAI,QAAQ,SAAS,qBAAqB,UAAU;AACpD,WAAO,MAAM,QAAQ;AACrB,WAAO,uBAAqB,WAAW,MAAM,wBAAwB,CAAC,OAAO,CAAC,EAAE;AAChF,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,QAAM,mBAAmB,IAAI,yBAAyB,UAAU,qBAAqB;AAErF,YAAU,sBAAsB,SAAU,MAAM,UAAU,aAAa;AACrE,QAAI,UAAU,MAAM,UAAU,cAAc,QAAQ;AACpD,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,QAAI,OAAO,MAAM,QAAQ;AACzB,WAAO,uBAAqB,WAAW,MAAM,sBAAsB,CAAC,OAAO,CAAC,EAAE;AAC9E,UAAM,QAAQ,IAAI;AAClB,QAAI,QAAQ,SAAS,qBAAqB,UAAU;AACpD,UAAM,gBAAgB,QAAQ,oCAAoC;AAClE,WAAO,MAAM,QAAQ;AACrB,WAAO,uBAAqB,WAAW,MAAM,sBAAsB,CAAC,OAAO,CAAC,EAAE;AAC9E,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,QAAM,mBAAmB,IAAI,uBAAuB,UAAU,mBAAmB;AAEjF,YAAU,wBAAwB,SAAU,MAAM,UAAU,aAAa;AACvE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,UAAM,iBAAiB,aAAa,6BAA6B;AACjE,QAAI,OAAO,MAAM,QAAQ;AACzB,WAAO,uBAAqB,WAAW,MAAM,yBAAyB,CAAC,wDAAwD,CAAC,EAAE;AAClI,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,QAAM,mBAAmB,IAAI,yBAAyB,UAAU,qBAAqB;AAErF,YAAU,sBAAsB,SAAU,MAAM,UAAU,aAAa;AACrE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,UAAM,UAAU,aAAa,UAAU;AAAA,EACzC;AAEA,QAAM,mBAAmB,IAAI,uBAAuB,UAAU,mBAAmB;AAEjF,YAAU,iBAAiB,SAAU,MAAM;AAEzC,QAAI,MAAM,aAAa,SAAS,IAAI,GAAG;AACrC;AAAA,IACF;AAEA,UAAM,aAAa,KAAK,IAAI;AAAA,EAC9B;AAEA,YAAU,oBAAoB,SAAU,eAAe;AACrD,QAAI,WAAW,cAAc,iBAAiB;AAE9C,kBAAc,kBAAkB,MAAM,SAAS;AAE/C,aAAS,gBAAgB,eAAe,MAAM,WAAW;AACzD,kBAAc,KAAK,MAAM,kBAAkB,MAAM,mBAAmB,GAAG,CAAC;AAAA,EAC1E;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,MAAM,UAAU;AAClB,YAAM,eAAe,yBAAyB,MAAM,UAAU,UAAU,iBAAiB;AAAA,IAC3F;AAAA,EACF;AAEA,YAAU,SAAS,SAAU,eAAe,QAAQ;AAClD,cAAU,MAAM,eAAe,MAAM;AACrC,kBAAc,YAAY,MAAM,QAAQ;AAExC,QAAI,MAAM,gBAAgB;AACxB,YAAM,eAAe,QAAQ,aAAa;AAAA,IAC5C;AAEA,cAAU,kBAAkB,aAAa;AAAA,EAC3C;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,YAAY,mBAAmB,MAAM,mBAAmB;AAE5D,QAAI,MAAM,KAAK;AACb,gBAAU,KAAK,MAAM,GAAG;AAAA,IAC1B;AAEA,QAAI,MAAM,MAAM;AACd,gBAAU,KAAK,MAAM,IAAI;AAAA,IAC3B;AAGA,aAAS,IAAI,GAAG,IAAI,MAAM,aAAa,QAAQ,KAAK;AAClD,gBAAU,KAAK,MAAM,aAAa,EAAE;AACpC,UAAI,OAAO,MAAM,aAAa,GAAG,WAAW;AAE5C,UAAI,MAAM;AACR,kBAAU,KAAK,IAAI;AAAA,MACrB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,QAAQ,SAAU,eAAe,QAAQ;AAEjD,UAAM,gBAAgB;AACtB,UAAM,WAAW,OAAO,YAAY,MAAM,YAAY;AACtD,UAAM,UAAU,aAAa,UAAU,aAAa,CAAC;AAGrD,QAAI,CAAC,MAAM,UAAU;AACnB,YAAM,WAAW,oBAAkB,YAAY;AAC/C,YAAM,SAAS,UAAU,MAAM;AAE/B,UAAI,MAAM,gBAAgB;AACxB,cAAM,SAAS,mBAAmB,MAAM,eAAe,aAAa,CAAC;AAAA,MACvE;AAEA,YAAM,SAAS,mBAAmB,MAAM,SAAS;AACjD,gBAAU,2BAA2B,MAAM,cAAc,MAAM,UAAU,MAAM,WAAW;AAC1F,YAAM,SAAS,YAAY,MAAM,QAAQ;AACzC,YAAM,SAAS,iBAAiB,aAAa;AAC7C,YAAM,SAAS,eAAe,MAAM,YAAY,0BAA0B,CAAC;AAC3E,aAAO,eAAe,MAAM,cAAc,MAAM,QAAQ;AAAA,IAC1D;AAAA,EACF;AACF;AAsBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,eAAe,CAAC;AACtB,QAAM,cAAc,uBAAqB,YAAY;AACrD,QAAM,YAAY,qBAAmB,YAAY;AAAA,IAC/C,OAAO;AAAA,EACT,CAAC;AACD,QAAM,sBAAsB,CAAC;AAC7B,QAAM,yBAAyB,MAAM,0BAA0B;AAC/D,QAAM,uBAAuB,MAAM,wBAAwB;AAC3D,QAAM,qBAAqB,oBAAI,IAAI;AAEnC,QAAM,IAAI,WAAW,OAAO,CAAC,aAAa,CAAC;AAC3C,QAAM,OAAO,WAAW,OAAO,CAAC,uBAAuB,UAAU,0BAA0B,eAAe,qBAAqB,oBAAoB,gBAAgB,sBAAsB,QAAQ,gBAAgB,YAAY,OAAO,wBAAwB,gBAAgB,CAAC;AAE7Q,wBAAsB,WAAW,KAAK;AACxC;AApPA,IAQI,yBACA,yBAuMA,kBAsCA,eAEA;AAxPJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,0BAA0B;AAC9B,IAAI,0BAA0B;AAuM9B,IAAI,mBAAiB;AAAA,MACnB,qBAAqB;AAAA,MACrB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,wBAAwB;AAAA,MACxB,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,MAAM;AAAA,MACN,cAAc;AAAA,MACd,UAAU;AAAA,MACV,KAAK;AAAA,MACL,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,IAClB;AAuBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,uBAAuB;AAEnE,IAAI,0BAA0B;AAAA,MAC5B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACpPA,iCAAiC,WAAW,OAAO;AAEjD,QAAM,eAAe,KAAK,yBAAyB;AAEnD,YAAU,wBAAwB,SAAU,MAAM,UAAU,aAAa;AACvE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,UAAM,iBAAiB,aAAa,6BAA6B;AACjE,QAAI,OAAO,MAAM,QAAQ;AACzB,WAAO,uBAAqB,WAAW,MAAM,yBAAyB,CAAC,sFAAsF,6CAA6C,CAAC,EAAE;AAC7M,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,QAAM,mBAAmB,IAAI,yBAAyB,UAAU,qBAAqB;AACrF,MAAI,kBAAkB,UAAU;AAEhC,YAAU,QAAQ,SAAU,eAAe,QAAQ;AACjD,QAAI,OAAO,OAAO,iBAAiB,EAAE,wBAAwB;AAC7D,UAAM,YAAY,UAAU,MAAM,CAAC,UAAU,CAAC;AAC9C,UAAM,mBAAmB;AACzB,oBAAgB,eAAe,MAAM;AAAA,EACvC;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,0BAAsB,OAAO,WAAW,OAAO,aAAa;AAE5D,0BAAwB,WAAW,KAAK;AAC1C;AA1CA,IAiCI,kBAWA,eAEA;AA9CJ;AAAA;AAAA;AACA;AACA;AA+BA,IAAI,mBAAiB,CAAC;AAWtB,IAAI,gBAAc,MAAM,YAAY,UAAQ,yBAAyB;AAErE,IAAI,4BAA4B;AAAA,MAC9B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACjDA,IAAI,aAgBA,gBAUA;AA1BJ;AAAA;AAAA,IAAI,cAAc;AAAA,MAChB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AACA,IAAI,iBAAiB;AAAA,MACnB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,KAAK;AAAA,IACP;AACA,IAAI,aAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACzBA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,uBAAuB,QAAQ,YAAY,YAAY,gBAAgB;AACrE,MAAI,YAAY,eAAe;AAC/B,MAAI,YAAY,OAAO,aAAa;AAAA,IAClC,MAAM;AAAA,IAGN,OAAO,eAAe;AAAA,IAGtB,kBAAkB;AAAA,EACpB,CAAC;AACD,MAAI,cAAc,UAAU,eAAe,GAAG,SAAS;AACvD,MAAI,WAAW,WAAW,EAAE,IAAI,IAAI,WAAW,cAAc,CAAC;AAE9D,YAAU,MAAM;AAChB,MAAI,UAAU,OAAO,qBAAqB;AAC1C,UAAQ,mBAAmB,WAAW,GAAG,YAAY,YAAY,SAAS;AAC1E,MAAI,gBAAgB,QAAQ,OAAO;AACnC,MAAI,QAAQ,OAAO;AACnB,QAAM,OAAO,CAAC,aAAa,CAAC;AAC5B,YAAU,QAAQ;AACpB;AAKA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,SAAS,SAAU,aAAa,OAAO;AAC/C,UAAM,SAAS,MAAM,OAAO,UAAU,EAAE,aAAa;AAAA,MACnD,MAAM;AAAA,MACN;AAAA,MACA,OAAO,MAAM;AAAA,IACf,CAAC;AACD,UAAM,cAAc;AACpB,UAAM,QAAQ;AAAA,EAChB;AAEA,YAAU,QAAQ,SAAU,MAAM;AAChC,kBAAc,MAAM,OAAO,UAAU,GAAG,MAAM,QAAQ,GAAG,KAAK,MAAM;AAAA,EACtE;AAEA,YAAU,iBAAiB,SAAU,MAAM,OAAO;AAChD,UAAM,SAAS,MAAM,OAAO,UAAU,EAAE,aAAa;AAAA,MACnD,MAAM,KAAK;AAAA,MACX;AAAA,MACA,kBAAkB;AAAA,MAClB,OAAO,MAAM;AAAA,IACf,CAAC;AACD,UAAM,cAAc,KAAK;AACzB,UAAM,QAAQ;AACd,QAAI,WAAW,MAAM,OAAO,eAAe,CAAC,EAAE,IAAI,IAAI,WAAW,KAAK,MAAM,CAAC;AAE7E,UAAM,OAAO,MAAM;AAAA,EACrB;AAGA,MAAI,QAAQ,gBAAe,IAAG;AAC5B,cAAU,UAAU,OAAM,WAAY;AACpC,UAAI;AAEJ,aAAQ,iBAAgB,MAAM,QAAQ,UAAU,KAAI,MAAM,eAAe,SAAS;AAAA,IACpF;AAAA,EACF;AAEA,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAM,CAAC;AAAA,EACT;AACF;AAgBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,eAAe,OAAO,CAAC;AAC9D,QAAM,OAAO,WAAW,OAAO,CAAC,iBAAiB,UAAU,oBAAoB,SAAS,YAAY,CAAC;AACrG,kBAAgB,WAAW,KAAK;AAClC;AAxGA,IAQI,WA6EA,kBAqBA,eAEA;AA5GJ;AAAA;AAAA;AACA;AACA;AAMA,IAAI,YAAY,CAAC,kBAAkB,YAAY,OAAO;AA6EtD,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,IACd;AAYA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,oBAAoB,gBAAc;AAAA,MACpC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,UAAS;AAAA;AAAA;;;AC3GZ,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,yBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,MAAM,cAAc,gBAAgB,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EACjF;AACF;AAKA,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,YAAU,WAAW,SAAU,GAAG,GAAG,GAAG;AACtC,QAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,UAAI,MAAM,MAAM,OAAO,EAAE,MAAM,MAAM,MAAM,OAAO,EAAE,MAAM,MAAM,MAAM,OAAO,EAAE,IAAI;AACjF,cAAM,MAAM,KAAK,EAAE;AACnB,cAAM,MAAM,KAAK,EAAE;AACnB,cAAM,MAAM,KAAK,EAAE;AACnB,kBAAU,SAAS;AAAA,MACrB;AAAA,IACF,WAAW,MAAM,MAAM,OAAO,KAAK,MAAM,MAAM,OAAO,KAAK,MAAM,MAAM,OAAO,GAAG;AAC/E,YAAM,MAAM,KAAK;AACjB,YAAM,MAAM,KAAK;AACjB,YAAM,MAAM,KAAK;AACjB,gBAAU,SAAS;AAAA,IACrB;AAEA,cAAU,gBAAgB,MAAM,KAAK;AACrC,cAAU,gBAAgB,MAAM,KAAK;AACrC,cAAU,iBAAiB,MAAM,KAAK;AAAA,EACxC;AAEA,YAAU,wBAAwB,gBAAe,uBAAuB;AAExE,YAAU,WAAW,WAAY;AAE/B,QAAI,QAAO;AAEX,QAAI,MAAM,UAAU,MAAM,UAAU,MAAM,WAAW,GAAG;AACtD,cAAO,IAAO,OAAM,UAAU,MAAM,UAAU,MAAM;AAAA,IACtD;AAEA,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAM,MAAM,KAAK,QAAQ,OAAM,UAAU,MAAM,aAAa,KAAK,MAAM,UAAU,MAAM,aAAa,KAAK,MAAM,WAAW,MAAM,cAAc;AAAA,IAChJ;AAEA,WAAO,CAAC,EAAE,OAAO,MAAM,KAAK;AAAA,EAC9B;AAEA,YAAU,oBAAoB,gBAAe,mBAAmB;AAEhE,YAAU,yBAAyB,WAAY;AAC7C,WAAO,UAAU,iBAAiB,eAAc,IAAI;AAAA,EACtD;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,UAAU,iBAAiB,eAAc,OAAO;AAAA,EACzD;AAEA,YAAU,0BAA0B,WAAY;AAC9C,WAAO,UAAU,iBAAiB,eAAc,KAAK;AAAA,EACvD;AAEA,YAAU,2BAA2B,WAAY;AAC/C,WAAO,MAAM,aAAa,gBAAe,MAAM,aAAa;AAAA,EAC9D;AAEA,YAAU,+BAA+B,WAAY;AACnD,WAAO,UAAU,kBAAkB,gBAAe,SAAS;AAAA,EAC7D;AAEA,YAAU,6BAA6B,WAAY;AACjD,WAAO,UAAU,kBAAkB,gBAAe,OAAO;AAAA,EAC3D;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,UAAU,kBAAkB,gBAAe,MAAM;AAAA,EAC1D;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,MAAM,aAAa,iBAAgB,MAAM,cAAc;AAAA,EAChE;AACF;AA4BA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,YAAY,iBAAiB,WAAW,WAAW,YAAY,iBAAiB,WAAW,kBAAkB,aAAa,aAAa,mBAAmB,oBAAoB,gBAAgB,CAAC;AAC/N,QAAM,YAAY,WAAW,OAAO,CAAC,gBAAgB,iBAAiB,gBAAgB,WAAW,GAAG,CAAC;AAErG,cAAY,WAAW,KAAK;AAC9B;AAlIA,IAOI,iBACA,gBA0FA,kBAkCA,eAEA;AAtIJ;AAAA;AAAA;AACA;AACA;AAKA,IAAI,kBAAiB,cAAc;AAAnC,IACI,iBAAgB,cAAc;AA0FlC,IAAI,mBAAiB;AAAA,MACnB,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACf,cAAc,CAAC,GAAG,GAAG,CAAC;AAAA,MACtB,cAAc,CAAC,GAAG,GAAG,CAAC;AAAA,MACtB,eAAe,CAAC,GAAG,GAAG,CAAC;AAAA,MACvB,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA,MACf,SAAS;AAAA,MACT,eAAe,eAAc;AAAA,MAC7B,gBAAgB,gBAAe;AAAA,MAC/B,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,MACT,cAAc;AAAA,IAChB;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB,gBAAc;AAAA,MAChC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,aAAa;AAAA;AAAA;;;ACjIhB,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAsDzf,0BAA0B,UAAU;AAClC,UAAQ;AAAA,SACD,gBAAe;AAClB,aAAO;AAAA,SAEJ,gBAAe;AAClB,aAAO;AAAA,SAEJ,gBAAe;AAAA,SACf,gBAAe;AAClB,aAAO;AAAA,SAEJ,gBAAe;AAAA,SACf,gBAAe;AAClB,aAAO;AAAA;AAGP,aAAO;AAAA;AAEb;AAEA,uBAAuB,WAAW,gBAAgB,WAAW;AAC3D,MAAI,YAAY;AAEhB,MAAI,mBAAmB,gBAAe,UAAU,cAAc,UAAU;AACtE,gBAAY,aAAa;AAAA,EAC3B,WAAW,mBAAmB,gBAAe,aAAa,cAAc,SAAS;AAC/E,gBAAY,aAAa,GAAG,OAAO,WAAW,aAAa;AAAA,EAC7D,OAAO;AACL,gBAAY,aAAa,GAAG,OAAO,WAAW,WAAW;AAAA,EAC3D;AAEA,MAAI,QAAQ,UAAU,QAAQ;AAC9B,MAAI,OAAO,MAAM;AACjB,MAAI,YAAY;AAEhB,WAAS,QAAQ,GAAG,QAAQ,QAAO;AACjC,iBAAa,UAAU,MAAM,QAAQ,KAAK;AAC1C,aAAS,MAAM,SAAS;AAAA,EAC1B;AAEA,SAAO;AACT;AAEA,mBAAmB,WAAW,UAAU,gBAAgB,SAAS,YAAY,SAAS;AACpF,MAAI,SAAS;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,QAAQ;AAAA,EACV;AAEA,MAAI,CAAC,UAAU,QAAQ,KAAK,CAAC,UAAU,QAAQ,EAAE,QAAQ;AACvD,WAAO;AAAA,EACT;AAGA,MAAI,QAAQ,CAAC,GAAK,GAAK,GAAK,CAAG;AAE/B,MAAI,QAAQ,OAAO;AACjB,QAAI,QAAQ,MAAM,QAAQ;AACxB,cAAQ,QAAQ;AAAA,IAClB,OAAO;AACL,YAAM,KAAK,QAAQ,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,MAAI,QAAQ,CAAC,GAAK,GAAK,GAAK,CAAG;AAE/B,MAAI,QAAQ,OAAO;AACjB,QAAI,QAAQ,MAAM,QAAQ;AACxB,cAAQ,QAAQ;AAAA,IAClB,OAAO;AACL,YAAM,KAAK,QAAQ,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,MAAI,YAAY,OAAO,UAAU,eAAe,KAAK,SAAS,WAAW,IAAI,QAAQ,YAAY;AACjG,MAAI,YAAY,QAAQ,QAAQ;AAChC,MAAI;AACJ,MAAI,eAAe;AAAA,IAEjB,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ,SAAQ;AAC9E,eAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,kBAAU,QAAQ,SAAS,IAAI,OAAM;AAAA,MACvC;AAAA,IACF;AAAA,IACA,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ,SAAQ;AAE9E,eAAS,IAAI,GAAG,IAAI,aAAY,GAAG,EAAE,GAAG;AACtC,kBAAU,QAAQ,SAAS,IAAI,OAAM;AACrC,kBAAU,QAAQ,SAAS,IAAI,IAAI,OAAM;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ,SAAQ;AAE9E,UAAI,aAAY,GAAG;AACjB,iBAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,oBAAU,QAAQ,SAAS,IAAI,OAAM;AACrC,oBAAU,QAAQ,SAAU,KAAI,KAAK,aAAY,OAAM;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAAA,IACA,mBAAmB,4BAA2B,YAAW,SAAS,QAAQ,SAAQ;AAChF,UAAI,aAAY,GAAG;AAEjB,iBAAS,IAAI,GAAG,IAAI,aAAY,GAAG,EAAE,GAAG;AACtC,oBAAU,QAAQ,SAAS,IAAI,OAAM;AACrC,oBAAU,QAAQ,SAAS,IAAI,IAAI,OAAM;AAAA,QAC3C;AAEA,iBAAS,KAAK,GAAG,KAAK,aAAY,GAAG,MAAM;AACzC,oBAAU,QAAQ,SAAS,KAAK,OAAM;AACtC,oBAAU,QAAQ,SAAS,KAAK,IAAI,OAAM;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAAA,IACA,gBAAgB,yBAAwB,MAAM,SAAS,QAAQ,SAAQ;AACrE,eAAS,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK;AACjC,kBAAU,QAAQ,SAAS,IAAI,OAAM;AACrC,kBAAU,QAAQ,SAAS,IAAI,IAAI,OAAM;AACzC,kBAAU,QAAQ,SAAS,IAAI,IAAI,OAAM;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,iBAAiB,0BAAyB,MAAM,SAAS,QAAQ,SAAQ;AACvE,eAAS,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK;AACjC,kBAAU,QAAQ,SAAS,IAAI,OAAM;AACrC,kBAAU,QAAQ,SAAS,IAAI,IAAI,IAAI,IAAI,OAAM;AACjD,kBAAU,QAAQ,SAAS,IAAI,IAAK,KAAI,KAAK,IAAI,OAAM;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AACA,MAAI,YAAY,iBAAiB,QAAQ;AACzC,MAAI,OAAO;AAEX,MAAI,mBAAmB,gBAAe,UAAU,aAAa,gBAAe,QAAQ;AAClF,WAAO,aAAa;AAAA,EACtB,WAAW,mBAAmB,gBAAe,aAAa,aAAa,gBAAe,OAAO;AAC3F,WAAO,aAAa,GAAG,OAAO,WAAW,aAAa;AAAA,EACxD,OAAO;AACL,WAAO,aAAa,GAAG,OAAO,WAAW,WAAW;AAAA,EACtD;AAEA,MAAI,QAAQ,UAAU,QAAQ;AAC9B,MAAI,OAAO,MAAM;AACjB,MAAI,YAAY,cAAc,WAAW,gBAAgB,SAAS;AAClE,MAAI,SAAS;AACb,MAAI,UAAU,QAAQ,sBAAsB;AAC5C,MAAI,YAAY,cAAc,YAAY,YAAa,WAAW,aAAY,IAAI,GAAG;AAErF,MAAI,UAAU,kBAAiB,MAAM,SAAQ;AAC3C,WAAO,UAAU;AAAA,EACnB;AAEA,MAAI,QAAQ,UAAU;AACpB,cAAU,kBAAiB,MAAM,SAAQ;AACvC,aAAO,UAAU;AAAA,IACnB;AAAA,EACF;AAGA,MAAI,YAAY,GAAG;AACjB,gBAAY,uBAAuB,GAAG,QAAQ;AAC5C,gBAAU,YAAY,MAAM,KAAK,QAAQ,GAAG,MAAM,IAAI,MAAM;AAAA,IAC9D;AAAA,EACF,WAAW,YAAY,GAAG;AACxB,gBAAY,uBAAuB,GAAG,QAAQ;AAC5C,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI,MAAM;AACpE,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAAA,IAC9E;AAAA,EACF,WAAW,YAAY,KAAK,CAAC,WAAW;AACtC,gBAAY,uBAAuB,GAAG,QAAQ;AAC5C,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI,MAAM;AACpE,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAC5E,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAAA,IAC9E;AAAA,EACF,WAAW,YAAY,KAAK,WAAW;AACrC,gBAAY,uBAAuB,GAAG,QAAQ;AAC5C,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI,MAAM;AACpE,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAC5E,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAC5E,gBAAU,YAAY,MAAM,KAAK,IAAM,MAAM;AAAA,IAC/C;AAAA,EACF,WAAW,YAAY,GAAG;AACxB,gBAAY,uBAAuB,GAAG,QAAQ;AAC5C,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI,MAAM;AACpE,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAC5E,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAC5E,gBAAU,YAAY,MAAM,KAAK,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,IAAI,MAAM;AAAA,IAC9E;AAAA,EACF;AAEA,MAAI,SAAS,QAAQ;AAErB,WAAS,QAAQ,GAAG,QAAQ,QAAO;AACjC,SAAK,MAAM,QAAQ,OAAO,QAAQ,GAAG,MAAM;AAC3C,aAAS,MAAM,SAAS;AACxB;AAAA,EACF;AAEA,SAAO,cAAc;AACrB,SAAO,eAAe;AACtB,SAAO;AACT;AAEA,mBAAmB,WAAW,IAAI,IAAI,IAAI;AACxC,MAAI,KAAK,CAAC,UAAU,KAAK,KAAK,UAAU,KAAK,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,EAAE;AAC7I,MAAI,KAAK,CAAC,UAAU,KAAK,KAAK,UAAU,KAAK,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,EAAE;AAC7I,MAAI,SAAS,CAAC;AACd,QAAM,IAAI,IAAI,MAAM;AACpB,YAAU,MAAM;AAChB,SAAO;AACT;AAEA,yBAAyB,WAAW,UAAU,gBAAgB,SAAS;AACrE,MAAI,CAAC,UAAU,QAAQ,KAAK,CAAC,UAAU,QAAQ,EAAE,QAAQ;AACvD,WAAO;AAAA,EACT;AAEA,MAAI,YAAY,QAAQ,QAAQ;AAChC,MAAI;AACJ,MAAI,eAAe;AAAA,IACjB,eAAe,uBAAuB,YAAW,SAAS,QAAQ;AAChE,UAAI,SAAS,UAAU,WAAW,QAAQ,SAAS,QAAQ,SAAS,IAAI,QAAQ,SAAS,EAAE;AAE3F,eAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,kBAAU,MAAM;AAAA,MAClB;AAAA,IACF;AAAA,IACA,kBAAkB,2BAA0B,YAAW,SAAS,QAAQ;AAGtE,UAAI,SAAS,UAAU,WAAW,QAAQ,SAAS,QAAQ,SAAS,IAAI,QAAQ,SAAS,EAAE;AAE3F,eAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,kBAAU,MAAM;AAChB,kBAAU,MAAM;AAAA,MAClB;AAAA,IACF;AAAA,IACA,gBAAgB,yBAAwB,MAAM,SAAS,QAAQ;AAC7D,UAAI,OAAO,GAAG;AAEZ,uBAAc,8BAA8B;AAAA,MAC9C,OAAO;AAEL,YAAI,SAAS,UAAU,WAAW,QAAQ,SAAS,QAAQ,SAAS,IAAI,QAAQ,SAAS,EAAE;AAE3F,iBAAS,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK;AACjC,oBAAU,MAAM;AAChB,oBAAU,MAAM;AAChB,oBAAU,MAAM;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,MAAI,WAAW,iBAAiB,QAAQ;AACxC,MAAI,OAAO;AAEX,MAAI,mBAAmB,gBAAe,QAAQ;AAC5C,WAAO,aAAa,GAAG,OAAO,UAAU,UAAU;AAAA,EACpD,WAAW,mBAAmB,gBAAe,WAAW;AACtD,WAAO,aAAa,GAAG,OAAO,UAAU,aAAa;AAAA,EACvD,OAAO;AACL,WAAO,aAAa,GAAG,OAAO,UAAU,WAAW;AAAA,EACrD;AAEA,MAAI,YAAY,cAAc,WAAW,gBAAgB,QAAQ;AACjE,MAAI,SAAS;AACb,MAAI,YAAY,IAAI,UAAU,YAAY,CAAC;AAE3C,cAAY,uBAAuB,QAAQ;AACzC,cAAU,YAAY,MAAM,OAAO;AACnC,cAAU,YAAY,MAAM,OAAO;AACnC,cAAU,YAAY,MAAM,OAAO;AACnC,cAAU,YAAY;AAAA,EACxB;AAEA,MAAI,QAAQ,UAAU,QAAQ;AAC9B,MAAI,OAAO,MAAM;AAEjB,WAAS,QAAQ,GAAG,QAAQ,QAAO;AACjC,SAAK,MAAM,QAAQ,OAAO,QAAQ,CAAC;AACnC,aAAS,MAAM,SAAS;AAAA,EAC1B;AAEA,SAAO;AACT;AAKA,gCAAgC,WAAW,OAAO;AAEhD,QAAM,eAAe,KAAK,wBAAwB;AAElD,yBAAuB,KAAK;AAE1B,QAAI,IAAI,aAAa,CAAC,IAAI,aAAa;AACrC,UAAI,cAAc,IAAI,UAAU,QAAQ;AAAA,IAC1C;AAGA,QAAI,SAAS,kBAAgB,YAAY;AAAA,MACvC,OAAO,IAAI;AAAA,IACb,CAAC;AACD,WAAO,UAAU,MAAM,MAAM;AAC7B,QAAI,WAAW;AAEf,QAAI,IAAI,UAAU,aAAY,cAAc;AAE1C,iBAAW,eAAe,UAAU,eAAe;AAGnD,aAAO,eAAe,IAAI,aAAa,QAAQ;AAAA,IACjD;AAGA,QAAI,IAAI,UAAU,aAAY,SAAS;AAErC,iBAAW,eAAe,UAAU,eAAe;AAGnD,aAAO,eAAe,IAAI,aAAa,QAAQ;AAAA,IACjD;AAGA,QAAI,IAAI,UAAU,aAAY,SAAS;AAErC,iBAAW,eAAe;AAG1B,aAAO,eAAe,IAAI,aAAa,QAAQ;AAAA,IACjD;AAKA,QAAI,IAAI,UAAU,aAAY,YAAY;AACxC,iBAAW,eAAe;AAC1B,UAAI,YAAY,eAAe,8BAA8B,IAAI,MAAM;AACvE,UAAI,SAAS,UAAU,IAAI,OAAO,IAAI,eAAe,IAAI,gBAAgB,IAAI,WAAW,WAAW;AAAA,QACjG,WAAW,IAAI;AAAA,QACf,OAAO,IAAI;AAAA,QACX,OAAO,IAAI;AAAA,QACX,UAAU,IAAI;AAAA,QACd,YAAY,IAAI;AAAA,MAClB,CAAC;AACD,aAAO,eAAe,OAAO,aAAa,QAAQ;AAClD,aAAO,iBAAiB,eAAe,8BAA8B,IAAI,MAAM,CAAC;AAChF,aAAO,oBAAoB,CAAC;AAAA,QAC1B,QAAQ;AAAA,QACR,QAAQ,IAAI;AAAA,MACd,CAAC,CAAC;AAAA,IACJ;AAGA,QAAI,IAAI,UAAU,aAAY,mBAAmB;AAC/C,iBAAW,eAAe;AAC1B,UAAI,UAAU,gBAAgB,IAAI,OAAO,IAAI,eAAe,IAAI,gBAAgB,IAAI,SAAS;AAC7F,aAAO,eAAe,SAAS,QAAQ;AACvC,aAAO,iBAAiB,eAAe,8BAA8B,IAAI,MAAM,CAAC;AAChF,aAAO,oBAAoB,CAAC;AAAA,QAC1B,QAAQ;AAAA,QACR,QAAQ,IAAI;AAAA,MACd,CAAC,CAAC;AAAA,IACJ;AAEA,QAAI,IAAI,UAAU,aAAY,WAAW;AACvC,iBAAW,eAAe;AAC1B,aAAO,eAAe,IAAI,aAAa,QAAQ;AAC/C,aAAO,iBAAiB,eAAe,8BAA8B,IAAI,MAAM,CAAC;AAChF,aAAO,oBAAoB,CAAC;AAAA,QAC1B,QAAQ;AAAA,QACR,QAAQ,IAAI;AAAA,MACd,CAAC,CAAC;AAAA,IACJ;AAEA,WAAO,cAAc,IAAI,IAAI;AAC7B,WAAO;AAAA,EACT;AAGA,YAAU,YAAY,SAAU,KAAK;AACnC,QAAI,IAAI,OAAO;AAEb,UAAI,OAAO,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI;AACnD,aAAO,MAAM,OAAO,gBAAgB,IAAI,OAAO,IAAI;AAAA,IACrD;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,YAAY,SAAU,KAAK;AAEnC,QAAI,IAAI,OAAO;AAEb,UAAI,OAAO,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI;AACnD,aAAO,MAAM,OAAO,gBAAgB,IAAI,OAAO,MAAM,eAAe,GAAG;AAAA,IACzE;AAEA,WAAO,cAAc,GAAG;AAAA,EAC1B;AAEA,YAAU,0BAA0B,WAAY;AAC9C,QAAI,MAAM,sBAAsB;AAC9B,aAAO,MAAM;AAAA,IACf;AAEA,UAAM,uBAAuB,kBAAgB,YAAY;AACzD,UAAM,qBAAqB,UAAU,MAAM,MAAM;AAEjD,QAAI,QAAQ,IAAI,aAAa,CAAC,IAAM,IAAM,GAAK,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,IAAM,IAAM,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,CAAG,CAAC;AAC7H,UAAM,qBAAqB,eAAe,OAAO,eAAe,MAAM;AACtE,UAAM,qBAAqB,iBAAiB,EAAE;AAC9C,UAAM,qBAAqB,oBAAoB,CAAC;AAAA,MAC9C,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV,CAAC,CAAC;AACF,WAAO,MAAM;AAAA,EACf;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,MAAI,WAAW,KAAK;AACpB,SAAO,WAAW,OAAO,CAAC,QAAQ,CAAC;AACnC,yBAAuB,WAAW,KAAK;AACzC;AApfA,IAWI,cACA,iBACA,iBACA,gBAOA,SACA,cAkdA,kBAcA,eAEA;AAxfJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,eAAc,WAAU;AAA5B,IACI,kBAAiB,WAAU;AAC/B,IAAI,kBAAiB,cAAY;AACjC,IAAI,iBAAgB;AAOpB,IAAI,UAAS,CAAC;AACd,IAAI,eAAe;AAAA,MAEjB,kBAAkB,0BAA0B,YAAW,SAAS;AAC9D,eAAO;AAAA,MACT;AAAA,MACA,kBAAkB,0BAA0B,YAAW,SAAS;AAC9D,YAAI,aAAY,GAAG;AACjB,iBAAQ,cAAY,KAAK;AAAA,QAC3B;AAEA,eAAO;AAAA,MACT;AAAA,MACA,kBAAkB,0BAA0B,YAAW,SAAS;AAC9D,YAAI,aAAY,GAAG;AACjB,iBAAO,aAAY;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,mBAAmB,2BAA2B,YAAW,SAAS;AAChE,YAAI,aAAY,GAAG;AACjB,iBAAO,aAAY,IAAI;AAAA,QACzB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,gBAAgB,wBAAwB,MAAM,SAAS;AACrD,YAAI,OAAO,GAAG;AACZ,iBAAQ,QAAO,KAAK;AAAA,QACtB;AAEA,eAAO;AAAA,MACT;AAAA,MACA,iBAAiB,yBAAyB,MAAM,SAAS,QAAQ;AAC/D,YAAI,YAAY,GAAG;AACjB,iBAAQ,QAAO,KAAK;AAAA,QACtB;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AA0aA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,sBAAsB;AAAA,IACxB;AAWA,IAAI,gBAAc,YAAc,QAAM;AAEtC,IAAI,2BAA2B,gBAAc,gBAAc;AAAA,MACzD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM,GAAG,UAAS;AAAA;AAAA;;;ACjfrB,gCAAgC,WAAW,OAAO;AAEhD,QAAM,eAAe,KAAK,wBAAwB;AAElD,YAAU,WAAW,SAAU,MAAM,MAAM;AACzC,QAAI,MAAM,kBAAkB,IAAI,IAAI,GAAG;AACrC,sBAAc,eAAe,OAAO,MAAM,iBAAiB,CAAC;AAC5D;AAAA,IACF;AAEA,UAAM,YAAY;AAElB,UAAM,kBAAkB,IAAI,MAAM,MAAM,cAAc,MAAM;AAE5D,UAAM,cAAc,KAAK;AAAA,MACvB;AAAA,MACA;AAAA,MACA,aAAa,eAAe,8BAA8B,IAAI;AAAA,MAC9D,QAAQ;AAAA,MACR,YAAY,eAAe,8BAA8B,IAAI;AAAA,MAC7D,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AASA,YAAU,oBAAoB,WAAY;AACxC,QAAI,CAAC,MAAM,WAAW;AACpB;AAAA,IACF;AAEA,QAAI,aAAa;AACjB,QAAI,aAAa,CAAC;AAGlB,QAAI,eAAe;AAEnB,aAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAAK;AACnD,UAAI,QAAQ,MAAM,cAAc;AAEhC,UAAI,MAAM,cAAc,OAAO,GAAG;AAChC,uBAAe,KAAK,IAAI,IAAI,YAAY;AAAA,MAC1C;AAEA,UAAI,MAAM,cAAc,MAAM,GAAG;AAC/B,uBAAe,KAAK,IAAI,GAAG,YAAY;AAAA,MACzC;AAAA,IACF;AAKA,aAAS,KAAK,GAAG,KAAK,MAAM,cAAc,QAAQ,MAAM;AACtD,UAAI,SAAS,MAAM,cAAc;AAEjC,UAAI,OAAO,WAAW,SAAS,OAAO,cAAc,OAAO,GAAG;AAC5D,eAAO,SAAS;AAChB,eAAO,SAAS;AAChB,mBAAW,KAAK,MAAM;AACtB,sBAAc,OAAO;AAAA,MACvB;AAAA,IACF;AAOA,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,UAAI,UAAU,MAAM,cAAc;AAElC,UAAI,QAAQ,WAAW,SAAS,QAAQ,gBAAgB,IAAI;AAC1D,iBAAS,KAAK,GAAG,KAAK,MAAM,cAAc,QAAQ,MAAM;AACtD,cAAI,SAAS,MAAM,cAAc;AAEjC,cAAI,OAAO,WAAW,SAAS,OAAO,gBAAgB,GAAG;AACvD,oBAAQ,SAAS;AACjB,oBAAQ,SAAS;AACjB,uBAAW,KAAK,OAAO;AACvB,0BAAc,QAAQ;AACtB,mBAAO,SAAS;AAChB,mBAAO,SAAS;AAChB,uBAAW,KAAK,MAAM;AACtB,0BAAc,OAAO;AACrB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,UAAI,UAAU,MAAM,cAAc;AAElC,UAAI,CAAC,QAAQ,UAAU,QAAQ,cAAc,MAAM,GAAG;AACpD,iBAAS,MAAM,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AAC/D,cAAI,UAAU,MAAM,cAAc;AAElC,cAAI,CAAC,QAAQ,UAAU,QAAQ,cAAc,MAAM,GAAG;AACpD,oBAAQ,SAAS;AACjB,oBAAQ,SAAS;AACjB,uBAAW,KAAK,OAAO;AACvB,0BAAc,QAAQ;AACtB,oBAAQ,SAAS;AACjB,oBAAQ,SAAS;AACjB,uBAAW,KAAK,OAAO;AACvB,0BAAc,QAAQ;AACtB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,UAAI,UAAU,MAAM,cAAc;AAElC,UAAI,CAAC,QAAQ,UAAU,QAAQ,cAAc,MAAM,GAAG;AACpD,YAAI,QAAQ;AAEZ,iBAAS,MAAM,GAAG,CAAC,SAAS,MAAM,MAAM,cAAc,QAAQ,OAAO;AACnE,cAAI,UAAU,MAAM,cAAc;AAElC,cAAI,CAAC,QAAQ,UAAU,QAAQ,gBAAgB,GAAG;AAChD,qBAAS,KAAK,MAAM,GAAG,KAAK,MAAM,cAAc,QAAQ,MAAM;AAC5D,kBAAI,SAAS,MAAM,cAAc;AAEjC,kBAAI,CAAC,OAAO,UAAU,OAAO,gBAAgB,GAAG;AAC9C,wBAAQ,SAAS;AACjB,wBAAQ,SAAS;AACjB,2BAAW,KAAK,OAAO;AACvB,8BAAc,QAAQ;AACtB,wBAAQ,SAAS;AACjB,wBAAQ,SAAS;AACjB,2BAAW,KAAK,OAAO;AACvB,8BAAc,QAAQ;AACtB,uBAAO,SAAS;AAChB,uBAAO,SAAS;AAChB,2BAAW,KAAK,MAAM;AACtB,8BAAc,OAAO;AACrB,wBAAQ;AACR;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAKA,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,UAAI,UAAU,MAAM,cAAc;AAElC,UAAI,CAAC,QAAQ,UAAU,QAAQ,cAAc,GAAG;AAC9C,gBAAQ,SAAS;AACjB,gBAAQ,SAAS;AACjB,mBAAW,KAAK,OAAO;AACvB,sBAAc,QAAQ;AAAA,MACxB;AAAA,IACF;AAGA,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,UAAI,UAAU,MAAM,cAAc;AAElC,UAAI,CAAC,QAAQ,QAAQ;AACnB,gBAAQ,SAAS;AACjB,gBAAQ,SAAS;AACjB,mBAAW,KAAK,OAAO;AACvB,sBAAc,QAAQ;AAAA,MACxB;AAAA,IACF;AAGA,UAAM,gBAAgB;AAEtB,UAAM,kBAAkB,MAAM;AAE9B,aAAS,MAAM,GAAG,MAAM,MAAM,cAAc,QAAQ,OAAO;AACzD,YAAM,kBAAkB,IAAI,MAAM,cAAc,KAAK,MAAM,GAAG;AAAA,IAChE;AAEA,UAAM,cAAc;AACpB,UAAM,cAAc,eAAe,KAAK,KAAK,MAAM,cAAc,YAAY;AAC7E,UAAM,YAAY;AAAA,EACpB;AAEA,YAAU,eAAe,SAAU,QAAQ;AACzC,QAAI,CAAC,MAAM,KAAK;AACd,UAAI,MAAM;AAAA,QACR,aAAa,MAAM;AAAA,QACnB,MAAM;AAAA,QACN,OAAO,aAAY;AAAA,QACnB,OAAO,MAAM;AAAA,MACf;AACA,YAAM,MAAM,OAAO,iBAAiB,EAAE,UAAU,GAAG;AACnD,YAAM,cAAc,SAAS;AAC7B,YAAM,YAAY;AAAA,IACpB;AAGA,QAAI,MAAM,WAAW;AACnB,aAAO,UAAU,EAAE,MAAM,YAAY,MAAM,IAAI,UAAU,GAAG,GAAG,MAAM,aAAa,GAAG,MAAM,WAAW;AACtG,YAAM,YAAY;AAAA,IACpB;AAIA,UAAM,SAAS,SAAS;AAAA,EAC1B;AAEA,YAAU,aAAa,SAAU,MAAM;AACrC,QAAI,QAAQ,UAAU,OAAO;AAC3B,UAAI,CAAC,MAAM,aAAa;AACtB,cAAM,cAAc,IAAI,YAAY,MAAM,WAAW;AAAA,MACvD;AAEA,YAAM,QAAQ,MAAM,cAAc,MAAM,MAAM,WAAW;AAAA,IAC3D;AAAA,EACF;AAEA,YAAU,WAAW,SAAU,MAAM,KAAK;AACxC,cAAU,kBAAkB;AAE5B,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AAEvB,QAAI,MAAM,cAAc,KAAK;AAC3B,WAAK,MAAM,SAAS,KAAK,qBAAqB;AAC9C,YAAM,YAAY;AAAA,IACpB;AAEA,UAAM,YAAY;AAAA,EACpB;AAEA,YAAU,WAAW,SAAU,MAAM,KAAK;AACxC,cAAU,kBAAkB;AAE5B,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,QAAI,UAAU;AAEd,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,UAAI,CAAC,MAAM,aAAa,MAAM,UAAU,OAAO,IAAI,IAAI;AACrD,aAAK,MAAM,SAAS,KAAK,oBAAoB,KAAK,IAAI;AACtD,kBAAU;AAAA,MACZ;AAAA,IACF;AAEA,QAAI,SAAS;AACX,YAAM,YAAY;AAClB,YAAM,YAAY,mBAAmB,GAAG;AAAA,IAC1C;AAAA,EACF;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,MAAM;AAAA,MACR,UAAU;AAAA,QACR,QAAQ,MAAM,IAAI,UAAU;AAAA,MAC9B;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM,SAAS,SAAS;AAAA,EACjC;AAEA,YAAU,gBAAgB,SAAU,SAAS,OAAO;AAElD,cAAU,kBAAkB;AAC5B,QAAI,QAAQ,CAAC,UAAU,OAAO,MAAM,OAAO,WAAW,CAAC;AAEvD,aAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAAK;AACnD,UAAI,QAAQ,MAAM,cAAc;AAChC,YAAM,KAAK,KAAK,OAAO,MAAM,MAAM,IAAI,EAAE,OAAO,MAAM,MAAM,GAAG,CAAC;AAAA,IAClE;AAEA,UAAM,KAAK,gBAAgB,OAAO,SAAS,WAAW,EAAE,OAAO,OAAO,iBAAiB,EAAE,OAAO,MAAM,OAAO,IAAI,EAAE,OAAO,MAAM,OAAO,SAAS,CAAC;AACjJ,WAAO,MAAM,KAAK,IAAI;AAAA,EACxB;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,QAAM,oBAAoB,oBAAI,IAAI;AAClC,QAAM,gBAAgB,CAAC;AAEvB,QAAM,uBAAuB,MAAM,wBAAwB;AAAA,IACzD,QAAQ;AAAA,MACN,MAAM;AAAA,IACR;AAAA,EACF;AACA,QAAM,WAAW,CAAC;AAClB,QAAM,IAAI,MAAM,UAAU;AAAA,IACxB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,gBAAgB,CAAC;AACvB,QAAM,IAAI,MAAM,eAAe;AAAA,IAC7B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,YAAY;AAClB,QAAM,YAAY;AAClB,QAAM,IAAI,WAAW,OAAO,CAAC,WAAW,eAAe,CAAC;AACxD,QAAM,OAAO,WAAW,OAAO,CAAC,wBAAwB,UAAU,SAAS,aAAa,CAAC;AAEzF,yBAAuB,WAAW,KAAK;AACzC;AApWA,IAKI,cACA,iBAyTA,kBAuCA,eAEA;AAxWJ;AAAA;AAAA;AACA;AACA;AACA;AAEA,IAAI,eAAc,yBAAuB;AACzC,IAAI,kBAAgB,MAAM;AAyT1B,IAAI,mBAAiB;AAAA,MACnB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,OAAO;AAAA,MACP,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,IAClB;AAgCA,IAAI,gBAAc,MAAM,YAAY,UAAQ,wBAAwB;AAEpE,IAAI,2BAA2B;AAAA,MAC7B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC5VA,2BAA2B,WAAW,OAAO;AAE3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,YAAM,SAAS,MAAM,WAAW,gBAAgB;AAChD,gBAAU,aAAa;AACvB,gBAAU,aAAa;AACvB,gBAAU,eAAe,MAAM,MAAM;AACrC,gBAAU,gBAAgB,MAAM,WAAW,4BAA4B,CAAC;AACxE,gBAAU,kBAAkB;AAC5B,YAAM,eAAe,UAAU,eAAe,MAAM,MAAM;AAC1D,gBAAU,uBAAuB;AAAA,IACnC;AAAA,EACF;AAEA,YAAU,yBAAyB,WAAY;AA2B7C,QAAI,YAAY,MAAM,OAAO,iBAAiB;AAC9C,QAAI,MAAM,MAAM,OAAO,uBAAuB;AAC9C,QAAI,MAAM,MAAM,OAAO,oCAAoC;AAC3D,QAAI,SAAS,CAAC;AACd,QAAI,SAAS,CAAC;AACd,iBAAK,MAAM,QAAQ,KAAK,MAAO,WAAU,KAAK,UAAU,GAAG;AAC3D,iBAAK,IAAI,QAAQ,KAAK,MAAM;AAC5B,iBAAK,IAAI,QAAQ,QAAQ,MAAM,gBAAgB;AAC/C,QAAI,SAAS,aAAK,IAAI,MAAM;AAE5B,QAAI,SAAU,WAAU,KAAK,UAAU,MAAM,MAAM,mBAAmB;AACpE,YAAM,mBAAmB;AACzB,YAAM,eAAe,SAAS;AAAA,IAChC;AAAA,EACF;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,QAAQ;AACZ,QAAI,SAAS,MAAM,WAAW,qBAAqB;AAEnD,aAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,EAAE,OAAO;AAClD,UAAI,OAAO,OAAO,UAAU,IAAI,GAAK;AACnC;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,OAAO;AACV,qBAAc,iCAAiC;AAC/C,YAAM,WAAW,YAAY;AAAA,IAC/B;AAEA,WAAO;AAAA,EACT;AAGA,YAAU,2BAA2B,SAAU,UAAU,IAAI;AAE3D,aAAS,IAAI,GAAG,IAAI,MAAM,kBAAkB,QAAQ,KAAK;AACvD,UAAI,MAAM,kBAAkB,GAAG,aAAa,UAAU;AACpD,cAAM,kBAAkB,GAAG,UAAU,KAAK,EAAE;AAC5C;AAAA,MACF;AAAA,IACF;AAEA,UAAM,kBAAkB,KAAK;AAAA,MAC3B;AAAA,MACA,WAAW,CAAC,EAAE;AAAA,IAChB,CAAC;AAAA,EACH;AAEA,YAAU,YAAY,WAAY;AAGhC,QAAI,QAAQ,MAAM,IAAI,YAAY;AAElC,QAAI,MAAM,QAAQ,SAAS,IAAI,SAAS,UAAU,SAAS,IAAI,SAAS,MAAM,OAAO,SAAS,IAAI,SAAS,MAAM,WAAW,SAAS,IAAI,OAAO;AAC9I,UAAI,UAAU,MAAM,aAAa,eAAe,SAAS;AACzD,YAAM,IAAI,SAAS,cAAc,QAAQ,IAAI;AAC7C,YAAM,IAAI,SAAS,cAAc,QAAQ,IAAI;AAC7C,YAAM,IAAI,SAAS,cAAc,QAAQ,IAAI;AAC7C,YAAM,IAAI,SAAS,cAAc,QAAQ,IAAI;AAC7C,YAAM,IAAI,SAAS,cAAc,QAAQ,IAAI;AAC7C,YAAM,IAAI,SAAS,eAAe,QAAQ,YAAY;AACtD,UAAI,QAAQ,UAAU,+BAA+B;AACrD,YAAM,IAAI,SAAS,gBAAgB,CAAC,MAAM,OAAO,MAAM,KAAK,CAAC;AAC7D,YAAM,IAAI,SAAS,kBAAkB,MAAM,OAAO,sBAAsB,CAAC;AAEzE,UAAI,SAAS,MAAM,QAAQ,UAAU;AAErC,YAAM,IAAI,aAAa,MAAM;AAAA,IAC/B;AAAA,EACF;AAEA,YAAU,qBAAqB,SAAU,SAAS;AAChD,QAAI,QAAQ,UAAU,+BAA+B;AACrD,YAAQ,UAAU,EAAE,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,OAAO,GAAK,CAAG;AAEtG,YAAQ,UAAU,EAAE,eAAe,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,KAAK;AAAA,EACjG;AAEA,YAAU,UAAU,SAAU,eAAe;AAC3C,kBAAc,kBAAkB,MAAM,SAAS;AAAA,EACjD;AAGA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AAEX,YAAM,oBAAoB,CAAC;AAC3B,YAAM,cAAc,MAAM,MAAM,QAAQ,kBAAkB,CAAC;AAC3D,gBAAU,UAAU;AAAA,IACtB,OAAO;AACL,gBAAU,mBAAmB,MAAM,aAAa;AAChD,gBAAU,MAAM;AAEhB,eAAS,IAAI,GAAG,IAAI,MAAM,kBAAkB,QAAQ,KAAK;AACvD,YAAI,UAAU,MAAM,kBAAkB;AACtC,YAAI,KAAK,QAAQ;AACjB,cAAM,cAAc,YAAY,EAAE;AAClC,kBAAU,QAAQ,MAAM,aAAa;AAErC,iBAAS,KAAK,GAAG,KAAK,QAAQ,UAAU,QAAQ,MAAM;AACpD,kBAAQ,UAAU,IAAI,MAAM,aAAa;AAAA,QAC3C;AAAA,MACF;AAEA,YAAM,cAAc,IAAI;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,QAAQ,WAAY;AAC5B,QAAI,MAAM,WAAW,eAAe,KAAK,MAAM,eAAe;AAC5D;AAAA,IACF;AAEA,QAAI,SAAS,MAAM,QAAQ,UAAU;AAErC,QAAI,CAAC,MAAM,UAAU;AACnB,YAAM,WAAW,0BAAwB,YAAY;AACrD,YAAM,SAAS,UAAU,MAAM;AAC/B,YAAM,SAAS,gBAAgB,UAAU;AACzC,YAAM,SAAS,0BAA0B,iBAAiB;AAC1D,UAAI,MAAM,yBAAuB,YAAY;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,UAAI,SAAS,mBAAmB,WAAW;AAC3C,YAAM,SAAS,OAAO,GAAG;AAAA,IAC3B;AAEA,QAAI,aAAa,MAAM,WAAW,yBAAyB;AAC3D,UAAM,SAAS,OAAO,EAAE,SAAS,mBAAmB,UAAU;AAC9D,UAAM,SAAS,OAAO,EAAE,aAAa,MAAM;AAC3C,UAAM,SAAS,OAAO,MAAM,eAAe,MAAM;AAAA,EACnD;AAEA,YAAU,kBAAkB,SAAU,SAAS;AAC7C,QAAI,SAAS;AAEX,YAAM,oBAAoB,CAAC;AAC3B,YAAM,cAAc,MAAM,MAAM,QAAQ,kBAAkB,CAAC;AAAA,IAC7D,OAAO;AACL,gBAAU,mBAAmB,MAAM,aAAa;AAEhD,eAAS,IAAI,GAAG,IAAI,MAAM,kBAAkB,QAAQ,KAAK;AACvD,YAAI,UAAU,MAAM,kBAAkB;AACtC,YAAI,KAAK,QAAQ;AACjB,cAAM,cAAc,YAAY,EAAE;AAClC,kBAAU,QAAQ,MAAM,aAAa;AAErC,iBAAS,KAAK,GAAG,KAAK,QAAQ,UAAU,QAAQ,MAAM;AACpD,kBAAQ,UAAU,IAAI,MAAM,aAAa;AAAA,QAC3C;AAAA,MACF;AAEA,YAAM,cAAc,IAAI;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,uBAAuB,SAAU,SAAS;AAClD,QAAI,SAAS;AAEX,YAAM,oBAAoB,CAAC;AAC3B,YAAM,cAAc,MAAM,MAAM,QAAQ,kBAAkB,CAAC;AAAA,IAC7D,OAAO;AACL,gBAAU,mBAAmB,MAAM,aAAa;AAEhD,eAAS,IAAI,GAAG,IAAI,MAAM,kBAAkB,QAAQ,KAAK;AACvD,YAAI,UAAU,MAAM,kBAAkB;AACtC,YAAI,KAAK,QAAQ;AACjB,cAAM,cAAc,YAAY,EAAE;AAClC,kBAAU,QAAQ,MAAM,aAAa;AAErC,iBAAS,KAAK,GAAG,KAAK,QAAQ,UAAU,QAAQ,MAAM;AACpD,kBAAQ,UAAU,IAAI,MAAM,aAAa;AAAA,QAC3C;AAAA,MACF;AAEA,YAAM,cAAc,IAAI;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,OAAO,MAAM,QAAQ,mBAAmB;AAE5C,QAAI,WAAW,MAAM,WAAW,uBAAuB;AACvD,WAAO,KAAK,KAAM,UAAS,KAAK,SAAS,MAAQ,WAAS,KAAK,SAAS,MAAM,KAAK;AAAA,EACrF;AAEA,YAAU,uBAAuB,SAAU,KAAK;AAC9C,WAAO,MAAM,aAAa,qBAAqB,GAAG;AAAA,EACpD;AAEA,YAAU,iCAAiC,WAAY;AACrD,QAAI,MAAM,UAAU,sBAAsB;AAE1C,QAAI,OAAO,MAAM,QAAQ,mBAAmB;AAE5C,QAAI,aAAa,KAAK,KAAK,IAAI,QAAQ,IAAI;AAC3C,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,WAAY;AAC5C,QAAI,QAAQ,MAAM,WAAW,uBAAuB;AAEpD,QAAI,eAAe,CAAC,GAAK,GAAK,GAAK,CAAG;AAGtC,QAAI,MAAM,MAAM,KAAK,aAAa;AAClC,QAAI,MAAM,MAAM,KAAK,aAAa;AAElC,QAAI,OAAO,MAAM,QAAQ,2BAA2B,KAAK,GAAG;AAE5D,QAAI,aAAa,KAAK,MAAM,KAAK,EAAE;AACnC,QAAI,aAAa,KAAK,MAAM,KAAK,EAAE;AAGnC,QAAI,OAAO,MAAM,KAAK,aAAa;AACnC,QAAI,OAAO,MAAM,KAAK,aAAa;AAEnC,QAAI,QAAQ,MAAM,QAAQ,2BAA2B,MAAM,IAAI;AAI/D,QAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,IAAI;AACnC,QAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,IAAI;AAEnC,QAAI,QAAQ,GAAG;AACb,cAAQ;AAAA,IACV;AAEA,QAAI,QAAQ,GAAG;AACb,cAAQ;AAAA,IACV;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,IAAI;AACtC,aAAS,IAAI,GAAG,IAAI,MAAM,SAAS,QAAQ,KAAK;AAC9C,UAAI,MAAM,MAAM,SAAS,GAAG,YAAY,MAAM,SAAS,GAAG,UAAU,IAAI;AAExE,UAAI,QAAQ,IAAI;AACd,eAAO,MAAM,SAAS;AAAA,MACxB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,eAAe,SAAS;AAAA,EACvC;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,MAAM,aAAa,MAAM;AAC3B,YAAM,SAAS,yBAAyB;AAAA,IAC1C;AAAA,EACF;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,MAAM,yBAAuB,YAAY;AAAA,IAC7C,OAAO;AAAA,EACT,CAAC;AACD,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,eAAe,aAAa;AAC/C,QAAM,IAAI,SAAS,gBAAgB,WAAW;AAC9C,QAAM,IAAI,SAAS,kBAAkB,KAAK;AAC1C,QAAM,YAAY,qBAAmB,YAAY;AAAA,IAC/C,OAAO;AAAA,EACT,CAAC;AACD,QAAM,UAAU,aAAa,CAAC,MAAM,GAAG,CAAC;AACxC,QAAM,UAAU,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAClD,QAAM,iBAAiB,CAAC;AACxB,MAAI,MAAM,gBAAgB;AAAA,IACxB,OAAO;AAAA,EACT,CAAC;AAED,MAAI,WAAW,OAAO,CAAC,aAAa,gBAAgB,CAAC;AACrD,WAAS,WAAW,OAAO,CAAC,kBAAkB,CAAC;AAC/C,SAAO,WAAW,OAAO,CAAC,iBAAiB,YAAY,iBAAiB,KAAK,CAAC;AAE9E,oBAAkB,WAAW,KAAK;AACpC;AAnXA,IAQI,gBACA,mBAkUA,kBA0CA;AArXJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,iBAAgB;AACpB,IAAI,oBAAoB;AAkUxB,IAAI,mBAAiB;AAAA,MACnB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,kBAAkB,CAAC,GAAK,GAAK,CAAG;AAAA,IAClC;AAmCA,IAAI,gBAAc,YAAc,UAAQ,mBAAmB;AAO3D,sBAAiB,eAAe,aAAW;AAAA;AAAA;;;AC7W3C,gCAAgC,WAAW,OAAO;AAEhD,QAAM,eAAe,KAAK,wBAAwB;AAElD,YAAU,WAAW,SAAU,MAAM,MAAM;AACzC,QAAI,MAAM,kBAAkB,IAAI,IAAI,GAAG;AACrC,sBAAc,eAAe,OAAO,MAAM,iBAAiB,CAAC;AAC5D;AAAA,IACF;AAEA,UAAM,kBAAkB,IAAI,MAAM,MAAM,cAAc,MAAM;AAE5D,QAAI,cAAc,eAAe,8BAA8B,IAAI;AACnE,UAAM,cAAc,KAAK;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,MAAM;AAAA,MACd,YAAY,eAAe,8BAA8B,IAAI;AAAA,IAC/D,CAAC;AACD,UAAM,eAAe;AAAA,EACvB;AAEA,YAAU,OAAO,SAAU,QAAQ;AACjC,QAAI,CAAC,MAAM,SAAS;AAClB,UAAI,MAAM;AAAA,QACR,aAAa,MAAM;AAAA,QACnB,MAAM;AAAA,QACN,OAAO,aAAY;AAAA,QACnB,OAAO,MAAM;AAAA,MACf;AACA,YAAM,UAAU,OAAO,iBAAiB,EAAE,UAAU,GAAG;AACvD,YAAM,cAAc,SAAS;AAE7B,YAAM,UAAU,SAAS;AAEzB;AAAA,IACF;AAEA,WAAO,UAAU,EAAE,MAAM,YAAY,MAAM,QAAQ,UAAU,GAAG,GAAG,MAAM,aAAa,GAAG,MAAM,cAAc,MAAM,iBAAiB;AAEpI,UAAM,UAAU,SAAS;AAAA,EAC3B;AAEA,YAAU,aAAa,SAAU,MAAM;AACrC,QAAI,QAAQ,UAAU,OAAO;AAC3B,UAAI,CAAC,MAAM,aAAa;AACtB,cAAM,cAAc,IAAI,YAAY,MAAM,cAAc,MAAM,iBAAiB;AAAA,MACjF;AAEA,YAAM,QAAQ,MAAM,cAAc,MAAM,MAAM,WAAW;AAAA,IAC3D;AAAA,EACF;AAEA,YAAU,WAAW,SAAU,MAAM,UAAU,KAAK;AAClD,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,SAAM,OAAM,SAAS,WAAW,MAAM,eAAe,KAAK,qBAAqB;AAAA,EACjF;AAEA,YAAU,WAAW,SAAU,MAAM,UAAU,KAAK;AAClD,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,QAAI,UAAW,OAAM,SAAS,WAAW,MAAM,eAAe,KAAK;AAEnE,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,WAAK,UAAU,KAAK,IAAI;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,2BAA2B,SAAU,MAAM,KAAK;AACxD,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,QAAI,gBAAgB,IAAI,SAAS,MAAM;AAEvC,aAAS,OAAO,GAAG,OAAO,MAAM,mBAAmB,QAAQ;AACzD,UAAI,UAAW,OAAM,SAAS,OAAO,MAAM,eAAe,KAAK;AAE/D,eAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,aAAK,UAAU,KAAK,IAAI,OAAO,gBAAgB;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AAEA,YAAU,uCAAuC,SAAU,MAAM,KAAK;AACpE,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,QAAI,gBAAgB,IAAI,SAAS,MAAM;AAEvC,aAAS,OAAO,GAAG,OAAO,MAAM,mBAAmB,QAAQ;AACzD,UAAI,UAAW,OAAM,SAAS,OAAO,MAAM,eAAe,KAAK;AAE/D,eAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,aAAK,UAAU,KAAK,IAAI,OAAO,gBAAgB,KAAK;AAAA,MACtD;AAAA,IACF;AAAA,EACF;AAEA,YAAU,mCAAmC,SAAU,MAAM,KAAK;AAChE,QAAI,MAAM,MAAM,kBAAkB,IAAI,IAAI;AAE1C,QAAI,QAAQ,QAAW;AACrB,sBAAc,eAAe,OAAO,MAAM,mBAAmB,CAAC;AAC9D;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,cAAc;AAChC,cAAU,WAAW,MAAM,UAAU;AACrC,QAAI,OAAO,MAAM,MAAM;AACvB,QAAI,gBAAgB;AAEpB,aAAS,OAAO,GAAG,OAAO,MAAM,mBAAmB,QAAQ;AACzD,UAAI,UAAW,OAAM,SAAS,OAAO,MAAM,eAAe,KAAK;AAE/D,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAK,UAAU,IAAI,IAAI,KAAK,IAAI,OAAO,gBAAgB,IAAI,IAAI;AAAA,QACjE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM,UAAU,SAAS;AAAA,EAClC;AAEA,YAAU,gBAAgB,SAAU,SAAS,OAAO;AAClD,QAAI,QAAQ,CAAC,UAAU,OAAO,MAAM,OAAO,gBAAgB,CAAC;AAE5D,aAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAAK;AACnD,UAAI,QAAQ,MAAM,cAAc;AAChC,YAAM,KAAK,KAAK,OAAO,MAAM,MAAM,IAAI,EAAE,OAAO,MAAM,MAAM,GAAG,CAAC;AAAA,IAClE;AAEA,UAAM,KAAK,gBAAgB,OAAO,MAAM,OAAO,6BAA6B,EAAE,OAAO,MAAM,OAAO,8BAA8B,EAAE,OAAO,SAAS,WAAW,EAAE,OAAO,OAAO,uBAAuB,EAAE,OAAO,MAAM,OAAO,IAAI,EAAE,OAAO,MAAM,OAAO,WAAW,CAAC;AAChQ,WAAO,MAAM,KAAK,IAAI;AAAA,EACxB;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,MAAM;AAAA,MACR,UAAU;AAAA,QACR,QAAQ,MAAM,QAAQ,UAAU;AAAA,MAClC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,YAAU,YAAY,WAAY;AAChC,UAAM,oBAAoB;AAC1B,UAAM,cAAc;AACpB,UAAM,gBAAgB,CAAC;AACvB,UAAM,oBAAoB,oBAAI,IAAI;AAClC,UAAM,UAAU;AAChB,WAAO,MAAM;AACb,WAAO,MAAM;AAAA,EACf;AACF;AAaA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,QAAM,oBAAoB,oBAAI,IAAI;AAClC,QAAM,gBAAgB,CAAC;AACvB,QAAM,YAAY,CAAC;AACnB,QAAM,IAAI,MAAM,WAAW;AAAA,IACzB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,gBAAgB,CAAC;AACvB,QAAM,IAAI,MAAM,eAAe;AAAA,IAC7B,OAAO;AAAA,EACT,CAAC;AAED,QAAM,uBAAuB,MAAM,wBAAwB;AAAA,IACzD,QAAQ;AAAA,MACN,MAAM;AAAA,IACR;AAAA,EACF;AACA,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,CAAC;AAC7C,QAAM,OAAO,WAAW,OAAO,CAAC,UAAU,wBAAwB,SAAS,qBAAqB,aAAa,CAAC;AAE9G,yBAAuB,WAAW,KAAK;AACzC;AAlPA,IAII,cACA,iBA2MA,kBAoCA,eAEA;AAtPJ;AAAA;AAAA;AACA;AACA;AAEA,IAAI,eAAc,yBAAuB;AACzC,IAAI,kBAAgB,MAAM;AA2M1B,IAAI,mBAAiB;AAAA,MACnB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,OAAO;AAAA,MACP,mBAAmB;AAAA,IACrB;AA8BA,IAAI,gBAAc,MAAM,YAAY,UAAQ,wBAAwB;AAEpE,IAAI,2BAA2B;AAAA,MAC7B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AClPA,0BAA0B,WAAW,OAAO;AAE1C,QAAM,eAAe,KAAK,kBAAkB;AAE5C,YAAU,SAAS,SAAU,QAAQ;AACnC,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACnF,UAAM,SAAS;AACf,UAAM,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY;AAClE,UAAM,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY;AAClE,UAAM,QAAQ,QAAQ,MAAM;AAC5B,UAAM,SAAS,MAAM,OAAO,UAAU,EAAE,cAAc,MAAM,OAAO;AACnE,UAAM,cAAc,SAAS;AAAA,EAC/B;AAEA,YAAU,gBAAgB,SAAU,SAAS,OAAO;AAClD,QAAI,SAAS,YAAY,OAAO,SAAS,WAAW,EAAE,OAAO,OAAO,QAAQ,EAAE,OAAO,MAAM,OAAO,YAAY;AAC9G,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,MAAM;AAAA,MACR,UAAU,MAAM;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,UAAU,CAAC;AACjB,QAAM,uBAAuB;AAAA,IAE3B,YAAY,eAAe,SAAS,eAAe;AAAA,IAGnD,SAAS,CACT;AAAA,EACF;AACA,QAAM,gBAAgB,CAAC;AACvB,QAAM,IAAI,MAAM,eAAe;AAAA,IAC7B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,IAAI,WAAW,OAAO,CAAC,iBAAiB,UAAU,SAAS,CAAC;AAClE,QAAM,OAAO,WAAW,OAAO,CAAC,wBAAwB,UAAU,OAAO,CAAC;AAC1E,mBAAiB,WAAW,KAAK;AACnC;AAjEA,IAqCI,kBA8BA,eAEA;AArEJ;AAAA;AAAA;AAqCA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAyBA,IAAI,gBAAc,MAAM,YAAY,QAAM;AAE1C,IAAI,qBAAqB;AAAA,MACvB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACvDA,4BAA2B,UAAU,IAAI,oBAAoB;AAC3D,MAAI,QAAQ,GAAG,MAAM,QAAQ;AAE7B,MAAI,OAAO;AACT,QAAI,SAAS,SAAS,yBAAyB;AAC/C,WAAO,GAAG,OAAO,SAAS,SAAS,GAAG,GAAG,EAAE,OAAO,QAAQ,GAAG,EAAE,OAAO,kBAAkB;AAAA,EAC1F;AAEA,SAAO;AACT;AAWA,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,mBAAmB,UAAU,uBAAuB,qBAAqB;AAC/E,YAAM,iBAAiB,MAAM,iBAAiB,uBAAuB,mBAAmB;AACxF,YAAM,qBAAqB,MAAM,eAAe,UAAU;AAC1D,YAAM,SAAS,MAAM,mBAAmB,UAAU;AAClD,UAAI,MAAM,MAAM,eAAe,cAAc;AAE7C,UAAI,MAAM,WAAW,qBAAqB,GAAG;AAC3C,cAAM,WAAW,mBAAmB,IAAI,gBAAgB,CAAC;AAAA,MAC3D;AAAA,IACF;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,SAAS;AAC7C,QAAI,SAAS;AACX,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AACX,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,SAAS,WAAY;AAC7B,UAAM,WAAW,OAAO;AACxB,UAAM,eAAe,MAAM,WAAW,aAAa;AACnD,UAAM,gBAAgB,MAAM,eAAe,iBAAiB;AAC5D,cAAU,MAAM,MAAM,eAAe,MAAM,MAAM;AAEjD,cAAU,UAAU,MAAM,MAAM;AAAA,EAClC;AAEA,YAAU,sBAAsB,WAAY;AAC1C,QAAI,MAAM,MAAM,aAAa,UAAU;AAEvC,QAAI,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,IAAI;AAC/D,YAAM,aAAa;AACnB,YAAM,eAAe;AAAA,IACvB,OAAO;AACL,YAAM,aAAa;AACnB,YAAM,eAAe;AAAA,IACvB;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,QAAQ;AACtC,QAAI,QAAQ,MAAM,IAAI,YAAY;AAClC,QAAI,QAAQ,MAAM,iBAAiB,cAAc;AACjD,QAAI,UAAU,MAAM,UAAU;AAE9B,QAAI,UAAU,SAAS,IAAI,SAAS,MAAM,WAAW,SAAS,IAAI,SAAS,MAAM,YAAY,EAAE,SAAS,IAAI,OAAO;AAEjH,UAAI,QAAQ,QAAQ,aAAa;AACjC,UAAI,SAAS,MAAM,eAAe,+BAA+B;AACjE,mBAAK,SAAS,OAAO;AACrB,mBAAK,UAAU,SAAS,SAAS,MAAM;AAEvC,UAAI,UAAU,MAAM,UAAU;AAC9B,mBAAK,UAAU,UAAU,OAAO;AAChC,mBAAK,OAAO,UAAU,QAAQ;AAE9B,mBAAK,SAAS,SAAS,UAAU,OAAO;AAIxC,UAAI,eAAe,MAAM,gBAAgB;AACzC,mBAAK,SAAS,SAAS,cAAc,OAAO;AAE5C,mBAAK,OAAO,UAAU,OAAO;AAC7B,UAAI,OAAO,MAAM,cAAc;AAC/B,mBAAK,SAAS,QAAQ;AACtB,mBAAK,MAAM,UAAU,UAAU,CAAC,IAAM,KAAK,IAAI,IAAM,KAAK,IAAI,IAAM,KAAK,EAAE,CAAC;AAC5E,mBAAK,SAAS,SAAS,UAAU,OAAO;AAExC,YAAM,IAAI,SAAS,cAAc,OAAO;AAGxC,UAAI,MAAM,MAAM,aAAa,UAAU;AAEvC,UAAI,wBAAwB,MAAM,WAAW,kBAAkB,GAC3D,UAAU,sBAAsB;AAGpC,UAAI,SAAS,MAAM,WAAW,SAAS;AAEvC,UAAI,YAAY,MAAM,WAAW,eAAe,GAAG;AAEjD,iBAAS,MAAM,WAAW,mBAAmB,MAAM;AAAA,MACrD;AAEA,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACZ,UAAI,QAAQ;AAEZ,UAAI,YAAY,aAAY,GAAG;AAC7B,gBAAQ;AACR,gBAAQ;AACR,gBAAQ;AAAA,MACV,WAAW,YAAY,aAAY,GAAG;AACpC,gBAAQ;AACR,gBAAQ;AACR,gBAAQ;AAAA,MACV;AAEA,gBAAU,SAAS;AACnB,gBAAU,SAAS,IAAI,QAAQ;AAC/B,gBAAU,SAAS,IAAI,QAAQ;AAC/B,gBAAU,KAAK;AACf,mBAAK,cAAc,WAAW,WAAW,QAAQ;AACjD,YAAM,IAAI,SAAS,UAAU,SAAS;AACtC,gBAAU,SAAS;AACnB,gBAAU,SAAS,IAAI,QAAQ,IAAI;AACnC,gBAAU,SAAS,IAAI,QAAQ;AAC/B,gBAAU,KAAK;AACf,mBAAK,cAAc,WAAW,WAAW,QAAQ;AACjD,mBAAK,SAAS,WAAW,WAAW,SAAS;AAC7C,gBAAU,KAAK;AACf,YAAM,IAAI,SAAS,SAAS,SAAS;AACrC,gBAAU,SAAS;AACnB,gBAAU,SAAS,IAAI,QAAQ;AAC/B,gBAAU,SAAS,IAAI,QAAQ,IAAI;AACnC,gBAAU,KAAK;AACf,mBAAK,cAAc,WAAW,WAAW,QAAQ;AACjD,mBAAK,SAAS,WAAW,WAAW,SAAS;AAC7C,gBAAU,KAAK;AACf,YAAM,IAAI,SAAS,SAAS,SAAS;AAGrC,UAAI,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB,UAAI,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB,UAAI,QAAQ,MAAM,OAAO,gBAAgB,EAAE;AAC3C,UAAI,SAAS,MAAM,WAAW,EAAE,SAAS;AACzC,UAAI,UAAU,MAAM,WAAW,EAAE,sBAAsB;AACvD,UAAI,SAAS;AAEb,eAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAChC,YAAI,KAAK,MAAM,YAAY,EAAE,eAAe;AAC5C,YAAI,KAAK,MAAM,YAAY,EAAE,cAAc;AAC3C,YAAI,SAAS,SAAS,IAAI;AAC1B,YAAI,OAAO,MAAM,YAAY,EAAE,uBAAuB,MAAM;AAE5D,YAAI,QAAQ,MAAM,YAAY,EAAE,6BAA6B,GAAG;AAC9D,cAAI,SAAS,KAAK,SAAS;AAC3B,eAAK,OAAO,KAAK,OAAO;AACxB,eAAK,MAAO,QAAO,KAAK,OAAO;AAAA,QACjC;AAEA,eAAO,KAAK,SAAS;AACrB,eAAO,KAAK,CAAC,KAAK,KAAK;AAAA,MACzB;AAEA,YAAM,IAAI,SAAS,UAAU,MAAM;AACnC,YAAM,IAAI,SAAS,UAAU,MAAM;AACnC,YAAM,IAAI,aAAa,MAAM;AAAA,IAC/B;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,QAAQ;AAC3C,QAAI,gBAAgB,MAAM,iBAAiB,cAAc,EAAE,YAAY;AACvE,QAAI,QAAQ,MAAM,OAAO,gBAAgB,EAAE;AAC3C,UAAM,WAAW,EAAE,sBAAsB;AAEzC,QAAI,YAAY;AAChB,QAAI,eAAe,mBAAkB,eAAe,cAAc,wBAAwB,SAAS;AAEnG,QAAI,MAAM,uBAAuB,cAAc;AAC7C,YAAM,UAAU;AAChB,UAAI,aAAa,IAAI,WAAW,MAAM,UAAU,IAAI,MAAM,YAAY,CAAC;AACvE,UAAI,OAAO,cAAc,uBAAuB;AAEhD,UAAI,MAAM;AACR,YAAI,WAAW,IAAI,aAAa,MAAM,YAAY,CAAC;AAEnD,iBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,iBAAO,cAAc,uBAAuB,CAAC;AAC7C,cAAI,SAAS,KAAK,SAAS;AAC3B,eAAK,SAAS,OAAO,IAAI,OAAO,IAAI,MAAM,WAAW,UAAU,CAAC;AAEhE;AACE,qBAAS,KAAK,GAAG,KAAK,MAAM,WAAW,MAAM;AAC3C,kBAAI,OAAO,IAAI,MAAM,YAAY,IAAI,KAAK;AAE1C,yBAAW,QAAQ,MAAQ,SAAS,KAAK;AACzC,yBAAW,OAAO,KAAK,MAAQ,SAAS,KAAK,IAAI;AACjD,yBAAW,OAAO,KAAK,MAAQ,SAAS,KAAK,IAAI;AACjD,yBAAW,OAAO,KAAK;AAEvB,uBAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,2BAAW,OAAO,MAAM,YAAY,IAAI,MAAM,WAAW,OAAO;AAAA,cAClE;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF,OAAO;AACL,iBAAS,MAAM,GAAG,MAAM,MAAM,WAAW,EAAE,KAAK;AAC9C,cAAI,OAAO,MAAQ,MAAO,OAAM,YAAY;AAC5C,qBAAW,MAAM,KAAK;AACtB,qBAAW,MAAM,IAAI,KAAK;AAC1B,qBAAW,MAAM,IAAI,KAAK;AAC1B,qBAAW,MAAM,IAAI,KAAK;AAE1B,mBAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAChC,uBAAW,MAAM,IAAI,MAAM,YAAY,IAAI,OAAO,WAAW,MAAM,IAAI;AAAA,UACzE;AAAA,QACF;AAAA,MACF;AAEA;AACE,YAAI,OAAO;AAAA,UACT,aAAa;AAAA,UACb,OAAO,MAAM;AAAA,UACb,QAAQ,MAAM,UAAU;AAAA,UACxB,OAAO;AAAA,UACP,QAAQ;AAAA,QACV;AACA,YAAI,SAAS,OAAO,kBAAkB,EAAE,WAAW,IAAI;AACvD,YAAI,QAAQ,OAAO,WAAW,aAAa;AAC3C,YAAI,SAAS,MAAM,OAAO,gBAAgB;AAC1C,eAAO,KAAK;AAAA,MACd;AACA,YAAM,qBAAqB;AAAA,IAC7B;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,QAAQ;AAC1C,QAAI,OAAO;AAAA,MACT,WAAW,MAAM;AAAA,MACjB,OAAO,MAAM,aAAa,aAAa,EAAE,WAAW;AAAA,IACtD;AACA,QAAI,SAAS,OAAO,kBAAkB,EAAE,WAAW,IAAI;AACvD,QAAI,SAAS,MAAM,OAAO,gBAAgB;AAE1C,QAAI,CAAC,OAAO,MAAM,OAAO,GAAG,WAAW,MAAM,QAAQ;AACnD,UAAI,QAAQ,OAAO,WAAW,YAAY;AAC1C,aAAO,KAAK;AAAA,IACd;AAEA,cAAU,eAAe,MAAM;AAAA,EACjC;AAEA,YAAU,QAAQ,SAAU,eAAe,QAAQ;AACjD,cAAU,oBAAoB;AAC9B,UAAM,OAAO,gBAAgB,MAAM,YAAY;AAC/C,cAAU,cAAc,MAAM;AAE9B,QAAI,gBAAgB,MAAM,iBAAiB,cAAc,EAAE,YAAY;AACvE,QAAI,QAAQ,cAAc,qBAAqB,MAAM,mBAAkB,UAAU,YAAY;AAE7F,QAAI,CAAC,MAAM,gBAAgB,UAAU,MAAM,aAAa,WAAW,EAAE,WAAW;AAC9E,YAAM,eAAe,mBAAiB,YAAY;AAAA,QAChD,OAAO;AAAA,MACT,CAAC;AACD,YAAM,aAAa,OAAO,QAAQ;AAAA,QAChC,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAEA,UAAM,OAAO,uBAAuB,UAAU,aAAa,CAAC;AAC5D,UAAM,OAAO,kBAAkB,MAAM,cAAc;AACnD,UAAM,OAAO,MAAM,eAAe,MAAM;AACxC,UAAM,OAAO,eAAe;AAAA,EAC9B;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,YAAY,CAAC;AAEjB,cAAU,KAAK,MAAM,YAAY;AACjC,WAAO;AAAA,EACT;AAEA,MAAI,KAAK,MAAM,OAAO,sBAAsB;AAE5C,YAAU,wBAAwB,SAAU,MAAM,UAAU,aAAa;AACvE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAClD,UAAM,iBAAiB,aAAa,6BAA6B;AACjE,QAAI,OAAO,MAAM,QAAQ;AACzB,QAAI,QAAQ,CAAC,2CAA2C,+FAA+F,cAAc;AAErK,QAAI,MAAM,eAAe,GAAG;AAC1B,YAAM,KAAK,2DAA2D;AAAA,IACxE,OAAO;AACL,YAAM,KAAK,4DAA4D;AAAA,IACzE;AAEA,UAAM,KAAK,6BAA6B,iDAAiD;AACzF,WAAO,uBAAqB,WAAW,MAAM,yBAAyB,KAAK,EAAE;AAC7E,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,KAAG,IAAI,yBAAyB,UAAU,qBAAqB;AAE/D,YAAU,sBAAsB,SAAU,MAAM,UAAU,aAAa;AACrE,QAAI,QAAQ,SAAS,qBAAqB,QAAQ;AAElD,QAAI,MAAM,eAAe,GAAG;AAC1B,YAAM,UAAU,aAAa,UAAU;AAAA,IACzC,OAAO;AACL,YAAM,UAAU,aAAa,UAAU;AAAA,IACzC;AAAA,EACF;AAEA,KAAG,IAAI,uBAAuB,UAAU,mBAAmB;AAE3D,YAAU,qBAAqB,SAAU,MAAM,UAAU,aAAa;AACpE,QAAI,QAAQ,SAAS,qBAAqB,UAAU;AACpD,QAAI,OAAO,MAAM,QAAQ;AAEzB,QAAI,MAAM,eAAe,GAAG;AAC1B,aAAO,uBAAqB,WAAW,MAAM,wBAAwB,CAAC,sCAAsC,4EAA4E,sBAAsB,CAAC,EAAE;AAAA,IACnN,OAAO;AACL,aAAO,uBAAqB,WAAW,MAAM,wBAAwB,CAAC,sCAAsC,4EAA4E,sBAAsB,CAAC,EAAE;AAAA,IACnN;AAEA,WAAO,uBAAqB,WAAW,MAAM,wBAAwB,CAAC,8BAA8B,oFAAoF,gFAAgF,CAAC,EAAE;AAC3Q,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,KAAG,IAAI,sBAAsB,UAAU,kBAAkB;AAC3D;AAoBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,SAAS,0BAAwB,YAAY;AACnD,QAAM,OAAO,0BAA0B,eAAe;AACtD,QAAM,MAAM,yBAAuB,YAAY;AAAA,IAC7C,OAAO;AAAA,EACT,CAAC;AACD,QAAM,IAAI,SAAS,cAAc,aAAa;AAC9C,QAAM,IAAI,SAAS,UAAU,WAAW;AACxC,QAAM,IAAI,SAAS,SAAS,WAAW;AACvC,QAAM,IAAI,SAAS,SAAS,WAAW;AACvC,QAAM,IAAI,SAAS,UAAU,WAAW;AACxC,QAAM,IAAI,SAAS,UAAU,WAAW;AACxC,QAAM,OAAO,OAAO,MAAM,GAAG;AAC7B,QAAM,OAAO,yBAAuB,YAAY;AAAA,IAC9C,OAAO;AAAA,EACT,CAAC;AACD,QAAM,gBAAgB,yBAAuB,YAAY;AAAA,IACvD,OAAO;AAAA,EACT,CAAC;AACD,QAAM,eAAe,CAAC;AACtB,MAAI,MAAM,cAAc;AAAA,IACtB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,WAAW,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACnD,QAAM,cAAc,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACtD,QAAM,eAAe,CAAC;AACtB,MAAI,MAAM,YAAY;AAEtB,uBAAqB,WAAW,KAAK;AACvC;AAhaA,IAYI,cACA,iBAkBA,SACA,UACA,UACA,WACA,WA6UA,kBAkDA;AAlaJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,eAAc,WAAU;AAC5B,IAAI,kBAAkB;AAkBtB,IAAI,UAAU,IAAI,aAAa,EAAE;AACjC,IAAI,WAAW,IAAI,aAAa,EAAE;AAClC,IAAI,WAAW,IAAI,aAAa,EAAE;AAClC,IAAI,YAAY,IAAI,aAAa,CAAC;AAClC,IAAI,YAAY,IAAI,aAAa,CAAC;AA6UlC,IAAI,mBAAiB;AAAA,MACnB,WAAW;AAAA,IAYb;AAqCA,IAAI,gBAAc,YAAc,UAAQ,sBAAsB;AAO9D,sBAAiB,kBAAkB,aAAW;AAAA;AAAA;;;ACja9C,6BAA6B,WAAW,OAAO;AAE7C,QAAM,eAAe,KAAK,qBAAqB;AAE/C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,IACF;AAEA,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,qBAAqB,MAAM,eAAe,uBAAuB,uBAAuB;AAE9F,UAAI,MAAM,WAAW,QAAW;AAC9B,cAAM,SAAS,MAAM,mBAAmB,gBAAgB;AAAA,MAC1D;AAEA,gBAAU,aAAa;AACvB,gBAAU,eAAe,MAAM,WAAW,UAAU,CAAC;AACrD,gBAAU,kBAAkB;AAAA,IAC9B;AAAA,EACF;AAGA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,CAAC,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAClL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,QAAQ,SAAU,OAAO;AACtC,YAAM,SAAS,UAAU;AAAA,IAC3B,CAAC;AACD,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,0BAA0B,SAAU,YAAY;AACxD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AACjL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,QAAQ,SAAU,OAAO;AACtC,YAAM,SAAS,UAAU;AAAA,IAC3B,CAAC;AACD,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,UAAI,MAAM,WAAW,YAAY,GAAG;AAClC,mBAAW,0BAA0B;AAAA,MACvC,OAAO;AACL,mBAAW,+BAA+B;AAAA,MAC5C;AAAA,IACF;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAC5C,cAAU,eAAe,OAAO;AAChC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAE5C,QAAI,KAAK,IAAI,MAAM,WAAW,SAAS,GAAG,QAAQ,kBAAkB,CAAC,IAAI,MAAM,gBAAgB,SAAS,GAAG;AACzG,YAAM,WAAW,cAAc;AAC/B,UAAI,OAAO,MAAM,WAAW,UAAU;AAEtC,UAAI,SAAS,QAAQ,+BAA+B;AACpD,YAAM,YAAY,KAAK,KAAK,KAAK,OAAO;AACxC,YAAM,YAAY,KAAK,KAAK,KAAK,OAAO;AACxC,YAAM,YAAY,KAAK,KAAK,MAAM,OAAO;AACzC,mBAAK,UAAU,MAAM,YAAY,MAAM,IAAI;AAE3C,UAAI,MAAM,WAAW,cAAc,GAAG;AACpC,qBAAK,SAAS,MAAM,YAAY,YAAY;AAAA,MAC9C,OAAO;AAEL,qBAAK,KAAK,MAAM,YAAY,cAAc,MAAM,YAAY,IAAI;AAEhE,cAAM,YAAY,aAAa,KAAK;AACpC,cAAM,YAAY,aAAa,KAAK;AACpC,cAAM,YAAY,aAAa,MAAM;AACrC,qBAAK,OAAO,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAC1E,qBAAK,UAAU,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAAA,MAC/E;AAGA,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,CAAC,CAAC,MAAM,YAAY,IAAI,CAAC,MAAM,YAAY,IAAI,CAAC,MAAM,YAAY,EAAE,CAAC;AAEpI,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;AACnG,YAAM,gBAAgB,SAAS;AAAA,IACjC;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,kBAAkB,CAAC;AACzB,MAAI,MAAM,iBAAiB;AAAA,IACzB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,cAAc,IAAI,aAAa,EAAE;AAAA,IACjC,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,EAC3B;AACA,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,eAAe;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,MAAM,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAAA,EAC1C;AACA,QAAM,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC;AAC/B,MAAI,WAAW,OAAO,CAAC,UAAU,iBAAiB,CAAC;AAEnD,sBAAoB,WAAW,KAAK;AACtC;AAtJA,IAsHI,kBAkCA;AAxJJ;AAAA;AAAA;AACA;AACA;AACA;AAmHA,IAAI,mBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,eAAe;AAAA,MACf,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AA6BA,IAAI,gBAAc,YAAc,UAAQ,qBAAqB;AAO7D,sBAAiB,iBAAiB,aAAW;AAAA;AAAA;;;ACvJ7C,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,IACF;AAEA,QAAI,SAAS;AACX,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,qBAAqB,MAAM,eAAe,uBAAuB,uBAAuB;AAE9F,UAAI,MAAM,WAAW,QAAW;AAC9B,cAAM,SAAS,MAAM,mBAAmB,gBAAgB;AAAA,MAC1D;AAEA,gBAAU,aAAa;AACvB,YAAM,WAAW,UAAU,EAAE,OAAO;AAEpC,gBAAU,kBAAkB;AAAA,IAC9B;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAGA,UAAI,MAAM,MAAM,WAAW,UAAU,EAAE,UAAU;AAEjD,UAAI,CAAC,OAAO,IAAI,WAAW,KAAK,IAAI,KAAK,IAAI,IAAI;AAC/C;AAAA,MACF;AAEA,iBAAW,UAAU,SAAS;AAAA,IAChC;AAAA,EACF;AAGA,MAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,MAAI,OAAO,IAAI,aAAa,CAAC;AAE7B,YAAU,wBAAwB,SAAU,QAAQ,QAAQ;AAC1D,QAAI,QAAQ,MAAM,WAAW,UAAU,EAAE,aAAa;AAEtD,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,QAAI,SAAS,MAAM,UAAU;AAC7B,QAAI,IAAI,MAAM,WAAW,UAAU;AACnC,QAAI,QAAQ;AAEZ,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,UAAI,KAAK,OAAO;AAEhB,eAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,YAAI,KAAK,OAAO;AAEhB,iBAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,cAAI,KAAK,OAAO;AAChB,gBAAM,aAAa,KAAK,IAAI;AAC5B,cAAI,UAAU,SAAS,QAAQ;AAC/B,iBAAO,aAAa,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE;AACzE,iBAAO,aAAa,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE;AACzE,iBAAO,aAAa,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,MAAM,KAAK,KAAK,EAAE;AAC1E;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAC/I;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,SAAS,GAAG,SAAS,UAAU;AACrC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,iBAAiB,SAAU,SAAS;AAE5C,QAAI,KAAK,IAAI,MAAM,WAAW,SAAS,GAAG,QAAQ,kBAAkB,CAAC,IAAI,MAAM,gBAAgB,SAAS,GAAG;AACzG,YAAM,WAAW,cAAc;AAC/B,UAAI,OAAO,MAAM,WAAW,UAAU;AAEtC,UAAI,SAAS,QAAQ,+BAA+B;AACpD,mBAAK,UAAU,MAAM,YAAY,MAAM,IAAI;AAE3C,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;AACnG,YAAM,gBAAgB,SAAS;AAAA,IACjC;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,kBAAkB,CAAC;AACzB,QAAM,IAAI,MAAM,iBAAiB;AAAA,IAC/B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,MAAM,IAAI,aAAa,EAAE;AAAA,IACzB,MAAM,IAAI,aAAa,EAAE;AAAA,EAC3B;AACA,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,iBAAiB,CAAC;AAEzD,kBAAgB,WAAW,KAAK;AAClC;AAtIA,IAiHI,kBAuBA;AAxIJ;AAAA;AAAA;AACA;AACA;AACA;AA8GA,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,iBAAiB;AAAA,IACnB;AAoBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,iBAAiB;AAO7D,sBAAiB,aAAa,aAAW;AAAA;AAAA;;;ACxIzC,2CAA2C,WAAW,OAAO;AAC3D,QAAM,eAAe,KAAK,mCAAmC;AAE7D,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,UAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,UAAM,qBAAqB,MAAM,eAAe,UAAU;AAC1D,QAAI,cAAc,MAAM,eAAe,eAAe;AACtD,QAAI,SAAS,MAAM,iBAAiB,MAAM,eAAe,cAAc,EAAE,gBAAgB,IAAI;AAC7F,QAAI,QAAQ,MAAM,eAAe,sBAAsB;AACvD,QAAI,SAAS;AAEb,QAAI,MAAM,WAAW,cAAc;AAAG;AAEtC,UAAM,WAAW,eAAe,MAAM,WAAW,aAAa,GAAG,QAAQ,aAAa,OAAO,MAAM;AAAA,EACrG;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,oCAAkC,WAAW,KAAK;AACpD;AApCA,IA2BI,kBAWA;AAtCJ;AAAA;AAAA;AACA;AACA;AAyBA,IAAI,mBAAiB,CAAC;AAWtB,IAAI,gBAAc,MAAM,YAAY,UAAQ,mCAAmC;AAO/E,sBAAiB,+BAA+B,aAAW;AAAA;AAAA;;;AC7C3D;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACLA,sBAAsB,WAAW,OAAO;AACtC,QAAM,eAAe,KAAK,cAAc;AACxC,MAAI,gBAAgB,UAAU;AAE9B,MAAI,MAAM,QAAQ;AAChB,UAAM,SAAS,MAAM,OAAO,IAAI,SAAU,MAAM;AAC9C,aAAO;AAAA,QACL,MAAM,IAAI,KAAK,IAAI;AAAA,MACrB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,aAAa,WAAY;AACjC,cAAU,iBAAiB;AAC3B,cAAU,UAAU;AACpB,cAAU,gBAAgB;AAAA,EAC5B;AAEA,YAAU,mBAAmB,WAAY;AACvC,UAAM,SAAS,CAAC;AAChB,UAAM,iBAAiB,CAAC;AACxB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,gBAAgB,SAAU,OAAO;AACzC,cAAU,iBAAiB;AAC3B,UAAM,iBAAiB,MAAM,kBAAkB,EAAE,IAAI,SAAU,GAAG;AAChE,aAAO;AAAA,IACT,CAAC;AAED,UAAM,SAAS,MAAM,OAAO,EAAE,IAAI,SAAU,GAAG;AAC7C,aAAO;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EAEH;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO;AAAA,EACtB;AAEA,YAAU,0BAA0B,WAAY;AAC9C,WAAO,MAAM,OAAO;AAAA,EACtB;AAEA,YAAU,WAAW,SAAU,KAAK;AAClC,UAAM,SAAS,CAAC,EAAE,OAAO,MAAM,QAAQ;AAAA,MACrC,MAAM;AAAA,IACR,CAAC;AACD,WAAO,MAAM,OAAO,SAAS;AAAA,EAC/B;AAEA,YAAU,kBAAkB,WAAY;AACtC,UAAM,SAAS,CAAC;AAAA,EAClB;AAEA,YAAU,cAAc,SAAU,WAAW;AAC3C,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,OAAO;AAClD,aAAO,cAAc,MAAM,KAAK,QAAQ;AAAA,IAC1C,CAAC;AAAA,EACH;AAEA,YAAU,qBAAqB,SAAU,UAAU;AACjD,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,OAAO,KAAK;AACvD,aAAO,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,MAAM,OAAO,IAAI,SAAU,OAAO;AACvC,aAAO,MAAM;AAAA,IACf,CAAC;AAAA,EACH;AAEA,YAAU,WAAW,SAAU,WAAW;AACxC,WAAO,OAAO,cAAc,WAAW,UAAU,gBAAgB,SAAS,IAAI,UAAU,eAAe,SAAS;AAAA,EAClH;AAEA,YAAU,iBAAiB,SAAU,WAAW;AAC9C,WAAO,MAAM,OAAO,OAAO,SAAU,GAAG,GAAG,GAAG;AAC5C,aAAO,EAAE,KAAK,QAAQ,MAAM,YAAY,EAAE,OAAO;AAAA,IACnD,GAAG,IAAI;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,WAAW;AACjD,WAAO,MAAM,OAAO,OAAO,SAAU,GAAG,GAAG,GAAG;AAC5C,aAAO,EAAE,QAAQ,EAAE,KAAK,QAAQ,MAAM,YAAY;AAAA,QAChD,OAAO,EAAE;AAAA,QACT,OAAO;AAAA,MACT,IAAI;AAAA,IACN,GAAG;AAAA,MACD,OAAO;AAAA,MACP,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,YAAU,kBAAkB,SAAU,KAAK;AACzC,WAAO,OAAO,KAAK,MAAM,MAAM,OAAO,SAAS,MAAM,OAAO,KAAK,OAAO;AAAA,EAC1E;AAEA,YAAU,WAAW,SAAU,WAAW;AACxC,WAAO,UAAU,kBAAkB,SAAS,EAAE,SAAS;AAAA,EACzD;AAEA,YAAU,eAAe,SAAU,KAAK;AACtC,QAAI,MAAM,MAAM,OAAO;AACvB,WAAO,MAAM,IAAI,KAAK,QAAQ,IAAI;AAAA,EACpC;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,UAAU,SAAU,WAAW;AACvC,WAAO,MAAM,eAAe;AAAA,EAC9B;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,UAAM,UAAU,EAAE,QAAQ,SAAU,KAAK;AACvC,UAAI,WAAW,UAAU,QAAQ,IAAI,QAAQ,CAAC;AAE9C,UAAI,aAAa,SAAS,CAAE,OAAM,gBAAgB,aAAa,SAAS,KAAK;AAC3E,YAAI,UAAU,UAAU,eAAe,IAAI,QAAQ,CAAC;AAEpD,YAAI,CAAC,SAAS;AACZ,cAAI,SAAS,KAAK,SAAS,IAAI,kBAAkB,GAAG;AAClD,sBAAU,SAAS,GAAG;AAAA,UACxB,OAAO;AACL,gBAAI,SAAS,IAAI,sBAAsB;AACvC,gBAAI,UAAU,IAAI,kBAAkB;AACpC,gBAAI,MAAM,OAAO,KAAK,OAAO;AAE7B,gBAAI,UAAU,MAAM,QAAQ;AAC1B,wBAAW,OAAM,KAAK;AAAA,YACxB;AAEA,sBAAU,eAAa,YAAY;AAAA,cACjC,MAAM,IAAI,QAAQ;AAAA,cAClB,UAAU,IAAI,YAAY;AAAA,cAC1B,oBAAoB,IAAI,sBAAsB;AAAA,cAC9C,MAAM;AAAA,YACR,CAAC;AACD,oBAAQ,SAAS,KAAK,IAAI,SAAS,MAAM,CAAC;AAC1C,sBAAU,SAAS,OAAO;AAAA,UAC5B;AAAA,QACF,WAAW,IAAI,sBAAsB,MAAM,QAAQ,sBAAsB,GAAG;AAC1E,cAAI,SAAS,MAAM,SAAS,IAAI,kBAAkB,GAAG;AACnD,gBAAI,OAAO,OAAO,KAAK,OAAO;AAE9B,oBAAQ,SAAS,MAAM,IAAI,SAAS,MAAM,CAAC;AAAA,UAC7C,OAAO;AAGL,qBAAS,IAAI,GAAG,IAAI,IAAI,kBAAkB,GAAG,EAAE,GAAG;AAChD,sBAAQ,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC;AAAA,YACrC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,cAAc,SAAU,WAAW;AAC3C,UAAM,eAAe,aAAa;AAAA,EACpC;AAEA,YAAU,eAAe,SAAU,WAAW;AAC5C,UAAM,eAAe,aAAa;AAAA,EACpC;AAEA,YAAU,YAAY,WAAY;AAChC,QAAI,CAAC,MAAM,eAAe,MAAM,cAAc;AAC5C,YAAM,cAAc;AACpB,YAAM,eAAe;AACrB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,aAAa,WAAY;AACjC,QAAI,MAAM,eAAe,CAAC,MAAM,cAAc;AAC5C,YAAM,cAAc;AACpB,YAAM,eAAe;AACrB,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,kBAAkB,WAAY;AACtC,UAAM,iBAAiB,CAAC;AAAA,EAC1B;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,UAAM,SAAS,MAAM,UAAU,EAAE,IAAI,SAAU,KAAK;AAClD,UAAI,SAAS,IAAI,SAAS;AAC1B,aAAO,SAAS,GAAG;AACnB,aAAO;AAAA,QACL,MAAM;AAAA,MACR;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,YAAY,SAAU,OAAO;AACrC,WAAO,MAAM,kBAAkB,EAAE,IAAI,SAAU,GAAG;AAChD,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAGA,YAAU,QAAQ,WAAY;AAC5B,WAAO,MAAM,OAAO,QAAQ,SAAU,OAAO;AAC3C,aAAO,MAAM,KAAK,MAAM;AAAA,IAC1B,CAAC;AAAA,EACH;AAGA,YAAU,WAAW,WAAY;AAC/B,WAAO,MAAM,OAAO,OAAO,SAAU,GAAG,GAAG;AACzC,aAAO,EAAE,KAAK,SAAS,IAAI,IAAI,EAAE,KAAK,SAAS,IAAI;AAAA,IACrD,GAAG,MAAM,KAAK;AAAA,EAChB;AAIA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM,OAAO,OAAO,SAAU,GAAG,GAAG;AACzC,aAAO,IAAI,EAAE,KAAK,sBAAsB;AAAA,IAC1C,GAAG,CAAC;AAAA,EACN;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO,SAAS,IAAI,MAAM,OAAO,GAAG,kBAAkB,IAAI;AAAA,EACzE;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,SAAS,cAAc;AAE3B,QAAI,QAAQ;AACV,aAAO,SAAS,MAAM,OAAO,IAAI,SAAU,MAAM;AAC/C,eAAO;AAAA,UACL,MAAM,KAAK,KAAK,SAAS;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AACF;AASA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,IAAI,WAAW,KAAK;AAC1B,eAAa,WAAW,KAAK;AAC/B;AA7QA,IAiQI,kBAcA,eAEA;AAjRJ;AAAA;AAAA;AACA;AACA;AA+PA,IAAI,mBAAiB;AAAA,MACnB,QAAQ,CAAC;AAAA,MACT,gBAAgB,CAAC;AAAA,MAEjB,aAAa;AAAA,MACb,cAAc;AAAA,IAChB;AAQA,IAAI,gBAAc,MAAM,YAAY,UAAQ,cAAc;AAE1D,IAAI,iBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACpRA,IAAI,gBAWA,qBAKA,gBAcA,iBAMA,yBAOA,gBACA,wBAQA;AApDJ;AAAA;AAAA,IAAI,iBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,aAAa;AAAA,MACb,UAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AACA,IAAI,sBAAsB;AAAA,MACxB,KAAK;AAAA,MACL,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AACA,IAAI,iBAAiB;AAAA,MACnB,eAAe;AAAA,MAEf,sBAAsB;AAAA,MAEtB,qBAAqB;AAAA,MAErB,aAAa;AAAA,MAEb,cAAc;AAAA,MAEd,YAAY;AAAA,IAEd;AACA,IAAI,kBAAkB;AAAA,MACpB,gBAAgB;AAAA,MAEhB,aAAa;AAAA,IAEf;AACA,IAAI,0BAA0B;AAAA,MAC5B,WAAW;AAAA,MACX,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,IAEX;AACA,IAAI,iBAAiB;AACrB,IAAI,yBAAyB;AAAA,MAC3B,SAAS;AAAA,MAET,QAAQ;AAAA,MAER,QAAQ;AAAA,IAEV;AACA,IAAI,cAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACtDA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAOzf,8BAA8B,WAAW,OAAO;AAC9C,MAAI,YAAY,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,aAAa,aAAa;AAElG,8BAA4B,SAAS;AAInC,QAAI,eAAe,UAAU,KAAK,SAAU,IAAI;AAC9C,aAAO,gBAAe,GAAG,YAAY,OAAO,WAAW,OAAO,YAAY,YAAY,GAAG,YAAY,MAAM,QAAQ,YAAY;AAAA,IACjI,CAAC;AAED,QAAI,OAAO,iBAAiB,aAAa;AACvC,qBAAe;AAAA,IACjB;AAEA,WAAO;AAAA,EACT;AAGA,QAAM,eAAe,KAAK,sBAAsB;AAEhD,YAAU,0BAA0B,SAAU,GAAG;AAC/C,WAAO;AAAA,EACT;AAGA,YAAU,eAAe,SAAU,KAAK,gBAAgB;AACtD,QAAI,UAAU,mBAAmB,cAAc;AAE/C,QAAI,OAAO,QAAQ,YAAY,MAAM,iBAAiB,CAAC,IAAI,IAAI,cAAc,GAAG;AAC9E,uBAAgB,wBAAwB,OAAO,SAAS,yCAAyC,CAAC;AAClG,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,CAAC,UAAU,wBAAwB,KAAK,OAAO,GAAG;AAC3D,uBAAgB,wBAAwB,OAAO,SAAS,mCAAmC,CAAC;AAC5F,aAAO;AAAA,IACT;AAEA,QAAI,mBAAmB,MAAM,SAAS,OAAO,OAAO;AAEpD,QAAI,oBAAoB,KAAK,mBAAmB,MAAM,OAAO,QAAQ;AACnE,UAAI,MAAM,OAAO,sBAAsB,KAAK;AAC1C,eAAO;AAAA,MACT;AAEA,gBAAU,mBAAmB,gBAAgB;AAAA,IAC/C;AAEA,QAAI,KAAK;AACP,yBAAmB,UAAU,SAAS,GAAG;AACzC,YAAM,SAAS,OAAO,OAAO,KAAK;AAAA,IACpC,OAAO;AACL,YAAM,SAAS,OAAO,OAAO,KAAK;AAAA,IACpC;AAEA,cAAU,SAAS;AACnB,WAAO,MAAM,SAAS,OAAO,OAAO;AAAA,EACtC;AAEA,YAAU,2BAA2B,SAAU,WAAW,SAAS;AACjE,WAAO,UAAU,0BAA0B,UAAU,kBAAkB,SAAS,EAAE,OAAO,OAAO;AAAA,EAClG;AAEA,YAAU,4BAA4B,SAAU,UAAU,gBAAgB;AACxE,QAAI,UAAU,mBAAmB,cAAc;AAE/C,QAAI,YAAY,KAAK,WAAW,MAAM,OAAO,QAAQ;AACnD,UAAI,QAAQ,YAAY,MAAM,eAAe;AAC3C,YAAI,MAAM,UAAU,gBAAgB,QAAQ;AAE5C,YAAI,CAAC,IAAI,IAAI,cAAc,GAAG;AAC5B,2BAAgB,wBAAwB,OAAO,SAAS,iEAAiE,CAAC;AAC1H,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,UAAU,wBAAwB,KAAK,OAAO,GAAG;AACpD,2BAAgB,wBAAwB,OAAO,SAAS,mCAAmC,CAAC;AAC5F,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,YAAM,SAAS,OAAO,OAAO,KAAK;AAClC,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,QAAI,aAAa,IAAI;AACnB,YAAM,SAAS,OAAO,OAAO,KAAK;AAClC,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,SAAS;AAGhD,QAAI,eAAe,mBAAmB,OAAO;AAC7C,WAAO,UAAU,MAAM,OAAO,YAAY,GAAG;AAAA,EAC/C;AAGA,YAAU,kBAAkB,WAAY;AACtC,UAAM,SAAS,CAAC;AAChB,cAAU,QAAQ,SAAU,SAAS;AACnC,YAAM,SAAS,OAAO,OAAO,KAAK;AAAA,IACpC,CAAC;AAAA,EACH;AAGA,YAAU,cAAc,SAAU,WAAW;AAC3C,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,OAAO,KAAK;AACvD,UAAI,cAAc,MAAM,KAAK,QAAQ,GAAG;AAEtC,kBAAU,QAAQ,SAAU,SAAS;AACnC,cAAI,QAAQ,MAAM,SAAS,OAAO,OAAO,IAAI;AAC3C,kBAAM,SAAS,OAAO,OAAO,KAAK;AAAA,UACpC;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAGA,YAAU,qBAAqB,SAAU,UAAU;AACjD,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,OAAO,KAAK;AACvD,aAAO,QAAQ;AAAA,IACjB,CAAC;AACD,cAAU,QAAQ,SAAU,SAAS;AACnC,UAAI,aAAa,MAAM,SAAS,OAAO,OAAO,IAAI;AAChD,cAAM,SAAS,OAAO,OAAO,KAAK;AAAA,MACpC;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,QAAQ,SAAU,OAAO;AACjC,QAAI,YAAY,SAAS,OAAO,KAAK;AAErC,cAAU,MAAM,OAAO,KAAK,KAAK,WAAY;AAC3C,aAAO,UAAU,gBAAgB,MAAM,UAAU;AAAA,IACnD;AAEA,cAAU,MAAM,OAAO,KAAK,KAAK,SAAU,IAAI;AAC7C,aAAO,UAAU,aAAa,IAAI,KAAK;AAAA,IACzC;AAEA,cAAU,YAAY,OAAO,KAAK,KAAK,SAAU,WAAW;AAC1D,aAAO,UAAU,0BAA0B,UAAU,kBAAkB,SAAS,EAAE,OAAO,KAAK;AAAA,IAChG;AAEA,cAAU,OAAO,OAAO,OAAO,KAAK,KAAK,WAAY;AACnD,UAAI,UAAU,MAAM,YAAY;AAChC,YAAM,mBAAmB,yBAAwB,UAAU,gBAAe,YAAY;AAAA,IACxF;AAAA,EACF,CAAC;AAED,YAAU,+BAA+B,WAAY;AAEnD,UAAM,qBAAqB,CAAC;AAC5B,WAAO,KAAK,wBAAuB,EAAE,OAAO,SAAU,IAAI;AACxD,aAAO,OAAO;AAAA,IAChB,CAAC,EAAE,QAAQ,SAAU,WAAW;AAC9B,YAAM,mBAAmB,yBAAwB,cAAc,OAAO,KAAK,eAAc,EAAE,OAAO,SAAU,IAAI;AAC9G,eAAO,OAAO;AAAA,MAChB,CAAC,EAAE,OAAO,SAAU,GAAG,GAAG;AACxB,UAAE,gBAAe,MAAM;AACvB,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAAA,IACP,CAAC;AAED,UAAM,mBAAmB,yBAAwB,WAAW,gBAAe,aAAa;AACxF,UAAM,mBAAmB,yBAAwB,aAAa,gBAAe,aAAa;AAC1F,UAAM,mBAAmB,yBAAwB,WAAW,gBAAe,eAAe;AAAA,EAC5F;AAEA,YAAU,aAAa,MAAM,MAAM,UAAU,YAAY,UAAU,4BAA4B;AAE/F,MAAI,MAAM,cAAc,OAAO,KAAK,MAAM,UAAU,EAAE,QAAQ;AAC5D,WAAO,KAAK,MAAM,UAAU,EAAE,QAAQ,SAAU,MAAM;AACpD,UAAI,CAAC,MAAM,WAAW,MAAM,OAAO,MAAM,WAAW,MAAM,SAAS,gBAAgB;AACjF,kBAAU,SAAS,eAAa,YAAY,MAAM,WAAW,KAAK,CAAC;AAAA,MACrE;AAAA,IACF,CAAC;AAAA,EACH;AAEA,MAAI,mBAAmB,UAAU;AAEjC,YAAU,cAAc,SAAU,OAAO,OAAO;AAC9C,qBAAiB,OAAO,KAAK;AAC7B,UAAM,SAAS,MAAM,UAAU,EAAE,IAAI,SAAU,KAAK;AAClD,UAAI,SAAS,IAAI,SAAS;AAC1B,aAAO,YAAY,KAAK,KAAK;AAC7B,aAAO;AAAA,QACL,MAAM;AAAA,MACR;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,6BAA6B;AACzC;AAeA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,iBAAa,OAAO,WAAW,OAAO,aAAa;AACnD,QAAM,OAAO,WAAW,OAAO,CAAC,iBAAiB,iBAAiB,iBAAiB,iBAAiB,iBAAiB,mBAAmB,mBAAmB,CAAC;AAE5J,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,SAAS,CAAC;AAAA,EAClB;AAGA,uBAAqB,WAAW,KAAK;AACvC;AAtPA,IASI,iBACA,0BACA,kBAoNA,kBAyBA,eAEA;AA1PJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA,IAAI,kBAAiB,YAAU;AAA/B,IACI,2BAA0B,YAAU;AACxC,IAAI,mBAAkB,MAAM;AAoN5B,IAAI,mBAAiB;AAAA,MACnB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,IACrB;AAiBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,sBAAsB;AAElE,IAAI,yBAAyB,gBAAc;AAAA,MACzC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,WAAS;AAAA;AAAA;;;AC7PZ,IACI,gBA8BA,mBAUA;AAzCJ;AAAA;AACA,IAAI,iBAAiB;AAAA,MACnB,SAAS;AAAA,MAET,mBAAmB;AAAA,MAEnB,YAAY;AAAA,MAEZ,YAAY;AAAA,MAEZ,OAAO;AAAA,MAEP,kBAAkB;AAAA,MAElB,MAAM;AAAA,MAEN,iBAAiB;AAAA,MAEjB,QAAQ;AAAA,MAER,mBAAmB;AAAA,MAEnB,MAAM;AAAA,MAEN,iBAAiB;AAAA,MAEjB,KAAK;AAAA,MAEL,UAAU;AAAA,IAEZ;AACA,IAAI,oBAAoB;AAAA,MACtB,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,qCAAqC;AAAA,MACrC,4BAA4B;AAAA,MAC5B,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,IAC1B;AACA,IAAI,cAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACtCA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAqCzf,oBAAoB,WAAW,OAAO;AAEpC,QAAM,eAAe,KAAK,YAAY;AAEtC,iBAAe,QAAQ,SAAU,WAAW;AAC1C,QAAI,CAAC,MAAM,YAAY;AACrB,YAAM,aAAa,uBAAqB,YAAY;AAAA,IACtD,OAAO;AACL,YAAM,aAAa,IAAI,MAAM,UAAU;AAAA,IACzC;AAAA,EACF,CAAC;AACD,MAAI,mBAAmB,UAAU;AAEjC,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,qBAAiB,OAAO,KAAK;AAC7B,mBAAe,QAAQ,SAAU,WAAW;AAC1C,YAAM,aAAa,uBAAqB,YAAY;AACpD,YAAM,WAAW,YAAY,MAAM,mBAAmB,SAAS,CAAC;AAAA,IAClE,CAAC;AAAA,EACH;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,cAAc;AAE7C,aAAW,WAAW,KAAK;AAC7B;AApFA,IAyCI,gBA8BA,kBAeA,eAEA;AAxFJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAqCA,IAAI,iBAAiB,CAAC,aAAa,YAAY,WAAW;AA8B1D,IAAI,mBAAiB,CAGrB;AAYA,IAAI,gBAAc,MAAM,YAAY,UAAQ,YAAY;AAExD,IAAI,eAAe,gBAAc;AAAA,MAC/B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,WAAS;AAAA;AAAA;;;AC3FZ,IAAI,gBAYA;AAZJ;AAAA;AAAA,IAAI,iBAAiB;AAAA,MACnB,WAAW;AAAA,MACX,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,IACT;AACA,IAAI,cAAY;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;ACXA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAEzf,sCAAsC,OAAO;AAC3C,MAAI,UAAU;AAEd,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,QAAI,MAAM,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI;AACnC;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,IAAI;AACrE,WAAO,gBAAe;AAAA,EACxB;AAEA,MAAI,YAAY,GAAG;AACjB,WAAO,gBAAe;AAAA,EACxB;AAEA,MAAI,YAAY,GAAG;AACjB,QAAI,MAAM,OAAO,MAAM,IAAI;AACzB,aAAO,gBAAe;AAAA,IACxB;AAEA,QAAI,MAAM,OAAO,MAAM,IAAI;AACzB,aAAO,gBAAe;AAAA,IACxB;AAEA,WAAO,gBAAe;AAAA,EACxB;AAEA,MAAI,YAAY,GAAG;AACjB,QAAI,MAAM,KAAK,MAAM,IAAI;AACvB,aAAO,gBAAe;AAAA,IACxB;AAEA,QAAI,MAAM,KAAK,MAAM,IAAI;AACvB,aAAO,gBAAe;AAAA,IACxB;AAEA,WAAO,gBAAe;AAAA,EACxB;AAEA,SAAO,gBAAe;AACxB;AAjDA,IAMI,iBA4CA;AAlDJ;AAAA;AAAA;AACA;AAKA,IAAI,kBAAiB,YAAU;AA4C/B,IAAI,oBAAoB,gBAAc;AAAA,MACpC;AAAA,IACF,GAAG,WAAS;AAAA;AAAA;;;ACpDZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,sBAAsB,WAAW,OAAO;AAEtC,QAAM,eAAe,KAAK,cAAc;AAExC,YAAU,YAAY,WAAY;AAChC,QAAI,MAAM,SAAS;AACjB,sBAAc,2CAA2C;AACzD,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,UAAU,QAAQ,WAAW,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC3F,eAAS,QAAQ,UAAU;AAAA,IAC7B;AAEA,QAAI,cAAc,SAAS,WAAW,IAAI,SAAS,KAAK;AAExD,QAAI,YAAY,WAAW,GAAG;AAC5B,aAAO;AAAA,IACT;AAEA,QAAI,iBAAiB;AACrB,UAAM,OAAO,QAAQ,SAAU,MAAM,OAAO;AAC1C,UAAI,SAAS,YAAY,QAAQ;AAC/B,YAAI,gBAAgB;AAClB;AAAA,QACF;AAEA,yBAAiB;AAAA,MACnB;AAAA,IACF,CAAC;AAED,QAAI,gBAAgB;AAClB,YAAM,SAAS,YAAY,MAAM;AACjC,YAAM,kBAAkB,kBAAkB,6BAA6B,MAAM,MAAM;AACnF,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,WAAY;AACpC,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,MAAM,SAAS;AACjB,sBAAc,2CAA2C;AACzD;AAAA,IACF;AAEA,QAAI,UAAU,WAAW,GAAG;AAC1B,UAAI,QAAQ,UAAU,UAAU,IAAI,SAAY,UAAU;AAC1D,UAAI,MAAM;AACV,UAAI,MAAM;AACV,UAAI,MAAM;AAAA,IACZ,WAAW,UAAU,WAAW,GAAG;AACjC,UAAI,UAAU,UAAU,IAAI,SAAY,UAAU;AAClD,UAAI,UAAU,UAAU,IAAI,SAAY,UAAU;AAClD,UAAI,UAAU,UAAU,IAAI,SAAY,UAAU;AAAA,IACpD,OAAO;AACL,sBAAc,6BAA6B;AAC3C;AAAA,IACF;AAEA,cAAU,UAAU,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;AAAA,EAClD;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO,CAAC,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,GAAG,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,GAAG,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,CAAC;AAAA,EAC7H;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,OAAO,UAAU,cAAc;AACnC,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,KAAK,OAAO,GAAG;AACjB,eAAO;AAAA,MACT;AAEA,UAAI,KAAK,KAAK,GAAG;AACf,kBAAU,KAAK,KAAK;AAAA,MACtB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,OAAO,UAAU,cAAc;AACnC,WAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,EAClC;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,QAAI,OAAO,UAAU,cAAc;AAEnC,QAAI,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO,GAAG;AACnD,sBAAc,yCAAyC;AACvD,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,IAAI,aAAa,CAAC;AAE5B,YAAQ,MAAM;AAAA,WACP,eAAe;AAClB,eAAO;AAAA,WAEJ,eAAe;AAClB;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK;AACT;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK;AACT;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK;AACT;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK,QAAQ,KAAK;AACtB,YAAI,KAAK,QAAQ,KAAK;AACtB;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK,QAAQ,KAAK;AACtB,YAAI,KAAK,QAAQ,KAAK;AACtB;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK,QAAQ,KAAK;AACtB,YAAI,KAAK,QAAQ,KAAK;AACtB;AAAA,WAEG,eAAe;AAClB,YAAI,KAAK,QAAQ,KAAK;AACtB,YAAI,KAAK,QAAQ,KAAK,KAAK,KAAK;AAChC,YAAI,KAAK,QAAS,MAAK,KAAK,KAAK;AACjC;AAAA;AAGA,wBAAc,yBAAyB;AACvC;AAAA;AAGJ,QAAI,SAAS,CAAC,GAAG,GAAG,CAAC;AACrB,cAAU,aAAa,KAAK,MAAM;AAClC,WAAO;AAAA,EACT;AA4BA,YAAU,YAAY,WAAY;AAChC,WAAO,UAAU,eAAe,UAAU,iBAAiB,CAAC;AAAA,EAC9D;AAEA,YAAU,iBAAiB,SAAU,IAAI;AAEvC,QAAI,UAAU,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AACrL,QAAI,MAAM,IAAI,aAAa,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAE,CAAC;AAC/D,QAAI,OAAO,IAAI,aAAa,CAAC;AAC7B,cAAU,aAAa,KAAK,IAAI;AAChC,QAAI,SAAS,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAElE,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC9B,mBAAK,IAAI,KAAK,QAAQ,IAAI,QAAQ,IAAI,IAAI,QAAQ,IAAI,EAAE;AACxD,gBAAU,aAAa,KAAK,IAAI;AAEhC,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,KAAK,KAAK,OAAO,IAAI;AACvB,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,cAAc,eAAe,YAAY;AAC7C,gBAAY,UAAU,MAAM,MAAM;AAClC,gBAAY,QAAQ,GAAG;AACvB,WAAO,YAAY,UAAU;AAAA,EAC/B;AAGA,YAAU,oBAAoB,WAAY;AACxC,iBAAK,gBAAgB,MAAM,cAAc,MAAM,MAAM;AACrD,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,KAAK,MAAM,UAAU;AACxC,UAAM,aAAa,MAAM,MAAM,UAAU;AACzC,iBAAK,MAAM,MAAM,cAAc,MAAM,cAAc,MAAM,OAAO;AAChE,iBAAK,OAAO,MAAM,cAAc,MAAM,YAAY;AAAA,EACpD;AASA,YAAU,eAAe,WAAY;AACnC,QAAI,MAAM,SAAS;AACjB,sBAAc,2CAA2C;AACzD,aAAO;AAAA,IACT;AAEA,aAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,WAAK,SAAS,UAAU;AAAA,IAC1B;AAEA,QAAI,QAAQ;AAEZ,QAAI,MAAM,WAAW,KAAM,OAAM,QAAQ,MAAM,EAAE,KAAK,MAAM,GAAG,gBAAgB,gBAAgB,MAAM,GAAG,gBAAgB,eAAe;AACrI,cAAQ,MAAM;AAAA,IAChB;AAEA,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,WAAW,2CAA2C;AAAA,IAClE;AAEA,QAAI,iBAAiB;AACrB,UAAM,UAAU,QAAQ,SAAU,MAAM,OAAO;AAC7C,UAAI,SAAS,MAAM,QAAQ;AACzB,YAAI,gBAAgB;AAClB;AAAA,QACF;AAEA,yBAAiB;AAAA,MACnB;AAAA,IACF,CAAC;AAED,QAAI,gBAAgB;AAClB,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,cAAM,UAAU,KAAK,MAAM;AAAA,MAC7B;AAEA,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,KAAK;AACtC,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAChF,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,UAAU;AAEvC,YAAU,eAAe,SAAU,KAAK;AACtC,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAChF,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,UAAU;AAEvC,YAAU,qBAAqB,SAAU,KAAK;AAC5C,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAChF,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,mBAAe,oBAAoB,KAAK,KAAK,GAAG;AAChD,QAAI,OAAO,CAAC,GAAG,GAAG,CAAC;AACnB,QAAI,OAAO,CAAC,GAAG,GAAG,CAAC;AACnB,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,WAAO,wBAAwB,MAAM,MAAM,IAAI;AAAA,EACjD;AAEA,YAAU,qBAAqB,SAAU,KAAK;AAC5C,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAChF,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,QAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AAClB,mBAAe,oBAAoB,KAAK,KAAK,GAAG;AAChD,QAAI,OAAO,CAAC,GAAG,GAAG,CAAC;AACnB,QAAI,OAAO,CAAC,GAAG,GAAG,CAAC;AACnB,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,iBAAK,cAAc,MAAM,KAAK,MAAM,YAAY;AAChD,WAAO,wBAAwB,MAAM,MAAM,IAAI;AAAA,EACjD;AAGA,YAAU,WAAW,UAAU,iBAAiB;AAChD,YAAU,kBAAkB;AAE5B,YAAU,YAAY,WAAY;AAChC,QAAI,SAAS,UAAU,UAAU;AACjC,QAAI,SAAS,CAAC;AAEd,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAO,KAAM,QAAO,IAAI,IAAI,KAAK,OAAO,IAAI,MAAM;AAAA,IACpD;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,aAAa;AAClD,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,QAAI,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC9B,cAAU,mBAAmB,aAAa,MAAM;AAChD,QAAI,SAAS,CAAC,GAAG,GAAG,CAAC;AACrB,QAAI,SAAS,CAAC,GAAG,GAAG,CAAC;AACrB,mBAAe,oBAAoB,QAAQ,QAAQ,MAAM;AACzD,gBAAY,QAAQ,MAAM;AAC1B,gBAAY,QAAQ,MAAM;AAC1B,QAAI,aAAa,UAAU,cAAc;AACzC,gBAAY,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,KAAK,GAAG,WAAW,KAAK,GAAG,WAAW,KAAK,CAAC,GAAG,MAAM;AAChG,gBAAY,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,KAAK,GAAG,WAAW,KAAK,GAAG,WAAW,KAAK,CAAC,GAAG,MAAM;AAChG,QAAI,UAAU,WAAW;AACzB,QAAI,UAAU,WAAW,KAAK,WAAW;AACzC,QAAI,SAAS,UAAU,aAAa,EAAE,WAAW,EAAE,QAAQ;AAC3D,QAAI,UAAU;AACd,QAAI,UAAU;AACd,QAAI,eAAe;AACnB,QAAI,OAAO;AACX,QAAI,OAAO;AAEX,aAAS,IAAI,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;AAC3C,eAAS,IAAI,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;AAC3C,YAAI,QAAQ,OAAO,KAAK,IAAI,UAAU,IAAI;AAE1C,iBAAS,IAAI,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;AAC3C,cAAI,CAAC,aAAa,UAAU,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG;AAC9C,gBAAI,QAAQ,OAAO;AACnB,gBAAI,QAAQ;AAAS,wBAAU;AAC/B,gBAAI,QAAQ;AAAS,wBAAU;AAC/B,4BAAgB,QAAQ;AACxB,oBAAQ;AACR,oBAAQ;AAAA,UACV;AAEA,YAAE;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AAEA,QAAI,UAAU,OAAO,IAAI,OAAO,OAAO;AACvC,QAAI,WAAW,OAAO,KAAK,IAAI,eAAe,OAAO,UAAU,OAAO,IAAI;AAC1E,QAAI,QAAQ,KAAK,KAAK,QAAQ;AAC9B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IACT;AAAA,EACF;AAIA,YAAU,oBAAoB,SAAU,QAAQ;AAC9C,QAAI,qBAAqB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC7F,QAAI,aAAa,CAAC;AAClB,QAAI,OAAO;AAGX,aAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,iBAAW,OAAO;AAClB,cAAQ,OAAO,MAAM,IAAI,KAAK,OAAO,MAAM,KAAK;AAAA,IAClD;AAEA,WAAO;AAAA,EACT;AAOA,YAAU,qBAAqB,SAAU,MAAM;AAC7C,QAAI,QAAQ,eAAe,MAAM,CAAC,GAC9B,IAAI,MAAM,IACV,IAAI,MAAM,IACV,IAAI,MAAM;AAEd,QAAI,SAAS,UAAU,UAAU;AACjC,QAAI,qBAAqB,UAAU,aAAa,EAAE,WAAW,EAAE,sBAAsB;AACrF,QAAI,aAAa,UAAU,kBAAkB,QAAQ,kBAAkB;AAIvE,WAAO,KAAK,MAAO,MAAK,MAAM,CAAC,IAAI,OAAO,MAAM,WAAW,KAAM,MAAK,MAAM,CAAC,IAAI,OAAO,MAAM,WAAW,KAAM,MAAK,MAAM,CAAC,IAAI,OAAO,MAAM,WAAW,EAAE;AAAA,EAC3J;AAOA,YAAU,0BAA0B,SAAU,KAAK;AACjD,QAAI,SAAS,UAAU,UAAU;AACjC,QAAI,QAAQ,UAAU,aAAa,GAAG;AAEtC,aAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,UAAI,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,IAAI,IAAI;AACpE,wBAAc,2BAA2B,OAAO,OAAO,sCAAsC,EAAE,OAAO,MAAM,CAAC;AAC7G,eAAO;AAAA,MACT;AAAA,IACF;AAGA,WAAO,UAAU,mBAAmB,KAAK;AAAA,EAC3C;AAQA,YAAU,0BAA0B,SAAU,KAAK;AACjD,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,QAAI,qBAAqB,UAAU,aAAa,EAAE,WAAW,EAAE,sBAAsB;AAErF,QAAI,OAAO,KAAK,QAAQ,oBAAoB;AAC1C,sBAAc,sCAAsC,OAAO,MAAM,4DAA4D,EAAE,OAAO,kBAAkB,CAAC;AACzJ,aAAO;AAAA,IACT;AAEA,QAAI,cAAc,UAAU,wBAAwB,GAAG;AAEvD,QAAI,OAAO,MAAM,WAAW,GAAG;AAE7B,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,aAAa,EAAE,WAAW,EAAE,aAAa,aAAa,IAAI;AAAA,EAC7E;AACF;AAkBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,eAAW,OAAO,WAAW,OAAO,aAAa;AAEjD,MAAI,CAAC,MAAM,WAAW;AACpB,UAAM,YAAY,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AAAA,EACrD,WAAW,MAAM,QAAQ,MAAM,SAAS,GAAG;AACzC,UAAM,YAAY,IAAI,aAAa,MAAM,UAAU,MAAM,GAAG,CAAC,CAAC;AAAA,EAChE;AAEA,QAAM,eAAe,IAAI,aAAa,EAAE;AACxC,QAAM,eAAe,IAAI,aAAa,EAAE;AAExC,QAAM,IAAI,WAAW,OAAO,CAAC,aAAa,gBAAgB,cAAc,CAAC;AACzE,QAAM,YAAY,WAAW,OAAO,CAAC,UAAU,SAAS,GAAG,CAAC;AAC5D,QAAM,SAAS,WAAW,OAAO,CAAC,QAAQ,GAAG,CAAC;AAE9C,eAAa,WAAW,KAAK;AAC/B;AAthBA,IASI,iBA4eA,kBAmCA,eAEA;AA1hBJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB,MAAM;AA4e1B,IAAI,mBAAiB;AAAA,MACnB,WAAW;AAAA,MAEX,cAAc;AAAA,MAEd,cAAc;AAAA,MAEd,SAAS,CAAC,GAAK,GAAK,CAAG;AAAA,MACvB,QAAQ,CAAC,GAAK,GAAK,CAAG;AAAA,MACtB,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,MAC5B,iBAAiB,eAAe;AAAA,IAClC;AAwBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,cAAc;AAE1D,IAAI,iBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACxhBA,2BAA2B,WAAW,OAAO;AAC3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,SAAS,WAAY;AAC7B,cAAU,aAAa;AAAA,EACzB;AAEA,YAAU,mBAAmB,SAAU,OAAO;AAC5C,QAAI,CAAC,MAAM,IAAI,UAAU,GAAG;AAC1B,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,eAAe,SAAS,KAAK,GAAG;AACzC,YAAM,eAAe,KAAK,KAAK;AAC/B,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,MAAM,eAAe;AAAA,EAC9B;AAEA,YAAU,0BAA0B,WAAY;AAC9C,UAAM,eAAe,SAAS;AAAA,EAChC;AAEA,YAAU,sBAAsB,SAAU,eAAe;AACvD,QAAI,IAAI,MAAM,eAAe,QAAQ,aAAa;AAElD,QAAI,MAAM,IAAI;AACZ,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,OAAO,GAAG,CAAC;AAChC,cAAU,SAAS;AACnB,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,oBAAoB,SAAU,QAAQ;AAC9C,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AAEA,QAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAU,iBAAiB,MAAM;AAAA,IACnC,OAAO;AACL,UAAI,WAAW,OAAO;AAEtB,eAAS,IAAI,GAAG,IAAI,YAAY,IAAI,GAAG,KAAK;AAC1C,kBAAU,iBAAiB,OAAO,EAAE;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAEA,YAAU,+BAA+B,SAAU,YAAY,GAAG,SAAS;AACzE,QAAI,aAAa,MAAM;AACvB,QAAI,MAAM;AAEV,QAAI,YAAY;AACd,UAAI,IAAI,WAAW;AAEnB,UAAI,KAAK,KAAK,IAAI,GAAG;AAEnB,YAAI,QAAQ,WAAW;AACvB,YAAI,SAAS,MAAM,UAAU;AAC7B,YAAI,SAAS,MAAM,UAAU;AAE7B,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,CAAE,MAAK,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO;AAEzD,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAChE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAChE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,IAAI;AACjE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,IAAI;AACjE;AAAA,MACF;AAAA,IACF;AAEA,UAAM,cAAc,wBAAwB,OAAO,GAAG,mBAAmB,CAAC;AAAA,EAC5E;AACF;AASA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,KAAK,WAAW,OAAO,GAAG,CAAC;AAEjC,MAAI,CAAC,MAAM,gBAAgB;AACzB,UAAM,iBAAiB,CAAC;AAAA,EAC1B;AAEA,oBAAkB,WAAW,KAAK;AACpC;AAnHA,IAmGI,kBAkBA;AArHJ;AAAA;AAAA;AAmGA,IAAI,mBAAiB;AAAA,MACnB,gBAAgB,CAAC;AAAA,IACnB;AAgBA,IAAI,sBAAsB;AAAA,MACxB,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,YAAY,WAAY;AAChC,QAAI,QAAQ,UAAU,aAAa;AAEnC,QAAI,CAAC,OAAO;AACV,YAAM,SAAS,0BAA0B;AAAA,IAC3C,OAAO;AACL,UAAI,CAAC,MAAM,QAAQ;AACjB,kBAAU,OAAO;AAAA,MACnB;AAEA,YAAM,SAAS,MAAM,UAAU;AAAA,IACjC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,SAAS,WAAY;AAC7B,cAAU,aAAa;AAAA,EACzB;AAEA,YAAU,0BAA0B,WAAY;AAC9C,cAAU,aAAa,WAAU,eAAe;AAAA,EAClD;AAEA,YAAU,iCAAiC,WAAY;AACrD,cAAU,aAAa,WAAU,uBAAuB;AAAA,EAC1D;AAEA,YAAU,iCAAiC,WAAY;AACrD,cAAU,aAAa,WAAU,uBAAuB;AAAA,EAC1D;AAEA,YAAU,iCAAiC,WAAY;AACrD,cAAU,aAAa,WAAU,uBAAuB;AAAA,EAC1D;AAEA,YAAU,kCAAkC,WAAY;AACtD,cAAU,aAAa,WAAU,wBAAwB;AAAA,EAC3D;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM,aAAa,YAAW,MAAM,SAAS;AAAA,EACtD;AAEA,YAAU,0BAA0B,SAAU,MAAK,MAAK;AACtD,YAAQ,KAAK,4DAA4D;AACzE,cAAU,iBAAiB,MAAK,IAAG;AAAA,EACrC;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM,aAAa,aAAY,MAAM,UAAU;AAAA,EACxD;AAEA,YAAU,qBAAqB,WAAY;AACzC,cAAU,cAAc,YAAW,GAAG;AAAA,EACxC;AAEA,YAAU,4BAA4B,WAAY;AAChD,cAAU,cAAc,YAAW,UAAU;AAAA,EAC/C;AAEA,YAAU,qBAAqB,WAAY;AACzC,cAAU,cAAc,YAAW,GAAG;AAAA,EACxC;AACF;AAoBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,sBAAkB,OAAO,WAAW,OAAO,aAAa;AACxD,QAAM,OAAO,WAAW,OAAO,CAAC,kBAAkB,uBAAuB,wBAAwB,6BAA6B,aAAa,cAAc,wBAAwB,CAAC;AAClL,QAAM,YAAY,WAAW,OAAO,CAAC,eAAe,GAAG,CAAC;AACxD,QAAM,MAAM,WAAW,OAAO,mBAAmB;AAEjD,mBAAgB,WAAW,KAAK;AAClC;AA3GA,IAKI,YACA,aA8EA,kBAyBA,eAEA;AA/GJ;AAAA;AAAA;AACA;AACA;AACA;AAEA,IAAI,aAAY,UAAU;AAA1B,IACI,cAAa,UAAU;AA8E3B,IAAI,mBAAiB;AAAA,MACnB,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,MAC5B,gBAAgB;AAAA,MAChB,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,2BAA2B;AAAA,MAC3B,WAAW,WAAU;AAAA,MACrB,eAAe,CAAC,MAAY,GAAS;AAAA,MACrC,YAAY,YAAW;AAAA,MAEvB,wBAAwB;AAAA,IAE1B;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,iBAAiB;AAE7D,IAAI,oBAAoB;AAAA,MACtB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AClHA;AAAA;AAAA;AAAA;AAwJA,2BAA2B;AACzB,SAAO,IAAI,UAAU,IAAI;AAC3B;AAEA,2BAA2B;AACzB,SAAO,IAAI,UAAU,KAAK;AAC5B;AA9JA,IAMI,MAIA,UACA,SAEA,WAmJA;AAhKJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAI,OAAO,eAAc,GAAG;AAC1B,aAAO;AAAA,IACT;AAEA,IAAI,WAAW,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACjD,IAAI,UAAU;AAEd,IAAI,YAAyB,WAAY;AACvC,4BAAqB;AACnB,YAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEpF,wBAAgB,MAAM,UAAS;AAE/B,aAAK,SAAS,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAChD,aAAK,MAAM,IAAI,aAAa,CAAC;AAC7B,aAAK,YAAY,YAAY,eAAS,WAAW;AAAA,MACnD;AAEA,mBAAa,YAAW,CAAC;AAAA,QACvB,KAAK;AAAA,QACL,OAAO,8BAA8B,iBAAiB,iBAAiB;AACrE,cAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,cAAI,MAAM,IAAI,aAAa,CAAC;AAC5B,cAAI,SAAS,IAAI,aAAa,EAAE;AAChC,uBAAK,IAAI,KAAK,gBAAgB,IAAI,gBAAgB,IAAI,gBAAgB,EAAE;AACxE,uBAAK,IAAI,KAAK,gBAAgB,IAAI,gBAAgB,IAAI,gBAAgB,EAAE;AACxE,uBAAK,UAAU,KAAK,GAAG;AACvB,uBAAK,UAAU,KAAK,GAAG;AACvB,cAAI,WAAW,aAAK,IAAI,KAAK,GAAG;AAEhC,cAAI,YAAY,GAAG;AACjB,mBAAO;AAAA,UACT;AAEA,uBAAK,MAAM,KAAK,KAAK,KAAK,GAAG;AAE7B,cAAI,aAAK,OAAO,KAAK,GAAG,IAAI,SAAS;AAGnC,yBAAK,MAAM,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,eAAe;AAE/C,gBAAI,aAAK,OAAO,KAAK,GAAG,IAAI,SAAS;AACnC,2BAAK,MAAM,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,eAAe;AAAA,YACjD;AAAA,UACF;AAEA,uBAAK,aAAa,QAAQ,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG;AACvD,uBAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,MAAM;AAC9C,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,gBAAgB,OAAO,MAAM;AAClC,uBAAK,IAAI,MAAM,cAAM,CAAC,KAAK,GAAG,EAAE,OAAO,mBAAmB,IAAI,CAAC,CAAC;AAChE,uBAAK,UAAU,KAAK,KAAK,KAAK,GAAG;AACjC,uBAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,UAAU,KAAK,GAAG,KAAK,GAAG;AACrE,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,iBAAiB,OAAO;AAC7B,uBAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,UAAU,KAAK,CAAC;AAC5D,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,iBAAiB,OAAO;AAC7B,uBAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,UAAU,KAAK,CAAC;AAC5D,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,iBAAiB,OAAO;AAC7B,uBAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,UAAU,KAAK,CAAC;AAC5D,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,GAAG,GAAG,GAAG;AACjC,uBAAK,IAAI,KAAK,KAAK,GAAG,GAAG,CAAC;AAC1B,uBAAK,UAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,GAAG;AACjD,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,eAAe,IAAI,IAAI,IAAI;AAChC,uBAAK,IAAI,KAAK,KAAK,IAAI,IAAI,EAAE;AAC7B,uBAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,GAAG;AAC7C,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,kBAAkB,QAAQ;AAC/B,uBAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,MAAM;AAC9C,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,oBAAoB;AACzB,uBAAK,SAAS,KAAK,MAAM;AACzB,iBAAO;AAAA,QACT;AAAA,MAEF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,eAAe,YAAY;AAChC,cAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,cAAI,eAAe,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEvF,cAAI,iBAAiB,UAAU,KAAK,MAAM,GAAG;AAE3C,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,iBAAiB,KAAK,WAAW,SAAS,SAAS,eAAe;AAE7E,mBAAS,IAAI,QAAQ,IAAI,MAAM,KAAK,GAAG;AACrC,yBAAK,IAAI,KAAK,KAAK,WAAW,IAAI,WAAW,IAAI,IAAI,WAAW,IAAI,EAAE;AACtE,yBAAK,cAAc,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAClD,uBAAW,KAAK,KAAK,IAAI;AACzB,uBAAW,IAAI,KAAK,KAAK,IAAI;AAC7B,uBAAW,IAAI,KAAK,KAAK,IAAI;AAAA,UAC/B;AAGA,iBAAO;AAAA,QACT;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,qBAAqB;AAC1B,iBAAO,KAAK;AAAA,QACd;AAAA,MACF,GAAG;AAAA,QACD,KAAK;AAAA,QACL,OAAO,mBAAmB,QAAQ;AAChC,cAAI,CAAC,CAAC,UAAU,OAAO,WAAW,IAAI;AACpC,yBAAK,KAAK,KAAK,QAAQ,MAAM;AAAA,UAC/B;AAEA,iBAAO;AAAA,QACT;AAAA,MACF,CAAC,CAAC;AAEF,aAAO;AAAA,IACT,EAAE;AAUF,IAAI,mBAAmB;AAAA,MACrB;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC5JA,kBAAkB,WAAW,OAAO;AAElC,QAAM,eAAe,KAAK,UAAU;AAEpC,YAAU,yBAAyB,WAAY;AAC7C,QAAI,MAAM,iBAAiB;AACzB,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,CAAC,EAAE,OAAO,MAAM,QAAQ;AAAA,EACjC;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,MAAM,iBAAiB;AACzB,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,CAAC,EAAE,OAAO,MAAM,UAAU;AAAA,EACnC;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,MAAM,iBAAiB,MAAM,OAAO;AACtC,YAAM,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC1D,YAAM,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC1D,YAAM,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,SAAS;AAC1D,gBAAU,MAAM,SAAS;AACzB,YAAM,iBAAiB,MAAM;AAAA,IAC/B;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,oBAAoB,SAAU,WAAW,SAAS;AAC1D,QAAI,mBAAmB,mBAAmB,SAAS;AACnD,QAAI,iBAAiB,mBAAmB,OAAO;AAC/C,cAAU,YAAY,KAAK,IAAI,gBAAgB,IAAI,KAAK,IAAI,cAAc,GAAG,KAAK,IAAI,gBAAgB,GAAG,KAAK,IAAI,gBAAgB,IAAI,KAAK,IAAI,cAAc,CAAC;AAC9J,cAAU,cAAc,GAAG,GAAG,CAAC;AAC/B,cAAU,cAAc,CAAC;AAAA,EAC3B;AAEA,YAAU,0BAA0B,WAAY;AAC9C,cAAU,aAAa,WAAW;AAAA,EACpC;AAEA,YAAU,4BAA4B,WAAY;AAChD,cAAU,aAAa,aAAa;AAAA,EACtC;AAEA,YAAU,2BAA2B,WAAY;AAC/C,cAAU,mBAAmB,IAAI;AACjC,cAAU,aAAa,YAAY;AAAA,EACrC;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM,cAAc;AAAA,EAC7B;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM,cAAc;AAAA,EAC7B;AAEA,YAAU,yBAAyB,WAAY;AAC7C,WAAO,MAAM,cAAc;AAAA,EAC7B;AACF;AAsBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,aAAa,UAAU,cAAc,YAAY,aAAa,mBAAmB,aAAa,mBAAmB,CAAC;AAClJ,QAAM,YAAY,WAAW,OAAO,CAAC,SAAS,YAAY,cAAc,mBAAmB,GAAG,CAAC;AAE/F,WAAS,WAAW,KAAK;AAC3B;AAtGA,IAGI,aAyEA,kBA4BA,eAEA;AA1GJ;AAAA;AAAA;AACA;AAEA,IAAI,cAAc,CAAC,aAAa,eAAe,YAAY;AAyE3D,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACf,UAAU,CAAC,GAAG,GAAG,CAAC;AAAA,MAClB,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,MACpB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW;AAAA,MACX,mBAAmB,CAAC,GAAG,GAAG,CAAC;AAAA,MAC3B,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB,gBAAgB;AAAA,IAClB;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,UAAU;AAEtD,IAAI,aAAa;AAAA,MACf,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;AC1GA,yBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,gBAAc,gBAAgB,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EAC3E;AACF;AAKA,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,YAAU,eAAe,WAAY;AACnC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,cAAc,SAAU,MAAM;AACtC,WAAO,CAAC,CAAC,MAAM,MAAM,OAAO,SAAU,MAAM;AAC1C,aAAO,SAAS;AAAA,IAClB,CAAC,EAAE;AAAA,EACL;AAEA,YAAU,cAAc,SAAU,MAAM;AACtC,QAAI,QAAQ,CAAC,UAAU,YAAY,IAAI,GAAG;AACxC,YAAM,QAAQ,MAAM,MAAM,OAAO,IAAI;AAAA,IACvC;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,MAAM;AACzC,QAAI,cAAc,MAAM,MAAM,OAAO,SAAU,MAAM;AACnD,aAAO,SAAS;AAAA,IAClB,CAAC;AAED,QAAI,MAAM,MAAM,WAAW,YAAY,QAAQ;AAC7C,YAAM,QAAQ;AAAA,IAChB;AAAA,EACF;AAEA,YAAU,qBAAqB,WAAY;AACzC,UAAM,QAAQ,CAAC;AAAA,EACjB;AAGA,uBAAqB,MAAM;AACzB,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACpF,aAAS,KAAK,IAAI;AAClB,QAAI,WAAW,KAAK,eAAe;AAEnC,QAAI,YAAY,SAAS,QAAQ;AAC/B,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,oBAAY,SAAS,IAAI,QAAQ;AAAA,MACnC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,8BAA8B,WAAY;AAClD,QAAI,gBAAgB,CAAC;AAErB,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,kBAAY,MAAM,MAAM,IAAI,aAAa;AAAA,IAC3C;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,aAAa,UAAU;AAEjC,YAAU,gBAAgB,SAAU,MAAM;AAExC,cAAU,eAAe,IAAI;AAAA,EAC/B;AAEA,YAAU,cAAc,WAAY;AAClC,UAAM,WAAW,CAAC;AAClB,UAAM,MAAM,QAAQ,SAAU,MAAM;AAClC,YAAM,WAAW,MAAM,SAAS,OAAO,KAAK,YAAY,CAAC;AAAA,IAC3D,CAAC;AACD,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO,gBAAc,yCAAyC;AAAA,EAChE;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO,gBAAc,wCAAwC;AAAA,EAC/D;AAEA,YAAU,UAAU,WAAY;AAC9B,WAAO,gBAAc,mCAAmC;AAAA,EAC1D;AAEA,YAAU,gCAAgC,SAAU,GAAG,GAAG,GAAG;AAE3D,QAAI,MAAM,UAAU,sCAAsC,GAAG,GAAG,CAAC;AAEjE,WAAO,UAAU,+BAA+B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,EACxE;AAEA,YAAU,wCAAwC,SAAU,GAAG,GAAG,GAAG;AACnE,QAAI,QAAQ,CAAC,MAAM,SAAS,KAAK,MAAM,SAAS,IAAI,MAAM,SAAS,KAAK,MAAM,SAAS,EAAE;AACzF,WAAO,CAAE,KAAI,MAAM,SAAS,MAAM,MAAM,IAAK,KAAI,MAAM,SAAS,MAAM,MAAM,IAAI,CAAC;AAAA,EACnF;AAEA,YAAU,iCAAiC,SAAU,GAAG,GAAG,GAAG;AAC5D,WAAO,CAAC,IAAI,IAAM,GAAK,IAAI,IAAM,GAAK,IAAI,IAAM,CAAG;AAAA,EACrD;AAEA,YAAU,gCAAgC,SAAU,GAAG,GAAG,GAAG;AAE3D,QAAI,MAAM,UAAU,+BAA+B,GAAG,GAAG,CAAC;AAE1D,WAAO,UAAU,sCAAsC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,EAC/E;AAEA,YAAU,wCAAwC,SAAU,GAAG,GAAG,GAAG;AACnE,QAAI,QAAQ,CAAC,MAAM,SAAS,KAAK,MAAM,SAAS,IAAI,MAAM,SAAS,KAAK,MAAM,SAAS,EAAE;AACzF,WAAO,CAAC,IAAI,MAAM,KAAK,MAAM,SAAS,IAAI,IAAI,MAAM,KAAK,MAAM,SAAS,IAAI,CAAC;AAAA,EAC/E;AAEA,YAAU,iCAAiC,SAAU,GAAG,GAAG,GAAG;AAC5D,WAAO,CAAE,KAAI,KAAO,KAAM,KAAI,KAAO,KAAM,KAAI,KAAO,GAAG;AAAA,EAC3D;AAEA,YAAU,eAAe,gBAAe,cAAc;AACxD;AAiBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,MAAM,WAAW,OAAO,OAAO;AACrC,QAAM,YAAY,WAAW,OAAO,CAAC,UAAU,GAAG,CAAC;AACnD,QAAM,YAAY,WAAW,OAAO,CAAC,cAAc,aAAa,GAAG,CAAC;AACpE,cAAY,WAAW,KAAK;AAC9B;AA9JA,IAEI,iBAuIA,kBAuBA,eAEA;AAlKJ;AAAA;AAAA;AAEA,IAAI,kBAAgB,MAAM;AAuI1B,IAAI,mBAAiB;AAAA,MAEnB,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,MACpB,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,MAC3B,oBAAoB;AAAA,MACpB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,MACrB,QAAQ,CAAC,GAAG,CAAC;AAAA,MACb,aAAa,CAAC,GAAG,CAAC;AAAA,MAClB,OAAO,CAAC;AAAA,MACR,UAAU,CAAC;AAAA,IACb;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,yBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,gBAAc,gBAAgB,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EAC3E;AACF;AAKA,sBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,MAAI,oCAAoC;AAAA,IACtC,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AACA,MAAI,oCAAoC;AAAA,IACtC,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AACA,MAAI,qBAAqB;AAAA,IACvB,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,kCAAkC;AAGhD,gBAAU,iCAAiC;AAAA,IAC7C;AAGA,UAAM,aAAa,OAAO,SAAS;AACnC,WAAO;AAAA,EACT;AAEA,YAAU,qCAAqC,WAAY;AAIzD,QAAI,SAAS,UAAU,iCAAiC;AACxD,UAAM,OAAO,QAAQ,SAAU,OAAO;AACpC,UAAI,MAAM,sBAAsB,KAAK,MAAM,uBAAuB;AAAG;AAAA,eAAW,MAAM,qBAAqB,GAAG;AAE5G,cAAM,gBAAgB,OAAO,uBAAuB,CAAC;AACrD,cAAM,kBAAkB,OAAO,yBAAyB,CAAC;AACzD,cAAM,SAAS,OAAO,SAAS,CAAC;AAAA,MAClC,OAAO;AACL,wBAAc,gCAAgC,MAAM,IAAI,CAAC;AAAA,MAC3D;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,sBAAsB,WAAY;AAC1C,QAAI,MAAM,mBAAmB;AAI3B,aAAO,UAAU,mCAAmC;AAAA,IACtD;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,gBAAe,cAAc;AACtD,YAAU,iBAAiB,gBAAe,gBAAgB;AAE1D,YAAU,eAAe,WAAY;AACnC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,oBAAc,UAAU,aAAa,GAAG,WAAW,qBAAqB,KAAK;AAE7E,QAAI,MAAM,UAAU,OAAO;AACzB,YAAM,QAAQ;AACd,gBAAU,SAAS;AAAA,IACrB;AAEA,cAAU,uBAAuB,CAAC,CAAC,KAAK;AAAA,EAC1C;AAEA,YAAU,kBAAkB,SAAU,QAAQ;AAC5C,QAAI,MAAM,iBAAiB,QAAQ;AACjC,aAAO;AAAA,IACT;AAEA,UAAM,eAAe;AACrB,cAAU,SAAS;AACnB,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAEA,YAAU,aAAa,WAAY;AACjC,QAAI,SAAS,YAAU,YAAY;AACnC,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,WAAY;AACtC,QAAI,CAAC,MAAM,cAAc;AACvB,YAAM,eAAe,UAAU,WAAW;AAAA,IAC5C;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,mCAAmC,WAAY;AACvD,QAAI,CAAC,MAAM,cAAc;AACvB,gBAAU,gBAAgB;AAC1B,gBAAU,YAAY;AAAA,IACxB;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,YAAY,WAAY;AAChC,UAAM,SAAS,CAAC;AAChB,UAAM,MAAM,QAAQ,SAAU,MAAM;AAClC,YAAM,SAAS,MAAM,OAAO,OAAO,KAAK,UAAU,CAAC;AAAA,IACrD,CAAC;AACD,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,UAAU;AAE/B,YAAU,cAAc,SAAU,OAAO;AACvC,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,GAAG;AAC9C,aAAO,MAAM;AAAA,IACf,CAAC;AACD,cAAU,eAAe,KAAK;AAC9B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,kBAAkB,WAAY;AACtC,QAAI,SAAS,UAAU,UAAU;AACjC,WAAO,QAAQ,SAAU,OAAO;AAC9B,gBAAU,eAAe,KAAK;AAAA,IAChC,CAAC;AACD,UAAM,SAAS,CAAC;AAChB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,aAAa,WAAY;AACjC,UAAM,UAAU,CAAC;AACjB,UAAM,MAAM,QAAQ,SAAU,MAAM;AAClC,YAAM,UAAU,MAAM,QAAQ,OAAO,KAAK,WAAW,CAAC;AAAA,IACxD,CAAC;AACD,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,YAAY,UAAU;AAEhC,YAAU,eAAe,SAAU,QAAQ;AACzC,UAAM,UAAU,MAAM,QAAQ,OAAO,SAAU,GAAG;AAChD,aAAO,MAAM;AAAA,IACf,CAAC;AACD,cAAU,eAAe,MAAM;AAC/B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,UAAU,UAAU,WAAW;AACnC,YAAQ,QAAQ,SAAU,QAAQ;AAChC,gBAAU,eAAe,MAAM;AAAA,IACjC,CAAC;AACD,UAAM,UAAU,CAAC;AACjB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,UAAM,SAAS,CAAC,EAAE,OAAO,MAAM,QAAQ,KAAK;AAC5C,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,cAAc,SAAU,OAAO;AACvC,UAAM,SAAS,MAAM,OAAO,OAAO,SAAU,GAAG;AAC9C,aAAO,MAAM;AAAA,IACf,CAAC;AACD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,kBAAkB,WAAY;AACtC,UAAM,SAAS,CAAC;AAChB,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,qBAAqB,SAAU,QAAQ;AAC/C,UAAM,SAAS;AACf,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,YAAY,WAAS;AAE/B,YAAU,cAAc,WAAY;AAClC,QAAI,CAAC,MAAM,wBAAwB;AACjC;AAAA,IACF;AAEA,QAAI,MAAM,eAAe;AACvB,gBAAU,YAAY,MAAM,aAAa;AAEzC,YAAM,cAAc,OAAO;AAE3B,YAAM,gBAAgB;AAAA,IACxB;AAEA,UAAM,gBAAgB,UAAU,UAAU;AAC1C,cAAU,SAAS,MAAM,aAAa;AAEtC,UAAM,cAAc,wBAAwB;AAI5C,UAAM,cAAc,YAAY,UAAU,gBAAgB,EAAE,YAAY,CAAC;AAEzE,UAAM,cAAc,cAAc,UAAU,gBAAgB,EAAE,cAAc,CAAC;AAAA,EAC/E;AAGA,YAAU,2BAA2B,SAAU,GAAG,GAAG,GAAG,QAAQ;AAC9D,QAAI,MAAM,UAAU,8BAA8B,GAAG,GAAG,CAAC;AACzD,UAAM,UAAU,iBAAiB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM;AAC/D,WAAO,UAAU,YAAY,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,EACrD;AAGA,YAAU,2BAA2B,SAAU,GAAG,GAAG,GAAG,QAAQ;AAC9D,QAAI,MAAM,UAAU,YAAY,GAAG,GAAG,CAAC;AACvC,UAAM,UAAU,iBAAiB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM;AAC/D,WAAO,UAAU,8BAA8B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,EACvE;AAGA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG;AACzC,QAAI,MAAM,iBAAiB,MAAM;AAC/B,sBAAc,8EAA8E;AAC5F,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACjB;AAGA,QAAI,SAAS,MAAM,aAAa,cAAc;AAC9C,iBAAK,OAAO,QAAQ,MAAM;AAC1B,iBAAK,UAAU,QAAQ,MAAM;AAE7B,QAAI,SAAS,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;AACvC,iBAAK,cAAc,QAAQ,QAAQ,MAAM;AACzC,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,GAAG,GAAG,GAAG,QAAQ;AACtD,QAAI,MAAM,iBAAiB,MAAM;AAC/B,sBAAc,wFAAwF;AACtG,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACjB;AAGA,QAAI,SAAS,MAAM,aAAa,oBAAoB,QAAQ,IAAM,CAAG;AACrE,iBAAK,OAAO,QAAQ,MAAM;AAC1B,iBAAK,UAAU,QAAQ,MAAM;AAE7B,QAAI,SAAS,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;AACvC,iBAAK,cAAc,QAAQ,QAAQ,MAAM;AACzC,WAAO;AAAA,EACT;AAGA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG;AACzC,QAAI,MAAM,iBAAiB,MAAM;AAC/B,sBAAc,8EAA8E;AAC5F,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACjB;AAGA,QAAI,SAAS,MAAM,aAAa,cAAc;AAC9C,iBAAK,UAAU,QAAQ,MAAM;AAC7B,QAAI,SAAS,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;AACvC,iBAAK,cAAc,QAAQ,QAAQ,MAAM;AACzC,WAAO;AAAA,EACT;AAIA,YAAU,mBAAmB,SAAU,GAAG,GAAG,GAAG,QAAQ;AACtD,QAAI,MAAM,iBAAiB,MAAM;AAC/B,sBAAc,wFAAwF;AACtG,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACjB;AAGA,QAAI,SAAS,MAAM,aAAa,oBAAoB,QAAQ,IAAM,CAAG;AACrE,iBAAK,UAAU,QAAQ,MAAM;AAC7B,QAAI,SAAS,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;AACvC,iBAAK,cAAc,QAAQ,QAAQ,MAAM;AACzC,WAAO;AAAA,EACT;AAEA,YAAU,2BAA2B,WAAY;AAC/C,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,UAAM,UAAU,KAAK,eAAe,YAAY;AAChD,QAAI,iBAAiB;AACrB,cAAU,YAAY,iCAAiC;AAEvD,aAAS,QAAQ,GAAG,QAAQ,MAAM,MAAM,QAAQ,EAAE,OAAO;AACvD,UAAI,OAAO,MAAM,MAAM;AAEvB,UAAI,KAAK,cAAc,KAAK,KAAK,aAAa,GAAG;AAC/C,YAAI,SAAS,KAAK,UAAU;AAE5B,YAAI,UAAU,qBAAqB,MAAM,GAAG;AAC1C,2BAAiB;AAEjB,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAEA,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAEA,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAEA,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAEA,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAEA,cAAI,OAAO,KAAK,MAAM,UAAU,IAAI;AAClC,kBAAM,UAAU,KAAK,OAAO;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAI,gBAAgB;AAClB,yBAAmB,MAAM,SAAS;AAClC,sBAAc,+CAA+C;AAAA,IAC/D;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,cAAc,WAAY;AAClC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAI,cAAc,UAAU,UAAU,yBAAyB;AAC/D,QAAI,SAAS,CAAC,GAAG,GAAG,CAAC;AAErB,QAAI,CAAC,qBAAqB,WAAW,GAAG;AACtC,sBAAc,sBAAsB;AACpC,aAAO;AAAA,IACT;AAEA,QAAI,KAAK;AAET,QAAI,UAAU,gBAAgB,GAAG;AAC/B,WAAK,MAAM,aAAa,mBAAmB;AAAA,IAC7C,OAAO;AACL,sBAAc,qCAAqC;AACnD,aAAO;AAAA,IACT;AAIA,UAAM,aAAa,aAAa,EAAI;AACpC,WAAO,KAAM,aAAY,KAAK,YAAY,MAAM;AAChD,WAAO,KAAM,aAAY,KAAK,YAAY,MAAM;AAChD,WAAO,KAAM,aAAY,KAAK,YAAY,MAAM;AAChD,QAAI,KAAK,YAAY,KAAK,YAAY;AACtC,QAAI,KAAK,YAAY,KAAK,YAAY;AACtC,QAAI,KAAK,YAAY,KAAK,YAAY;AACtC,UAAM;AACN,UAAM;AACN,UAAM;AACN,QAAI,SAAS,KAAK,KAAK;AAEvB,aAAS,WAAW,IAAI,IAAM;AAE9B,aAAS,KAAK,KAAK,MAAM,IAAI;AAa7B,QAAI,QAAQ,mBAAmB,MAAM,aAAa,aAAa,CAAC;AAChE,QAAI,gBAAgB;AACpB,QAAI,WAAW,SAAS,KAAK,IAAI,QAAQ,GAAG;AAE5C,QAAI,MAAM,MAAM,aAAa,UAAU;AAEvC,QAAI,KAAK,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO;AAClC,uBAAgB,uDAAuD;AACvE,YAAM,aAAa,UAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IACtD;AAGA,UAAM,aAAa,cAAc,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AAChE,UAAM,aAAa,YAAY,OAAO,KAAK,WAAW,GAAG,IAAI,OAAO,KAAK,WAAW,GAAG,IAAI,OAAO,KAAK,WAAW,GAAG,EAAE;AACvH,cAAU,yBAAyB,WAAW;AAE9C,UAAM,aAAa,iBAAiB,aAAa;AAEjD,UAAM,aAAa,iBAAiB,MAAM;AAC1C,UAAM,aAAa,uBAAuB,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;AAG5E,cAAU,YAAY,kBAAkB;AACxC,WAAO;AAAA,EACT;AAEA,YAAU,2BAA2B,WAAY;AAC/C,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAI,cAAc,UAAU,UAAU,yBAAyB;AAE/D,QAAI,CAAC,qBAAqB,WAAW,GAAG;AACtC,sBAAc,qCAAqC;AACnD,aAAO;AAAA,IACT;AAGA,cAAU,iCAAiC;AAE3C,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,uDAAuD;AACrE,aAAO;AAAA,IACT;AAGA,QAAI,QAAQ,MAAM,aAAa,qBAAqB,WAAW;AAG/D,QAAI,SAAS;AAEb,QAAI,MAAM,aAAa,sBAAsB,GAAG;AAC9C,eAAS,MAAM,MAAM,aAAa,iBAAiB;AAAA,IACrD,OAAO;AACL,UAAI,QAAQ,mBAAmB,MAAM,aAAa,aAAa,CAAC;AAChE,eAAS,MAAM,KAAK,IAAI,QAAQ,CAAG,IAAI,MAAM;AAAA,IAC/C;AAEA,QAAI,MAAM,KAAK,MAAM,KAAK,QAAQ;AAChC,eAAS,SAAS,MAAM,KAAK,MAAM;AACnC,YAAM,MAAM,SAAS;AACrB,YAAM,MAAM,SAAS;AAAA,IACvB;AAGA,QAAI,MAAM,KAAK,GAAK;AAClB,YAAM,KAAK;AAAA,IACb;AAGA,UAAM,KAAK,OAAO,MAAM,KAAM,OAAM,KAAK,MAAM,MAAM,MAAM;AAC3D,UAAM,KAAK,OAAO,MAAM,KAAM,OAAM,KAAK,MAAM,MAAM,MAAM;AAE3D,UAAM,KAAK,MAAM,MAAM,MAAM,KAAK,OAAO,MAAM,KAAK,MAAM;AAI1D,QAAI,CAAC,MAAM,4BAA4B;AACrC,YAAM,6BAA6B;AAAA,IACrC;AAKA,QAAI,MAAM,KAAK,MAAM,6BAA6B,MAAM,IAAI;AAC1D,YAAM,KAAK,MAAM,6BAA6B,MAAM;AAAA,IACtD;AAEA,UAAM,aAAa,iBAAiB,MAAM,IAAI,MAAM,EAAE;AAGtD,cAAU,YAAY,iCAAiC;AACvD,WAAO;AAAA,EACT;AAEA,YAAU,kBAAkB,SAAU,cAAc;AAClD,QAAI,iBAAiB,MAAM,eAAe;AACxC,YAAM,aAAa;AACnB,YAAM,gBAAgB;AAAA,IACxB;AAAA,EACF;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,MAAM,OAAO,SAAU,MAAM;AACxC,aAAO,KAAK,cAAc;AAAA,IAC5B,CAAC,EAAE;AAAA,EACL;AAEA,YAAU,qBAAqB,UAAU;AAEzC,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM,eAAe,MAAM,aAAa,SAAS,IAAI;AAE9D,QAAI,KAAK,IAAI;AACX,WAAK;AAAA,IACP;AAEA,QAAI,KAAK,MAAM,gBAAgB,MAAM,cAAc,SAAS,IAAI;AAEhE,QAAI,KAAK,IAAI;AACX,WAAK;AAAA,IACP;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,WAAO,CAAC,CAAC,MAAM;AAAA,EACjB;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,CAAC,CAAC,MAAM;AAAA,EACjB;AACF;AA2CA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,MAAI,CAAC,MAAM;AAAY,UAAM,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC;AAErD,SAAO,MAAM,WAAW,SAAS,GAAG;AAClC,UAAM,WAAW,KAAK,CAAC;AAAA,EACzB;AAEA,MAAI,MAAM,WAAW,WAAW;AAAG,UAAM,WAAW,KAAK,CAAC;AAE1D,MAAI,WAAW,OAAO,CAAC,iBAAiB,uBAAuB,cAAc,2BAA2B,yBAAyB,iCAAiC,UAAU,CAAC;AAC7K,SAAO,WAAW,OAAO,CAAC,oBAAoB,qBAAqB,0BAA0B,SAAS,QAAQ,8BAA8B,0BAA0B,gBAAgB,eAAe,SAAS,uBAAuB,uBAAuB,mBAAmB,kBAAkB,wBAAwB,YAAY,qBAAqB,sBAAsB,cAAc,MAAM,CAAC;AACrY,WAAS,WAAW,OAAO,CAAC,UAAU,WAAW,QAAQ,CAAC;AAC1D,cAAY,WAAW,OAAO,CAAC,YAAY,GAAG,GAAG,CAAG;AACpD,kBAAgB,WAAW,OAAO,CAAC,cAAc,CAAC;AAElD,eAAY,WAAW,KAAK;AAC9B;AAzmBA,IAQI,iBACA,iBACA,kBAoiBA,kBA6DA,eAEA;AA7mBJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB;AAApB,IACI,kBAAgB;AADpB,IAEI,mBAAkB;AAoiBtB,IAAI,mBAAiB;AAAA,MACnB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,WAAW,CAAC;AAAA,MACZ,SAAS,CAAC,GAAG,GAAG,CAAC;AAAA,MACjB,qBAAqB;AAAA,MACrB,YAAY;AAAA,MACZ,wBAAwB;AAAA,MACxB,kBAAkB;AAAA,MAClB,yBAAyB;AAAA,MACzB,cAAc;AAAA,MACd,QAAQ,CAAC;AAAA,MACT,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC;AAAA,MACV,mBAAmB;AAAA,MACnB,uBAAuB;AAAA,MACvB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,OAAO;AAAA,MACP,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,0BAA0B,0BAA0B;AAAA,MACpD,aAAa;AAAA,MACb,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA,MACxB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,sBAAsB;AAAA,MACtB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,MAAM;AAAA,IACR;AAyBA,IAAI,gBAAc,YAAc,UAAQ,aAAa;AAErD,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AChnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,iCAAiC,MAAM,aAAa;AAClD,oBAAkB,QAAQ;AAC5B;AACA,wBAAwB;AACtB,SAAO,OAAO,KAAK,iBAAiB;AACtC;AACA,4BAA4B,MAAM;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,kBAAkB,SAAS,kBAAkB,MAAM,aAAa;AACzE;AAIA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,cAAc,SAAU,UAAU;AAC1C,QAAI,UAAU,YAAY,QAAQ,GAAG;AACnC;AAAA,IACF;AAEA,aAAS,gBAAgB,SAAS;AAClC,UAAM,UAAU,KAAK,QAAQ;AAO7B,cAAU,SAAS;AAAA,EACrB;AAGA,YAAU,iBAAiB,SAAU,UAAU;AAC7C,UAAM,YAAY,MAAM,UAAU,OAAO,SAAU,GAAG;AACpD,aAAO,MAAM;AAAA,IACf,CAAC;AACD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,cAAc,SAAU,KAAK;AACrC,WAAO,MAAM,UAAU,QAAQ,GAAG,MAAM;AAAA,EAC1C;AAGA,YAAU,qBAAqB,SAAU,MAAM;AAC7C,QAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,WAAO,mBAAmB,QAAQ,MAAM,gBAAgB,aAAa;AAAA,EACvE;AAGA,YAAU,UAAU,SAAU,MAAM;AAClC,QAAI,UAAU,QAAQ,IAAI,GAAG;AAC3B;AAAA,IACF;AAEA,SAAK,cAAc,SAAS;AAC5B,UAAM,MAAM,KAAK,IAAI;AACrB,cAAU,SAAS;AAAA,EACrB;AAGA,YAAU,aAAa,SAAU,MAAM;AACrC,UAAM,QAAQ,MAAM,MAAM,OAAO,SAAU,GAAG;AAC5C,aAAO,MAAM;AAAA,IACf,CAAC;AACD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,UAAU,SAAU,MAAM;AAClC,WAAO,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,EACvC;AAGA,YAAU,YAAY,WAAY;AAChC,UAAM,UAAU,QAAQ,SAAU,KAAK;AAErC,UAAI,CAAC,IAAI,sBAAsB,GAAG;AAChC,YAAI,YAAY;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,SAAS,WAAY;AAC7B,cAAU,UAAU;AAEpB,QAAI,MAAM,YAAY;AACpB,YAAM,WAAW,OAAO;AAAA,IAC1B,OAAO;AACL,YAAM,MAAM,QAAQ,SAAU,MAAM;AAClC,eAAO,KAAK,kBAAkB;AAAA,MAChC,CAAC;AAAA,IACH;AAAA,EACF;AAEA,YAAU,gBAAgB,WAAY;AACpC,QAAI,UAAU;AAAA,MACZ,WAAW;AAAA,MACX,oBAAoB;AAAA,IACtB;AACA,UAAM,UAAU,QAAQ,SAAU,KAAK;AACrC,UAAI,QAAQ,IAAI,aAAa;AAC7B,YAAM,QAAQ,SAAU,MAAM;AAC5B,YAAI,KAAK,cAAc,GAAG;AACxB,kBAAQ,aAAa;AACrB,cAAI,MAAM,KAAK,aAAa,KAAK,UAAU;AAE3C,cAAI,OAAO,IAAI,mBAAmB;AAChC,gBAAI,SAAS,IAAI,kBAAkB;AACnC,mBAAO,KAAK,MAAM,EAAE,QAAQ,SAAU,SAAS;AAC7C,kBAAI,CAAC,QAAQ,UAAU;AACrB,wBAAQ,WAAW;AAAA,cACrB;AAEA,sBAAQ,YAAY,OAAO;AAAA,YAC7B,CAAC;AAAA,UACH;AAAA,QACF,OAAO;AACL,kBAAQ,sBAAsB;AAAA,QAChC;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,YAAQ,MAAM,OAAO,KAAK,OAAO,EAAE,IAAI,SAAU,SAAS;AACxD,aAAO,GAAG,OAAO,SAAS,IAAI,EAAE,OAAO,QAAQ,QAAQ;AAAA,IACzD,CAAC,EAAE,KAAK,IAAI;AACZ,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,WAAY;AACpC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACjF,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AAChF,UAAM,aAAa,UAAU,MAAM;AACnC,WAAO,MAAM,MAAM,IAAI,SAAU,MAAM;AACrC,aAAO,KAAK,mBAAmB,KAAK,iBAAiB,QAAQ,IAAI,IAAI;AAAA,IACvE,CAAC,EAAE,OAAO,SAAU,GAAG;AACrB,aAAO,CAAC,CAAC;AAAA,IACX,CAAC;AAAA,EACH;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,cAAc,kBAAkB,SAAS,gBAAgB,CAAC;AAC1F,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,CAAC;AAC7C,QAAM,SAAS,WAAW,OAAO,CAAC,WAAW,CAAC;AAC9C,QAAM,MAAM,WAAW,OAAO,YAAY;AAE1C,kBAAgB,WAAW,KAAK;AAClC;AA3KA,IAEI,kBACA,mBAoJA,kBAsBA,eAEA;AA/KJ;AAAA;AAAA;AAEA,IAAI,mBAAmB,UAAU,MAAM,WAAW;AAClD,IAAI,oBAAoB,uBAAO,OAAO,IAAI;AAoJ1C,IAAI,mBAAiB;AAAA,MACnB,gBAAgB;AAAA,MAChB,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,gBAAgB;AAAA,IAClB;AAeA,IAAI,gBAAc,MAAM,YAAY,UAAQ,iBAAiB;AAE7D,IAAI,oBAAoB;AAAA,MACtB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACrLA,IAAI,QAKA,OAWA,MAOA;AAvBJ;AAAA;AAAA,IAAI,SAAS;AAAA,MACX,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,IACnB;AACA,IAAI,QAAQ;AAAA,MACV,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,iBAAiB;AAAA,IAEnB;AACA,IAAI,OAAO;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,IACf;AACA,IAAI,cAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAezf,wBAAwB,QAAO;AAC7B,MAAI,OAAM,YAAY;AACpB,WAAM,gBAAgB;AACtB,WAAM,eAAe;AAAA,EACvB;AAEA,SAAO;AACT;AAKA,mCAAmC,WAAW,OAAO;AAEnD,QAAM,eAAe,KAAK,2BAA2B;AAErD,MAAI,sBAAsB,oBAAI,IAAI;AAElC,MAAI,sBAAsB;AAG1B,YAAU,QAAQ,WAAY;AAO5B,QAAI,CAAC,MAAM,aAAa;AACtB,gBAAU,WAAW;AAErB,UAAI,CAAC,MAAM,aAAa;AACtB;AAAA,MACF;AAAA,IACF;AAIA,cAAU,eAAe;AAAA,EAC3B;AAGA,YAAU,kBAAkB,SAAU,MAAM;AAC1C,oBAAc,kFAAkF;AAAA,EAClG;AAGA,YAAU,qBAAqB,SAAU,OAAO;AAC9C,QAAI,MAAM,oBAAoB,OAAO;AACnC,UAAI,MAAM,mBAAmB,MAAM;AACjC,cAAM,gBAAgB,cAAc,IAAI;AAAA,MAC1C;AAEA,YAAM,kBAAkB;AAExB,UAAI,MAAM,mBAAmB,MAAM;AACjC,YAAI,MAAM,gBAAgB,cAAc,MAAM,WAAW;AACvD,gBAAM,gBAAgB,cAAc,SAAS;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,YAAU,aAAa,WAAY;AACjC,UAAM,cAAc;AACpB,cAAU,OAAO;AACjB,cAAU,OAAO;AAAA,EACnB;AAEA,YAAU,SAAS,WAAY;AAC7B,WAAO,UAAU,WAAW,IAAI;AAAA,EAClC;AAEA,YAAU,UAAU,WAAY;AAC9B,WAAO,UAAU,WAAW,KAAK;AAAA,EACnC;AAEA,YAAU,iBAAiB,WAAY;AACrC,WAAO,iBAAgB,kBAAkB;AAAA,EAC3C;AAEA,iCAA+B,GAAG,GAAG;AACnC,QAAI,CAAC,MAAM,iBAAiB;AAC1B,YAAM,kBAAkB,UAAU,kBAAkB,GAAG,CAAC;AAAA,IAC1D;AAAA,EACF;AAEA,YAAU,qBAAqB,WAAY;AACzC,QAAI,MAAM,iBAAiB;AACzB,aAAO,MAAM;AAAA,IACf;AAEA,0BAAsB,GAAG,CAAC;AAC1B,WAAO,MAAM;AAAA,EACf;AAEA,qCAAmC,QAAQ;AACzC,QAAI,SAAS,MAAM,UAAU,sBAAsB;AAEnD,QAAI,SAAS,MAAM,MAAM,UAAU;AAEnC,QAAI,SAAS,OAAO,QAAQ,OAAO;AACnC,QAAI,SAAS,OAAO,SAAS,OAAO;AACpC,QAAI,WAAW;AAAA,MACb,GAAG,SAAU,QAAO,UAAU,OAAO;AAAA,MACrC,GAAG,SAAU,QAAO,SAAS,OAAO,UAAU,OAAO;AAAA,MACrD,GAAG;AAAA,IACL;AACA,0BAAsB,SAAS,GAAG,SAAS,CAAC;AAC5C,WAAO;AAAA,EACT;AAEA,qCAAmC,SAAS;AAC1C,QAAI,YAAY,CAAC;AAEjB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,QAAQ,QAAQ;AACpB,gBAAU,MAAM,cAAc,0BAA0B,KAAK;AAAA,IAC/D;AAEA,WAAO;AAAA,EACT;AAEA,8BAA4B,QAAO;AACjC,WAAO;AAAA,MACL,YAAY,OAAM;AAAA,MAClB,QAAQ,OAAM;AAAA,MACd,UAAU,OAAM;AAAA,IAClB;AAAA,EACF;AAEA,sBAAoB,QAAO;AACzB,QAAI,eAAe,mBAAmB,MAAK;AAE3C,QAAI,OAAO,gBAAc;AAAA,MACvB,KAAK,OAAM;AAAA,MACX,SAAS,OAAM;AAAA,IACjB,GAAG,YAAY;AAEf,WAAO;AAAA,EACT;AAEA,mCAAiC,cAAc;AAC7C,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,QAAI,UAAU;AACd,QAAI,SAAS,eAAe,qBAAqB;AACjD,QAAI,YAAY,eAAe,wBAAwB;AAEvD,QAAI,CAAC,SAAS,CAAC,gBAAgB,sBAAsB,GAAG;AACtD,QAAE;AAAA,IACJ;AAGA,QAAI,CAAC,uBAAuB,OAAO;AACjC,4BAAsB;AAEtB,UAAI,MAAM,WAAW;AACnB,cAAM,UAAU,WAAW,aAAa,UAAU,eAAe;AAAA,MACnE;AAEA,cAAQ,QAAQ,WAAW,UAAU,aAAa;AAClD,cAAQ,QAAQ,aAAa,UAAU,eAAe;AACtD,cAAQ,QAAQ,YAAY,UAAU,gBAAgB,KAAK;AAC3D,cAAQ,QAAQ,eAAe,UAAU,gBAAgB,KAAK;AAC9D,cAAQ,QAAQ,aAAa,UAAU,iBAAiB,KAAK;AAAA,IAC/D;AAEA,QAAI,CAAC,SAAS,cAAc;AAC1B,QAAE;AAAA,IACJ;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,WAAW;AAC1C,UAAM,YAAY;AAClB,cAAU,iBAAiB,eAAe,cAAc;AAExD,cAAU,iBAAiB,SAAS,UAAU,WAAW;AACzD,cAAU,iBAAiB,kBAAkB,UAAU,WAAW;AAClE,cAAU,iBAAiB,cAAc,UAAU,gBAAgB;AACnE,cAAU,iBAAiB,cAAc,UAAU,gBAAgB;AACnE,cAAU,iBAAiB,aAAa,UAAU,eAAe;AACjE,cAAU,iBAAiB,aAAa,UAAU,eAAe;AACjE,aAAS,iBAAiB,YAAY,UAAU,cAAc;AAC9D,aAAS,iBAAiB,WAAW,UAAU,aAAa;AAC5D,aAAS,iBAAiB,SAAS,UAAU,WAAW;AACxD,aAAS,iBAAiB,qBAAqB,UAAU,uBAAuB;AAChF,cAAU,iBAAiB,cAAc,UAAU,kBAAkB,KAAK;AAAA,EAC5E;AAEA,YAAU,eAAe,WAAY;AAEnC,4BAAwB,OAAO,IAAI;AACnC,UAAM,UAAU,oBAAoB,eAAe,cAAc;AAEjE,UAAM,UAAU,oBAAoB,SAAS,UAAU,WAAW;AAClE,UAAM,UAAU,oBAAoB,kBAAkB,UAAU,WAAW;AAC3E,UAAM,UAAU,oBAAoB,cAAc,UAAU,gBAAgB;AAC5E,UAAM,UAAU,oBAAoB,cAAc,UAAU,gBAAgB;AAC5E,UAAM,UAAU,oBAAoB,aAAa,UAAU,eAAe;AAC1E,UAAM,UAAU,oBAAoB,aAAa,UAAU,eAAe;AAC1E,aAAS,oBAAoB,YAAY,UAAU,cAAc;AACjE,aAAS,oBAAoB,WAAW,UAAU,aAAa;AAC/D,aAAS,oBAAoB,SAAS,UAAU,WAAW;AAC3D,aAAS,oBAAoB,qBAAqB,UAAU,uBAAuB;AACnF,UAAM,UAAU,oBAAoB,cAAc,UAAU,gBAAgB;AAC5E,UAAM,YAAY;AAAA,EACpB;AAEA,YAAU,iBAAiB,SAAU,QAAO;AAC1C,QAAI,OAAO,WAAW,MAAK;AAC3B,cAAU,cAAc,IAAI;AAAA,EAC9B;AAEA,YAAU,gBAAgB,SAAU,QAAO;AACzC,QAAI,OAAO,WAAW,MAAK;AAC3B,cAAU,aAAa,IAAI;AAAA,EAC7B;AAEA,YAAU,cAAc,SAAU,QAAO;AACvC,QAAI,OAAO,WAAW,MAAK;AAC3B,cAAU,WAAW,IAAI;AAAA,EAC3B;AAEA,YAAU,kBAAkB,SAAU,QAAO;AAC3C,QAAI,OAAM,SAAS,GAAG;AAEpB;AAAA,IACF;AAEA,4BAAwB,IAAI;AAC5B,mBAAe,MAAK;AAEpB,QAAI,WAAW,gBAAc,gBAAc,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MAC7E,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,YAAQ,OAAM;AAAA,WACP;AACH,kBAAU,qBAAqB,QAAQ;AACvC;AAAA,WAEG;AACH,kBAAU,uBAAuB,QAAQ;AACzC;AAAA,WAEG;AACH,kBAAU,sBAAsB,QAAQ;AACxC;AAAA;AAGA,wBAAc,iCAAiC,OAAO,OAAM,MAAM,CAAC;AACnE;AAAA;AAAA,EAEN;AAGA,YAAU,qBAAqB,WAAY;AACzC,QAAI,SAAS,UAAU,QAAQ,EAAE,UAAU;AAC3C,WAAO,mBAAmB;AAAA,EAC5B;AAGA,YAAU,kBAAkB,WAAY;AACtC,WAAO,SAAS,gBAAgB;AAAA,EAClC;AAGA,YAAU,kBAAkB,WAAY;AACtC,WAAO,CAAC,CAAC,SAAS;AAAA,EACpB;AAGA,YAAU,0BAA0B,WAAY;AAC9C,QAAI,UAAU,gBAAgB,GAAG;AAC/B,gBAAU,sBAAsB;AAAA,IAClC,OAAO;AACL,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AAGA,yBAAuB;AACrB,QAAI,MAAM,SAAS,MAAM,WAAW,MAAM,cAAc;AACtD,YAAM,WAAW;AAEjB,YAAM,MAAM,kBAAkB;AAE9B,YAAM,WAAW;AAAA,IACnB;AAIA,cAAU,kBAAkB;AAAA,EAC9B;AAEA,YAAU,mBAAmB,SAAU,WAAW;AAChD,QAAI,cAAc,QAAW;AAC3B,sBAAc,8CAA8C;AAC5D;AAAA,IACF;AAEA,QAAI,oBAAoB,IAAI,SAAS,GAAG;AACtC,uBAAgB,+CAA+C;AAC/D;AAAA,IACF;AAEA,wBAAoB,IAAI,SAAS;AAEjC,QAAI,CAAC,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,CAAC,MAAM,aAAa;AACnF,YAAM,sBAAsB,KAAK,IAAI;AACrC,YAAM,uBAAuB;AAC7B,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AACxE,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AAIA,YAAU,kBAAkB,SAAU,UAAU;AAC9C,QAAI,SAAS,KAAK,IAAI,IAAI;AAC1B,UAAM,wBAAwB,KAAK,IAAI,MAAM,uBAAuB,MAAM;AAE1E,QAAI,CAAC,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,CAAC,MAAM,aAAa;AACnF,YAAM,sBAAsB,KAAK,IAAI;AACrC,YAAM,uBAAuB;AAC7B,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AACxE,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AAEA,YAAU,cAAc,WAAY;AAClC,WAAO,MAAM,eAAe,MAAM,qBAAqB;AAAA,EACzD;AAEA,YAAU,kBAAkB,SAAU,WAAW;AAC/C,QAAI,cAAc,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEtF,QAAI,CAAC,oBAAoB,IAAI,SAAS,GAAG;AACvC,UAAI,CAAC,aAAa;AAChB,YAAI,aAAa,aAAa,UAAU,eAAe,UAAU,aAAa,IAAI;AAClF,yBAAgB,GAAG,OAAO,YAAY,+BAA+B,CAAC;AAAA,MACxE;AAEA;AAAA,IACF;AAEA,wBAAoB,OAAO,SAAS;AAEpC,QAAI,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,KAAK,IAAI,IAAI,MAAM,uBAAuB;AACxG,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AACzB,gBAAU,kBAAkB;AAC5B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,sBAAsB,WAAY;AAE1C,QAAI,MAAM,kBAAkB;AAC1B,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AAAA,IAC3B;AAEA,UAAM,cAAc;AAAA,EACtB;AAEA,YAAU,wBAAwB,WAAY;AAC5C,UAAM,cAAc;AAEpB,QAAI,oBAAoB,SAAS,GAAG;AAClC,YAAM,2BAA2B;AACjC,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AAAA,IAC1E;AAAA,EACF;AAEA,YAAU,mBAAmB,SAAU,WAAW,SAAS,YAAY;AAErE,cAAU,aAAa,QAAQ,SAAU,aAAa;AACpD,UAAI,WAAW,YAAY,aAAa,OAAO,OAAO,QAAQ,QAAQ,YAAY,WAAW,UAAU;AACvG,UAAI,KAAK,YAAY;AACrB,UAAI,OAAO,YAAY;AAEvB,UAAI,IAAI;AACN,YAAI,CAAE,IAAG,SAAS,MAAM,oBAAoB;AAC1C,gBAAM,kBAAkB,GAAG,SAAS;AAAA,YAClC,MAAM;AAAA,cACJ,SAAS,CAAC;AAAA,YACZ;AAAA,YACA,OAAO;AAAA,cACL,SAAS,CAAC;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAEA,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,QAAQ,EAAE,GAAG;AAC1C,cAAI,CAAE,MAAK,MAAM,kBAAkB,GAAG,OAAO,MAAM,UAAU;AAC3D,kBAAM,kBAAkB,GAAG,OAAO,MAAM,QAAQ,KAAK;AAAA,UACvD;AAEA,cAAI,MAAM,kBAAkB,GAAG,OAAO,MAAM,QAAQ,OAAO,GAAG,QAAQ,GAAG,WAAW,YAAY,MAAM;AACpG,sBAAU,cAAc;AAAA,cACtB,SAAS;AAAA,cACT,UAAU,SAAS,UAAU;AAAA,cAC7B,aAAa,SAAS,UAAU;AAAA,cAChC,SAAS,GAAG,QAAQ,GAAG;AAAA,cACvB,QAAQ,YAAY,eAAe,SAAS,QAAO,iBAAiB,QAAO;AAAA,cAC3E,OAAO,eAAe,GAAG,YAAY,eAAe,GAAG,SAAS,KAAK,eAAe,GAAG,SAAS,KAAK,OAAM;AAAA,YAC7G,CAAC;AACD,kBAAM,kBAAkB,GAAG,OAAO,MAAM,QAAQ,KAAK,GAAG,QAAQ,GAAG;AAAA,UACrE;AAEA,cAAI,MAAM,kBAAkB,GAAG,OAAO,MAAM,QAAQ,MAAM,YAAY,MAAM;AAC1E,sBAAU,YAAY;AAAA,cACpB,SAAS;AAAA,cACT,UAAU,SAAS,UAAU;AAAA,cAC7B,aAAa,SAAS,UAAU;AAAA,cAChC,QAAQ,YAAY,eAAe,SAAS,QAAO,iBAAiB,QAAO;AAAA,YAC7E,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAEA,YAAU,kBAAkB,SAAU,QAAO;AAG3C,QAAI,WAAW,gBAAc,gBAAc,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MAC7E,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,QAAI,MAAM,kBAAkB,GAAG;AAC7B,gBAAU,oBAAoB,QAAQ;AAAA,IACxC,OAAO;AACL,gBAAU,eAAe,QAAQ;AACjC,mBAAa,MAAM,aAAa;AAAA,IAClC;AAGA,UAAM,gBAAgB,WAAW,WAAY;AAC3C,gBAAU,kBAAkB;AAC5B,YAAM,gBAAgB;AAAA,IACxB,GAAG,GAAG;AAAA,EACR;AAEA,YAAU,kBAAkB,WAAY;AACtC,QAAI,WAAW,KAAK,IAAI;AACxB,UAAM;AAEN,QAAI,WAAW,MAAM,sBAAsB,OAAU,MAAM,uBAAuB,GAAG;AACnF,YAAM,2BAA2B,MAAU,OAAM,uBAAuB,KAAM,YAAW,MAAM;AAC/F,YAAM,gBAAgB,IAAM,MAAM;AAClC,gBAAU,8BAA8B;AACxC,YAAM,sBAAsB;AAC5B,YAAM,uBAAuB;AAAA,IAC/B;AAEA,cAAU,eAAe;AACzB,gBAAY;AAEZ,QAAI,oBAAoB,OAAO,KAAK,KAAK,IAAI,IAAI,MAAM,uBAAuB;AAC5E,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AAAA,IAC1E,OAAO;AACL,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AACzB,gBAAU,kBAAkB;AAC5B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,cAAc,SAAU,QAAO;AACvC,mBAAe,MAAK;AAkBpB,QAAI,WAAW,gBAAc,gBAAc,gBAAc,CAAC,GAAG,gBAAe,MAAK,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MACnH,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,QAAI,MAAM,mBAAmB,GAAG;AAC9B,gBAAU,qBAAqB,QAAQ;AAAA,IACzC,OAAO;AACL,gBAAU,gBAAgB,QAAQ;AAClC,mBAAa,MAAM,cAAc;AAAA,IACnC;AAGA,UAAM,iBAAiB,WAAW,WAAY;AAC5C,gBAAU,gBAAgB,GAAG;AAC7B,gBAAU,mBAAmB;AAC7B,YAAM,iBAAiB;AAAA,IACzB,GAAG,GAAG;AAAA,EACR;AAEA,YAAU,mBAAmB,SAAU,QAAO;AAC5C,QAAI,WAAW,gBAAc,gBAAc,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MAC7E,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,cAAU,gBAAgB,QAAQ;AAAA,EACpC;AAEA,YAAU,mBAAmB,SAAU,QAAO;AAC5C,QAAI,WAAW,gBAAc,gBAAc,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MAC7E,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,cAAU,gBAAgB,QAAQ;AAAA,EACpC;AAEA,YAAU,gBAAgB,SAAU,QAAO;AACzC,4BAAwB,KAAK;AAC7B,mBAAe,MAAK;AAEpB,QAAI,WAAW,gBAAc,gBAAc,CAAC,GAAG,mBAAmB,MAAK,CAAC,GAAG,CAAC,GAAG;AAAA,MAC7E,UAAU,0BAA0B,MAAK;AAAA,IAC3C,CAAC;AAED,YAAQ,OAAM;AAAA,WACP;AACH,kBAAU,uBAAuB,QAAQ;AACzC;AAAA,WAEG;AACH,kBAAU,yBAAyB,QAAQ;AAC3C;AAAA,WAEG;AACH,kBAAU,wBAAwB,QAAQ;AAC1C;AAAA;AAGA,wBAAc,kCAAkC,OAAO,OAAM,MAAM,CAAC;AACpE;AAAA;AAAA,EAEN;AAEA,YAAU,mBAAmB,SAAU,QAAO;AAC5C,4BAAwB,IAAI;AAC5B,mBAAe,MAAK;AAEpB,QAAI,MAAM,qBAAqB,OAAM,QAAQ,SAAS,GAAG;AACvD,UAAI,YAAY,0BAA0B,OAAM,OAAO;AAEvD,UAAI,OAAM,QAAQ,WAAW,GAAG;AAC9B,YAAI,QAAQ,OAAM,QAAQ;AAC1B,YAAI,WAAW;AAAA,UACb,UAAU,0BAA0B,KAAK;AAAA,UACzC,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,YAAY;AAAA,QACd;AACA,kBAAU,uBAAuB,QAAQ;AAAA,MAC3C;AAGA,gBAAU,iBAAiB,cAAc,SAAS;AAAA,IACpD,OAAO;AACL,UAAI,SAAS,OAAM,QAAQ;AAC3B,UAAI,YAAY;AAAA,QACd,UAAU,0BAA0B,MAAM;AAAA,QAC1C,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AACA,gBAAU,qBAAqB,SAAS;AAAA,IAC1C;AAAA,EACF;AAEA,YAAU,kBAAkB,SAAU,QAAO;AAC3C,mBAAe,MAAK;AAEpB,QAAI,MAAM,qBAAqB,OAAM,QAAQ,SAAS,GAAG;AACvD,UAAI,YAAY,0BAA0B,OAAM,OAAO;AACvD,gBAAU,iBAAiB,aAAa,SAAS;AAAA,IACnD,OAAO;AACL,UAAI,QAAQ,OAAM,QAAQ;AAC1B,UAAI,WAAW;AAAA,QACb,UAAU,0BAA0B,KAAK;AAAA,QACzC,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AACA,gBAAU,eAAe,QAAQ;AAAA,IACnC;AAAA,EACF;AAEA,YAAU,iBAAiB,SAAU,QAAO;AAC1C,mBAAe,MAAK;AAEpB,QAAI,MAAM,mBAAmB;AAE3B,UAAI,OAAM,QAAQ,WAAW,GAAG;AAE9B,YAAI,OAAM,eAAe,WAAW,GAAG;AACrC,cAAI,QAAQ,OAAM,eAAe;AACjC,cAAI,WAAW;AAAA,YACb,UAAU,0BAA0B,KAAK;AAAA,YACzC,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,YAAY;AAAA,UACd;AACA,oBAAU,uBAAuB,QAAQ;AACzC,kCAAwB,KAAK;AAAA,QAC/B,OAAO;AAEL,cAAI,YAAY,0BAA0B,OAAM,cAAc;AAC9D,oBAAU,iBAAiB,YAAY,SAAS;AAChD,kCAAwB,KAAK;AAAA,QAC/B;AAAA,MACF,WAAW,OAAM,QAAQ,WAAW,GAAG;AAErC,YAAI,aAAa,0BAA0B,OAAM,cAAc;AAE/D,kBAAU,iBAAiB,YAAY,UAAU;AACjD,YAAI,UAAU,OAAM,QAAQ;AAC5B,YAAI,aAAa;AAAA,UACf,UAAU,0BAA0B,OAAO;AAAA,UAC3C,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,YAAY;AAAA,QACd;AACA,kBAAU,qBAAqB,UAAU;AAAA,MAC3C,OAAO;AAEL,YAAI,cAAc,0BAA0B,OAAM,OAAO;AAEzD,kBAAU,iBAAiB,aAAa,WAAW;AAAA,MACrD;AAAA,IACF,OAAO;AACL,UAAI,UAAU,OAAM,eAAe;AACnC,UAAI,aAAa;AAAA,QACf,UAAU,0BAA0B,OAAO;AAAA,QAC3C,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AACA,gBAAU,uBAAuB,UAAU;AAC3C,8BAAwB,KAAK;AAAA,IAC/B;AAAA,EACF;AAEA,YAAU,UAAU,SAAU,KAAK;AACjC,QAAI,MAAM,UAAU,KAAK;AACvB;AAAA,IACF;AAEA,UAAM,QAAQ;AAEd,UAAM,MAAM,cAAc,EAAE,cAAc,SAAS;AAEnD,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,cAAc,uBAAuB;AAEzC,WAAQ,gBAAe,MAAM,WAAW,QAAQ,iBAAiB,SAAS,SAAU,yBAAwB,aAAa,cAAc,OAAO,QAAQ,0BAA0B,SAAS,SAAU,0BAAyB,sBAAsB,wBAAwB,OAAO,QAAQ,2BAA2B,SAAS,SAAS,uBAAuB;AAAA,EAC/V;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,eAAe;AAEnB,QAAI,IAAI,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC5E,QAAI,IAAI,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAE5E,QAAI,CAAC,MAAM,OAAO;AAChB,aAAO;AAAA,IACT;AAIA,QAAI,KAAM,iBAAgB,MAAM,WAAW,QAAQ,kBAAkB,SAAS,SAAU,yBAAwB,cAAc,cAAc,OAAO,QAAQ,0BAA0B,SAAS,SAAS,sBAAsB,aAAa;AAE1O,QAAI,CAAC,IAAI;AACP,aAAO;AAAA,IACT;AAEA,OAAG,KAAK,SAAU,GAAG,GAAG;AACtB,aAAO,EAAE,SAAS,IAAI,EAAE,SAAS;AAAA,IACnC,CAAC;AACD,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,kBAAkB;AACtB,QAAI,QAAQ,GAAG;AAEf,WAAO,SAAS;AACd,UAAI,OAAO,GAAG;AAEd,UAAI,MAAM,MAAM,aAAa,GAAG,GAAG,IAAI,KAAK,KAAK,eAAe,GAAG;AACjE,0BAAkB;AAClB;AAAA,MACF;AAEA,UAAI,mBAAmB,QAAQ,KAAK,eAAe,GAAG;AAGpD,yBAAiB;AAAA,MACnB;AAEA,UAAI,gBAAgB,QAAQ,MAAM,MAAM,aAAa,GAAG,GAAG,IAAI,GAAG;AAGhE,sBAAc;AAAA,MAChB;AAAA,IACF;AAIA,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB;AAAA,IACpB;AAKA,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB;AAAA,IACpB;AAGA,QAAI,mBAAmB,MAAM;AAC3B,wBAAkB,GAAG;AAAA,IACvB;AAEA,WAAO;AAAA,EACT;AAMA,YAAU,SAAS,WAAY;AAC7B,QAAI,CAAC,UAAU,YAAY,KAAK,CAAC,MAAM,UAAU;AAC/C,kBAAY;AAAA,IACd;AAAA,EACF;AAGA,gBAAc,QAAQ,SAAU,WAAW;AACzC,QAAI,aAAa,UAAU,OAAO,CAAC,EAAE,YAAY,IAAI,UAAU,MAAM,CAAC;AAEtE,cAAU,GAAG,OAAO,YAAY,OAAO,KAAK,SAAU,KAAK;AAEzD,UAAI,CAAC,MAAM,SAAS;AAClB;AAAA,MACF;AAGA,UAAI,WAAW,UAAU,mBAAmB;AAE5C,UAAI,CAAC,UAAU;AACb,2BAAkB,4FAA4F;AAC9G;AAAA,MACF;AAGA,UAAI,WAAW,gBAAc;AAAA,QAC3B,MAAM;AAAA,QACN,eAAe,MAAM;AAAA,QACrB,eAAe,UAAU,iBAAiB;AAAA,MAC5C,GAAG,GAAG;AAGN,gBAAU,SAAS,OAAO,SAAS,GAAG,QAAQ;AAAA,IAChD;AAAA,EACF,CAAC;AAED,YAAU,mBAAmB,SAAU,QAAO,WAAW;AAEvD,QAAI,OAAO,KAAK,SAAS,EAAE,SAAS,GAAG;AACrC;AAAA,IACF;AAEA,QAAI,CAAC,MAAM,wBAAwB;AACjC,YAAM,yBAAyB,CAAC;AAAA,IAClC;AAGA,QAAI,WAAU,cAAc;AAC1B,aAAO,KAAK,SAAS,EAAE,QAAQ,SAAU,KAAK;AAC5C,cAAM,uBAAuB,OAAO,UAAU;AAAA,MAChD,CAAC;AAED,YAAM,iBAAiB;AACvB;AAAA,IACF;AAGA,QAAI,WAAU,YAAY;AACxB,UAAI,MAAM,mBAAmB,SAAS;AACpC,kBAAU,OAAO;AACjB,kBAAU,cAAc;AAAA,MAC1B;AAEA,UAAI,MAAM,mBAAmB,UAAU;AACrC,kBAAU,OAAO;AACjB,kBAAU,eAAe;AAAA,MAC3B;AAEA,UAAI,MAAM,mBAAmB,OAAO;AAClC,kBAAU,OAAO;AACjB,kBAAU,YAAY;AAAA,MACxB;AAEA,YAAM,iBAAiB;AACvB,YAAM,yBAAyB,CAAC;AAChC;AAAA,IACF;AAGA,QAAI,QAAQ;AACZ,QAAI,UAAU,CAAC;AACf,QAAI,YAAY,CAAC;AACjB,WAAO,KAAK,SAAS,EAAE,QAAQ,SAAU,KAAK;AAC5C,cAAQ,SAAS,UAAU;AAC3B,gBAAU,SAAS,MAAM,uBAAuB;AAChD;AAAA,IACF,CAAC;AAKD,QAAI,mBAAmB,KAAK,KAAM,WAAU,GAAG,IAAI,UAAU,GAAG,KAAM,WAAU,GAAG,IAAI,UAAU,GAAG,KAAM,WAAU,GAAG,IAAI,UAAU,GAAG,KAAM,WAAU,GAAG,IAAI,UAAU,GAAG,EAAE;AAC9K,QAAI,cAAc,KAAK,KAAM,SAAQ,GAAG,IAAI,QAAQ,GAAG,KAAM,SAAQ,GAAG,IAAI,QAAQ,GAAG,KAAM,SAAQ,GAAG,IAAI,QAAQ,GAAG,KAAM,SAAQ,GAAG,IAAI,QAAQ,GAAG,EAAE;AAEzJ,QAAI,gBAAgB,mBAAmB,KAAK,MAAM,UAAU,GAAG,IAAI,UAAU,GAAG,GAAG,UAAU,GAAG,IAAI,UAAU,GAAG,CAAC,CAAC;AACnH,QAAI,WAAW,mBAAmB,KAAK,MAAM,QAAQ,GAAG,IAAI,QAAQ,GAAG,GAAG,QAAQ,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC;AAEtG,QAAI,iBAAiB,WAAW;AAChC,eAAW,WAAW,OAAS,MAAQ,WAAW,MAAQ,WAAW;AACrE,oBAAgB,gBAAgB,OAAS,MAAQ,gBAAgB,MAAQ,gBAAgB;AAEzF,QAAI,KAAK,IAAI,WAAW,aAAa,IAAI,KAAK,IAAI,cAAc,GAAG;AACjE,uBAAiB,WAAW;AAAA,IAC9B;AAGA,QAAI,QAAQ,CAAC;AACb,UAAM,KAAM,SAAQ,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,GAAG,IAAI,UAAU,GAAG,KAAK;AAC7E,UAAM,KAAM,SAAQ,GAAG,IAAI,UAAU,GAAG,IAAI,QAAQ,GAAG,IAAI,UAAU,GAAG,KAAK;AAE7E,QAAI,WAAU,aAAa;AAOzB,UAAI,MAAM,mBAAmB,SAAS;AAMpC,YAAI,SAAS,OAAO,KAAK,KAAK,MAAM,UAAU,cAAc,MAAM,UAAU,cAAc,MAAM,UAAU,eAAe,MAAM,UAAU,YAAY;AAErJ,YAAI,SAAS,IAAM;AACjB,mBAAS;AAAA,QACX;AAEA,YAAI,gBAAgB,KAAK,IAAI,cAAc,gBAAgB;AAC3D,YAAI,iBAAiB,cAAc,YAAY,KAAK,IAAI,cAAc,IAAI;AAC1E,YAAI,cAAc,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,EAAE;AAErE,YAAI,gBAAgB,UAAU,gBAAgB,kBAAkB,gBAAgB,aAAa;AAC3F,gBAAM,iBAAiB;AACvB,cAAI,WAAW;AAAA,YACb,OAAO;AAAA,YACP,SAAS;AAAA,UACX;AACA,oBAAU,gBAAgB,QAAQ;AAAA,QACpC,WAAW,iBAAiB,UAAU,iBAAiB,aAAa;AAClE,gBAAM,iBAAiB;AACvB,cAAI,aAAa;AAAA,YACf,UAAU;AAAA,YACV,SAAS;AAAA,UACX;AACA,oBAAU,iBAAiB,UAAU;AAAA,QACvC,WAAW,cAAc,QAAQ;AAC/B,gBAAM,iBAAiB;AACvB,cAAI,aAAa;AAAA,YACf,aAAa,CAAC,GAAG,CAAC;AAAA,YAClB,SAAS;AAAA,UACX;AACA,oBAAU,cAAc,UAAU;AAAA,QACpC;AAAA,MACF,OAAO;AAGL,YAAI,MAAM,mBAAmB,UAAU;AACrC,cAAI,aAAa;AAAA,YACf,UAAU;AAAA,YACV,SAAS;AAAA,UACX;AACA,oBAAU,YAAY,UAAU;AAAA,QAClC;AAEA,YAAI,MAAM,mBAAmB,SAAS;AACpC,cAAI,aAAa;AAAA,YACf,OAAO,cAAc;AAAA,YACrB,SAAS;AAAA,UACX;AACA,oBAAU,WAAW,UAAU;AAAA,QACjC;AAEA,YAAI,MAAM,mBAAmB,OAAO;AAClC,cAAI,aAAa;AAAA,YACf,aAAa;AAAA,YACb,SAAS;AAAA,UACX;AACA,oBAAU,SAAS,UAAU;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,yBAAyB,WAAY;AAC7C,UAAM,sBAAsB,KAAK,IAAI;AACrC,UAAM,uBAAuB;AAAA,EAC/B;AAEA,YAAU,qBAAqB,SAAU,GAAG;AAC1C,UAAM,kBAAkB,CAAC,CAAC;AAC1B,UAAM,kBAAkB;AAAA,EAC1B;AAGA,MAAI,cAAc,UAAU;AAE5B,YAAU,SAAS,WAAY;AAC7B,WAAO,oBAAoB,MAAM;AAC/B,gBAAU,gBAAgB,oBAAoB,OAAO,EAAE,KAAK,EAAE,KAAK;AAAA,IACrE;AAEA,QAAI,OAAO,SAAS,WAAW,aAAa;AAC1C,eAAS,oBAAoB,oBAAoB,UAAU,sBAAsB;AAAA,IACnF;AAEA,gBAAY;AAAA,EACd;AAKA,MAAI,OAAO,SAAS,WAAW,aAAa;AAC1C,aAAS,iBAAiB,oBAAoB,UAAU,wBAAwB,KAAK;AAAA,EACvF;AACF;AA6BA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAE1B,QAAM,wBAAwB;AAC9B,QAAM,MAAM,WAAW,OAAO,aAAa;AAC3C,gBAAc,QAAQ,SAAU,WAAW;AACzC,WAAO,MAAM,MAAM,WAAW,OAAO,SAAS;AAAA,EAChD,CAAC;AAED,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,aAAa,mBAAmB,iBAAiB,4BAA4B,OAAO,CAAC;AAEjI,QAAM,OAAO,WAAW,OAAO,CAAC,qBAAqB,WAAW,gBAAgB,qBAAqB,qBAAqB,mBAAmB,QAAQ,CAAC;AACtJ,QAAM,gBAAgB,WAAW,OAAO,CAAC,MAAM,CAAC;AAGhD,4BAA0B,WAAW,KAAK;AAC5C;AAzgCA,IAQI,SACA,QACA,kBACA,iBACA,iBACA,oBAIA,gBAGA,eA08BA,kBA6CA,eAEA;AA7gCJ;AAAA;AAAA;AACA;AACA;AACA;AAKA,IAAI,UAAS,YAAU;AAAvB,IACI,SAAQ,YAAU;AACtB,IAAI,mBAAkB,MAAM;AAA5B,IACI,kBAAgB,MAAM;AAD1B,IAEI,kBAAiB,MAAM;AAF3B,IAGI,qBAAoB,MAAM;AAI9B,IAAI,iBAAiB;AAAA,MACnB,eAAe,CAAC,OAAM,SAAS,OAAM,MAAM,OAAM,UAAU,OAAM,YAAY,OAAM,GAAG,OAAM,CAAC;AAAA,IAC/F;AACA,IAAI,gBAAgB,CAAC,kBAAkB,aAAa,gBAAgB,cAAc,cAAc,kBAAkB,aAAa,gBAAgB,mBAAmB,qBAAqB,qBAAqB,uBAAuB,oBAAoB,sBAAsB,YAAY,WAAW,SAAS,mBAAmB,cAAc,iBAAiB,cAAc,SAAS,YAAY,YAAY,OAAO,UAAU,eAAe,UAAU,aAAa,YAAY,UAAU,oBAAoB,kBAAkB,oBAAoB,eAAe,kBAAkB,0BAA0B;AA08BhlB,IAAI,mBAAiB;AAAA,MACnB,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,WAAW;AAAA,MAEX,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,0BAA0B;AAAA,MAC1B,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,mBAAmB,CAAC;AAAA,IACtB;AAuBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,2BAA2B;AAEvE,IAAI,8BAA8B,gBAAc;AAAA,MAC9C,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,IACF,GAAG,WAAS;AAAA;AAAA;;;ACjhCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,YAAU,oBAAoB,UAAU;AAExC,YAAU,oBAAoB,SAAU,UAAU;AAChD,QAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEpF,QAAI,UAAU,kBAAkB,MAAM,UAAU;AAC9C,YAAM,OAAO,WAAW;AACxB,YAAM,SAAS,MAAM,cAAc,MAAM,UAAU,MAAM,IAAI;AAC7D,gBAAU,sBAAsB,SAAS;AACzC,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,WAAW,SAAU,KAAK;AAClC,QAAI,SAAS,MAAM,MAAM;AAEzB,aAAS,IAAI,GAAG,IAAI,MAAM,oBAAoB,KAAK;AACjD,YAAM,OAAO,SAAS,KAAK,IAAI,IAAI,KAAK,UAAU,UAAU,IAAI,IAAI,SAAY,UAAU,IAAI;AAAA,IAChG;AAAA,EACF;AAEA,YAAU,WAAW,UAAU;AAE/B,YAAU,YAAY,WAAY;AAChC,QAAI,UAAU,sBAAsB,MAAM,GAAG;AAC3C,UAAI,UAAU,UAAU,SAAS,CAAC;AAElC,YAAM,OAAO,KAAK,QAAQ;AAC1B,YAAM,OAAO,KAAK,QAAQ;AAE1B,UAAI,UAAU,UAAU,SAAS,CAAC;AAElC,YAAM,OAAO,KAAK,QAAQ;AAC1B,YAAM,OAAO,KAAK,QAAQ;AAC1B,UAAI,SAAS,UAAU,SAAS,CAAC;AACjC,YAAM,OAAO,KAAK,OAAO;AACzB,YAAM,OAAO,KAAK,OAAO;AACzB,aAAO,MAAM;AAAA,IACf;AAEA,QAAI,UAAU,sBAAsB,MAAM,GAAG;AAC3C,sBAAc,4DAA4D,OAAO,UAAU,sBAAsB,CAAC,CAAC;AACnH,aAAO;AAAA,IACT;AAEA,QAAI,SAAS,UAAU,SAAS,CAAC;AACjC,UAAM,OAAO,KAAK,OAAO;AACzB,UAAM,OAAO,KAAK,OAAO;AACzB,QAAI,SAAS,UAAU,SAAS,CAAC;AACjC,UAAM,OAAO,KAAK,OAAO;AACzB,UAAM,OAAO,KAAK,OAAO;AACzB,UAAM,OAAO,KAAK;AAClB,UAAM,OAAO,KAAK;AAClB,WAAO,MAAM;AAAA,EACf;AAGA,YAAU,gBAAgB,UAAU;AAEpC,YAAU,sBAAsB,MAAM,qBAAqB,IAAI,IAAI,MAAM,kBAAkB;AAC7F;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,iBAAa,OAAO,WAAW,OAAO,aAAa;AACnD,YAAU,WAAW,KAAK;AAC5B;AA1FA,IAII,iBACA,gBAyEA,kBAcA,eAEA;AA9FJ;AAAA;AAAA;AACA;AACA;AAEA,IAAI,kBAAgB,MAAM;AAC1B,IAAI,iBAAiB,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAyEzC,IAAI,mBAAiB;AAAA,MACnB,OAAO;AAAA,MACP,oBAAoB;AAAA,MACpB,UAAU,aAAa;AAAA,MACvB,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,IAC9B;AASA,IAAI,gBAAc,MAAM,YAAY,UAAQ,WAAW;AAEvD,IAAI,cAAc;AAAA,MAChB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC5FA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,0BAA0B,WAAW;AACnC,MAAI,aAAa;AACjB,SAAO,UAAU,OAAO,SAAU,OAAO,OAAO;AAC9C,QAAI,UAAU,YAAY;AACxB,oBAAc,QAAQ;AACtB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,CAAC;AACH;AAEA,0BAA0B,WAAW;AACnC,SAAO,iBAAiB,SAAS,EAAE;AACrC;AAYA,sBAAsB,WAAW,OAAO;AAEtC,QAAM,eAAe,KAAK,cAAc;AAExC,YAAU,mBAAmB,SAAU,WAAW;AAChD,QAAI,MAAM,kBAAkB,UAAa,CAAC,WAAW;AACnD,aAAO,MAAM;AAAA,IACf;AAEA,UAAM,YAAY,iBAAiB,MAAM,MAAM;AAC/C,UAAM,gBAAgB,MAAM,UAAU;AACtC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,eAAe,SAAU,WAAW;AAC5C,QAAI,MAAM,cAAc,UAAa,CAAC,WAAW;AAC/C,aAAO,MAAM;AAAA,IACf;AAEA,UAAM,YAAY,iBAAiB,MAAM,MAAM;AAC/C,WAAO,MAAM;AAAA,EACf;AAEA,MAAI,eAAe,UAAU;AAE7B,YAAU,UAAU,SAAU,YAAY;AACxC,iBAAa,YAAY,CAAC;AAC1B,UAAM,gBAAgB;AACtB,UAAM,YAAY;AAAA,EACpB;AAMA,YAAU,UAAU,SAAU,KAAK;AACjC,QAAI,UAAU;AACd,QAAI,iBAAiB,MAAM,OAAO;AAClC,WAAO,MAAM,OAAO,SAAS,SAAS,UAAU,cAAc;AAAA,EAChE;AACF;AAKA,uBAAuB,eAAe;AACpC,SAAO,gBAAc;AAAA,IACnB,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,UAAU,aAAa;AAAA,EACzB,GAAG,aAAa;AAClB;AAGA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,iBAAa,OAAO,WAAW,OAAO,cAAc,aAAa,CAAC;AAClE,eAAa,WAAW,KAAK;AAC/B;AA/FA,IA8BI,SAmEA,eAEA;AAnGJ;AAAA;AAAA;AACA;AACA;AACA;AA2BA,IAAI,UAAS;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAgEA,IAAI,gBAAc,MAAM,YAAY,UAAQ,cAAc;AAE1D,IAAI,iBAAiB,gBAAc;AAAA,MACjC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM;AAAA;AAAA;;;AC/FT,iBAAiB,WAAW,OAAO;AAEjC,QAAM,eAAe,KAAK,SAAS;AAEnC,YAAU,aAAa,SAAU,QAAQ;AACvC,QAAI,eAAe,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEvF,QAAI,CAAC,cAAc;AACjB,YAAM,SAAS;AACf,YAAM,YAAY,IAAI,MAAM,OAAO,kBAAkB,CAAC;AAEtD,eAAS,IAAI,OAAO,kBAAkB,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AACxD,cAAM,UAAU,KAAK;AAAA,MACvB;AAAA,IACF,OAAO;AACL,YAAM,YAAY;AAClB,UAAI,eAAe,MAAM,OAAO,QAAQ;AAExC,UAAI,aAAa,WAAW,IAAI,MAAM,UAAU,QAAQ;AACtD,uBAAe,MAAM,cAAc,OAAO,YAAY,GAAG,IAAI,MAAM,UAAU,MAAM;AAAA,MACrF;AAEA,UAAI,aAAa,OAAO,QAAQ;AAChC,YAAM,UAAU,QAAQ,SAAU,SAAS,OAAO;AAGhD,YAAI,cAAc,IAAI;AACtB,YAAI,sBAAsB,IAAI;AAC9B,qBAAa,uBAAuB,WAAW;AAC/C,qBAAa,EAAE,uBAAuB,WAAW,EAAE;AACnD,qBAAa,EAAE,uBAAuB,WAAW,EAAE;AAAA,MACrD,CAAC;AACD,YAAM,OAAO,QAAQ,YAAY;AAAA,IACnC;AAAA,EACF;AAEA,YAAU,YAAY,WAAY;AAChC,QAAI,WAAW,MAAM,OAAO,kBAAkB;AAC9C,QAAI,IAAI,CAAC;AAET,QAAI,UAAU;AACZ,YAAM,OAAO,SAAS,GAAG,CAAC;AAC1B,YAAM,OAAO,KAAK,EAAE;AACpB,YAAM,OAAO,KAAK,EAAE;AACpB,YAAM,OAAO,KAAK,EAAE;AACpB,YAAM,OAAO,KAAK,EAAE;AACpB,YAAM,OAAO,KAAK,EAAE;AACpB,YAAM,OAAO,KAAK,EAAE;AAEpB,eAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,cAAM,OAAO,SAAS,GAAG,CAAC;AAC1B,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAC/D,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAC/D,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAC/D,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAC/D,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAC/D,cAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO,KAAK,EAAE,KAAK,MAAM,OAAO;AAAA,MACjE;AAAA,IACF,OAAO;AACL,yBAAmB,MAAM,MAAM;AAAA,IACjC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,aAAa,WAAY;AACjC,cAAU,UAAU;AACpB,QAAI,SAAS;AACb,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAO,MAAM,OAAO,IAAI,IAAI,KAAK,MAAM,OAAO,IAAI;AAClD,gBAAU,OAAO;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,wBAAwB,SAAU,SAAS;AACnD,QAAI;AACJ,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,QAAQ,KAAK,GAAK;AACpB,gBAAQ,CAAC,QAAQ;AAAA,MACnB,WAAW,QAAQ,KAAK,GAAK;AAC3B,gBAAQ,QAAQ,KAAK;AAAA,MACvB,OAAO;AAEL,gBAAQ;AAAA,MACV;AAEA,UAAI,QAAQ,UAAU;AACpB,mBAAW;AAAA,MACb;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO,kBAAkB;AAAA,EACxC;AAEA,YAAU,WAAW,SAAU,MAAM;AACnC,SAAK,WAAW,MAAM,QAAQ,MAAM,SAAS;AAAA,EAC/C;AAEA,YAAU,mBAAmB,WAAY;AAAA,EAAC;AAG1C,YAAU,oBAAoB,SAAU,IAAI,IAAI,KAAK,GAAG,GAAG,SAAS,OAAO;AAAA,EAAC;AAG5E,YAAU,mBAAmB,SAAU,GAAG,cAAc,OAAO,SAAS,OAAO,SAAS;AAAA,EAAC;AAE3F;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,IAAI,WAAW,KAAK;AAE1B,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,SAAS,YAAU,YAAY;AAAA,EACvC;AAEA,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,WAAW,CAAC;AACnD,UAAQ,WAAW,KAAK;AAC1B;AAhJA,IAgII,kBAkBA,eAEA;AApJJ;AAAA;AAAA;AACA;AACA;AA8HA,IAAI,mBAAiB;AAAA,MACnB,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,MAC/B,WAAW,CAAC;AAAA,IACd;AAeA,IAAI,gBAAc,MAAM,YAAY,UAAQ,SAAS;AAErD,IAAI,YAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC3IA,gBAAgB,OAAO,IAAI;AACzB,MAAI,UAAU;AAEd,MAAI,MAAM,MAAM,MAAM,QAAQ;AAC5B,eAAW,MAAM,MAAM;AAAA,EACzB;AAEA,SAAO,UAAU,MAAM,MAAM,QAAQ;AACnC,UAAM,MAAM,KAAK;AAAA,MACf,QAAQ;AAAA,MACR,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,QAAM,MAAM,SAAS;AACvB;AAKA,sBAAsB,WAAW,OAAO;AAEtC,QAAM,eAAe,KAAK,cAAc;AAMxC,YAAU,aAAa,SAAU,MAAM;AACrC,QAAI,SAAS,KAAK,UAAU,EAAE,kBAAkB;AAChD,QAAI,WAAW,KAAK,iBAAiB;AAErC,QAAI,UAAU,IAAI,YAAY,MAAM;AAEpC,QAAI,KAAK,IAAI,aAAa,GAAG;AAE3B,eAAS,SAAS,GAAG,SAAS,UAAU,EAAE,QAAQ;AAChD,YAAI,sBAAsB,KAAK,cAAc,MAAM,GAC/C,eAAe,oBAAoB;AAEvC,qBAAa,QAAQ,SAAU,aAAa;AAC1C,oBAAU,mBAAmB,WAAW;AAAA,QAC1C,CAAC;AAAA,MACH;AAGA,gBAAU,cAAc,MAAM;AAC9B,YAAM,QAAQ,SAAS;AAEvB,UAAI,QAAQ,gBAAe,UAAS;AAClC,YAAI,uBAAuB,KAAK,cAAc,QAAO,GACjD,gBAAe,qBAAqB;AAExC,sBAAa,QAAQ,SAAU,aAAa;AAC1C,oBAAU,oBAAoB,aAAa,QAAQ,gBAAgB,QAAO;AAAA,QAC5E,CAAC;AAAA,MACH;AAEA,eAAS,UAAU,GAAG,UAAU,UAAU,EAAE,SAAS;AACnD,cAAM,OAAO;AAAA,MACf;AAAA,IACF,OACK;AAEH,eAAS,WAAW,GAAG,WAAW,UAAU,YAAY;AAEtD,YAAI,OAAO,UAAQ,YAAY;AAC/B,aAAK,aAAa,EAAE,QAAQ,SAAU,aAAa;AACjD,oBAAU,mBAAmB,WAAW;AAAA,QAC1C,CAAC;AAAA,MACH;AAGA,gBAAU,cAAc,MAAM;AAC9B,YAAM,QAAQ,SAAS;AAEvB,UAAI,SAAS,iBAAgB,WAAU;AAErC,YAAI,QAAO,UAAQ,YAAY;AAC/B,cAAK,aAAa,EAAE,QAAQ,SAAU,aAAa;AACjD,oBAAU,oBAAoB,aAAa,QAAQ,gBAAgB,SAAQ;AAAA,QAC7E,CAAC;AAAA,MACH;AAEA,eAAS,WAAW,GAAG,WAAW,UAAU,EAAE,UAAU;AACtD,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF;AAAA,EAEF;AAYA,YAAU,WAAW,SAAU,UAAU;AACvC,QAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC9E,UAAM,QAAQ,MAAM,QAAQ,EAAE,KAAK,EAAE,IAAI,WAAY;AACnD,aAAO;AAAA,QACL,QAAQ;AAAA,QACR,OAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,UAAM,SAAS;AACf,UAAM,QAAQ;AAAA,EAChB;AAEA,YAAU,aAAa,WAAY;AACjC,UAAM,QAAQ;AAAA,EAChB;AAMA,YAAU,UAAU,SAAU,MAAM;AAClC,WAAO,MAAM,MAAM;AAAA,EACrB;AAMA,YAAU,YAAY,SAAU,MAAM;AACpC,WAAO,MAAM,MAAM,MAAM;AAAA,EAC3B;AAMA,YAAU,WAAW,SAAU,MAAM;AACnC,WAAO,MAAM,MAAM,MAAM;AAAA,EAC3B;AAOA,YAAU,kBAAkB,SAAU,UAAU;AAC9C,UAAM,MAAM,KAAK;AAAA,MACf,QAAQ;AAAA,MACR,OAAO,MAAM,QAAQ;AAAA,IACvB,CAAC;AACD,MAAE,MAAM;AAAA,EACV;AAQA,YAAU,0BAA0B,SAAU,MAAM,QAAQ;AAC1D,UAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,YAAY;AAAA,EACxD;AAMA,YAAU,cAAc,SAAU,MAAM;AACtC,UAAM,MAAM,MAAM,SAAS;AAC3B,UAAM,MAAM,MAAM,QAAQ;AAAA,EAC5B;AAQA,YAAU,sBAAsB,SAAU,QAAQ,MAAM;AACtD,UAAM,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,SAAU,MAAM;AACvE,aAAO,SAAS;AAAA,IAClB,CAAC;AACD,UAAM,MAAM,MAAM,SAAS,MAAM,MAAM,MAAM,MAAM;AAAA,EACrD;AAQA,YAAU,mBAAmB,SAAU,QAAQ,MAAM;AACnD,UAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,YAAY;AAAA,EACxD;AAOA,YAAU,iBAAiB,SAAU,MAAM,MAAM;AAC/C,UAAM,MAAM,MAAM,MAAM,SAAS;AAAA,EACnC;AAMA,YAAU,UAAU,WAAY;AAC9B,WAAO,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC/B;AAMA,YAAU,QAAQ,WAAY;AAC5B,UAAM,QAAQ;AAAA,EAChB;AAOA,YAAU,WAAW,SAAU,KAAK;AAClC,UAAM,QAAQ,mBAAmB,IAAI,KAAK;AAC1C,UAAM,SAAS,IAAI;AACnB,UAAM,QAAQ,IAAI;AAAA,EACpB;AAMA,YAAU,qBAAqB,SAAU,MAAM;AAC7C,MAAE,MAAM,MAAM,MAAM;AAAA,EACtB;AAEA,YAAU,gBAAgB,SAAU,GAAG;AACrC,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,YAAM,MAAM,GAAG,QAAQ,IAAI,MAAM,MAAM,MAAM,GAAG,MAAM;AAAA,IACxD;AAAA,EACF;AAMA,YAAU,sBAAsB,SAAU,MAAM,KAAK,QAAQ;AAC3D,UAAM,MAAM,MAAM,MAAM,OAAO;AAAA,EACjC;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,IAAI,WAAW,KAAK;AAC1B,eAAa,WAAW,KAAK;AAC/B;AA5RA,IA8QI,kBAgBA,eAEA;AAhSJ;AAAA;AAAA;AACA;AACA;AA4QA,IAAI,mBAAiB;AAAA,MACnB,OAAO;AAAA,MAEP,OAAO;AAAA,MAEP,QAAQ;AAAA,IAEV;AASA,IAAI,gBAAc,MAAM,YAAY,UAAQ,cAAc;AAE1D,IAAI,iBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACnSA,IAAI,UAqEA;AArEJ;AAAA;AAAA,IAAI,WAAW;AAAA,MAEb,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,eAAe;AAAA,MACf,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,MACV,WAAW;AAAA,MACX,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,aAAa;AAAA,MACb,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MAErB,oBAAoB;AAAA,MACpB,wBAAwB;AAAA,MACxB,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,6BAA6B;AAAA,MAC7B,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,MAC5B,iCAAiC;AAAA,MACjC,sCAAsC;AAAA,MACtC,0BAA0B;AAAA,MAE1B,gBAAgB;AAAA,MAEhB,sBAAsB;AAAA,MAEtB,gBAAgB;AAAA,MAEhB,sBAAsB;AAAA,MACtB,wBAAwB;AAAA,MACxB,4BAA4B;AAAA,MAC5B,6BAA6B;AAAA,MAC7B,6BAA6B;AAAA,MAC7B,2BAA2B;AAAA,MAE3B,uBAAuB;AAAA,MACvB,2BAA2B;AAAA,MAC3B,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,8BAA8B;AAAA,MAC9B,wBAAwB;AAAA,MACxB,0BAA0B;AAAA,MAC1B,6BAA6B;AAAA,MAE7B,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,4BAA4B;AAAA,MAC5B,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,0BAA0B;AAAA,IAC5B;AAGA,IAAI,mBAAmB,CAAC,gBAAgB,aAAa,iBAAiB,WAAW,eAAe,eAAe,oBAAoB,cAAc,YAAY,WAAW,YAAY,YAAY,iBAAiB,YAAY,cAAc,sBAAsB,qBAAqB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,oBAAoB,wBAAwB,oBAAoB,qBAAqB,0BAA0B,qBAAqB,uBAAuB,sBAAsB,6BAA6B,0BAA0B,2BAA2B,gCAAgC,qCAAqC,0BAA0B,gBAAgB,uBAAuB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,qBAAqB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,sBAAsB,wBAAwB,2BAA2B,4BAA4B,4BAA4B,0BAA0B,gBAAgB,gBAAgB,gBAAgB,sBAAsB,0BAA0B,sBAAsB,yBAAyB,6BAA6B,uBAAuB,yBAAyB,0BAA0B;AAAA;AAAA;;;ACjEr1C,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AASzf,gCAAgC,QAAQ;AACtC,SAAO,SAAS,iBAAiB,SAAS,iBAAiB,UAAU;AACvE;AAOA,gCAAgC,gBAAgB;AAC9C,SAAO,iBAAiB,UAAU,cAAc;AAClD;AASA,kBAAkB,MAAM;AACtB,SAAO,OAAO,SAAS,sBAAsB,SAAS,SAAS,wBAAwB,SAAS,SAAS;AAC3G;AAaA,sBAAsB,WAAW,OAAO;AAEtC,QAAM,eAAe,KAAK,cAAc;AAKxC,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC7E,QAAI,MAAM,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC9E,UAAM,OAAO,KAAK,IAAI,KAAK;AAC3B,UAAM,SAAS,MAAM,IAAI,MAAM;AAC/B,UAAM,QAAQ;AACd,UAAM,YAAY,IAAI,WAAW,EAAE;AACnC,UAAM,gBAAgB,IAAI,YAAY,EAAE;AAAA,EAC1C;AAMA,YAAU,aAAa,SAAU,QAAQ,MAAM,KAAK;AAClD,UAAM,UAAU,UAAU;AAC1B,UAAM,cAAc,UAAU;AAE9B,QAAI,SAAS,MAAM,OAAO;AACxB,YAAM,QAAQ;AAAA,IAChB;AAAA,EACF;AAMA,YAAU,iBAAiB,SAAU,MAAM,KAAK;AAC9C,cAAU,WAAW,EAAE,MAAM,OAAO,MAAM,GAAG;AAC7C,WAAO,MAAM;AAAA,EACf;AAOA,YAAU,eAAe,SAAU,QAAQ,WAAW,eAAe;AACnE,UAAM,OAAO;AACb,UAAM,YAAY;AAClB,UAAM,gBAAgB;AACtB,UAAM,QAAQ,SAAS;AAAA,EACzB;AAMA,YAAU,kBAAkB,SAAU,QAAQ;AAC5C,WAAO,MAAM,cAAc;AAAA,EAC7B;AAMA,YAAU,aAAa,SAAU,QAAQ;AACvC,UAAM,UAAU,UAAU,SAAS;AAAA,EACrC;AAMA,YAAU,mBAAmB,WAAY;AACvC,WAAO,MAAM,QAAQ;AAAA,EACvB;AAMA,YAAU,SAAS,SAAU,MAAM;AACjC,QAAI,WAAW,UAAU,iBAAiB;AAE1C,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,UAAI,SAAS,UAAU,YAAY,CAAC,GAAG;AACrC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAMA,YAAU,iBAAiB,SAAU,MAAM;AACzC,WAAO,UAAU,eAAe,MAAM,EAAE;AAAA,EAC1C;AAMA,YAAU,cAAc,SAAU,QAAQ;AACxC,WAAO,MAAM,UAAU;AAAA,EACzB;AAWA,YAAU,QAAQ,WAAY;AAC5B,UAAM,QAAQ;AAAA,EAChB;AAOA,YAAU,WAAW,SAAU,KAAK;AAClC,cAAU,SAAS,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC;AACjD,UAAM,UAAU,IAAI,IAAI,aAAa,CAAC;AACtC,UAAM,cAAc,IAAI,IAAI,iBAAiB,CAAC;AAC9C,UAAM,QAAQ,IAAI,SAAS;AAAA,EAC7B;AACF;AAgBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,QAAQ,SAAS,QAAQ,CAAC;AACvD,QAAM,SAAS,WAAW,OAAO,CAAC,aAAa,eAAe,CAAC;AAC/D,eAAa,WAAW,KAAK;AAC/B;AA5MA,IA0CI,SAgJA,kBAoBA,eAEA;AAhNJ;AAAA;AAAA;AACA;AACA;AAwCA,IAAI,UAAS;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF;AA4IA,IAAI,mBAAiB;AAAA,MAGnB,MAAM;AAAA,MAEN,OAAO;AAAA,MAEP,QAAQ;AAAA,IAEV;AAWA,IAAI,gBAAc,MAAM,YAAY,UAAQ,cAAc;AAE1D,IAAI,iBAAiB,gBAAc;AAAA,MACjC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM;AAAA;AAAA;;;ACnNT,IAAI,mBAKA;AALJ;AAAA;AAAA,IAAI,oBAAoB;AAAA,MACtB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,SAAS;AAAA,IACX;AACA,IAAI,cAAY;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;ACDA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAKzf,wBAAwB,GAAG,IAAI,IAAI;AACjC,MAAI,eAAe,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACvF,MAAI,SAAS;AAAA,IACX,GAAG,OAAO;AAAA,IACV,UAAU;AAAA,EACZ;AACA,MAAI,MAAM,CAAC;AACX,MAAI;AAEJ,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AAEpB,MAAI,MAAM,IAAI,KAAM,GAAE,KAAK,GAAG,MAAM,IAAI,KAAM,GAAE,KAAK,GAAG,MAAM,IAAI,KAAM,GAAE,KAAK,GAAG;AAClF,MAAI,QAAQ,IAAI,KAAK,GAAG;AAExB,MAAI,YAAY,OAAO;AAEvB,MAAI,UAAU,GAAK;AACjB,WAAO,IAAI,MAAM;AAAA,EACnB;AAEA,MAAI,YAAY,GAAK;AACnB,gBAAY,CAAC;AAAA,EACf;AAEA,MAAI,CAAC,YAAY,SAAS,QAAQ,WAAW;AAC3C,cAAU;AAAA,EACZ,WAAW,SAAS,KAAO,OAAO,IAAI,GAAK;AAGzC,cAAU;AAAA,EACZ,WAAW,OAAO,IAAI,GAAK;AACzB,cAAU;AAAA,EACZ,OAAO;AACL,cAAU;AACV,QAAI,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AAChC,QAAI,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AAChC,QAAI,KAAK,GAAG,KAAK,OAAO,IAAI,IAAI;AAAA,EAClC;AAEA,MAAI,cAAc;AAChB,iBAAa,KAAK,QAAQ;AAC1B,iBAAa,KAAK,QAAQ;AAC1B,iBAAa,KAAK,QAAQ;AAAA,EAC5B;AAEA,SAAO,WAAW,uBAAuB,SAAS,CAAC;AACnD,SAAO;AACT;AAEA,sBAAsB,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG;AAC1C,MAAI,MAAM,CAAC;AACX,MAAI,MAAM,CAAC;AACX,MAAI,OAAO,CAAC;AACZ,IAAE,KAAK;AACP,IAAE,KAAK;AAEP,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,OAAK,KAAK,GAAG,KAAK,GAAG;AACrB,OAAK,KAAK,GAAG,KAAK,GAAG;AACrB,OAAK,KAAK,GAAG,KAAK,GAAG;AAErB,MAAI,IAAI,CAAC;AACT,IAAE,KAAK,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC;AACrC,IAAE,KAAK,CAAC,EAAE,GAAG,IAAI,IAAI,KAAK,GAAG,CAAC;AAE9B,MAAI,IAAI,CAAC;AACT,IAAE,KAAK,IAAI,KAAK,IAAI;AACpB,IAAE,KAAK,CAAC,IAAI,KAAK,IAAI;AAErB,MAAI,kBAAkB,GAAG,GAAG,CAAC,MAAM,GAAG;AAGpC,QAAI,UAAU,OAAO;AACrB,QAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;AACvB,QAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;AACxB,QAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;AACxB,QAAI,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AACjC,QAAI,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AACjC,QAAI;AAEJ,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAM,eAAe,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAEvC,UAAI,KAAI,WAAW,SAAS;AAC1B,kBAAU,KAAI;AACd,YAAI,KAAK,KAAI;AACb,YAAI,KAAK,IAAI;AAAA,MACf;AAAA,IACF;AAEA,WAAO,mBAAkB;AAAA,EAC3B;AAEA,IAAE,KAAK,EAAE;AACT,IAAE,KAAK,EAAE;AAET,MAAI,EAAE,MAAM,KAAO,EAAE,MAAM,KAAO,EAAE,MAAM,KAAO,EAAE,MAAM,GAAK;AAC5D,WAAO,mBAAkB;AAAA,EAC3B;AAEA,SAAO,mBAAkB;AAC3B;AAYA,iBAAiB,WAAW,OAAO;AAEjC,QAAM,eAAe,KAAK,SAAS;AAEnC,2BAAyB,GAAG;AAC1B,WAAO,KAAK,KAAO,KAAK;AAAA,EAC1B;AAEA,YAAU,mBAAmB,WAAY;AACvC,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,IAAI,IAAI,KAAK,GAAG,SAAS;AAC/D,QAAI,SAAS;AAAA,MACX,WAAW;AAAA,MACX,GAAG,OAAO;AAAA,MACV,OAAO;AAAA,MACP,eAAe;AAAA,IACjB;AACA,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,QAAI,UAAU,CAAC;AACf,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC;AACV,UAAM,OAAO,SAAS,GAAG,EAAE;AAC3B,UAAM,OAAO,SAAS,GAAG,EAAE;AAC3B,QAAI,IAAI,CAAC;AACT,QAAI,IAAI,CAAC;AACT,QAAI,YAAY,aAAa,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC;AACjD,WAAO,IAAI,EAAE;AACb,WAAO,gBAAgB,gBAAgB,OAAO,CAAC;AAC/C,YAAQ,KAAK,EAAE;AAEf,QAAI,cAAc,mBAAkB,kBAAkB;AAEpD,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAE,KAAK,GAAG,KAAK,QAAQ,KAAM,IAAG,KAAK,GAAG;AACxC,gBAAQ,KAAK,GAAG,KAAK,OAAO,IAAK,IAAG,KAAK,GAAG;AAAA,MAC9C;AAEA,UAAI,uBAAuB,GAAG,OAAO,KAAK,MAAM,KAAK;AACnD,eAAO,YAAY;AACnB,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AACL,UAAI;AAGJ,UAAI,OAAO,IAAI,GAAK;AAClB,sBAAc,eAAe,IAAI,IAAI,IAAI,CAAC;AAE1C,YAAI,YAAY,YAAY,MAAM,KAAK;AACrC,iBAAO,IAAI;AACX,iBAAO,YAAY;AACnB,iBAAO,gBAAgB;AAEvB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,IAAI,GAAK;AAClB,sBAAc,eAAe,IAAI,IAAI,IAAI,CAAC;AAE1C,YAAI,YAAY,YAAY,MAAM,KAAK;AACrC,iBAAO,IAAI;AACX,iBAAO,YAAY;AACnB,iBAAO,gBAAgB;AAEvB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,KAAK,GAAK;AACpB,gBAAQ,KAAK;AACb,sBAAc,eAAe,IAAI,IAAI,IAAI,CAAC;AAC1C,eAAO,IAAI,YAAY;AAEvB,YAAI,YAAY,YAAY,MAAM,KAAK;AACrC,iBAAO,YAAY;AACnB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,KAAK,GAAK;AACpB,gBAAQ,KAAK;AACb,sBAAc,eAAe,IAAI,IAAI,IAAI,CAAC;AAC1C,eAAO,IAAI,YAAY;AAEvB,YAAI,YAAY,YAAY,MAAM,KAAK;AACrC,iBAAO,YAAY;AACnB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,GAAG,cAAc,OAAO,SAAS,OAAO,SAAS;AAAA,EAAC;AAE3F;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,YAAQ,OAAO,WAAW,OAAO,aAAa;AAC9C,UAAQ,WAAW,KAAK;AAC1B;AA7PA,IASI,oBAqHA,SAwHA,kBASA,eAEA;AAjQJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA,IAAI,qBAAoB,YAAU;AAqHlC,IAAI,UAAS;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAqHA,IAAI,mBAAiB,CAAC;AAStB,IAAI,gBAAc,MAAM,YAAY,UAAQ,SAAS;AAErD,IAAI,YAAY,gBAAc,gBAAc;AAAA,MAC1C,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM,GAAG,WAAS;AAAA;AAAA;;;ACzPrB,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,SAAS,YAAU,YAAY;AAAA,EACvC,OAAO;AACL,UAAM,SAAS,IAAI,MAAM,MAAM;AAAA,EACjC;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM,OAAO,kBAAkB;AAAA,EACxC;AAEA,YAAU,YAAY,WAAY;AAChC,WAAO,MAAM,OAAO,UAAU;AAAA,EAChC;AAEA,YAAU,gBAAgB,WAAY;AACpC,cAAU,UAAU;AAAA,EACtB;AAEA,MAAI,mBAAmB,UAAU;AAEjC,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,qBAAiB,OAAO,KAAK;AAC7B,UAAM,SAAS,YAAU,YAAY;AACrC,UAAM,OAAO,YAAY,MAAM,UAAU,CAAC;AAAA,EAC5C;AACF;AAQA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,eAAW,OAAO,WAAW,OAAO,aAAa;AACjD,QAAM,OAAO,WAAW,OAAO,CAAC,QAAQ,CAAC;AAEzC,cAAY,WAAW,KAAK;AAC9B;AAzDA,IA8CI,kBAaA,eAEA;AA7DJ;AAAA;AAAA;AACA;AACA;AACA;AA2CA,IAAI,mBAAiB,CACrB;AAYA,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACzDA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,gCAAgC,IAAI,IAAI,IAAI,GAAG;AAE7C,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,IAAE,KAAK,KAAK,KAAK,KAAK;AACtB,IAAE,KAAK,KAAK,KAAK,KAAK;AACtB,IAAE,KAAK,KAAK,KAAK,KAAK;AACxB;AAEA,uBAAuB,IAAI,IAAI,IAAI,GAAG;AACpC,yBAAuB,IAAI,IAAI,IAAI,CAAC;AACpC,MAAI,SAAS,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;AAE9D,MAAI,WAAW,GAAK;AAClB,MAAE,MAAM;AACR,MAAE,MAAM;AACR,MAAE,MAAM;AAAA,EACV;AACF;AAEA,+BAA+B,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACrD,MAAI,YAAY,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACpF,MAAI,WAAW;AACf,MAAI,MAAM,CAAC;AACX,MAAI,MAAM,CAAC;AACX,MAAI,YAAY,CAAC;AACjB,MAAI,KAAK,CAAC;AACV,MAAI,KAAK,CAAC;AAEV,gBAAc,IAAI,IAAI,IAAI,EAAE;AAC5B,gBAAc,IAAI,IAAI,IAAI,EAAE;AAC5B,MAAI,KAAK,CAAC,IAAI,IAAI,EAAE;AACpB,MAAI,KAAK,CAAC,IAAI,IAAI,EAAE;AAGpB,MAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE;AAGjE,MAAI,MAAM,KAAK,MAAM,KAAK,aAAa,MAAM,KAAK,MAAM,KAAK,WAAW;AAEtE,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,MAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE;AAGjE,MAAI,MAAM,KAAK,MAAM,KAAK,aAAa,MAAM,KAAK,MAAM,KAAK,WAAW;AAEtE,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,MAAI,KAAK,IAAI,GAAG,KAAK,GAAG,EAAE,IAAI,QAAQ,KAAK,IAAI,GAAG,KAAK,GAAG,EAAE,IAAI,QAAQ,KAAK,IAAI,GAAG,KAAK,GAAG,EAAE,IAAI,QAAQ,KAAK,IAAI,KAAK,EAAE,IAAI,MAAM;AAClI,eAAW;AAEX,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAIA,MAAI,OAAO,CAAC,IAAI,IAAI,EAAE;AACtB,MAAI,OAAO,CAAC,IAAI,IAAI,EAAE;AAEtB,MAAI,OAAO,IAAI,IAAI,EAAE;AACrB,MAAI,IAAK,MAAK,KAAK,QAAS,QAAO,OAAO;AAC1C,MAAI,IAAK,MAAK,KAAK,QAAS,QAAO,OAAO;AAC1C,MAAI,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,EAAE;AAC5E,MAAI,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC;AACxB,YAAU,CAAC;AACX,MAAI,SAAS;AACb,MAAI,SAAS;AACb,MAAI,KAAK,CAAC;AACV,MAAI,KAAK,CAAC;AACV,MAAI,MAAM;AACV,MAAI,MAAM;AAEV,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,MAAM;AACV,QAAI,MAAO,KAAI,KAAK;AAEpB,QAAI,OAAO,WAAS,kBAAkB,KAAK,MAAM,KAAK,MAAM,IAAI,EAAE;AAElE,QAAI,KAAK,gBAAgB,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI,WAAW;AACzE,UAAI,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI,WAAW;AACpD,cAAM;AAAA,MACR;AAEA,SAAG,YAAY,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC;AAAA,IAC1C;AAEA,QAAI,OAAO,WAAS,kBAAkB,KAAK,MAAM,KAAK,MAAM,IAAI,EAAE;AAElE,QAAI,KAAK,gBAAgB,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI,WAAW;AACzE,UAAI,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI,WAAW;AACpD,cAAM;AAAA,MACR;AAEA,SAAG,YAAY,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC;AAAA,IAC1C;AAAA,EACF;AAKA,MAAI,SAAS,GAAG;AACd;AAEA,QAAI,MAAM,GAAG;AACb,OAAG,KAAK,GAAG;AACX,OAAG,OAAO;AAAA,EACZ;AAEA,MAAI,SAAS,GAAG;AACd;AACA,QAAI,MAAM,GAAG;AACb,OAAG,KAAK,GAAG;AACX,OAAG,OAAO;AAAA,EACZ;AAIA,MAAI,WAAW,KAAK,WAAW,GAAG;AAEhC,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,MAAI,OAAO,MAAM,GAAG,EAAE,KAAK,OAAO,MAAM,GAAG,EAAE,KAAK,OAAO,MAAM,GAAG,EAAE,KAAK,OAAO,MAAM,GAAG,EAAE,GAAG;AAE5F,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,MAAI,GAAG,KAAK,GAAG,IAAI;AAEjB,QAAI,MAAM,GAAG;AACb,OAAG,KAAK,GAAG;AACX,OAAG,KAAK;AAAA,EACV;AAEA,MAAI,GAAG,KAAK,GAAG,IAAI;AAEjB,QAAI,MAAM,GAAG;AACb,OAAG,KAAK,GAAG;AACX,OAAG,KAAK;AAAA,EACV;AAGA,MAAI;AACJ,MAAI;AAEJ,MAAI,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI;AAElC,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,MAAI,GAAG,KAAK,GAAG,IAAI;AACjB,QAAI,GAAG,KAAK,GAAG,IAAI;AAEjB,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,YAAM,GAAG;AACT,YAAM,GAAG;AAAA,IACX,OAAO;AAEL,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,YAAM,GAAG;AACT,YAAM,GAAG;AAAA,IACX;AAAA,EACF,WACS,GAAG,KAAK,GAAG,IAAI;AAEtB,cAAU,KAAK;AACf,cAAU,KAAK;AACf,UAAM,GAAG;AACT,UAAM,GAAG;AAAA,EACX,OAAO;AAEL,cAAU,KAAK;AACf,cAAU,KAAK;AACf,UAAM,GAAG;AACT,UAAM,GAAG;AAAA,EACX;AAGA,qBAAmB,GAAG,GAAG,KAAK,GAAG;AACjC,qBAAmB,GAAG,GAAG,KAAK,GAAG;AACjC,SAAO;AAAA,IACL,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAaA,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,YAAU,mBAAmB,WAAY;AACvC,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,SAAU,IAAI,IAAI,KAAK,GAAG,SAAS;AAC/D,QAAI,SAAS;AAAA,MACX,OAAO;AAAA,MACP,GAAG,OAAO;AAAA,MACV,WAAW;AAAA,MACX,eAAe;AAAA,IACjB;AACA,YAAQ,KAAK;AACb,QAAI,eAAe,CAAC;AACpB,QAAI,OAAO,MAAM;AAEjB,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,CAAC;AACX,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,QAAI,IAAI,CAAC;AACT,QAAI,UAAU,CAAC;AACf,kBAAc,KAAK,KAAK,KAAK,CAAC;AAE9B,QAAI,EAAE,OAAO,KAAK,EAAE,OAAO,KAAK,EAAE,OAAO,GAAG;AAE1C,UAAI,QAAQ,WAAS,kBAAkB,IAAI,IAAI,KAAK,CAAC;AACrD,aAAO,gBAAgB,MAAM;AAC7B,aAAO,IAAI,MAAM;AACjB,QAAE,KAAK,MAAM,EAAE;AACf,QAAE,KAAK,MAAM,EAAE;AACf,QAAE,KAAK,MAAM,EAAE;AAEf,UAAI,CAAC,MAAM,cAAc;AACvB,gBAAQ,KAAK;AACb,gBAAQ,KAAK;AACb,eAAO,YAAY;AACnB,eAAO;AAAA,MACT;AAGA,UAAI,SAAS,UAAU,iBAAiB,GAAG,cAAc,SAAS,OAAO;AAEzE,UAAI,OAAO,cAAc,GAAG;AAC1B,YAAI,OAAO,SAAS,MAAM;AACxB,iBAAO,YAAY;AACnB,iBAAO;AAAA,QACT;AAEA,eAAO,YAAY,OAAO;AAC1B,eAAO;AAAA,MACT;AAAA,IACF;AAKA,QAAI,cAAc,uBAAuB,KAAK,GAAG;AACjD,QAAI,cAAc,uBAAuB,KAAK,GAAG;AACjD,QAAI,cAAc,uBAAuB,KAAK,GAAG;AAEjD,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,OAAO,UAAQ,YAAY;AAAA,IACnC;AAEA,QAAI,cAAc,eAAe,cAAc,aAAa;AAC1D,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AACtC,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AAAA,IACxC,WAAW,cAAc,eAAe,cAAc,aAAa;AACjE,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AACtC,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AAAA,IACxC,OAAO;AACL,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AACtC,YAAM,KAAK,UAAU,EAAE,SAAS,GAAG,GAAG;AAAA,IACxC;AAEA,QAAI,gBAAgB,MAAM,KAAK,kBAAkB,IAAI,IAAI,KAAK,GAAG,OAAO;AACxE,WAAO,gBAAgB,cAAc;AACrC,WAAO,IAAI,cAAc;AAEzB,QAAI,cAAc,WAAW;AAC3B,UAAI,SAAS,CAAC;AACd,UAAI,SAAS,CAAC;AACd,UAAI,OAAO,CAAC;AAEZ,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAO,KAAK,IAAI,KAAK,IAAI;AACzB,eAAO,KAAK,IAAI,KAAK,IAAI;AACzB,aAAK,KAAK,EAAE,KAAK,IAAI;AAAA,MACvB;AAEA,cAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AACjC,cAAQ,KAAK,IAAI,MAAM,MAAM,IAAI;AACjC,aAAO,YAAY;AACnB,aAAO;AAAA,IACT;AAEA,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,WAAO,YAAY;AACnB,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,GAAG,cAAc,SAAS,SAAS;AAExE,QAAI,SAAS;AAAA,MACX,OAAO;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,IACd;AACA,QAAI;AACJ,QAAI;AACJ,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,CAAC;AACX,QAAI,IAAI,CAAC;AACT,QAAI;AACJ,QAAI,MAAM,CAAC;AACX,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC;AACV,QAAI,MAAM;AACV,QAAI,MAAM;AACV,QAAI,UAAU,CAAC;AACf,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,UAAU,CAAC;AACf,QAAI,gBAAgB,CAAC;AACrB,QAAI,gBAAgB,CAAC;AACrB,QAAI,KAAK,CAAC;AACV,WAAO,QAAQ;AACf,YAAQ,KAAK;AAIb,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,UAAM,OAAO,SAAS,GAAG,GAAG;AAC5B,2BAAuB,KAAK,KAAK,KAAK,CAAC;AAEvC,eAAS,wBAAwB,GAAG,KAAK,GAAG,EAAE;AAI9C,QAAI,eAAe;AAEnB,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AAEtB,UAAI,EAAE,KAAK,GAAG;AACZ,gBAAQ,CAAC,EAAE;AAAA,MACb,OAAO;AACL,gBAAQ,EAAE;AAAA,MACZ;AAEA,UAAI,QAAQ,cAAc;AACxB,uBAAe;AACf,cAAM;AAAA,MACR;AAAA,IACF;AAEA,SAAK,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK;AAC7B,UAAI,MAAM,KAAK;AACb,gBAAQ,OAAO;AAAA,MACjB;AAAA,IACF;AAEA,SAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,UAAI,KAAK,GAAG,QAAQ,MAAM,IAAI,QAAQ;AACtC,SAAG,KAAK,IAAI,QAAQ,MAAM,IAAI,QAAQ;AACtC,SAAG,KAAK,IAAI,QAAQ,MAAM,IAAI,QAAQ;AAAA,IACxC;AAEA,UAAM,eAAe,IAAI,EAAE;AAE3B,QAAI,QAAQ,GAAK;AACf,cAAQ,KAAK;AACb,cAAQ,KAAK;AACb,aAAO,aAAa;AACpB,aAAO;AAAA,IACT;AAEA,YAAQ,KAAK,eAAe,KAAK,EAAE,IAAI;AACvC,YAAQ,KAAK,eAAe,IAAI,GAAG,IAAI;AAEvC,YAAQ,KAAK,IAAK,SAAQ,KAAK,QAAQ;AACvC,YAAQ,KAAK,QAAQ;AACrB,YAAQ,KAAK,QAAQ;AAErB,QAAI,QAAQ,MAAM,KAAO,QAAQ,MAAM,KAAO,QAAQ,MAAM,KAAO,QAAQ,MAAM,KAAO,QAAQ,MAAM,KAAO,QAAQ,MAAM,GAAK;AAE9H,UAAI,cAAc;AAChB,eAAO,QAAQ,uBAAuB,IAAI,CAAC;AAC3C,qBAAa,KAAK,GAAG;AACrB,qBAAa,KAAK,GAAG;AACrB,qBAAa,KAAK,GAAG;AAAA,MACvB;AAEA,aAAO,aAAa;AAAA,IACtB,OAAO;AACL,UAAI;AAEJ,UAAI,cAAc;AAChB,YAAI,QAAQ,KAAK,KAAO,QAAQ,KAAK,GAAK;AACxC,uBAAa,uBAAuB,GAAG,GAAG;AAC1C,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AACjE,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AAEjE,cAAI,aAAa,YAAY;AAC3B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ,OAAO;AACL,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,cAAI,aAAa,OAAO,OAAO;AAC7B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,yBAAa,KAAK,QAAQ;AAAA,UAC5B;AAAA,QACF,WAAW,QAAQ,KAAK,KAAO,QAAQ,KAAK,GAAK;AAC/C,uBAAa,uBAAuB,GAAG,GAAG;AAC1C,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AACjE,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AAEjE,cAAI,aAAa,YAAY;AAC3B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ,OAAO;AACL,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,cAAI,aAAa,OAAO,OAAO;AAC7B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,yBAAa,KAAK,QAAQ;AAAA,UAC5B;AAAA,QACF,WAAW,QAAQ,KAAK,KAAO,QAAQ,KAAK,GAAK;AAC/C,uBAAa,uBAAuB,GAAG,GAAG;AAC1C,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AACjE,uBAAa,UAAQ,eAAe,GAAG,KAAK,KAAK,GAAG,aAAa;AAEjE,cAAI,aAAa,YAAY;AAC3B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ,OAAO;AACL,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,cAAI,aAAa,OAAO,OAAO;AAC7B,mBAAO,QAAQ;AACf,sBAAU;AAAA,UACZ;AAEA,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,yBAAa,KAAK,QAAQ;AAAA,UAC5B;AAAA,QACF,WAAW,QAAQ,KAAK,GAAK;AAC3B,cAAI,eAAe,UAAQ,eAAe,GAAG,KAAK,KAAK,YAAY;AACnE,iBAAO,QAAQ,aAAa;AAAA,QAC9B,WAAW,QAAQ,KAAK,GAAK;AAC3B,cAAI,gBAAgB,UAAQ,eAAe,GAAG,KAAK,KAAK,YAAY;AAEpE,iBAAO,QAAQ,cAAc;AAAA,QAC/B,WAAW,QAAQ,KAAK,GAAK;AAC3B,cAAI,iBAAiB,UAAQ,eAAe,GAAG,KAAK,KAAK,YAAY;AAErE,iBAAO,QAAQ,eAAe;AAAA,QAChC;AAAA,MACF;AAEA,aAAO,aAAa;AAAA,IACtB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,SAAS,GAAG,SAAS;AAC1D,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC;AACV,UAAM,OAAO,SAAS,GAAG,EAAE;AAC3B,UAAM,OAAO,SAAS,GAAG,EAAE;AAC3B,UAAM,OAAO,SAAS,GAAG,EAAE;AAC3B,QAAI,KAAK,IAAM,QAAQ,KAAK,QAAQ;AAEpC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAE,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ;AAAA,IAC3D;AAEA,YAAQ,KAAK;AACb,YAAQ,KAAK,QAAQ;AACrB,YAAQ,KAAK,QAAQ;AAAA,EACvB;AAEA,YAAU,wBAAwB,SAAU,SAAS;AACnD,QAAI;AACJ,QAAI,WAAW;AACf,QAAI,KAAK,CAAC;AACV,OAAG,KAAK,QAAQ;AAChB,OAAG,KAAK,QAAQ;AAChB,OAAG,KAAK,IAAM,QAAQ,KAAK,QAAQ;AAEnC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,GAAG,KAAK,GAAK;AACf,gBAAQ,CAAC,GAAG;AAAA,MACd,WAAW,GAAG,KAAK,GAAK;AACtB,gBAAQ,GAAG,KAAK;AAAA,MAClB,OAAO;AAEL,gBAAQ;AAAA,MACV;AAEA,UAAI,QAAQ,UAAU;AACpB,mBAAW;AAAA,MACb;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,YAAQ,OAAO,WAAW,OAAO,aAAa;AAC9C,cAAY,WAAW,KAAK;AAC9B;AA/lBA,IA8PI,SA0VA,kBASA,eAEA;AAnmBJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAyPA,IAAI,UAAS;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAsVA,IAAI,mBAAiB,CAAC;AAStB,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB,gBAAc;AAAA,MAChC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,OAAM;AAAA;AAAA;;;ACtmBT,IAAI;AAAJ;AAAA;AAAA,IAAI,kBAAkB,CAAC,SAAS,SAAS,SAAS,QAAQ;AAAA;AAAA;;;ACA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,qBAAqB,WAAW,OAAO;AAErC,QAAM,eAAe,KAAK,aAAa;AAEvC,oBAAkB,KAAK;AACrB,WAAO,IAAI,QAAQ,uBAAuB,SAAU,QAAQ;AAC1D,aAAO,OAAO,YAAY;AAAA,IAC5B,CAAC,EAAE,QAAQ,QAAQ,EAAE;AAAA,EACvB;AAGA,kBAAgB,QAAQ,SAAU,MAAM;AACtC,cAAU,cAAc,OAAO,SAAS,IAAI,CAAC,KAAK,WAAY;AAC5D,aAAO,MAAM,MAAM,iBAAiB;AAAA,IACtC;AAEA,QAAI,CAAC,MAAM,OAAO;AAChB,YAAM,QAAQ,eAAa,YAAY;AAAA,IACzC,OAAO;AACL,YAAM,QAAQ,IAAI,MAAM,KAAK;AAAA,IAC/B;AAAA,EACF,CAAC;AAED,YAAU,mBAAmB,WAAY;AACvC,WAAO,gBAAgB,OAAO,SAAU,KAAK,UAAU;AACrD,aAAO,MAAM,MAAM,UAAU,iBAAiB;AAAA,IAChD,GAAG,CAAC;AAAA,EACN;AAEA,MAAI,mBAAmB,UAAU;AAEjC,YAAU,cAAc,SAAU,OAAO;AACvC,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAChF,qBAAiB,OAAO,KAAK;AAC7B,oBAAgB,QAAQ,SAAU,MAAM;AACtC,YAAM,QAAQ,eAAa,YAAY;AACvC,YAAM,MAAM,YAAY,MAAM,mBAAmB,IAAI,CAAC;AAAA,IACxD,CAAC;AAAA,EACH;AAEA,YAAU,aAAa,WAAY;AAEjC,QAAI,SAAS,UAAU,iBAAiB;AACxC,QAAI,SAAS,UAAU,iBAAiB;AACxC,QAAI,SAAS,UAAU,iBAAiB;AACxC,QAAI,UAAU,UAAU,kBAAkB;AAE1C,QAAI,SAAS,SAAS,SAAS,SAAS;AACxC,QAAI,QAAQ,IAAI,WAAW,MAAM;AACjC,QAAI,SAAS;AACb,QAAI,OAAO,IAAI,YAAY,MAAM;AACjC,QAAI,QAAQ;AAGZ,QAAI,QAAQ;AACV,UAAI,cAAc;AAClB,YAAM,MAAM,aAAa,EAAE,QAAQ,SAAU,YAAY,OAAO;AAC9D,cAAM,SAAS;AACf,eAAO,SAAS,aAAa,IAAI,SAAS,kBAAkB,SAAS;AACrE,uBAAe,aAAa;AAAA,MAC9B,CAAC;AACD,cAAQ,MAAM,SAAS,MAAM;AAC7B,eAAS,OAAO,SAAS,MAAM;AAAA,IACjC;AAGA,QAAI,QAAQ;AACV,UAAI,eAAe;AACnB,YAAM,MAAM,aAAa,EAAE,QAAQ,SAAU,YAAY,OAAO;AAC9D,cAAM,SAAS;AACf,eAAO,SAAS,aAAa,IAAI,SAAS,gBAAgB,SAAS;AAEnE,YAAI,eAAe,GAAG;AACpB,2BAAgB,sBAAsB,OAAO,gFAAgF;AAAA,QAC/H;AAEA,wBAAgB,aAAa;AAAA,MAC/B,CAAC;AACD,cAAQ,MAAM,SAAS,MAAM;AAC7B,eAAS,OAAO,SAAS,MAAM;AAAA,IACjC;AAGA,QAAI,QAAQ;AACV,UAAI,gBAAgB;AACpB,YAAM,MAAM,aAAa,EAAE,QAAQ,SAAU,YAAY,OAAO;AAC9D,cAAM,SAAS;AAEf,gBAAQ;AAAA,eACD;AACH,mBAAO,SAAS,SAAS;AACzB;AAAA,eAEG;AACH,mBAAO,SAAS,SAAS;AACzB;AAAA;AAGA,mBAAO,SAAS,SAAS;AACzB;AAAA;AAGJ,YAAI,aAAa,GAAG;AAClB,2BAAgB,0BAA0B,OAAO,8FAA8F;AAAA,QACjJ;AAEA,yBAAiB,aAAa;AAAA,MAChC,CAAC;AACD,eAAS,MAAM,SAAS,MAAM;AAC9B,gBAAU,OAAO,SAAS,MAAM;AAAA,IAClC;AAGA,QAAI,SAAS;AACX,UAAI,gBAAgB;AACpB,aAAO,KAAK,SAAS,oBAAoB,GAAG,OAAO;AACnD,YAAM,OAAO,aAAa,EAAE,QAAQ,SAAU,YAAY,OAAO;AAC/D,cAAM,SAAS;AACf,yBAAiB,aAAa;AAAA,MAChC,CAAC;AAAA,IACH;AAGA,UAAM,QAAQ,eAAa,YAAY;AACvC,UAAM,MAAM,aAAa,QAAQ,OAAO,IAAI;AAAA,EAC9C;AAOA,YAAU,aAAa,WAAY;AACjC,QAAI,cAAc,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEtF,QAAI,MAAM,UAAU,QAAW;AAC7B,gBAAU,WAAW;AAAA,IACvB;AAEA,UAAM,QAAQ,eAAa,YAAY;AAEvC,QAAI,cAAc,GAAG;AACnB,YAAM,MAAM,SAAS,WAAW;AAAA,IAClC,OAAO;AACL,YAAM,MAAM,SAAS,UAAU,UAAU,EAAE,kBAAkB,CAAC;AAAA,IAChE;AAEA,UAAM,MAAM,WAAW,SAAS;AAAA,EAClC;AAEA,YAAU,cAAc,SAAU,QAAQ;AACxC,WAAO,MAAM,MAAM,YAAY,MAAM;AAAA,EACvC;AAEA,YAAU,gBAAgB,SAAU,QAAQ;AAC1C,QAAI,WAAW,UAAU,YAAY,MAAM;AAC3C,QAAI,QAAQ;AAEZ,YAAQ;AAAA,WACD,SAAS;AAAA,WACT,SAAS;AACZ,gBAAQ,MAAM;AACd;AAAA,WAEG,SAAS;AAAA,WACT,SAAS;AACZ,gBAAQ,MAAM;AACd;AAAA,WAEG,SAAS;AAAA,WACT,SAAS;AAAA,WACT,SAAS;AACZ,gBAAQ,MAAM;AACd;AAAA,WAEG,SAAS;AACZ,gBAAQ,MAAM;AACd;AAAA;AAGA,gBAAQ;AACR,eAAO;AAAA,UACL,MAAM;AAAA,UACN,cAAc;AAAA,QAChB;AAAA;AAGJ,QAAI,MAAM,MAAM,MAAM,gBAAgB,MAAM;AAC5C,QAAI,eAAe,MAAM,QAAQ,GAAG;AACpC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,MAAM;AACxC,WAAO,MAAM,MAAM,SAAS,IAAI;AAAA,EAClC;AAEA,YAAU,uBAAuB,SAAU,QAAQ,QAAQ,QAAQ;AACjE,QAAI,QAAQ,MAAM,MAAM,QAAQ,MAAM;AACtC,QAAI,QAAQ,MAAM,MAAM,QAAQ,MAAM;AACtC,WAAO,MAAM,MAAM,OAAO,SAAU,MAAM;AACxC,aAAO,SAAS,UAAU,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,IAC1D,CAAC;AAAA,EACH;AAMA,YAAU,UAAU,SAAU,QAAQ;AACpC,QAAI,WAAW,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACnF,QAAI,WAAW,UAAU,cAAc,MAAM;AAC7C,QAAI,OAAO,YAAY,aAAa,SAAS,UAAU,YAAY;AACnE,SAAK,WAAW,UAAU,UAAU,GAAG,SAAS,YAAY;AAC5D,WAAO;AAAA,EACT;AACF;AAaA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,IAAI,WAAW,OAAO,CAAC,SAAS,OAAO,CAAC;AAC9C,QAAM,OAAO,WAAW,OAAO,CAAC,SAAS,SAAS,SAAS,QAAQ,CAAC;AAEpE,cAAY,WAAW,KAAK;AAC9B;AAlQA,IAYI,eACA,kBACA,cAmOA,kBAmBA,eAEA;AAtQJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAI,mBAAkB,MAAM;AAC5B,IAAI,eAAgB,iBAAgB,CAAC,GAAG,gBAAgB,eAAe,SAAS,UAAU,SAAO,GAAG,gBAAgB,eAAe,SAAS,eAAe,SAAO,GAAG,gBAAgB,eAAe,SAAS,cAAc,aAAW,GAAG;AAmOzO,IAAI,mBAAiB,CAMrB;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,aAAa;AAEzD,IAAI,gBAAgB;AAAA,MAClB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACzQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAKzf,kBAAkB,WAAW,OAAO;AAElC,QAAM,eAAe,KAAK,UAAU;AAEpC,MAAI,aAAa,gBAAc,CAAC,GAAG,SAAS;AAE5C,YAAU,YAAY,WAAY;AAChC,WAAO;AAAA,EACT;AAEA,YAAU,cAAc,WAAY;AAClC,QAAI,MAAM,aAAa;AACrB,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,kBAAkB;AAC1B,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,MAAM,UAAU;AAEnB,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,WAAW,MAAM,SAAS,WAAW,KAAK;AAE9C,eAAW,YAAa,EAAC,MAAM,WAAW,CAAC,MAAM,QAAQ,cAAc;AAEvE,eAAW,YAAa,EAAC,MAAM,UAAU,MAAM,OAAO,YAAY;AAClE,WAAO;AAAA,EACT;AAEA,YAAU,kCAAkC,WAAY;AACtD,QAAI,MAAM,WAAW,MAAM;AACzB,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,aAAa,MAAM;AAE3B,gBAAU,YAAY,UAAU,aAAa,CAAC;AAAA,IAChD;AAGA,WAAO,CAAC,UAAU,YAAY;AAAA,EAChC;AAEA,YAAU,eAAe,cAAY;AAErC,YAAU,cAAc,WAAY;AAClC,QAAI,MAAM,aAAa,MAAM;AAC3B,YAAM,WAAW,UAAU,aAAa;AAAA,IAC1C;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,YAAY,WAAY;AAChC,QAAI,MAAM,WAAW,MAAM;AACzB,aAAO,MAAM;AAAA,IACf;AAGA,QAAI,MAAM,MAAM,OAAO,UAAU;AAEjC,QAAI,CAAC,OAAO,IAAI,WAAW,GAAG;AAC5B,aAAO;AAAA,IACT;AAGA,QAAI,IAAI,KAAK,IAAI,IAAI;AACnB,YAAM,eAAe,IAAI,OAAO;AAEhC,YAAM,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AACnC,YAAM,YAAY,SAAS;AAC3B,aAAO;AAAA,IACT;AAOA,QAAI,CAAC,MAAM,gBAAgB,IAAI,OAAO,MAAM,aAAa,MAAM,IAAI,OAAO,MAAM,aAAa,MAAM,IAAI,OAAO,MAAM,aAAa,MAAM,IAAI,OAAO,MAAM,aAAa,MAAM,IAAI,OAAO,MAAM,aAAa,MAAM,IAAI,OAAO,MAAM,aAAa,MAAM,UAAU,SAAS,IAAI,MAAM,YAAY,SAAS,GAAG;AACtS,sBAAc,uBAAuB;AACrC,YAAM,eAAe,IAAI,OAAO;AAEhC,UAAI,OAAO,CAAC;AACZ,qBAAe,WAAW,KAAK,IAAI;AACnC,gBAAU,cAAc;AACxB,UAAI,OAAO,IAAI,aAAa,EAAE;AAC9B,mBAAK,UAAU,MAAM,MAAM,MAAM;AACjC,WAAK,QAAQ,SAAU,IAAI;AACzB,eAAO,aAAK,cAAc,IAAI,IAAI,IAAI;AAAA,MACxC,CAAC;AAGD,YAAM,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,OAAO;AAC7D,YAAM,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,CAAC,OAAO;AAG9D,YAAM,SAAS,MAAM,OAAO,IAAI,SAAU,GAAG,GAAG;AAC9C,eAAO,IAAI,MAAM,IAAI,KAAK,OAAO,SAAU,GAAG,GAAG;AAC/C,iBAAO,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK;AAAA,QACnC,GAAG,CAAC,IAAI,KAAK,OAAO,SAAU,GAAG,GAAG;AAClC,iBAAO,IAAI,EAAG,KAAI,KAAK,KAAK,EAAG,KAAI,KAAK,KAAK;AAAA,QAC/C,GAAG,CAAC;AAAA,MACN,CAAC;AACD,YAAM,YAAY,SAAS;AAAA,IAC7B;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,WAAW,SAAS;AAE7B,QAAI,MAAM,aAAa,MAAM;AAC3B,UAAI,OAAO,MAAM,SAAS,SAAS;AACnC,WAAK,OAAO,KAAK,OAAO;AAAA,IAC1B;AAEA,QAAI,MAAM,qBAAqB,MAAM;AACnC,UAAI,QAAQ,MAAM,iBAAiB,SAAS;AAE5C,WAAK,QAAQ,KAAK,QAAQ;AAAA,IAC5B;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,KAAK,MAAM;AAEf,QAAI,MAAM,WAAW,MAAM;AACzB,UAAI,OAAO,MAAM,OAAO,SAAS;AACjC,WAAK,OAAO,KAAK,OAAO;AAExB,UAAI,MAAM,OAAO,SAAS,MAAM,MAAM;AAEpC,cAAM,OAAO,kBAAkB,EAAE,OAAO;AACxC,eAAO,MAAM,OAAO,SAAS,EAAE,SAAS;AACxC,aAAK,OAAO,KAAK,OAAO;AAAA,MAC1B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM,SAAS,MAAM,OAAO,qBAAqB,IAAI;AAAA,EAC9D;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,cAAU,OAAO,WAAW,OAAO,aAAa;AAEhD,QAAM,cAAc,CAAC;AACrB,QAAM,IAAI,MAAM,WAAW;AAE3B,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,CAAC;AACxC,QAAM,OAAO,WAAW,OAAO,CAAC,oBAAoB,eAAe,oBAAoB,QAAQ,CAAC;AAEhG,WAAS,WAAW,KAAK;AAC3B;AAlMA,IAUI,iBAkKA,kBAwBA,eAEA;AAtMJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,kBAAgB,MAAM;AAkK1B,IAAI,mBAAiB;AAAA,MACnB,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,IAC9B;AAiBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,UAAU;AAEtD,IAAI,aAAa;AAAA,MACf,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACnMA,6BAA6B,WAAW,OAAO;AAC7C,YAAU,YAAY,WAAY;AAChC,WAAO;AAAA,EACT;AAEA,YAAU,YAAY,SAAU,QAAQ;AACtC,cAAU,UAAU;AAEpB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAO,KAAK,MAAM,OAAO;AAAA,IAC3B;AAAA,EACF;AAEA,YAAU,YAAY,WAAY;AAChC,cAAU,UAAU;AAEpB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAM,OAAO,KAAM,OAAM,OAAO,IAAI,IAAI,KAAK,MAAM,OAAO,IAAI,MAAM;AAAA,IACtE;AAEA,WAAO,MAAM,OAAO,MAAM;AAAA,EAC5B;AAEA,YAAU,YAAY,WAAY;AAChC,QAAI,OAAO;AACX,QAAI,IAAI;AACR,cAAU,UAAU;AAEpB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAO,MAAM,OAAO,IAAI,IAAI,KAAK,MAAM,OAAO,IAAI;AAClD,WAAK,OAAO;AAAA,IACd;AAEA,WAAO,KAAK,KAAK,CAAC;AAAA,EACpB;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,sBAAkB,OAAO,WAAW,OAAO,aAAa;AAExD,MAAI,CAAC,MAAM,QAAQ;AACjB,uBAAmB,MAAM,MAAM;AAAA,EACjC;AAEA,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,SAAS,CAAC,GAAK,GAAK,CAAG;AAAA,EAC/B;AAEA,sBAAoB,WAAW,KAAK;AACtC;AAlEA,IA8CI,kBAsBA;AApEJ;AAAA;AAAA;AACA;AA6CA,IAAI,mBAAiB;AAAA,MACnB,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,MAC5B,QAAQ,CAAC,GAAG,GAAG,CAAC;AAAA,IAClB;AAmBA,IAAI,wBAAwB;AAAA,MAC1B,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACjDA,wBAAwB,WAAW,OAAO;AAExC,QAAM,eAAe,KAAK,gBAAgB;AAK1C,YAAU,WAAW,WAAY;AAC/B,QAAI,MAAM,oBAAoB,SAAS,IAAI,UAAU,SAAS,GAAG;AAC/D,UAAI,SAAS;AAEb,UAAI,MAAM,SAAS,KAAK,GAAK;AAC3B,iBAAS;AAAA,MACX;AAEA,UAAI,MAAM,sBAAsB,MAAM,gBAAgB,KAAK,GAAK;AAC9D,iBAAS;AAAA,MACX;AAEA,UAAI,MAAM,sBAAsB,MAAM,gBAAgB,KAAK,GAAK;AAC9D,iBAAS;AAAA,MACX;AAEA,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,UAAU,QAAQ,KAAK,GAAG;AACxD,YAAI,MAAM,MAAM,KAAK,KAAK;AACxB,mBAAS;AAAA,QACX;AAAA,MACF;AAEA,YAAM,aAAa;AACnB,YAAM,oBAAoB,SAAS;AAAA,IACrC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,gBAAgB,WAAY;AACpC,WAAO;AAAA,EACT;AAGA,YAAU,6BAA6B,WAAY;AACjD,WAAO,MAAM,MAAM;AAAA,EACrB;AAIA,YAAU,oBAAoB,SAAU,GAAG,GAAG;AAC5C,QAAI,SAAS;AAEb,QAAI,IAAI,EAAE,MAAM,IAAI;AAClB,eAAS,EAAE,WAAW,0BAA0B;AAAA,IAClD,WAAW,IAAI,EAAE,MAAM,IAAI;AACzB,eAAS,EAAE,WAAW,0BAA0B;AAAA,IAClD,OAAO;AACL,eAAU,KAAI,EAAE,SAAS,EAAE;AAI3B,eAAS,SAAS,EAAE,WAAW,SAAS,EAAE;AAAA,IAC5C;AAEA,WAAO,KAAK,MAAM,MAAM;AAAA,EAC1B;AAEA,YAAU,eAAe,SAAU,GAAG,OAAO,GAAG;AAC9C,QAAI,QAAQ;AAEZ,QAAI,MAAM,CAAC,GAAG;AACZ,cAAQ,KAAK,MAAM,EAAE,WAAW,MAAM,eAAe;AAAA,IACvD,OAAO;AACL,cAAQ,UAAU,kBAAkB,GAAG,CAAC;AAAA,IAC1C;AAEA,QAAI,SAAS,IAAI;AACjB,WAAO,CAAC,MAAM,SAAS,MAAM,SAAS,IAAI,MAAM,SAAS,IAAI,MAAM,SAAS,EAAE;AAAA,EAChF;AAEA,YAAU,wBAAwB,SAAU,GAAG,OAAO,GAAG;AACvD,QAAI,QAAQ,UAAU,+BAA+B,CAAC;AAEtD,QAAI,UAAU,IAAI;AAChB,cAAQ,MAAM,iBAAiB;AAAA,IACjC;AAEA,QAAI,SAAS,IAAI;AACjB,WAAO,CAAC,MAAM,SAAS,MAAM,SAAS,IAAI,MAAM,SAAS,IAAI,MAAM,SAAS,EAAE;AAAA,EAChF;AAGA,YAAU,sBAAsB,SAAU,OAAO,GAAG;AAClD,MAAE,QAAQ,CAAC,MAAM;AACjB,MAAE,QAAQ,OAAO;AAEjB,QAAI,MAAM,KAAK,MAAM,IAAI;AACvB,QAAE,QAAS,GAAE,WAAW,KAAM,OAAM,KAAK,MAAM;AAAA,IACjD;AAAA,EACF;AAGA,YAAU,yBAAyB,SAAU,OAAO,QAAQ,WAAW,aAAa;AAClF,QAAI,aAAa,UAAU;AAE3B,QAAI,MAAM,eAAe;AACvB,mBAAa,UAAU;AAAA,IACzB;AAEA,QAAI,SAAS,UAAU,gBAAgB;AACvC,QAAI,IAAI;AAAA,MACN,UAAU,UAAU,kBAAkB,IAAI;AAAA,MAC1C,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AACA,cAAU,oBAAoB,QAAQ,CAAC;AACvC,QAAI,QAAQ,UAAU,SAAS;AAC/B,QAAI,SAAS,MAAM,kBAAkB;AACrC,QAAI,SAAS,MAAM,sBAAsB;AACzC,QAAI,UAAU,OAAO,QAAQ;AAC7B,QAAI,SAAS,MAAM,QAAQ;AAE3B,QAAI,SAAS,GAAK;AAChB,UAAI,cAAc,oBAAoB,MAAM;AAC1C,iBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,cAAI,OAAO,WAAW,OAAO,IAAI,SAAS,cAAc,MAAM,OAAO,CAAC;AACtE,kBAAQ,IAAI,KAAK,KAAK;AACtB,kBAAQ,IAAI,IAAI,KAAK,KAAK;AAC1B,kBAAQ,IAAI,IAAI,KAAK,KAAK;AAC1B,kBAAQ,IAAI,IAAI,KAAK,KAAK;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,OAAO;AAEL,UAAI,cAAc,oBAAoB,MAAM;AAC1C,iBAAS,KAAK,GAAG,KAAK,QAAQ,MAAM;AAClC,cAAI,QAAQ,WAAW,OAAO,KAAK,SAAS,cAAc,MAAM,OAAO,CAAC;AAExE,kBAAQ,KAAK,KAAK,MAAM;AACxB,kBAAQ,KAAK,IAAI,KAAK,MAAM;AAC5B,kBAAQ,KAAK,IAAI,KAAK,MAAM;AAC5B,kBAAQ,KAAK,IAAI,KAAK,KAAK,MAAM,MAAM,KAAK,QAAQ,GAAG;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAAA,EAEF;AAEA,YAAU,aAAa,WAAY;AACjC,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,WAAW,MAAM,iBAAiB;AAEtC,QAAI,UAAU;AACZ,aAAQ,OAAM,SAAS,KAAK,MAAM,SAAS,MAAM;AACjD,aAAQ,OAAM,gBAAgB,KAAK,MAAM,gBAAgB,MAAM;AAC/D,aAAQ,OAAM,WAAW,KAAK,MAAM,WAAW,MAAM;AACrD,aAAQ,OAAM,WAAW,KAAK,MAAM,WAAW,MAAM;AAAA,IACvD;AAEA,QAAI,MAAM,CAAC;AACX,QAAI,OAAO,CAAC;AAEZ,aAAS,IAAI,GAAG,KAAK,UAAU,KAAK;AAClC,UAAI,KAAK,MAAM,SAAS,KAAK,IAAI;AACjC,UAAI,KAAK,MAAM,gBAAgB,KAAK,IAAI;AACxC,UAAI,KAAK,MAAM,WAAW,KAAK,IAAI;AACnC,cAAQ,KAAK,IAAI;AACjB,WAAK,KAAK,MAAM,WAAW,KAAK,IAAI;AAEpC,YAAM,MAAM,IAAI,KAAK,KAAK,KAAK,MAAQ;AACvC,YAAM,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK,MAAQ;AAC3C,YAAM,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK,MAAQ;AAC3C,YAAM,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK,MAAQ;AAAA,IAC7C;AAEA,cAAU,mBAAmB;AAC7B,UAAM,UAAU,SAAS;AAAA,EAC3B;AAEA,YAAU,WAAW,SAAU,OAAO;AACpC,QAAI,MAAM,sBAAsB,MAAM,GAAG;AACvC,sBAAc,uCAAuC;AACrD;AAAA,IACF;AAEA,QAAI,MAAM,YAAY,MAAM,aAAa,eAAe;AACtD,sBAAc,+CAA+C;AAC7D;AAAA,IACF;AAEA,UAAM,iBAAiB,MAAM,kBAAkB;AAC/C,QAAI,OAAO,MAAM,QAAQ;AAEzB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,MAAM,KAAK,KAAK;AAAA,IACxB;AAEA,cAAU,mBAAmB;AAC7B,UAAM,WAAW,SAAS;AAC1B,cAAU,SAAS;AAAA,EACrB;AAEA,YAAU,qBAAqB,WAAY;AAEzC,QAAI,iBAAiB,MAAM;AAC3B,QAAI,OAAO,MAAM;AACjB,QAAI,OAAQ,kBAAiB,2BAA2B;AAExD,QAAI,MAAM,sBAAsB,mBAAmB,GAAG;AACpD,WAAK,QAAQ,MAAM,gBAAgB,KAAK,MAAQ;AAChD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AACpD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AACpD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AAAA,IACtD,OAAO;AAEL,WAAK,QAAQ,KAAK;AAClB,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK,OAAO,KAAK,KAAK;AAAA,IACxB;AAGA,WAAQ,kBAAiB,2BAA2B;AAEpD,QAAI,MAAM,sBAAsB,mBAAmB,GAAG;AACpD,WAAK,QAAQ,MAAM,gBAAgB,KAAK,MAAQ;AAChD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AACpD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AACpD,WAAK,OAAO,KAAK,MAAM,gBAAgB,KAAK,MAAQ;AAAA,IACtD,OAAO;AAEL,WAAK,QAAQ,KAAK,IAAK,kBAAiB,KAAK;AAC7C,WAAK,OAAO,KAAK,KAAK,IAAK,kBAAiB,KAAK;AACjD,WAAK,OAAO,KAAK,KAAK,IAAK,kBAAiB,KAAK;AACjD,WAAK,OAAO,KAAK,KAAK,IAAK,kBAAiB,KAAK;AAAA,IACnD;AAGA,WAAQ,kBAAiB,mBAAmB;AAC5C,SAAK,QAAQ,MAAM,SAAS,KAAK,MAAQ;AACzC,SAAK,OAAO,KAAK,MAAM,SAAS,KAAK,MAAQ;AAC7C,SAAK,OAAO,KAAK,MAAM,SAAS,KAAK,MAAQ;AAC7C,SAAK,OAAO,KAAK,MAAM,SAAS,KAAK,MAAQ;AAAA,EAC/C;AAEA,YAAU,QAAQ,WAAY;AAC5B,QAAI,MAAM,MAAM,SAAS,KAAK,UAAU,SAAS,IAAI,MAAM,UAAU,SAAS,KAAK,MAAM,WAAW,SAAS,KAAK,MAAM,UAAU,SAAS,GAAG;AAC5I,gBAAU,WAAW;AAAA,IACvB;AAAA,EACF;AAEA,MAAI,MAAM,MAAM,SAAS,GAAG;AAG1B,UAAM,WAAW,SAAS;AAAA,EAC5B;AACF;AAuBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,uBAAmB,OAAO,WAAW,OAAO,aAAa;AAEzD,MAAI,CAAC,MAAM,OAAO;AAChB,UAAM,QAAQ,CAAC;AAAA,EACjB;AAEA,QAAM,YAAY,CAAC;AACnB,QAAM,IAAI,MAAM,SAAS;AACzB,QAAM,sBAAsB,CAAC;AAC7B,QAAM,IAAI,MAAM,qBAAqB;AAAA,IACnC,OAAO;AAAA,EACT,CAAC;AACD,QAAM,aAAa,CAAC;AACpB,QAAM,IAAI,MAAM,YAAY;AAAA,IAC1B,OAAO;AAAA,EACT,CAAC;AAED,QAAM,IAAI,WAAW,OAAO,CAAC,WAAW,CAAC;AAEzC,QAAM,OAAO,WAAW,OAAO,CAAC,kBAAkB,sBAAsB,oBAAoB,CAAC;AAE7F,QAAM,SAAS,WAAW,OAAO,CAAC,cAAc,YAAY,mBAAmB,YAAY,GAAG,CAAC;AAC/F,QAAM,SAAS,WAAW,OAAO,CAAC,YAAY,mBAAmB,iBAAiB,GAAG,CAAC;AAEtF,QAAM,SAAS,WAAW,OAAO,CAAC,YAAY,mBAAmB,cAAc,cAAc,YAAY,mBAAmB,iBAAiB,CAAC;AAG9I,iBAAe,WAAW,KAAK;AACjC;AA9UA,IAMI,iBASA,yBACA,yBACA,iBA2QA,kBAoDA,eAEA;AAlVJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB,MAAM;AAS1B,IAAI,0BAA0B;AAC9B,IAAI,0BAA0B;AAC9B,IAAI,kBAAkB;AA2QtB,IAAI,mBAAiB;AAAA,MACnB,gBAAgB;AAAA,MAEhB,UAAU,CAAC,GAAK,OAAO;AAAA,MACvB,iBAAiB,CAAC,GAAK,CAAG;AAAA,MAC1B,YAAY,CAAC,GAAK,CAAG;AAAA,MACrB,YAAY,CAAC,GAAK,CAAG;AAAA,MACrB,UAAU,CAAC,KAAK,GAAK,GAAK,CAAG;AAAA,MAC7B,iBAAiB,CAAC,GAAK,GAAK,GAAK,CAAG;AAAA,MACpC,iBAAiB,CAAC,GAAK,GAAK,GAAK,CAAG;AAAA,MACpC,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,OAAO;AAAA,IAIT;AAoCA,IAAI,gBAAc,MAAM,YAAY,UAAQ,gBAAgB;AAE5D,IAAI,mBAAmB;AAAA,MACrB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AClVA,0DAA0D;AACxD,SAAO;AACT;AACA,wDAAwD,OAAO;AAC7D,gDAA8C;AAChD;AACA,wCAAwC;AACtC,SAAO;AACT;AACA,wCAAwC;AACtC,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,8BAA4B;AAC9B;AACA,iDAAiD;AAC/C,+BAA6B,CAAC;AAChC;AACA,6CAA6C;AAC3C,+BAA6B,CAAC;AAChC;AACA,uDAAuD;AACrD,+BAA6B,CAAC;AAChC;AACA,gDAAgD;AAC9C,SAAO,iCAAiC;AAC1C;AA3BA,IAAI,6CACA,2BACA,kCA0BA;AA5BJ;AAAA;AAAA,IAAI,8CAA8C;AAClD,IAAI,4BAA4B;AAChC,IAAI,mCAAmC,CAAC,mBAAmB,4BAA4B;AA0BvF,IAAI,qBAAqB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AChCA,sCAAsC,WAAW,OAAO,UAAU;AAChE,WAAS,QAAQ,SAAU,MAAM;AAC/B,cAAU,MAAM,OAAO,KAAK,MAAM,KAAK,WAAY;AACjD,aAAO,MAAM,KAAK;AAAA,IACpB;AAEA,cAAU,MAAM,OAAO,KAAK,MAAM,KAAK,SAAU,QAAQ,QAAQ;AAC/D,YAAM,KAAK,OAAO;AAAA,QAChB;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;AA0BA,4CAA4C,WAAW,OAAO;AAC5D,MAAI,MAAM,8BAA8B,QAAW;AACjD,UAAM,4BAA4B;AAAA,EACpC;AAEA,QAAM,OAAO,WAAW,OAAO,CAAC,2BAA2B,CAAC;AAE5D,QAAM,iBAAiB;AAAA,IACrB,SAAS;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACJ,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,EACF;AAEA,SAAO,KAAK,kBAAkB,EAAE,QAAQ,SAAU,YAAY;AAC5D,cAAU,cAAc,mBAAmB;AAAA,EAC7C,CAAC;AACD,SAAO,KAAK,eAAe,EAAE,QAAQ,SAAU,YAAY;AACzD,cAAU,cAAc,gBAAgB;AAAA,EAC1C,CAAC;AACD,+BAA6B,WAAW,MAAM,gBAAgB,WAAW,IAAI,SAAU,KAAK;AAC1F,WAAO;AAAA,MACL;AAAA,MACA,QAAQ,6BAA6B,OAAO,KAAK,kBAAkB;AAAA,IACrE;AAAA,EACF,CAAC,CAAC;AAEF,YAAU,+CAA+C,WAAY;AACnE,QAAI,cAAc,gBAAgB,oDAAoD;AACtF,QAAI,aAAa,UAAU,qDAAqD;AAChF,WAAO;AAAA,MACL,QAAQ,YAAY,SAAS,WAAW;AAAA,MACxC,QAAQ,YAAY,SAAS,WAAW;AAAA,IAC1C;AAAA,EACF;AAEA,YAAU,4CAA4C,WAAY;AAChE,QAAI,cAAc,gBAAgB,iDAAiD;AACnF,QAAI,aAAa,UAAU,kDAAkD;AAC7E,WAAO;AAAA,MACL,QAAQ,YAAY,SAAS,WAAW;AAAA,MACxC,QAAQ,YAAY,SAAS,WAAW;AAAA,IAC1C;AAAA,EACF;AAEA,YAAU,4CAA4C,WAAY;AAChE,QAAI,cAAc,gBAAgB,kDAAkD;AACpF,QAAI,aAAa,UAAU,mDAAmD;AAC9E,WAAO;AAAA,MACL,QAAQ,YAAY,SAAS,WAAW;AAAA,MACxC,QAAQ,YAAY,SAAS,WAAW;AAAA,IAC1C;AAAA,EACF;AACF;AAzGA,IAoBI,YAEA,mBAcA,iBAuEA;AA3GJ;AAAA;AAAA;AACA;AAmBA,IAAI,aAAa,CAAC,WAAW,QAAQ,OAAO;AAE5C,IAAI,oBAAoB;AAAA,MACtB,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,OAAO;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,IACF;AACA,IAAI,kBAAkB,CAAC;AACvB,iCAA6B,iBAAiB,mBAAmB,WAAW,IAAI,SAAU,KAAK;AAC7F,aAAO;AAAA,QACL;AAAA,QACA,QAAQ,4BAA4B,OAAO,KAAK,kBAAkB;AAAA,MACpE;AAAA,IACF,CAAC,CAAC;AAiEF,IAAI,2BAA2B;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AASzf,yBAAwB,QAAQ;AAC9B,SAAO,WAAY;AACjB,WAAO,MAAM,cAAc,cAAc,OAAO,QAAQ,oBAAoB,CAAC;AAAA,EAC/E;AACF;AAKA,mBAAmB,WAAW,OAAO;AAEnC,QAAM,eAAe,KAAK,WAAW;AAErC,YAAU,YAAY,WAAY;AAChC,QAAI,QAAQ,UAAU,aAAa;AAEnC,QAAI,CAAC,OAAO;AACV,YAAM,SAAS,0BAA0B;AAAA,IAC3C,OAAO;AACL,UAAI,CAAC,MAAM,QAAQ;AACjB,kBAAU,OAAO;AAAA,MACnB;AAEA,YAAM,SAAS,MAAM,UAAU;AAAA,IACjC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,sBAAsB,SAAU,GAAG;AAC3C,UAAM,mBAAmB;AAAA,EAC3B;AAEA,YAAU,2BAA2B,WAAY;AAC/C,UAAM,cAAc,iBAAe,YAAY;AAAA,EACjD;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM,aAAa,YAAW,MAAM,SAAS;AAAA,EACtD;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,UAAU,aAAa,CAAC;AAAA,EACjC;AAEA,YAAU,2BAA2B,WAAY;AAC/C,WAAO,UAAU,aAAa,CAAC;AAAA,EACjC;AAEA,YAAU,8BAA8B,WAAY;AAClD,WAAO,UAAU,aAAa,CAAC;AAAA,EACjC;AAEA,YAAU,wBAAwB,WAAY;AAC5C,WAAO,MAAM,aAAa,aAAY,MAAM,UAAU;AAAA,EACxD;AAEA,YAAU,yBAAyB,WAAY;AAC7C,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,8BAA8B,WAAY;AAClD,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,6BAA6B,WAAY;AACjD,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,mCAAmC,WAAY;AACvD,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,kCAAkC,WAAY;AACtD,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,8BAA8B,WAAY;AAClD,WAAO,UAAU,cAAc,CAAC;AAAA,EAClC;AAEA,YAAU,qBAAqB,SAAU,OAAO,YAAY,iBAAiB,SAAS,WAAW;AAE/F,QAAI,CAAC,SAAS,CAAC,MAAM,kBAAkB;AACrC,aAAO;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAEA,QAAI,UAAU;AACd,QAAI,WAAW;AAEf,QAAI,eAAe,YAAW,SAAS;AACrC,gBAAU,MAAM,aAAa,EAAE,WAAW;AAE1C,UAAI,CAAC,SAAS;AACZ,kBAAU,MAAM,YAAY,EAAE,WAAW;AACzC,mBAAW;AAAA,MACb;AAAA,IACF,WAAW,eAAe,YAAW,gBAAgB;AACnD,gBAAU,MAAM,aAAa,EAAE,WAAW;AAAA,IAC5C,WAAW,eAAe,YAAW,eAAe;AAClD,gBAAU,MAAM,YAAY,EAAE,WAAW;AACzC,iBAAW;AAAA,IACb,WAAW,eAAe,YAAW,sBAAsB;AACzD,UAAI,KAAK,MAAM,aAAa;AAE5B,UAAI,oBAAoB,UAAS,OAAO;AACtC,kBAAU,GAAG,gBAAgB,OAAO;AAAA,MACtC,OAAO;AACL,kBAAU,GAAG,eAAe,SAAS;AAAA,MACvC;AAAA,IACF,WAAW,eAAe,YAAW,qBAAqB;AACxD,UAAI,KAAK,MAAM,YAAY;AAC3B,iBAAW;AAEX,UAAI,oBAAoB,UAAS,OAAO;AACtC,kBAAU,GAAG,gBAAgB,OAAO;AAAA,MACtC,OAAO;AACL,kBAAU,GAAG,eAAe,SAAS;AAAA,MACvC;AAAA,IACF,WAAW,eAAe,YAAW,gBAAgB;AACnD,UAAI,KAAK,MAAM,aAAa;AAE5B,UAAI,oBAAoB,UAAS,OAAO;AACtC,kBAAU,GAAG,gBAAgB,OAAO;AAAA,MACtC,OAAO;AACL,kBAAU,GAAG,eAAe,SAAS;AAAA,MACvC;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,OAAO,OAAO;AAC7C,QAAI,UAAU,UAAU,mBAAmB,OAAO,MAAM,YAAY,MAAM,iBAAiB,MAAM,SAAS,MAAM,gBAAgB,EAAE;AAElI,QAAI,CAAC,SAAS;AACZ,YAAM,mBAAmB;AACzB,YAAM,kBAAkB;AACxB,YAAM,iBAAiB;AACvB;AAAA,IACF;AAGA,QAAI,WAAW,GAAG,OAAO,UAAU,SAAS,CAAC,EAAE,OAAO,QAAQ,SAAS,CAAC,EAAE,OAAO,KAAK;AACtF,QAAI,MAAM,qBAAqB;AAAU;AAEzC,QAAI,CAAC,MAAM,2BAA2B;AACpC,gBAAU,eAAe,EAAE,SAAS,MAAM,YAAY,IAAI,MAAM,YAAY,EAAE;AAAA,IAChF;AAKA,QAAI,UAAU,4BAA4B,KAAK,GAAG;AAChD,gBAAU,oBAAoB,SAAS,KAAK;AAAA,IAC9C,OAAO;AACL,YAAM,mBAAmB;AACzB,YAAM,kBAAkB;AACxB,UAAI,MAAM,UAAU,eAAe;AAEnC,UAAI,KAAK;AAEP,YAAI,MAAM;AACV,cAAM,iBAAiB,IAAI,WAAW,SAAS,MAAM,WAAW,MAAM,gBAAgB;AAAA,MACxF;AAAA,IACF;AAEA,UAAM,mBAAmB,GAAG,OAAO,UAAU,SAAS,CAAC,EAAE,OAAO,QAAQ,SAAS,CAAC,EAAE,OAAO,KAAK;AAAA,EAClG;AAGA,YAAU,4BAA4B,SAAU,aAChD,UACA,eAAe;AAEb,QAAI,YAAY;AAEhB,QAAI,YAAY;AAEhB,QAAI,CAAC,MAAM,WAAW,GAAG;AAQvB,kBAAY;AACZ,kBAAa,eAAc,YAAY;AAQvC,UAAI,YAAY,KAAQ;AACtB,oBAAY;AAAA,MACd,WAAW,YAAY,MAAS;AAC9B,oBAAY;AAAA,MACd;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,YAAU,gCAAgC,SAAU,OAAO,QAAQ,YAAY,UAAU,WAAW,OAAO,YAAY,qBAAqB,aAAa;AAKvJ,QAAI,mBAAoB,OAAM,KAAK,MAAM,MAAM;AAC/C,QAAI,cAAc,CAAC;AACnB,gBAAY,KAAK,MAAM,KAAK;AAC5B,gBAAY,KAAK,MAAM,KAAK;AAC5B,QAAI,gBAAgB,IAAO,aAAY,KAAK,YAAY;AACxD,QAAI,UAAU,OAAO,QAAQ;AAC7B,QAAI,SAAS,MAAM,QAAQ;AAC3B,QAAI,QAAQ;AACZ,QAAI,cAAc;AAElB,QAAI,YAAY,KAAK,aAAa,UAAU;AAC1C,eAAS,YAAY,GAAG,YAAY,YAAY,EAAE,WAAW;AAC3D,YAAI,MAAM;AAEV,iBAAS,UAAU,GAAG,UAAU,UAAU,EAAE,SAAS;AACnD,iBAAO,OAAO,SAAS,OAAO;AAC9B;AAAA,QACF;AAEA,YAAI,YAAY,KAAK,KAAK,GAAG;AAE7B,YAAI,aAAa;AACf,sBAAY,iBAAe,cAAc,WAAW,YAAY,KAAK;AAAA,QACvE;AAEA,YAAI,UAAU,UAAU,0BAA0B,WAAW,YAAY,IAAI,aAAa;AAC1F,gBAAQ,eAAe,QAAQ;AAC/B,gBAAQ,cAAc,KAAK,QAAQ;AACnC,uBAAe;AAAA,MACjB;AAAA,IACF,OAAO;AACL,eAAS;AAET,eAAS,aAAa,GAAG,aAAa,YAAY,EAAE,YAAY;AAC9D,YAAI,aAAa,OAAO;AAExB,YAAI,aAAa;AACf,uBAAa,iBAAe,cAAc,YAAY,YAAY,KAAK;AAAA,QACzE;AAEA,YAAI,WAAW,UAAU,0BAA0B,YAAY,YAAY,IAAI,aAAa;AAE5F,gBAAQ,eAAe,SAAS;AAChC,gBAAQ,cAAc,KAAK,SAAS;AACpC,uBAAe;AACf,iBAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAEA,YAAU,sBAAsB,SAAU,SAAS,OAAO;AACxD,QAAI,QAAQ,MAAM,YAAY,SAAS;AACvC,QAAI,cAAc,MAAM,YAAY,cAAc;AAElD,QAAI,aAAa;AAEf,uBAAe,YAAY,OAAO,KAAK;AAAA,IACzC;AAEA,QAAI,YAAY,MAAM,YAAY,SAAS;AAI3C,UAAM,iBAAiB;AAGvB,QAAI,MAAM,mBAAmB,QAAQ,UAAU,SAAS,IAAI,MAAM,gBAAgB,SAAS,KAAK,MAAM,YAAY,SAAS,IAAI,MAAM,gBAAgB,SAAS,KAAK,MAAM,YAAY,SAAS,MAAM,OAAO;AACzM,YAAM,YAAY,SAAS,KAAK;AAChC,YAAM,kBAAkB;AAIxB,YAAM,YAAY,MAAM;AACxB,UAAI,iBAAiB,MAAM,YAAY,2BAA2B;AAElE,UAAI,iBAAiB,MAAM;AACzB,yBAAiB;AAAA,MACnB;AAEA,wBAAkB;AAClB,UAAI,IAAK,OAAM,KAAK,MAAM,MAAO,kBAAiB,IAAI;AACtD,UAAI,WAAW,IAAI,aAAa,iBAAiB,CAAC;AAElD,eAAS,IAAI,GAAG,IAAI,gBAAgB,EAAE,GAAG;AACvC,iBAAS,KAAK,MAAM,KAAK,IAAI,IAAI;AAEjC,YAAI,aAAa;AACf,mBAAS,KAAK,KAAK,IAAI,IAAM,SAAS,EAAE;AAAA,QAC1C;AAAA,MACF;AAGA,eAAS,KAAK,GAAG,KAAK,gBAAgB,EAAE,IAAI;AAC1C,iBAAS,KAAK,kBAAkB;AAAA,MAClC;AAEA,YAAM,kBAAkB,eAAa,YAAY;AACjD,YAAM,gBAAgB,UAAU,GAAG,iBAAiB,GAAG,GAAG,GAAG,GAAG,CAAC;AACjE,UAAI,MAAM,eAAa,YAAY;AAAA,QACjC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,YAAM,gBAAgB,aAAa,EAAE,WAAW,MAAM,YAAY,WAAW,KAAK,MAAM,WAAW,CAAC,CAAC;AACrG,YAAM,YAAY,SAAS,SAAS;AAAA,IACtC;AAIA,QAAI,CAAC,MAAM,oBAAoB,UAAU,SAAS,IAAI,MAAM,iBAAiB,SAAS,KAAK,UAAU,aAAa,CAAC,EAAE,SAAS,IAAI,MAAM,iBAAiB,SAAS,KAAK,MAAM,YAAY,SAAS,IAAI,MAAM,iBAAiB,SAAS,GAAG;AAEvO,YAAM,mBAAmB;AAEzB,UAAI,WAAW,QAAQ,sBAAsB;AAC7C,UAAI,MAAM,QAAQ,kBAAkB;AAEpC,YAAM,mBAAmB,eAAa,YAAY;AAAA,QAChD,oBAAoB;AAAA,QACpB,QAAQ,IAAI,aAAa,MAAM,CAAC;AAAA,MAClC,CAAC;AACD,UAAI,kBAAkB,MAAM,YAAY,mBAAmB;AAG3D,UAAI,MAAM,YAAY,cAAc,MAAM,YAAW,aAAa,QAAQ,sBAAsB,IAAI,GAAG;AACrG,0BAAkB;AAAA,MACpB;AAEA,gBAAU,8BAA8B,SAAS,MAAM,kBAAkB,KAAK,UAAU,iBAAiB,OAAO,MAAM,YAAY,SAAS,GAAG,MAAM,gBAAgB,aAAa,EAAE,WAAW,EAAE,kBAAkB,IAAI,IAAI,GAAG,WAAW;AAAA,IAC1O;AAAA,EACF;AAEA,YAAU,cAAc,WAAY;AAClC,QAAI,MAAM,UAAU,eAAe;AAEnC,QAAI,KAAK;AAEP,UAAI,MAAM;AACV,aAAO,IAAI,SAAS;AAAA,IACtB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,8BAA8B,SAAU,OAAO;AACvD,QAAI,CAAC,MAAM,iCAAiC;AAC1C,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,eAAe,MAAM,YAAY,iBAAiB,GAAG;AAC7D,aAAO;AAAA,IACT;AAEA,QAAI,YAAY,UAAU,mBAAmB,OAAO,MAAM,YAAY,MAAM,iBAAiB,MAAM,SAAS,MAAM,gBAAgB;AAClI,QAAI,UAAU,UAAU;AAExB,QAAI,CAAC,SAAS;AAEZ,aAAO;AAAA,IACT;AAEA,QAAI,UAAU,UAAU;AACtB,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,cAAc,WAAU,WAAW,QAAQ,YAAY,MAAM,cAAa,iBAAiB,MAAM,cAAc,WAAU,gBAAgB;AAGjJ,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,WAAY;AACvC,UAAM,iBAAiB;AACvB,UAAM,mBAAmB;AACzB,UAAM,kBAAkB;AAAA,EAC1B;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,CAAC,MAAM,aAAa;AACtB,gBAAU,yBAAyB;AAAA,IACrC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,WAAW,WAAY;AAC/B,QAAI,KAAK,MAAM;AAEf,QAAI,MAAM,gBAAgB,MAAM;AAC9B,UAAI,OAAO,MAAM,YAAY,SAAS;AACtC,WAAK,OAAO,KAAK,OAAO;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,QAAQ,UAAU,aAAa;AACnC,QAAI,SAAS;AAAA,MACX,QAAQ,MAAM,UAAU,EAAE,kBAAkB,IAAI;AAAA,MAChD,OAAO,MAAM,SAAS,EAAE,kBAAkB,IAAI,MAAM,SAAS,EAAE,iBAAiB;AAAA,MAChF,OAAO,MAAM,SAAS,EAAE,kBAAkB,IAAI,IAAI,MAAM,SAAS,EAAE,iBAAiB;AAAA,MACpF,WAAW,MAAM,SAAS,EAAE,kBAAkB,IAAI,IAAI,MAAM,SAAS,EAAE,iBAAiB;AAAA,IAC1F;AACA,WAAO;AAAA,EACT;AAEA,YAAU,+BAA+B,gBAAe,8BAA8B;AACtF,YAAU,eAAe,gBAAe,cAAc;AACtD,YAAU,eAAe,gBAAe,cAAc;AACtD,YAAU,wBAAwB,gBAAe,uBAAuB;AACxE,YAAU,uBAAuB,gBAAe,sBAAsB;AACxE;AA8BA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,wBAAoB,OAAO,WAAW,OAAO,aAAa;AAC1D,QAAM,IAAI,WAAW,OAAO,CAAC,oBAAoB,kBAAkB,iBAAiB,CAAC;AACrF,QAAM,OAAO,WAAW,OAAO;AAAA,IAAC;AAAA,IAAoB;AAAA,IAAmB;AAAA,IAAa;AAAA,IAAoB;AAAA,IAAmC;AAAA,IAAe;AAAA,IAAc;AAAA,IAAc;AAAA,IAAoB;AAAA,IAAU;AAAA,IAA6B;AAAA,IAA0B;AAAA,EAC3Q,CAAC;AACD,QAAM,YAAY,WAAW,OAAO,CAAC,aAAa,GAAG,CAAC;AAEtD,MAAI,CAAC,MAAM,wBAAwB;AACjC,UAAM,yBAAyB,CAAC;AAAA,EAClC;AAEA,2BAAyB,mCAAmC,WAAW,KAAK;AAE5E,YAAU,WAAW,KAAK;AAC5B;AAxfA,IAcI,kBACA,qBACA,YACA,aACA,WACA,aACA,eA0bA,kBA4CA,eAEA;AA5fJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,mBAAkB,yBAAyB;AAA/C,IACI,sBAAqB,yBAAyB;AAClD,IAAI,aAAY,WAAU;AAA1B,IACI,cAAa,WAAU;AAD3B,IAEI,YAAW,WAAU;AACzB,IAAI,cAAa,mBAAmB;AACpC,IAAI,gBAAe,eAAa;AA0bhC,IAAI,mBAAiB;AAAA,MACnB,gBAAgB;AAAA,MAEhB,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,aAAa,CAAC,GAAG,CAAC;AAAA,MAClB,2BAA2B;AAAA,MAC3B,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,iBAAiB;AAAA,MAEjB,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,iCAAiC;AAAA,MACjC,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,qBAAqB;AAAA,MACrB,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,wBAAwB,CAAC;AAAA,IAC3B;AAqBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,WAAW;AAEvD,IAAI,cAAc,gBAAc,gBAAc,gBAAc;AAAA,MAC1D,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,gBAAe,GAAG,mBAAkB,GAAG,UAAS;AAAA;AAAA;;;AC/fnD,4BAA4B,KAAK,SAAS,QAAQ,OAAO,QAAQ,KAAK,KAAK;AACzE,MAAI;AACF,QAAI,OAAO,IAAI,KAAK,GAAG;AACvB,QAAI,QAAQ,KAAK;AAAA,EACnB,SAAS,OAAP;AACA,WAAO,KAAK;AACZ;AAAA,EACF;AAEA,MAAI,KAAK,MAAM;AACb,YAAQ,KAAK;AAAA,EACf,OAAO;AACL,YAAQ,QAAQ,KAAK,EAAE,KAAK,OAAO,MAAM;AAAA,EAC3C;AACF;AAEe,2BAA2B,IAAI;AAC5C,SAAO,WAAY;AACjB,QAAI,QAAO,MACP,OAAO;AACX,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,UAAI,MAAM,GAAG,MAAM,OAAM,IAAI;AAE7B,qBAAe,OAAO;AACpB,2BAAmB,KAAK,SAAS,QAAQ,OAAO,QAAQ,QAAQ,KAAK;AAAA,MACvE;AAEA,sBAAgB,KAAK;AACnB,2BAAmB,KAAK,SAAS,QAAQ,OAAO,QAAQ,SAAS,GAAG;AAAA,MACtE;AAEA,YAAM,MAAS;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AAlCA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAOA,QAAI,UAAW,SAAU,UAAS;AAChC;AAEA,UAAI,KAAK,OAAO;AAChB,UAAI,SAAS,GAAG;AAChB,UAAI;AACJ,UAAI,UAAU,OAAO,WAAW,aAAa,SAAS,CAAC;AACvD,UAAI,iBAAiB,QAAQ,YAAY;AACzC,UAAI,sBAAsB,QAAQ,iBAAiB;AACnD,UAAI,oBAAoB,QAAQ,eAAe;AAE/C,uBAAgB,MAAK,KAAK,OAAO;AAC/B,eAAO,eAAe,MAAK,KAAK;AAAA,UAC9B;AAAA,UACA,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,UAAU;AAAA,QACZ,CAAC;AACD,eAAO,KAAI;AAAA,MACb;AACA,UAAI;AAEF,gBAAO,CAAC,GAAG,EAAE;AAAA,MACf,SAAS,KAAP;AACA,kBAAS,SAAS,MAAK,KAAK,OAAO;AACjC,iBAAO,KAAI,OAAO;AAAA,QACpB;AAAA,MACF;AAEA,oBAAc,SAAS,SAAS,OAAM,aAAa;AAEjD,YAAI,iBAAiB,WAAW,QAAQ,qBAAqB,YAAY,UAAU;AACnF,YAAI,YAAY,OAAO,OAAO,eAAe,SAAS;AACtD,YAAI,UAAU,IAAI,QAAQ,eAAe,CAAC,CAAC;AAI3C,kBAAU,UAAU,iBAAiB,SAAS,OAAM,OAAO;AAE3D,eAAO;AAAA,MACT;AACA,eAAQ,OAAO;AAYf,wBAAkB,IAAI,MAAK,KAAK;AAC9B,YAAI;AACF,iBAAO,EAAE,MAAM,UAAU,KAAK,GAAG,KAAK,MAAK,GAAG,EAAE;AAAA,QAClD,SAAS,KAAP;AACA,iBAAO,EAAE,MAAM,SAAS,KAAK,IAAI;AAAA,QACnC;AAAA,MACF;AAEA,UAAI,yBAAyB;AAC7B,UAAI,yBAAyB;AAC7B,UAAI,oBAAoB;AACxB,UAAI,oBAAoB;AAIxB,UAAI,mBAAmB,CAAC;AAMxB,2BAAqB;AAAA,MAAC;AACtB,mCAA6B;AAAA,MAAC;AAC9B,4CAAsC;AAAA,MAAC;AAIvC,UAAI,oBAAoB,CAAC;AACzB,cAAO,mBAAmB,gBAAgB,WAAY;AACpD,eAAO;AAAA,MACT,CAAC;AAED,UAAI,WAAW,OAAO;AACtB,UAAI,0BAA0B,YAAY,SAAS,SAAS,OAAO,CAAC,CAAC,CAAC,CAAC;AACvE,UAAI,2BACA,4BAA4B,MAC5B,OAAO,KAAK,yBAAyB,cAAc,GAAG;AAGxD,4BAAoB;AAAA,MACtB;AAEA,UAAI,KAAK,2BAA2B,YAClC,UAAU,YAAY,OAAO,OAAO,iBAAiB;AACvD,wBAAkB,YAAY;AAC9B,cAAO,IAAI,eAAe,0BAA0B;AACpD,cAAO,4BAA4B,eAAe,iBAAiB;AACnE,wBAAkB,cAAc,QAC9B,4BACA,mBACA,mBACF;AAIA,qCAA+B,WAAW;AACxC,SAAC,QAAQ,SAAS,QAAQ,EAAE,QAAQ,SAAS,QAAQ;AACnD,kBAAO,WAAW,QAAQ,SAAS,KAAK;AACtC,mBAAO,KAAK,QAAQ,QAAQ,GAAG;AAAA,UACjC,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,eAAQ,sBAAsB,SAAS,QAAQ;AAC7C,YAAI,OAAO,OAAO,WAAW,cAAc,OAAO;AAClD,eAAO,OACH,SAAS,qBAGR,MAAK,eAAe,KAAK,UAAU,sBACpC;AAAA,MACN;AAEA,eAAQ,OAAO,SAAS,QAAQ;AAC9B,YAAI,OAAO,gBAAgB;AACzB,iBAAO,eAAe,QAAQ,0BAA0B;AAAA,QAC1D,OAAO;AACL,iBAAO,YAAY;AACnB,kBAAO,QAAQ,mBAAmB,mBAAmB;AAAA,QACvD;AACA,eAAO,YAAY,OAAO,OAAO,EAAE;AACnC,eAAO;AAAA,MACT;AAMA,eAAQ,QAAQ,SAAS,KAAK;AAC5B,eAAO,EAAE,SAAS,IAAI;AAAA,MACxB;AAEA,6BAAuB,WAAW,aAAa;AAC7C,wBAAgB,QAAQ,KAAK,SAAS,QAAQ;AAC5C,cAAI,SAAS,SAAS,UAAU,SAAS,WAAW,GAAG;AACvD,cAAI,OAAO,SAAS,SAAS;AAC3B,mBAAO,OAAO,GAAG;AAAA,UACnB,OAAO;AACL,gBAAI,SAAS,OAAO;AACpB,gBAAI,QAAQ,OAAO;AACnB,gBAAI,SACA,OAAO,UAAU,YACjB,OAAO,KAAK,OAAO,SAAS,GAAG;AACjC,qBAAO,YAAY,QAAQ,MAAM,OAAO,EAAE,KAAK,SAAS,QAAO;AAC7D,uBAAO,QAAQ,QAAO,SAAS,MAAM;AAAA,cACvC,GAAG,SAAS,KAAK;AACf,uBAAO,SAAS,KAAK,SAAS,MAAM;AAAA,cACtC,CAAC;AAAA,YACH;AAEA,mBAAO,YAAY,QAAQ,KAAK,EAAE,KAAK,SAAS,WAAW;AAIzD,qBAAO,QAAQ;AACf,sBAAQ,MAAM;AAAA,YAChB,GAAG,SAAS,OAAO;AAGjB,qBAAO,OAAO,SAAS,OAAO,SAAS,MAAM;AAAA,YAC/C,CAAC;AAAA,UACH;AAAA,QACF;AAEA,YAAI;AAEJ,yBAAiB,QAAQ,KAAK;AAC5B,gDAAsC;AACpC,mBAAO,IAAI,YAAY,SAAS,SAAS,QAAQ;AAC/C,qBAAO,QAAQ,KAAK,SAAS,MAAM;AAAA,YACrC,CAAC;AAAA,UACH;AAEA,iBAAO,kBAaL,kBAAkB,gBAAgB,KAChC,4BAGA,0BACF,IAAI,2BAA2B;AAAA,QACnC;AAIA,aAAK,UAAU;AAAA,MACjB;AAEA,4BAAsB,cAAc,SAAS;AAC7C,cAAO,cAAc,WAAW,qBAAqB,WAAY;AAC/D,eAAO;AAAA,MACT,CAAC;AACD,eAAQ,gBAAgB;AAKxB,eAAQ,QAAQ,SAAS,SAAS,SAAS,OAAM,aAAa,aAAa;AACzE,YAAI,gBAAgB;AAAQ,wBAAc;AAE1C,YAAI,OAAO,IAAI,cACb,KAAK,SAAS,SAAS,OAAM,WAAW,GACxC,WACF;AAEA,eAAO,SAAQ,oBAAoB,OAAO,IACtC,OACA,KAAK,KAAK,EAAE,KAAK,SAAS,QAAQ;AAChC,iBAAO,OAAO,OAAO,OAAO,QAAQ,KAAK,KAAK;AAAA,QAChD,CAAC;AAAA,MACP;AAEA,gCAA0B,SAAS,OAAM,SAAS;AAChD,YAAI,QAAQ;AAEZ,eAAO,gBAAgB,QAAQ,KAAK;AAClC,cAAI,UAAU,mBAAmB;AAC/B,kBAAM,IAAI,MAAM,8BAA8B;AAAA,UAChD;AAEA,cAAI,UAAU,mBAAmB;AAC/B,gBAAI,WAAW,SAAS;AACtB,oBAAM;AAAA,YACR;AAIA,mBAAO,WAAW;AAAA,UACpB;AAEA,kBAAQ,SAAS;AACjB,kBAAQ,MAAM;AAEd,iBAAO,MAAM;AACX,gBAAI,WAAW,QAAQ;AACvB,gBAAI,UAAU;AACZ,kBAAI,iBAAiB,oBAAoB,UAAU,OAAO;AAC1D,kBAAI,gBAAgB;AAClB,oBAAI,mBAAmB;AAAkB;AACzC,uBAAO;AAAA,cACT;AAAA,YACF;AAEA,gBAAI,QAAQ,WAAW,QAAQ;AAG7B,sBAAQ,OAAO,QAAQ,QAAQ,QAAQ;AAAA,YAEzC,WAAW,QAAQ,WAAW,SAAS;AACrC,kBAAI,UAAU,wBAAwB;AACpC,wBAAQ;AACR,sBAAM,QAAQ;AAAA,cAChB;AAEA,sBAAQ,kBAAkB,QAAQ,GAAG;AAAA,YAEvC,WAAW,QAAQ,WAAW,UAAU;AACtC,sBAAQ,OAAO,UAAU,QAAQ,GAAG;AAAA,YACtC;AAEA,oBAAQ;AAER,gBAAI,SAAS,SAAS,SAAS,OAAM,OAAO;AAC5C,gBAAI,OAAO,SAAS,UAAU;AAG5B,sBAAQ,QAAQ,OACZ,oBACA;AAEJ,kBAAI,OAAO,QAAQ,kBAAkB;AACnC;AAAA,cACF;AAEA,qBAAO;AAAA,gBACL,OAAO,OAAO;AAAA,gBACd,MAAM,QAAQ;AAAA,cAChB;AAAA,YAEF,WAAW,OAAO,SAAS,SAAS;AAClC,sBAAQ;AAGR,sBAAQ,SAAS;AACjB,sBAAQ,MAAM,OAAO;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAMA,mCAA6B,UAAU,SAAS;AAC9C,YAAI,SAAS,SAAS,SAAS,QAAQ;AACvC,YAAI,WAAW,YAAW;AAGxB,kBAAQ,WAAW;AAEnB,cAAI,QAAQ,WAAW,SAAS;AAE9B,gBAAI,SAAS,SAAS,WAAW;AAG/B,sBAAQ,SAAS;AACjB,sBAAQ,MAAM;AACd,kCAAoB,UAAU,OAAO;AAErC,kBAAI,QAAQ,WAAW,SAAS;AAG9B,uBAAO;AAAA,cACT;AAAA,YACF;AAEA,oBAAQ,SAAS;AACjB,oBAAQ,MAAM,IAAI,UAChB,gDAAgD;AAAA,UACpD;AAEA,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,GAAG;AAE5D,YAAI,OAAO,SAAS,SAAS;AAC3B,kBAAQ,SAAS;AACjB,kBAAQ,MAAM,OAAO;AACrB,kBAAQ,WAAW;AACnB,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,OAAO;AAElB,YAAI,CAAE,MAAM;AACV,kBAAQ,SAAS;AACjB,kBAAQ,MAAM,IAAI,UAAU,kCAAkC;AAC9D,kBAAQ,WAAW;AACnB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,MAAM;AAGb,kBAAQ,SAAS,cAAc,KAAK;AAGpC,kBAAQ,OAAO,SAAS;AAQxB,cAAI,QAAQ,WAAW,UAAU;AAC/B,oBAAQ,SAAS;AACjB,oBAAQ,MAAM;AAAA,UAChB;AAAA,QAEF,OAAO;AAEL,iBAAO;AAAA,QACT;AAIA,gBAAQ,WAAW;AACnB,eAAO;AAAA,MACT;AAIA,4BAAsB,EAAE;AAExB,cAAO,IAAI,mBAAmB,WAAW;AAOzC,cAAO,IAAI,gBAAgB,WAAW;AACpC,eAAO;AAAA,MACT,CAAC;AAED,cAAO,IAAI,YAAY,WAAW;AAChC,eAAO;AAAA,MACT,CAAC;AAED,4BAAsB,MAAM;AAC1B,YAAI,QAAQ,EAAE,QAAQ,KAAK,GAAG;AAE9B,YAAI,KAAK,MAAM;AACb,gBAAM,WAAW,KAAK;AAAA,QACxB;AAEA,YAAI,KAAK,MAAM;AACb,gBAAM,aAAa,KAAK;AACxB,gBAAM,WAAW,KAAK;AAAA,QACxB;AAEA,aAAK,WAAW,KAAK,KAAK;AAAA,MAC5B;AAEA,6BAAuB,OAAO;AAC5B,YAAI,SAAS,MAAM,cAAc,CAAC;AAClC,eAAO,OAAO;AACd,eAAO,OAAO;AACd,cAAM,aAAa;AAAA,MACrB;AAEA,uBAAiB,aAAa;AAI5B,aAAK,aAAa,CAAC,EAAE,QAAQ,OAAO,CAAC;AACrC,oBAAY,QAAQ,cAAc,IAAI;AACtC,aAAK,MAAM,IAAI;AAAA,MACjB;AAEA,eAAQ,OAAO,SAAS,QAAQ;AAC9B,YAAI,OAAO,CAAC;AACZ,iBAAS,OAAO,QAAQ;AACtB,eAAK,KAAK,GAAG;AAAA,QACf;AACA,aAAK,QAAQ;AAIb,eAAO,gBAAgB;AACrB,iBAAO,KAAK,QAAQ;AAClB,gBAAI,OAAM,KAAK,IAAI;AACnB,gBAAI,QAAO,QAAQ;AACjB,mBAAK,QAAQ;AACb,mBAAK,OAAO;AACZ,qBAAO;AAAA,YACT;AAAA,UACF;AAKA,eAAK,OAAO;AACZ,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,sBAAgB,UAAU;AACxB,YAAI,UAAU;AACZ,cAAI,iBAAiB,SAAS;AAC9B,cAAI,gBAAgB;AAClB,mBAAO,eAAe,KAAK,QAAQ;AAAA,UACrC;AAEA,cAAI,OAAO,SAAS,SAAS,YAAY;AACvC,mBAAO;AAAA,UACT;AAEA,cAAI,CAAC,MAAM,SAAS,MAAM,GAAG;AAC3B,gBAAI,IAAI,IAAI,OAAO,iBAAgB;AACjC,qBAAO,EAAE,IAAI,SAAS,QAAQ;AAC5B,oBAAI,OAAO,KAAK,UAAU,CAAC,GAAG;AAC5B,wBAAK,QAAQ,SAAS;AACtB,wBAAK,OAAO;AACZ,yBAAO;AAAA,gBACT;AAAA,cACF;AAEA,oBAAK,QAAQ;AACb,oBAAK,OAAO;AAEZ,qBAAO;AAAA,YACT;AAEA,mBAAO,KAAK,OAAO;AAAA,UACrB;AAAA,QACF;AAGA,eAAO,EAAE,MAAM,WAAW;AAAA,MAC5B;AACA,eAAQ,SAAS;AAEjB,4BAAsB;AACpB,eAAO,EAAE,OAAO,YAAW,MAAM,KAAK;AAAA,MACxC;AAEA,cAAQ,YAAY;AAAA,QAClB,aAAa;AAAA,QAEb,OAAO,SAAS,eAAe;AAC7B,eAAK,OAAO;AACZ,eAAK,OAAO;AAGZ,eAAK,OAAO,KAAK,QAAQ;AACzB,eAAK,OAAO;AACZ,eAAK,WAAW;AAEhB,eAAK,SAAS;AACd,eAAK,MAAM;AAEX,eAAK,WAAW,QAAQ,aAAa;AAErC,cAAI,CAAC,eAAe;AAClB,qBAAS,QAAQ,MAAM;AAErB,kBAAI,KAAK,OAAO,CAAC,MAAM,OACnB,OAAO,KAAK,MAAM,IAAI,KACtB,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,GAAG;AAC1B,qBAAK,QAAQ;AAAA,cACf;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,MAAM,WAAW;AACf,eAAK,OAAO;AAEZ,cAAI,YAAY,KAAK,WAAW;AAChC,cAAI,aAAa,UAAU;AAC3B,cAAI,WAAW,SAAS,SAAS;AAC/B,kBAAM,WAAW;AAAA,UACnB;AAEA,iBAAO,KAAK;AAAA,QACd;AAAA,QAEA,mBAAmB,SAAS,WAAW;AACrC,cAAI,KAAK,MAAM;AACb,kBAAM;AAAA,UACR;AAEA,cAAI,UAAU;AACd,0BAAgB,KAAK,QAAQ;AAC3B,mBAAO,OAAO;AACd,mBAAO,MAAM;AACb,oBAAQ,OAAO;AAEf,gBAAI,QAAQ;AAGV,sBAAQ,SAAS;AACjB,sBAAQ,MAAM;AAAA,YAChB;AAEA,mBAAO,CAAC,CAAE;AAAA,UACZ;AAEA,mBAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACpD,gBAAI,QAAQ,KAAK,WAAW;AAC5B,gBAAI,SAAS,MAAM;AAEnB,gBAAI,MAAM,WAAW,QAAQ;AAI3B,qBAAO,OAAO,KAAK;AAAA,YACrB;AAEA,gBAAI,MAAM,UAAU,KAAK,MAAM;AAC7B,kBAAI,WAAW,OAAO,KAAK,OAAO,UAAU;AAC5C,kBAAI,aAAa,OAAO,KAAK,OAAO,YAAY;AAEhD,kBAAI,YAAY,YAAY;AAC1B,oBAAI,KAAK,OAAO,MAAM,UAAU;AAC9B,yBAAO,OAAO,MAAM,UAAU,IAAI;AAAA,gBACpC,WAAW,KAAK,OAAO,MAAM,YAAY;AACvC,yBAAO,OAAO,MAAM,UAAU;AAAA,gBAChC;AAAA,cAEF,WAAW,UAAU;AACnB,oBAAI,KAAK,OAAO,MAAM,UAAU;AAC9B,yBAAO,OAAO,MAAM,UAAU,IAAI;AAAA,gBACpC;AAAA,cAEF,WAAW,YAAY;AACrB,oBAAI,KAAK,OAAO,MAAM,YAAY;AAChC,yBAAO,OAAO,MAAM,UAAU;AAAA,gBAChC;AAAA,cAEF,OAAO;AACL,sBAAM,IAAI,MAAM,wCAAwC;AAAA,cAC1D;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,QAAQ,SAAS,MAAM,KAAK;AAC1B,mBAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACpD,gBAAI,QAAQ,KAAK,WAAW;AAC5B,gBAAI,MAAM,UAAU,KAAK,QACrB,OAAO,KAAK,OAAO,YAAY,KAC/B,KAAK,OAAO,MAAM,YAAY;AAChC,kBAAI,eAAe;AACnB;AAAA,YACF;AAAA,UACF;AAEA,cAAI,gBACC,UAAS,WACT,SAAS,eACV,aAAa,UAAU,OACvB,OAAO,aAAa,YAAY;AAGlC,2BAAe;AAAA,UACjB;AAEA,cAAI,SAAS,eAAe,aAAa,aAAa,CAAC;AACvD,iBAAO,OAAO;AACd,iBAAO,MAAM;AAEb,cAAI,cAAc;AAChB,iBAAK,SAAS;AACd,iBAAK,OAAO,aAAa;AACzB,mBAAO;AAAA,UACT;AAEA,iBAAO,KAAK,SAAS,MAAM;AAAA,QAC7B;AAAA,QAEA,UAAU,SAAS,QAAQ,UAAU;AACnC,cAAI,OAAO,SAAS,SAAS;AAC3B,kBAAM,OAAO;AAAA,UACf;AAEA,cAAI,OAAO,SAAS,WAChB,OAAO,SAAS,YAAY;AAC9B,iBAAK,OAAO,OAAO;AAAA,UACrB,WAAW,OAAO,SAAS,UAAU;AACnC,iBAAK,OAAO,KAAK,MAAM,OAAO;AAC9B,iBAAK,SAAS;AACd,iBAAK,OAAO;AAAA,UACd,WAAW,OAAO,SAAS,YAAY,UAAU;AAC/C,iBAAK,OAAO;AAAA,UACd;AAEA,iBAAO;AAAA,QACT;AAAA,QAEA,QAAQ,SAAS,YAAY;AAC3B,mBAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACpD,gBAAI,QAAQ,KAAK,WAAW;AAC5B,gBAAI,MAAM,eAAe,YAAY;AACnC,mBAAK,SAAS,MAAM,YAAY,MAAM,QAAQ;AAC9C,4BAAc,KAAK;AACnB,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,QAEA,SAAS,SAAS,QAAQ;AACxB,mBAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACpD,gBAAI,QAAQ,KAAK,WAAW;AAC5B,gBAAI,MAAM,WAAW,QAAQ;AAC3B,kBAAI,SAAS,MAAM;AACnB,kBAAI,OAAO,SAAS,SAAS;AAC3B,oBAAI,SAAS,OAAO;AACpB,8BAAc,KAAK;AAAA,cACrB;AACA,qBAAO;AAAA,YACT;AAAA,UACF;AAIA,gBAAM,IAAI,MAAM,uBAAuB;AAAA,QACzC;AAAA,QAEA,eAAe,SAAS,UAAU,YAAY,SAAS;AACrD,eAAK,WAAW;AAAA,YACd,UAAU,OAAO,QAAQ;AAAA,YACzB;AAAA,YACA;AAAA,UACF;AAEA,cAAI,KAAK,WAAW,QAAQ;AAG1B,iBAAK,MAAM;AAAA,UACb;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAMA,aAAO;AAAA,IAET,EAKE,OAAO,WAAW,WAAW,OAAO,UAAU,CAAC,CACjD;AAEA,QAAI;AACF,2BAAqB;AAAA,IACvB,SAAS,sBAAP;AAWA,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW,qBAAqB;AAAA,MAClC,OAAO;AACL,iBAAS,KAAK,wBAAwB,EAAE,OAAO;AAAA,MACjD;AAAA,IACF;AAAA;AAAA;;;ACjvBA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACEjB,uBAAuB,WAAW,OAAO;AAEvC,QAAM,eAAe,KAAK,eAAe;AAEzC,YAAU,eAAe,WAAY;AACnC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,sBAAsB,SAAU,KAAK;AAC7C,UAAM,mBAAmB;AACzB,UAAM,2BAA2B,WAAW,OAAO,MAAM,WAAW,MAAM,gBAAgB,CAAC;AAAA,EAC7F;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM;AAAA,EACf;AAMA,YAAU,WAAW,SAAU,UAAU;AACvC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEjF,QAAI,MAAM,SAAS;AACjB;AAAA,IACF;AAGA,UAAM,gBAAgB;AACtB,UAAM,sBAAsB,QAAQ,SAAU,KAAK;AACjD,gBAAU,oBAAoB,GAAG;AACjC,eAAS,SAAS,SAAS;AAAA,IAC7B,CAAC;AACD,UAAM,UAAU,QAAQ,SAAU,KAAK;AACrC,UAAI,SAAS,UAAU,SAAS;AAAA,IAClC,CAAC;AACD,UAAM,uBAAuB,QAAQ,SAAU,KAAK;AAClD,gBAAU,oBAAoB,GAAG;AACjC,eAAS,SAAS,SAAS;AAAA,IAC7B,CAAC;AAAA,EACH;AACF;AAaA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,OAAO,CAAC,kBAAkB,CAAC;AAChD,QAAM,OAAO,WAAW,OAAO,CAAC,aAAa,iBAAiB,yBAAyB,wBAAwB,CAAC;AAEhH,gBAAc,WAAW,KAAK;AAChC;AAlEA,IAiDI,kBAmBA,eAEA;AAtEJ;AAAA;AAAA;AAiDA,IAAI,mBAAiB;AAAA,MACnB,WAAW,CAAC;AAAA,MACZ,kBAAkB;AAAA,MAClB,uBAAuB,CAAC;AAAA,MACxB,wBAAwB,CAAC;AAAA,MACzB,eAAe;AAAA,IACjB;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,eAAe;AAE3D,IAAI,kBAAkB;AAAA,MACpB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC3DA,sCAAsC,SAAS;AAC7C,MAAI,gBAAgB,mBAAiB,WAAW,QAAQ,UAAU,yCAAyC,0MAA0M,KAAK;AAC1T,UAAQ,WAAW,cAAc;AACnC;AAIA,kDAAkD,WAAW,OAAO;AAElE,QAAM,eAAe,KAAK,0CAA0C;AAEpE,YAAU,qBAAqB,WAAY;AAGzC,QAAI,WAAW,IAAI,aAAa,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;AAE5E,QAAI,cAAc,IAAI,aAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAE3D,QAAI,YAAY,IAAI,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC/C,QAAI,SAAS,eAAa,YAAY;AAAA,MACpC,oBAAoB;AAAA,MACpB,QAAQ;AAAA,IACV,CAAC;AACD,WAAO,QAAQ,QAAQ;AACvB,QAAI,UAAU,eAAa,YAAY;AAAA,MACrC,oBAAoB;AAAA,MACpB,QAAQ;AAAA,IACV,CAAC;AACD,YAAQ,QAAQ,SAAS;AACzB,QAAI,QAAQ,eAAa,YAAY;AAAA,MACnC,oBAAoB;AAAA,MACpB,QAAQ;AAAA,IACV,CAAC;AACD,UAAM,KAAK,QAAQ,EAAE,UAAU,OAAO,SAAS,gBAAe,SAAS;AAAA,MACrE;AAAA,MACA;AAAA,MACA,YAAY;AAAA,IACd,CAAC;AACD,UAAM,aAAa,SAAS;AAAA,EAC9B;AAEA,YAAU,oBAAoB,SAAU,UAAU;AAChD,QAAI;AAEJ,QAAI,OAAO,SAAS,QAAQ;AAC5B,QAAI,KAAK,SAAS,WAAW;AAC7B,UAAM,cAAc,qBAAqB,YAAY;AACrD,UAAM,YAAY,sBAAsB,QAAQ;AAEhD,IAAC,sBAAqB,MAAM,aAAa,OAAO,MAAM,oBAAoB,mBAAmB,IAAI,CAAC;AAElG,UAAM,YAAY,8BAA8B;AAChD,UAAM,YAAY,KAAK;AACvB,UAAM,yBAAyB,mBAAiB,YAAY;AAC5D,UAAM,uBAAuB,kBAAkB,GAAG,OAAO;AACzD,UAAM,uBAAuB,UAAU,GAAG,IAAI;AAC9C,UAAM,uBAAuB,kBAAkB,GAAG,UAAU;AAC5D,UAAM,uBAAuB,sBAAsB,QAAQ;AAC3D,UAAM,uBAAuB,gBAAgB,KAAK,IAAI,KAAK,IAAI,GAAG,gBAAgB,IAAI;AACtF,UAAM,sBAAsB,mBAAiB,YAAY;AACzD,UAAM,oBAAoB,kBAAkB,GAAG,IAAI;AACnD,UAAM,oBAAoB,UAAU,GAAG,GAAG;AAC1C,UAAM,oBAAoB,kBAAkB,GAAG,UAAU;AACzD,UAAM,oBAAoB,sBAAsB,QAAQ;AACxD,UAAM,oBAAoB,gBAAgB,KAAK,IAAI,KAAK,IAAI,GAAG,gBAAgB,IAAI;AACnF,UAAM,sBAAsB,mBAAiB,YAAY;AACzD,UAAM,oBAAoB,sBAAsB,QAAQ;AACxD,UAAM,oBAAoB,mBAAmB,KAAK,IAAI,KAAK,IAAI,gBAAgB,IAAI;AACnF,UAAM,YAAY,eAAe,MAAM,wBAAwB,CAAC;AAChE,UAAM,YAAY,eAAe,MAAM,qBAAqB,CAAC;AAC7D,UAAM,YAAY,eAAe,MAAM,mBAAmB;AAAA,EAC5D;AAEA,YAAU,mBAAmB,SAAU,UAAU;AAC/C,UAAM,aAAa,SAAS,eAAe,EAAE,wBAAwB,CAAC,sBAAsB,4BAA4B,4BAA4B,wBAAwB,4DAA4D,EAAE,KAAK,IAAI,GAAG,kBAAkB,EAAE;AAAA,EAC5Q;AAEA,YAAU,YAAY,SAAU,UAAU;AACxC,QAAI,KAAK,SAAS,WAAW;AAC7B,UAAM,KAAK,sBAAsB,QAAQ;AACzC,cAAU,mBAAmB;AAC7B,QAAI,UAAU,MAAM;AAEpB,UAAM,KAAK,QAAQ,EAAE,KAAK;AAE1B,QAAI,CAAC,MAAM,QAAQ,kBAAkB,SAAS,MAAM,KAAK,QAAQ,GAAG,YAAY,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG,MAAM,KAAK,QAAQ,EAAE,UAAU,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,GAAG;AAChL,sBAAc,4CAA4C;AAAA,IAC5D;AAEA,QAAI,CAAC,MAAM,QAAQ,kBAAkB,SAAS,MAAM,KAAK,QAAQ,GAAG,YAAY,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG,MAAM,KAAK,QAAQ,EAAE,UAAU,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,GAAG;AAChL,sBAAc,4CAA4C;AAAA,IAC5D;AAAA,EACF;AAEA,YAAU,WAAW,SAAU,UAAU,SAAS,aAAa;AAC7D,QAAI,MAAM,SAAS;AACjB;AAAA,IACF;AAEA,QAAI,OAAO,SAAS,QAAQ;AAC5B,QAAI,KAAK,SAAS,WAAW;AAE7B,QAAI,OAAO,MAAM;AAGf,YAAM,UAAU,QAAQ,SAAU,KAAK;AACrC,YAAI,SAAS,UAAU,SAAS;AAAA,MAClC,CAAC;AACD;AAAA,IACF;AAIA,QAAI,CAAC,SAAS,UAAU,KAAK,CAAC,GAAG,aAAa,6BAA6B,KAAK,CAAC,GAAG,aAAa,wBAAwB,GAAG;AAC1H,cAAQ,IAAI,UAAU;AACtB,gBAAU,oBAAoB,iBAAiB;AAC/C,cAAQ,SAAS,SAAS;AAC1B;AAAA,IACF;AAGA,QAAI,MAAM,gBAAgB,MAAM;AAC9B,gBAAU,kBAAkB,QAAQ;AAAA,IACtC,OAAO;AACL,UAAI,SAAS,MAAM,YAAY,QAAQ;AAEvC,UAAI,WAAW,QAAQ,OAAO,OAAO,KAAK,MAAM,OAAO,OAAO,KAAK,IAAI;AACrE,cAAM,YAAY,yBAAyB;AAC3C,cAAM,uBAAuB,yBAAyB,QAAQ;AAC9D,cAAM,oBAAoB,yBAAyB,QAAQ;AAC3D,cAAM,oBAAoB,yBAAyB,QAAQ;AAC3D,kBAAU,kBAAkB,QAAQ;AAAA,MACtC,OAAO;AAEL,cAAM,YAAY,8BAA8B;AAChD,cAAM,YAAY,KAAK;AAAA,MACzB;AAAA,IACF;AAEA,OAAG,YAAY,CAAC,GAAG,iBAAiB,CAAC;AACrC,OAAG,cAAc,GAAG,OAAO,GAAG,CAAC,GAAK,GAAK,GAAK,CAAG,CAAC;AAClD,OAAG,cAAc,GAAG,OAAO,GAAG,CAAC,CAAG,CAAC;AACnC,OAAG,UAAU,OAAO,OAAO,OAAO,KAAK;AAIvC,QAAI,YAAY,oBAAoB,IAAI,GAAG;AACzC,kBAAY,oBAAoB,YAAY;AAC5C,cAAQ,SAAS,WAAW;AAAA,IAC9B;AAEA,OAAG,UAAU,MAAM,MAAM,MAAM,IAAI;AACnC,OAAG,YAAY,CAAC,GAAG,mBAAmB,GAAG,iBAAiB,CAAC;AAC3D,OAAG,cAAc,GAAG,OAAO,GAAG,CAAC,GAAK,GAAK,GAAK,CAAG,CAAC;AAClD,OAAG,cAAc,GAAG,OAAO,GAAG,CAAC,GAAK,GAAK,GAAK,CAAG,CAAC;AAClD,OAAG,OAAO,GAAG,UAAU;AACvB,OAAG,OAAO,GAAG,KAAK;AAGlB,OAAG,kBAAkB,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,mBAAmB;AAEpE,cAAU,oBAAoB,iBAAiB;AAC/C,YAAQ,SAAS,SAAS;AAC1B,OAAG,YAAY,CAAC,GAAG,IAAI,CAAC;AACxB,UAAM,YAAY,kCAAkC;AAGpD,QAAI,MAAM,eAAe,MAAM;AAC7B,gBAAU,iBAAiB,QAAQ;AAAA,IACrC,OAAO;AACL,eAAS,eAAe,EAAE,mBAAmB,MAAM,UAAU;AAAA,IAC/D;AAGA,QAAI,CAAC,MAAM,SAAS;AAClB,YAAM,UAAU,qBAAqB,YAAY;AACjD,YAAM,QAAQ,sBAAsB,QAAQ;AAAA,IAC9C;AAEA,UAAM,QAAQ,KAAK;AAEnB,QAAI,MAAM,aAAa,SAAS,IAAI,UAAU,SAAS,GAAG;AACxD,gBAAU,UAAU,QAAQ;AAAA,IAC9B;AAEA,OAAG,kBAAkB,GAAG,WAAW,GAAG,qBAAqB,GAAG,KAAK,GAAG,mBAAmB;AACzF,OAAG,UAAU,KAAK;AAClB,OAAG,UAAU,GAAG,MAAM;AACtB,OAAG,SAAS,GAAG,GAAG,KAAK,IAAI,KAAK,EAAE;AAClC,OAAG,QAAQ,GAAG,GAAG,KAAK,IAAI,KAAK,EAAE;AAEjC,UAAM,uBAAuB,SAAS;AACtC,UAAM,WAAW,YAAY,0BAA0B,MAAM,uBAAuB,eAAe,CAAC;AACpG,UAAM,oBAAoB,SAAS;AACnC,UAAM,WAAW,YAAY,uBAAuB,MAAM,oBAAoB,eAAe,CAAC;AAE9F,OAAG,WAAW,GAAG,WAAW,GAAG,MAAM,KAAK,QAAQ,EAAE,gBAAgB,CAAC;AACrE,OAAG,UAAU,IAAI;AACjB,OAAG,UAAU,GAAG,MAAM;AACtB,UAAM,uBAAuB,WAAW;AACxC,UAAM,oBAAoB,WAAW;AAAA,EACvC;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO;AAAA,EACT;AAEA,YAAU,2BAA2B,SAAU,UAAU;AACvD,QAAI,MAAM,aAAa;AACrB,YAAM,YAAY,yBAAyB,QAAQ;AACnD,YAAM,cAAc;AAAA,IACtB;AAEA,QAAI,MAAM,wBAAwB;AAChC,YAAM,uBAAuB,yBAAyB,QAAQ;AAC9D,YAAM,yBAAyB;AAAA,IACjC;AAEA,QAAI,MAAM,qBAAqB;AAC7B,YAAM,oBAAoB,yBAAyB,QAAQ;AAC3D,YAAM,sBAAsB;AAAA,IAC9B;AAEA,QAAI,MAAM,qBAAqB;AAC7B,YAAM,oBAAoB,yBAAyB,QAAQ;AAC3D,YAAM,sBAAsB;AAAA,IAC9B;AAEA,QAAI,MAAM,SAAS;AACjB,YAAM,QAAQ,yBAAyB,QAAQ;AAC/C,YAAM,UAAU;AAAA,IAClB;AAEA,QAAI,MAAM,YAAY;AACpB,YAAM,WAAW,yBAAyB,QAAQ;AAClD,YAAM,aAAa;AAAA,IACrB;AAEA,QAAI,MAAM,MAAM;AACd,YAAM,KAAK,yBAAyB,QAAQ;AAC5C,YAAM,OAAO;AAAA,IACf;AAEA,cAAU,SAAS;AAAA,EACrB;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,kBAAc,OAAO,WAAW,OAAO,aAAa;AACpD,QAAM,eAAe,CAAC;AACtB,QAAM,IAAI,MAAM,cAAc;AAAA,IAC5B,OAAO;AAAA,EACT,CAAC;AACD,QAAM,OAAO,UAAU,YAAY;AACnC,QAAM,IAAI,WAAW,OAAO,CAAC,aAAa,CAAC;AAE3C,2CAAyC,WAAW,KAAK;AAC3D;AA3RA,IAWI,iBACA,iBAOA,kBAqPA,kBAqBA,eAEA;AA/RJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAiB,cAAY;AACjC,IAAI,kBAAgB,MAAM;AAO1B,IAAI,mBAAmB;AAqPvB,IAAI,mBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,MAAM;AAAA,IACR;AAiBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,0CAA0C;AAEtF,IAAI,6CAA6C;AAAA,MAC/C,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC7RA,wBAAwB,WAAW,OAAO;AAExC,QAAM,eAAe,KAAK,gBAAgB;AAK1C,YAAU,WAAW,SAAU,UAAU;AACvC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEjF,QAAI,MAAM,SAAS;AACjB;AAAA,IACF;AAGA,UAAM,gBAAgB;AAEtB,cAAU,oBAAoB,WAAW;AACzC,aAAS,SAAS,SAAS;AAC3B,QAAI,YAAY,SAAS,cAAc,EAAE,kBAAkB;AAE3D,QAAI,YAAY,SAAS,YAAY;AAErC,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,eAAS,QAAQ,GAAG,QAAQ,UAAU,QAAQ,SAAS;AACrD,YAAI,UAAU,UAAU;AACxB,YAAI,MAAM,SAAS,cAAc,EAAE,aAAa,EAAE;AAElD,YAAI,IAAI,QAAQ,KAAK,IAAI,SAAS,MAAM,GAAG;AAEzC,gBAAM,mBAAmB;AACzB,gBAAM,wBAAwB;AAC9B,gBAAM,cAAc;AACpB,gBAAM,oBAAoB;AAC1B,oBAAU,oBAAoB,WAAW;AACzC,kBAAQ,SAAS,SAAS;AAE1B,cAAI,MAAM,mBAAmB,KAAK,MAAM,cAAc,KAAK,MAAM,gBAAgB;AAC/E,gBAAI,OAAO,SAAS,mBAAmB;AAEvC,gBAAI,MAAM,gBAAgB,MAAM;AAC9B,oBAAM,cAAc,qBAAqB,YAAY;AAAA,YACvD;AAEA,kBAAM,YAAY,sBAAsB,QAAQ;AAChD,kBAAM,YAAY,8BAA8B;AAChD,gBAAI,SAAS,MAAM,YAAY,QAAQ;AAEvC,gBAAI,WAAW,QAAQ,OAAO,OAAO,KAAK,MAAM,OAAO,OAAO,KAAK,IAAI;AACrE,oBAAM,YAAY,OAAO,KAAK,IAAI,KAAK,EAAE;AACzC,oBAAM,YAAY,oBAAoB;AAAA,YACxC;AAEA,kBAAM,YAAY,KAAK;AACvB,sBAAU,oBAAoB,mBAAmB;AACjD,oBAAQ,SAAS,SAAS;AAC1B,kBAAM,YAAY,kCAAkC;AAEpD,kBAAM,iBAAiB;AAAA,UACzB;AAEA,oBAAU,oBAAoB,YAAY;AAC1C,kBAAQ,SAAS,SAAS;AAE1B,cAAI,MAAM,mBAAmB,GAAG;AAC9B,sBAAU,oBAAoB,YAAY;AAC1C,oBAAQ,SAAS,SAAS;AAAA,UAC5B;AAEA,cAAI,MAAM,wBAAwB,GAAG;AACnC,gBAAI,CAAC,MAAM,iBAAiB;AAC1B,oBAAM,kBAAkB,2CAAyC,YAAY;AAAA,YAC/E;AAEA,kBAAM,gBAAgB,SAAS,UAAU,SAAS,SAAS;AAAA,UAC7D;AAEA,cAAI,MAAM,cAAc,GAAG;AACzB,sBAAU,oBAAoB,YAAY;AAC1C,oBAAQ,SAAS,SAAS;AAAA,UAC5B;AAEA,cAAI,MAAM,oBAAoB,GAAG;AAC/B,sBAAU,oBAAoB,aAAa;AAC3C,oBAAQ,SAAS,SAAS;AAAA,UAC5B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,MAAM,aAAa;AACrB,aAAO,MAAM,YAAY,gBAAgB;AAAA,IAC3C;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,WAAY;AACnC,UAAM,iBAAiB;AAAA,EACzB;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,iCAAiC,WAAY;AACrD,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,uBAAuB,WAAY;AAC3C,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,6BAA6B,WAAY;AACjD,WAAO,MAAM;AAAA,EACf;AACF;AAcA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,kBAAc,OAAO,WAAW,OAAO,aAAa;AACpD,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,oBAAoB,yBAAyB,aAAa,CAAC;AAEvG,iBAAe,WAAW,KAAK;AACjC;AAjJA,IAgII,kBAmBA,eAEA;AArJJ;AAAA;AAAA;AACA;AACA;AACA;AA6HA,IAAI,mBAAiB;AAAA,MACnB,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,gBAAgB;AAAA,IAClB;AAYA,IAAI,gBAAc,MAAM,YAAY,UAAQ,gBAAgB;AAE5D,IAAI,mBAAmB;AAAA,MACrB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACxJA,IAAI,WAOA;AAPJ;AAAA;AAAA,IAAI,YAAY;AAAA,MACd,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,sBAAsB;AAAA,MACtB,UAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AACA,IAAI,cAAY;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;ACAA,6BAA6B,WAAW,OAAO;AAC7C,QAAM,eAAe,KAAK,qBAAqB;AAK/C,YAAU,qBAAkC,WAAY;AACtD,QAAI,OAAO,kBAAgC,2BAAoB,KAAK,iBAAiB,UAAU,KAAK,KAAK,KAAK,KAAK;AACjH,aAAO,2BAAoB,KAAK,kBAAkB,UAAU;AAC1D,eAAO,GAAG;AACR,kBAAQ,SAAS,OAAO,SAAS;AAAA,iBAC1B;AAAA,iBACA;AACH,qBAAO,SAAS,KAAK;AAAA;AAAA,QAE3B;AAAA,MACF,GAAG,OAAO;AAAA,IACZ,CAAC,CAAC;AAEF,WAAO,SAAU,IAAI,KAAK,KAAK,KAAK,KAAK;AACvC,aAAO,KAAK,MAAM,MAAM,SAAS;AAAA,IACnC;AAAA,EACF,EAAE;AAEF,YAAU,cAA2B,WAAY;AAC/C,QAAI,QAAQ,kBAAgC,2BAAoB,KAAK,kBAAkB,UAAU,KAAK,KAAK,KAAK,KAAK;AACnH,UAAI;AACJ,aAAO,2BAAoB,KAAK,mBAAmB,WAAW;AAC5D,eAAO,GAAG;AACR,kBAAQ,UAAU,OAAO,UAAU;AAAA,iBAC5B;AACH,wBAAU,OAAO;AACjB,qBAAO,UAAU,mBAAmB,UAAU,KAAK,KAAK,KAAK,GAAG;AAAA,iBAE7D;AACH,wBAAU,UAAU;AAEpB,kBAAI,CAAC,SAAS;AACZ,0BAAU,OAAO;AACjB;AAAA,cACF;AAEA,qBAAO,UAAU,OAAO,UAAU,QAAQ,kBAAkB,KAAK,KAAK,KAAK,GAAG,CAAC;AAAA,iBAE5E;AACH,qBAAO,UAAU,OAAO,UAAU,CAAC,CAAC;AAAA,iBAEjC;AAAA,iBACA;AACH,qBAAO,UAAU,KAAK;AAAA;AAAA,QAE5B;AAAA,MACF,GAAG,QAAQ;AAAA,IACb,CAAC,CAAC;AAEF,WAAO,SAAU,KAAK,KAAK,KAAK,KAAK,MAAM;AACzC,aAAO,MAAM,MAAM,MAAM,SAAS;AAAA,IACpC;AAAA,EACF,EAAE;AACJ;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,CAAC,oBAAoB,gBAAgB,CAAC;AAErE,sBAAoB,WAAW,KAAK;AACtC;AAtFA,IACA,oBAII,oBAoEA,kBAeA,eAEA;AA1FJ;AAAA;AAAA;AACA,yBAAgC;AAChC;AACA;AAEA,IAAI,qBAAoB,aAAW;AAoEnC,IAAI,mBAAiB;AAAA,MACnB,kBAAkB,mBAAkB;AAAA,MACpC,gBAAgB;AAAA,IAClB;AAYA,IAAI,gBAAc,MAAM,YAAY,UAAQ,qBAAqB;AAEjE,IAAI,wBAAwB;AAAA,MAC1B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;AC7FA,IAiBI,kBAWA,gBAQA;AApCJ;AAAA;AAiBA,IAAI,mBAAmB;AAAA,MACrB,WAAW;AAAA,MACX,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,IAAI,iBAAiB;AAAA,MACnB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AACA,IAAI,cAAY;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACnCA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAIzf,0BAA0B,WAAW,OAAO;AAE1C,QAAM,eAAe,KAAK,kBAAkB;AAE5C,YAAU,YAAY,WAAY;AAChC,WAAO,MAAM,OAAO,UAAU;AAAA,EAChC;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,aAAa,CAAC;AACpB,QAAM,OAAO,WAAW,OAAO,CAAC,eAAe,aAAa,cAAc,eAAe,CAAC;AAE1F,mBAAiB,WAAW,KAAK;AACnC;AAtCA,IAsBI,kBAkBA,eAEA;AA1CJ;AAAA;AAAA;AACA;AACA;AAoBA,IAAI,mBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,eAAe,CAAC;AAAA,IAClB;AAaA,IAAI,gBAAc,MAAM,YAAY,UAAQ,kBAAkB;AAE9D,IAAI,qBAAqB,gBAAc;AAAA,MACrC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,WAAS;AAAA;AAAA;;;AClCZ,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAQzf,qBAAqB,MAAM;AACzB,SAAO,GAAG,OAAO,KAAK,QAAQ,GAAG,EAAE,OAAO,KAAK,WAAW;AAC5D;AAEA,iBAAiB,IAAI,IAAI,IAAI,MAAM;AACjC,MAAI,CAAC,IAAI;AACP,WAAO;AAAA,EACT;AAEA,MAAI,SAAU,MAAM,MAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AACnD,MAAI,MAAM,CAAC;AACX,MAAI,KAAK,GAAG;AACZ,MAAI,KAAK,GAAG,SAAS;AACrB,MAAI,KAAK,GAAG,SAAS;AACrB,MAAI,MAAM,IAAI;AACd,SAAO;AACP,SAAO,IAAI;AACX,SAAO;AACP,SAAO,IAAI;AACX,SAAO;AACT;AAEA,qCAAqC,UAAU,mBAAmB,aAAa,qBAAqB;AAElG,MAAI,UAAU,cAAc,IAAI,IAAI;AAEpC,MAAI,YAAY,GAAG;AACjB,wBAAoB,KAAK,kBAAkB;AAC3C,wBAAoB,KAAK,kBAAkB;AAE3C,QAAI,kBAAkB,KAAK,SAAS,KAAK,MAAM,kBAAkB,KAAK,SAAS,KAAK,MAAM,kBAAkB,KAAK,SAAS,KAAK,MAAM,kBAAkB,KAAK,SAAS,KAAK,IAAI;AAC5K,aAAO;AAAA,IACT;AAGA,QAAI,kBAAkB,CAAC,kBAAkB,KAAK,SAAS,KAAK,IAAI,kBAAkB,KAAK,SAAS,KAAK,EAAE;AACvG,QAAI,UAAU,QAAQ,gBAAgB,IAAI,gBAAgB,IAAI,SAAS,UAAU,WAAU,aAAa,SAAS,IAAI;AAErH,QAAI,WAAW,KAAK,UAAU,YAAY,SAAS,MAAM,QAAQ;AAE/D,aAAO;AAAA,IACT;AAEA,QAAI,QAAQ,CAAC;AACb,UAAM,QAAQ;AACd,UAAM,SAAS,UAAU;AACzB,UAAM,OAAO,SAAS,MAAM,MAAM;AAClC,QAAI,cAAc,QAAQ,gBAAgB,IAAI,gBAAgB,IAAI,SAAS,UAAU,WAAU,uBAAuB,SAAS,IAAI;AAEnI,QAAI,cAAc,KAAK,cAAc,UAAU;AAC7C,oBAAc;AAAA,IAChB;AAEA,UAAM,cAAc,cAAc;AAElC,QAAI,SAAS,gBAAgB;AAC3B,UAAI,SAAU,iBAAgB,KAAM,UAAS,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK,gBAAgB,MAAM;AACrG,YAAM,SAAU,OAAM,SAAS,QAAQ,UAAU,SAAS,QAAQ,SAAS,MAAM;AACjF,YAAM,kBAAkB;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAIA,MAAI,UAAU,CAAC,kBAAkB,IAAI,kBAAkB,EAAE;AACzD,MAAI,SAAS,CAAC,GAAG,CAAC;AAClB,MAAI,OAAO,4BAA4B,UAAU,mBAAmB,GAAG,mBAAmB;AAE1F,MAAI,QAAQ,KAAK,OAAO;AACtB,WAAO;AAAA,EACT;AAEA,WAAS,OAAO,GAAG,OAAO,SAAS,EAAE,MAAM;AAEzC,aAAS,IAAI,QAAQ,KAAK,OAAO,QAAQ,KAAK,OAAO,GAAG,KAAK,QAAQ,KAAK,MAAM,EAAE,GAAG;AACnF,aAAO,KAAK;AAEZ,UAAI,QAAQ,MAAM,MAAM;AACtB,eAAO,KAAK,QAAQ,KAAK;AACzB,eAAO,4BAA4B,UAAU,QAAQ,GAAG,mBAAmB;AAE3E,YAAI,QAAQ,KAAK,OAAO;AACtB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO,KAAK,QAAQ,KAAK;AACzB,aAAO,4BAA4B,UAAU,QAAQ,GAAG,mBAAmB;AAE3E,UAAI,QAAQ,KAAK,OAAO;AACtB,eAAO;AAAA,MACT;AAAA,IACF;AAGA,aAAS,IAAI,QAAQ,MAAM,OAAO,QAAQ,KAAM,QAAO,KAAK,GAAG,KAAK,QAAQ,KAAM,QAAO,IAAI,EAAE,GAAG;AAChG,aAAO,KAAK;AAEZ,UAAI,QAAQ,MAAM,MAAM;AACtB,eAAO,KAAK,QAAQ,KAAK;AACzB,eAAO,4BAA4B,UAAU,QAAQ,GAAG,mBAAmB;AAE3E,YAAI,QAAQ,KAAK,OAAO;AACtB,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO,KAAK,QAAQ,KAAK;AACzB,aAAO,4BAA4B,UAAU,QAAQ,GAAG,mBAAmB;AAE3E,UAAI,QAAQ,KAAK,OAAO;AACtB,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAGA,sBAAoB,KAAK,kBAAkB;AAC3C,sBAAoB,KAAK,kBAAkB;AAC3C,SAAO;AACT;AAGA,0BAA0B,kBAAkB,SAAS,gBAAgB,UAAU,oBAAoB;AACjG,MAAI,MAAM,CAAC;AACX,MAAI,QAAQ;AACZ,UAAQ,QAAQ,SAAU,OAAO,KAAK;AACpC,QAAI,QAAQ,mBAAiB,YAAY;AACzC,UAAM,eAAe,kBAAiB,OAAO;AAE7C,YAAQ;AAAA,WACD,mBAAkB;AACrB,cAAM,aAAa,gBAAe,IAAI;AACtC;AAAA,WAEG,mBAAkB;AACrB,cAAM,aAAa,gBAAe,KAAK;AACvC;AAAA;AAGA,wBAAc,2BAA2B;AAAA;AAG7C,UAAM,cAAc,EAAE,SAAS,MAAM,KAAK;AAC1C,UAAM,cAAc,EAAE,OAAO,MAAM,KAAK;AACxC,UAAM,cAAc,EAAE,cAAc,MAAM,KAAK;AAC/C,UAAM,cAAc,EAAE,aAAa,MAAM;AAEzC,QAAI,gBAAgB;AAClB,YAAM,cAAc,EAAE,kBAAkB,CAAC,MAAM,KAAK,gBAAgB,IAAI,MAAM,KAAK,gBAAgB,IAAI,MAAM,KAAK,MAAM;AACxH,YAAM,cAAc,EAAE,gBAAgB,mBAAmB,eAAe,MAAM,KAAK,gBAAgB,IAAI,MAAM,KAAK,gBAAgB,IAAI,MAAM,KAAK,QAAQ,QAAQ;AAAA,IACnK;AAEA,UAAM,iBAAiB,MAAM,YAAY;AACzC,QAAI,SAAS;AACb;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,mCAAmC,UAAU,KAAK,KAAK,KAAK,KAAK;AAC/D,MAAI,KAAK,KAAK,MAAM,GAAG;AACvB,MAAI,KAAK,KAAK,MAAM,GAAG;AACvB,MAAI,KAAK,KAAK,MAAM,GAAG;AACvB,MAAI,KAAK,KAAK,MAAM,GAAG;AACvB,MAAI,UAAU,oBAAI,IAAI;AACtB,MAAI,sBAAsB,CAAC,GAAG,CAAC;AAE/B,WAAS,KAAK,IAAI,MAAM,IAAI,MAAM;AAChC,aAAS,KAAK,IAAI,MAAM,IAAI,MAAM;AAChC,UAAI,MAAM,CAAC,IAAI,EAAE;AACjB,UAAI,OAAO,4BAA4B,UAAU,KAAK,GAAG,mBAAmB;AAE5E,UAAI,QAAQ,KAAK,OAAO;AACtB,YAAI,OAAO,YAAY,IAAI;AAE3B,YAAI,CAAC,QAAQ,IAAI,IAAI,GAAG;AACtB,kBAAQ,IAAI,MAAM;AAAA,YAChB;AAAA,YACA,YAAY;AAAA,YACZ,cAAc,CAAC,KAAK,WAAW;AAAA,UACjC,CAAC;AAAA,QACH,OAAO;AACL,cAAI,MAAM,QAAQ,IAAI,IAAI;AAC1B,cAAI;AAEJ,cAAI,SAAS,gBAAgB;AAC3B,gBAAI,KAAK,SAAS,IAAI,KAAK,QAAQ;AACjC,kBAAI,OAAO;AAAA,YACb;AAAA,UACF;AAEA,cAAI,IAAI,aAAa,QAAQ,KAAK,WAAW,MAAM,IAAI;AACrD,gBAAI,aAAa,KAAK,KAAK,WAAW;AAAA,UACxC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO,iBAAiB,SAAS,kBAAkB,SAAS,SAAS,gBAAgB,SAAS,UAAU,SAAS,kBAAkB;AACrI;AAKA,mCAAmC,WAAW,OAAO;AAEnD,QAAM,eAAe,KAAK,2BAA2B;AAErD,YAAU,oBAAoB,WAAY;AACxC,UAAM,YAAY,CAAC;AACnB,UAAM,UAAU;AAAA,EAClB;AAGA,YAAU,iBAAiB,WAAY;AACrC,UAAM,kBAAkB,MAAM,oBAAoB,eAAe,MAAM,QAAQ;AAC/E,UAAM,iBAAiB;AAEvB,QAAI,OAAO,MAAM,oBAAoB,QAAQ;AAE7C,QAAI,CAAC,MAAM,aAAa;AACtB,YAAM,cAAc,qBAAqB,YAAY;AACrD,YAAM,YAAY,sBAAsB,MAAM,mBAAmB;AACjE,YAAM,YAAY,8BAA8B;AAChD,YAAM,YAAY,OAAO,KAAK,IAAI,KAAK,EAAE;AAEzC,YAAM,YAAY,oBAAoB;AAAA,IACxC,OAAO;AACL,YAAM,YAAY,sBAAsB,MAAM,mBAAmB;AACjE,YAAM,YAAY,8BAA8B;AAChD,UAAI,SAAS,MAAM,YAAY,QAAQ;AAEvC,UAAI,OAAO,OAAO,KAAK,MAAM,OAAO,OAAO,KAAK,IAAI;AAClD,cAAM,YAAY,OAAO,KAAK,IAAI,KAAK,EAAE;AAEzC,cAAM,YAAY,oBAAoB;AAAA,MACxC,OAAO;AACL,cAAM,YAAY,KAAK;AAAA,MACzB;AAAA,IACF;AAEA,UAAM,gBAAgB,MAAM;AAE5B,UAAM,gBAAgB,YAAY,SAAS;AAE3C,UAAM,WAAW,CAAC;AAClB,UAAM,QAAQ,CAAC;AACf,cAAU,kBAAkB;AAAA,EAC9B;AAGA,YAAU,eAAe,WAAY;AACnC,UAAM,WAAW,CAAC;AAElB,UAAM,gBAAgB,YAAY,IAAI;AAEtC,UAAM,YAAY,kCAAkC;AAAA,EACtD;AAEA,YAAU,iBAAiB,WAAY;AAAA,EAAC;AAExC,YAAU,kBAAkB,WAAY;AAAA,EAAC;AAGzC,YAAU,SAAS,WAAY;AAC7B,QAAI,MAAM;AAEV,QAAI,UAAU,eAAe,GAAG;AAC9B,YAAM,UAAU,kBAAkB,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,EAAE;AAC5F,gBAAU,kBAAkB;AAAA,IAC9B;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAkC,WAAY;AACtD,QAAI,OAAO,kBAAgC,4BAAoB,KAAK,iBAAiB,UAAU,KAAK,KAAK,KAAK,KAAK;AACjH,UAAI,MAAM;AACV,aAAO,4BAAoB,KAAK,kBAAkB,UAAU;AAC1D,eAAO,GAAG;AACR,kBAAQ,SAAS,OAAO,SAAS;AAAA,iBAC1B;AAEH,oBAAM,WAAW;AAEjB,kBAAI,QAAQ,QAAW;AACrB,uBAAO,MAAM,oBAAoB,QAAQ;AACzC,0BAAU,QAAQ,GAAG,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,CAAC;AAAA,cAClD,OAAO;AACL,0BAAU,QAAQ,KAAK,KAAK,KAAK,GAAG;AAAA,cACtC;AAGA,kBAAI,UAAU,eAAe,GAAG;AAC9B,yBAAS,OAAO;AAChB;AAAA,cACF;AAEA,qBAAO,SAAS,OAAO,UAAU,KAAK;AAAA,iBAEnC;AACH,uBAAS;AAAA,gBACP,MAAM,mBAAmB,MAAM,IAAI;AAAA,gBACnC,WAAW,mBAAmB,MAAM,SAAS;AAAA,gBAC7C,gBAAgB,MAAM;AAAA,gBACtB,SAAS,MAAM;AAAA,gBACf,OAAO,mBAAmB,MAAM,KAAK;AAAA,gBACrC,kBAAkB,MAAM;AAAA,gBACxB;AAAA,gBACA,oBAAoB,MAAM;AAAA,cAC5B;AAEA,qBAAO,oBAAoB,WAAY;AACrC,yBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,uBAAK,QAAQ,UAAU;AAAA,gBACzB;AAEA,uBAAO,0BAA0B,MAAM,QAAQ,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;AAAA,cACtE;AAEA,qBAAO,SAAS,OAAO,UAAU,MAAM;AAAA,iBAEpC;AAAA,iBACA;AACH,qBAAO,SAAS,KAAK;AAAA;AAAA,QAE3B;AAAA,MACF,GAAG,OAAO;AAAA,IACZ,CAAC,CAAC;AAEF,WAAO,SAAU,IAAI,KAAK,KAAK,KAAK,KAAK;AACvC,aAAO,KAAK,MAAM,MAAM,SAAS;AAAA,IACnC;AAAA,EACF,EAAE;AAGF,YAAU,iBAAiB,WAAY;AACrC,QAAI,CAAC,MAAM,YAAY,CAAC,MAAM,qBAAqB;AACjD,sBAAc,sDAAsD;AACpE,aAAO;AAAA,IACT;AAEA,UAAM,kBAAkB,MAAM,oBAAoB,eAAe,MAAM,QAAQ;AAG/E,UAAM,oBAAoB,cAAc,EAAE,UAAU;AASpD,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAGD,UAAM,qBAAqB,MAAM,SAAS,yBAAyB;AACnE,UAAM,SAAS,cAAc,GAAK,GAAK,CAAG;AAE1C,QAAI,UAAU,MAAM,oBAAoB,gBAAgB;AAExD,cAAU,eAAe;AAEzB,SAAK,MAAM,cAAc,WAAU,gBAAgB,MAAM,eAAe,WAAU,sBAAsB,MAAM,eAAe;AAC3H,UAAI,UAAU,aAAa,MAAM,WAAW,GAAG;AAC7C,kBAAU,eAAe,MAAM,WAAW;AAE1C,YAAI,MAAM,kBAAkB,MAAM,gBAAgB,WAAU,cAAc,OAAO,QAAQ,GAAG,iBAAiB,cAAc,OAAO,QAAQ,GAAG,mBAAmB,YAAY;AAC1K,kBAAQ,GAAG,aAAa;AAExB,gBAAM,oBAAoB,kBAAkB;AAAA,QAC9C,OAAO;AACL,gBAAM,oBAAoB,kBAAkB;AAAA,QAC9C;AAEA,kBAAU,gBAAgB,MAAM,WAAW;AAC3C,kBAAU,gBAAgB,MAAM,WAAW;AAAA,MAC7C;AAAA,IACF;AAEA,cAAU,aAAa;AAEvB,UAAM,SAAS,cAAc,MAAM,kBAAkB;AACrD,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAGD,WAAO;AAAA,EACT;AAGA,YAAU,eAAe,SAAU,MAAM;AACvC,WAAO;AAAA,EACT;AAGA,YAAU,kBAAkB,SAAU,QAAQ;AAC5C,UAAM,UAAU,UAAU,MAAM,oBAAoB,aAAa,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,EAAE;AAE3H,QAAI,WAAW,WAAU,YAAY;AACnC,UAAI,MAAM,gBAAgB;AACxB,YAAI,UAAU,MAAM,oBAAoB,gBAAgB;AAExD,YAAI,OAAO,QAAQ,GAAG,iBAAiB,cAAc,OAAO,QAAQ,GAAG,mBAAmB,YAAY;AACpG,cAAI,KAAK,QAAQ,GAAG,eAAe;AACnC,aAAG,8BAA8B;AACjC,aAAG,KAAK;AACR,gBAAM,UAAU,MAAM,oBAAoB,aAAa,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,EAAE;AACjH,aAAG,kCAAkC;AAAA,QACvC;AAAA,MACF;AAEA,gBAAU,iBAAiB,MAAM,UAAU,OAAO;AAAA,IACpD;AAAA,EACF;AAGA,YAAU,mBAAmB,SAAU,aAAa;AAClD,aAAS,KAAK,GAAG,MAAM,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAC1D,eAAS,KAAK,GAAG,MAAM,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAC1D,YAAI,MAAM,QAAQ,IAAI,IAAI,aAAa,MAAM,IAAI;AAEjD,YAAI,MAAM,GAAG;AACX;AAEA,cAAI,CAAE,QAAO,MAAM,WAAW;AAC5B,kBAAM,SAAS,OAAO;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,YAAU,aAAa,SAAU,MAAM;AACrC,QAAI,MAAM,gBAAgB,WAAU,YAAY;AAC9C,gBAAU,yBAAyB,MAAM,MAAM,SAAS,QAAQ;AAChE,YAAM,MAAM,KAAK,IAAI;AAAA,IACvB;AAAA,EACF;AAGA,YAAU,uBAAuB,SAAU,OAAO;AAChD,QAAI,MAAM,gBAAgB,WAAU,sBAAsB;AACxD,gBAAU,yBAAyB,QAAQ,QAAQ;AAAA,IACrD;AAAA,EACF;AAIA,YAAU,oBAAoB,SAAU,UAAU;AAChD,QAAI,WAAW,GAAG;AAGhB;AAAA,IACF;AAEA,UAAM,iBAAiB,WAAW,MAAM,iBAAiB,WAAW,MAAM;AAAA,EAG5E;AAGA,YAAU,mBAAmB,SAAU,MAAM;AAC3C,WAAO,MAAM,aAAa,YAAW,IAAI;AAAA,EAC3C;AAGA,YAAU,YAAY,SAAU,IAAI;AAClC,WAAO,QAAQ,MAAM,SAAS,GAAG;AAAA,EACnC;AAEA,YAAU,2BAA2B,SAAU,KAAK;AAClD,UAAM,eAAe,KAAK,MAAM,MAAM;AACtC,UAAM,eAAe,KAAK,KAAK,MAAM,MAAM,GAAG,IAAI,MAAM;AACxD,UAAM,eAAe,KAAK,KAAK,MAAM,MAAM,KAAK,IAAI,MAAM;AAAA,EAC5D;AASA,YAAU,sBAAsB,SAAU,mBAAmB,aAAa,qBAAqB;AAE7F,QAAI,UAAU,cAAc,IAAI,IAAI;AAEpC,QAAI,YAAY,GAAG;AACjB,0BAAoB,KAAK,kBAAkB;AAC3C,0BAAoB,KAAK,kBAAkB;AAE3C,UAAI,kBAAkB,KAAK,MAAM,KAAK,MAAM,kBAAkB,KAAK,MAAM,KAAK,MAAM,kBAAkB,KAAK,MAAM,KAAK,MAAM,kBAAkB,KAAK,MAAM,KAAK,IAAI;AAChK,eAAO;AAAA,MACT;AAGA,UAAI,kBAAkB,CAAC,kBAAkB,KAAK,MAAM,KAAK,IAAI,kBAAkB,KAAK,MAAM,KAAK,EAAE;AACjG,UAAI,UAAU,QAAQ,gBAAgB,IAAI,gBAAgB,IAAI,MAAM,UAAU,WAAU,aAAa,MAAM,IAAI;AAE/G,UAAI,WAAW,KAAK,UAAU,YAAY,MAAM,MAAM,QAAQ;AAE5D,eAAO;AAAA,MACT;AAEA,UAAI,SAAS,CAAC;AACd,aAAO,QAAQ;AACf,aAAO,SAAS,UAAU;AAC1B,aAAO,OAAO,MAAM,MAAM,OAAO;AACjC,UAAI,cAAc,QAAQ,gBAAgB,IAAI,gBAAgB,IAAI,MAAM,UAAU,WAAU,uBAAuB,MAAM,IAAI;AAE7H,UAAI,cAAc,KAAK,cAAc,UAAU;AAC7C,sBAAc;AAAA,MAChB;AAEA,aAAO,cAAc,cAAc;AAEnC,UAAI,MAAM,gBAAgB;AACxB,YAAI,SAAU,iBAAgB,KAAM,OAAM,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,gBAAgB,MAAM;AAC/F,eAAO,SAAU,OAAM,MAAM,QAAQ,UAAU,MAAM,QAAQ,SAAS,MAAM;AAC5E,eAAO,kBAAkB;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAIA,QAAI,UAAU,CAAC,kBAAkB,IAAI,kBAAkB,EAAE;AACzD,QAAI,SAAS,CAAC,GAAG,CAAC;AAClB,QAAI,OAAO,UAAU,oBAAoB,mBAAmB,GAAG,mBAAmB;AAElF,QAAI,QAAQ,KAAK,OAAO;AACtB,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,GAAG,OAAO,SAAS,EAAE,MAAM;AAEzC,eAAS,IAAI,QAAQ,KAAK,OAAO,QAAQ,KAAK,OAAO,GAAG,KAAK,QAAQ,KAAK,MAAM,EAAE,GAAG;AACnF,eAAO,KAAK;AAEZ,YAAI,QAAQ,MAAM,MAAM;AACtB,iBAAO,KAAK,QAAQ,KAAK;AACzB,iBAAO,UAAU,oBAAoB,QAAQ,GAAG,mBAAmB;AAEnE,cAAI,QAAQ,KAAK,OAAO;AACtB,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO,KAAK,QAAQ,KAAK;AACzB,eAAO,UAAU,oBAAoB,QAAQ,GAAG,mBAAmB;AAEnE,YAAI,QAAQ,KAAK,OAAO;AACtB,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,eAAS,IAAI,QAAQ,MAAM,OAAO,QAAQ,KAAM,QAAO,KAAK,GAAG,KAAK,QAAQ,KAAM,QAAO,IAAI,EAAE,GAAG;AAChG,eAAO,KAAK;AAEZ,YAAI,QAAQ,MAAM,MAAM;AACtB,iBAAO,KAAK,QAAQ,KAAK;AACzB,iBAAO,UAAU,oBAAoB,QAAQ,GAAG,mBAAmB;AAEnE,cAAI,QAAQ,KAAK,OAAO;AACtB,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO,KAAK,QAAQ,KAAK;AACzB,eAAO,UAAU,oBAAoB,QAAQ,GAAG,mBAAmB;AAEnE,YAAI,QAAQ,KAAK,OAAO;AACtB,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAGA,wBAAoB,KAAK,kBAAkB;AAC3C,wBAAoB,KAAK,kBAAkB;AAC3C,WAAO;AAAA,EACT;AAGA,YAAU,oBAAoB,SAAU,KAAK,KAAK,KAAK,KAAK;AAC1D,QAAI,KAAK,KAAK,MAAM,GAAG;AACvB,QAAI,KAAK,KAAK,MAAM,GAAG;AACvB,QAAI,KAAK,KAAK,MAAM,GAAG;AACvB,QAAI,KAAK,KAAK,MAAM,GAAG;AACvB,QAAI,UAAU,oBAAI,IAAI;AACtB,QAAI,sBAAsB,CAAC,GAAG,CAAC;AAE/B,aAAS,KAAK,IAAI,MAAM,IAAI,MAAM;AAChC,eAAS,KAAK,IAAI,MAAM,IAAI,MAAM;AAChC,YAAI,MAAM,CAAC,IAAI,EAAE;AACjB,YAAI,OAAO,UAAU,oBAAoB,KAAK,GAAG,mBAAmB;AAEpE,YAAI,QAAQ,KAAK,OAAO;AACtB,cAAI,OAAO,YAAY,IAAI;AAE3B,cAAI,CAAC,QAAQ,IAAI,IAAI,GAAG;AACtB,oBAAQ,IAAI,MAAM;AAAA,cAChB;AAAA,cACA,YAAY;AAAA,cACZ,cAAc,CAAC,KAAK,WAAW;AAAA,YACjC,CAAC;AAAA,UACH,OAAO;AACL,gBAAI,MAAM,QAAQ,IAAI,IAAI;AAC1B,gBAAI;AAEJ,gBAAI,MAAM,gBAAgB;AACxB,kBAAI,KAAK,SAAS,IAAI,KAAK,QAAQ;AACjC,oBAAI,OAAO;AAAA,cACb;AAAA,YACF;AAEA,gBAAI,IAAI,aAAa,QAAQ,KAAK,WAAW,MAAM,IAAI;AACrD,kBAAI,aAAa,KAAK,KAAK,WAAW;AAAA,YACxC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,iBAAiB,MAAM,kBAAkB,SAAS,MAAM,gBAAgB,MAAM,UAAU,MAAM,mBAAmB;AAAA,EAC1H;AAGA,YAAU,SAAS,SAAU,GAAG,GAAG;AACjC,UAAM,sBAAsB;AAC5B,UAAM,WAAW;AAAA,EACnB;AAGA,MAAI,eAAe,UAAU;AAE7B,YAAU,UAAU,WAAY;AAC9B,QAAI,aAAa,MAAM,QAAQ,SAAS,GAAG;AACzC,YAAM,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,EAAE;AACxC,YAAM,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,EAAE;AACxC,YAAM,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,EAAE;AACxC,YAAM,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,EAAE;AACxC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AACF;AAgBA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,wBAAsB,OAAO,WAAW,OAAO,aAAa;AAC5D,QAAM,iBAAiB,CAAC,GAAG,GAAG,CAAC;AAC/B,QAAM,QAAQ,CAAC;AAEf,MAAI,CAAC,MAAM,MAAM;AACf,UAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EAC1B;AAEA,QAAM,YAAY,WAAW,OAAO,CAAC,MAAM,GAAG,CAAC;AAC/C,QAAM,OAAO,WAAW,OAAO,CAAC,aAAa,eAAe,qBAAqB,CAAC;AAClF,QAAM,YAAY,WAAW,OAAO,CAAC,gBAAgB,GAAG,CAAC;AACzD,QAAM,gBAAgB,WAAW,OAAO,CAAC,YAAY,oBAAoB,CAAC;AAC1E,QAAM,MAAM,WAAW,OAAO,OAAO;AAErC,4BAA0B,WAAW,KAAK;AAC5C;AA5sBA,IAGA,qBAWI,YACA,mBACA,iBACA,oBACA,iBACA,UA2pBA,kBAgCA,eAEA;AAhtBJ;AAAA;AAAA;AACA;AACA;AACA,0BAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,aAAY,YAAU;AAC1B,IAAI,oBAAmB,mBAAiB;AAAxC,IACI,kBAAiB,mBAAiB;AACtC,IAAI,qBAAoB,aAAW;AACnC,IAAI,kBAAgB,MAAM;AAC1B,IAAI,WAAW;AA2pBf,IAAI,mBAAiB;AAAA,MACnB,MAAM;AAAA,MAIN,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAuBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,2BAA2B;AAEvE,IAAI,uBAAsB,gBAAc;AAAA,MACtC,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG,WAAS;AAAA;AAAA;;;ACntBZ;AAAA;AAAA,IAAC,UAAU,SAAS;AAChB,UAAI,OAAO,YAAY,UAAU;AAE7B,eAAO,UAAU,QAAQ;AAAA,MAC7B,WAAW,OAAO,WAAW,cAAc,OAAO,KAAK;AAEnD,eAAO,OAAO;AAAA,MAClB,OAAO;AAEH,YAAI;AAEJ,YAAI;AACA,iBAAO;AAAA,QACX,SAAS,GAAP;AACE,iBAAO;AAAA,QACX;AAEA,aAAK,WAAW,QAAQ;AAAA,MAC5B;AAAA,IACJ,GAAE,SAAU,YAAW;AAEnB;AAeA,UAAI,QAAQ,SAAU,GAAG,GAAG;AACxB,eAAQ,IAAI,IAAK;AAAA,MACrB,GACI,UAAU,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAG7F,mBAAa,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC3B,YAAI,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;AAClC,eAAO,MAAO,KAAK,IAAM,MAAO,KAAK,GAAK,CAAC;AAAA,MAC/C;AAEA,wBAAkB,GAAG,GAAG;AACpB,YAAI,IAAI,EAAE,IACN,IAAI,EAAE,IACN,IAAI,EAAE,IACN,IAAI,EAAE;AAEV,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,WAAW;AAC1C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,QAAQ;AACxC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,WAAW;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAEhC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,YAAY;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,WAAW;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,YAAY;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,WAAW;AAC1C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,aAAa;AAC5C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,aAAa;AAC7C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAEhC,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,SAAS;AACnC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,aAAa;AACvC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,aAAa;AACxC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,WAAW;AACtC,YAAM,MAAK,KAAK,MAAM,KAAK,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,aAAa;AACvC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,aAAa;AACvC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,YAAY;AACtC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,aAAa;AACxC,YAAM,MAAK,KAAK,MAAM,KAAK,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,YAAY;AACvC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,YAAY;AACtC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,YAAY;AACtC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,WAAW;AACrC,YAAM,MAAK,KAAK,MAAM,KAAK,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,YAAY;AACtC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,YAAY;AACvC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,MAAM,YAAY;AACvC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAI,IAAI,KAAK,EAAE,KAAK,YAAY;AACtC,YAAM,MAAK,KAAK,MAAM,KAAK,IAAI;AAE/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,YAAY;AACzC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,aAAa;AAC1C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,aAAa;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,WAAW;AACxC,YAAM,MAAK,KAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,aAAa;AAC3C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,aAAa;AAC1C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,UAAU;AACxC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,aAAa;AAC1C,YAAM,MAAK,KAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,aAAa;AAC1C,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,WAAW;AACzC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,aAAa;AAC1C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,aAAa;AAC3C,YAAM,MAAK,KAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,YAAY;AACzC,YAAM,MAAK,IAAI,MAAM,MAAM,IAAI;AAC/B,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,MAAM,aAAa;AAC3C,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,YAAY;AACzC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAChC,aAAM,KAAK,KAAI,CAAC,MAAM,EAAE,KAAK,YAAY;AACzC,YAAM,MAAK,KAAK,MAAM,MAAM,IAAI;AAEhC,UAAE,KAAK,IAAI,EAAE,KAAK;AAClB,UAAE,KAAK,IAAI,EAAE,KAAK;AAClB,UAAE,KAAK,IAAI,EAAE,KAAK;AAClB,UAAE,KAAK,IAAI,EAAE,KAAK;AAAA,MACtB;AAEA,sBAAgB,GAAG;AACf,YAAI,UAAU,CAAC,GACX;AAEJ,aAAK,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AACxB,kBAAQ,KAAK,KAAK,EAAE,WAAW,CAAC,IAAK,GAAE,WAAW,IAAI,CAAC,KAAK,KAAM,GAAE,WAAW,IAAI,CAAC,KAAK,MAAO,GAAE,WAAW,IAAI,CAAC,KAAK;AAAA,QAC3H;AACA,eAAO;AAAA,MACX;AAEA,4BAAsB,GAAG;AACrB,YAAI,UAAU,CAAC,GACX;AAEJ,aAAK,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AACxB,kBAAQ,KAAK,KAAK,EAAE,KAAM,GAAE,IAAI,MAAM,KAAM,GAAE,IAAI,MAAM,MAAO,GAAE,IAAI,MAAM;AAAA,QAC/E;AACA,eAAO;AAAA,MACX;AAEA,oBAAc,GAAG;AACb,YAAI,IAAI,EAAE,QACN,QAAQ,CAAC,YAAY,YAAY,aAAa,SAAS,GACvD,GACA,QACA,MACA,KACA,IACA;AAEJ,aAAK,IAAI,IAAI,KAAK,GAAG,KAAK,IAAI;AAC1B,mBAAS,OAAO,OAAO,EAAE,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,QAClD;AACA,YAAI,EAAE,UAAU,IAAI,EAAE;AACtB,iBAAS,EAAE;AACX,eAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,eAAK,KAAK,MAAM,EAAE,WAAW,CAAC,KAAO,KAAI,KAAM;AAAA,QACnD;AACA,aAAK,KAAK,MAAM,OAAU,KAAI,KAAM;AACpC,YAAI,IAAI,IAAI;AACR,mBAAS,OAAO,IAAI;AACpB,eAAK,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AACxB,iBAAK,KAAK;AAAA,UACd;AAAA,QACJ;AAGA,cAAM,IAAI;AACV,cAAM,IAAI,SAAS,EAAE,EAAE,MAAM,gBAAgB;AAC7C,aAAK,SAAS,IAAI,IAAI,EAAE;AACxB,aAAK,SAAS,IAAI,IAAI,EAAE,KAAK;AAE7B,aAAK,MAAM;AACX,aAAK,MAAM;AAEX,iBAAS,OAAO,IAAI;AACpB,eAAO;AAAA,MACX;AAEA,0BAAoB,GAAG;AACnB,YAAI,IAAI,EAAE,QACN,QAAQ,CAAC,YAAY,YAAY,aAAa,SAAS,GACvD,GACA,QACA,MACA,KACA,IACA;AAEJ,aAAK,IAAI,IAAI,KAAK,GAAG,KAAK,IAAI;AAC1B,mBAAS,OAAO,aAAa,EAAE,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,QACvD;AAMA,YAAK,IAAI,KAAM,IAAI,EAAE,SAAS,IAAI,EAAE,IAAI,IAAI,WAAW,CAAC;AAExD,iBAAS,EAAE;AACX,eAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,eAAK,KAAK,MAAM,EAAE,MAAQ,KAAI,KAAM;AAAA,QACxC;AAEA,aAAK,KAAK,MAAM,OAAU,KAAI,KAAM;AACpC,YAAI,IAAI,IAAI;AACR,mBAAS,OAAO,IAAI;AACpB,eAAK,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AACxB,iBAAK,KAAK;AAAA,UACd;AAAA,QACJ;AAGA,cAAM,IAAI;AACV,cAAM,IAAI,SAAS,EAAE,EAAE,MAAM,gBAAgB;AAC7C,aAAK,SAAS,IAAI,IAAI,EAAE;AACxB,aAAK,SAAS,IAAI,IAAI,EAAE,KAAK;AAE7B,aAAK,MAAM;AACX,aAAK,MAAM;AAEX,iBAAS,OAAO,IAAI;AAEpB,eAAO;AAAA,MACX;AAEA,oBAAc,GAAG;AACb,YAAI,IAAI,IACJ;AACJ,aAAK,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AACvB,eAAK,QAAS,KAAM,IAAI,IAAI,IAAM,MAAQ,QAAS,KAAM,IAAI,IAAM;AAAA,QACvE;AACA,eAAO;AAAA,MACX;AAEA,mBAAa,GAAG;AACZ,YAAI;AACJ,aAAK,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,GAAG;AAC9B,YAAE,KAAK,KAAK,EAAE,EAAE;AAAA,QACpB;AACA,eAAO,EAAE,KAAK,EAAE;AAAA,MACpB;AAGA,UAAI,IAAI,KAAK,OAAO,CAAC,MAAM,oCAAoC;AAC3D,gBAAQ,SAAU,GAAG,GAAG;AACpB,cAAI,MAAO,KAAI,SAAW,KAAI,QAC1B,MAAO,MAAK,MAAO,MAAK,MAAO,QAAO;AAC1C,iBAAQ,OAAO,KAAO,MAAM;AAAA,QAChC;AAAA,MACJ;AAUA,UAAI,OAAO,gBAAgB,eAAe,CAAC,YAAY,UAAU,OAAO;AACpE,QAAC,YAAY;AACT,yBAAe,KAAK,QAAQ;AACxB,kBAAO,MAAM,KAAM;AAEnB,gBAAI,MAAM,GAAG;AACT,qBAAO,KAAK,IAAI,MAAM,QAAQ,CAAC;AAAA,YACnC;AAEA,mBAAO,KAAK,IAAI,KAAK,MAAM;AAAA,UAC/B;AAEA,sBAAY,UAAU,QAAQ,SAAU,MAAM,IAAI;AAC9C,gBAAI,SAAS,KAAK,YACd,QAAQ,MAAM,MAAM,MAAM,GAC1B,MAAM,QACN,KACA,QACA,aACA;AAEJ,gBAAI,OAAO,YAAW;AAClB,oBAAM,MAAM,IAAI,MAAM;AAAA,YAC1B;AAEA,gBAAI,QAAQ,KAAK;AACb,qBAAO,IAAI,YAAY,CAAC;AAAA,YAC5B;AAEA,kBAAM,MAAM;AACZ,qBAAS,IAAI,YAAY,GAAG;AAC5B,0BAAc,IAAI,WAAW,MAAM;AAEnC,0BAAc,IAAI,WAAW,MAAM,OAAO,GAAG;AAC7C,wBAAY,IAAI,WAAW;AAE3B,mBAAO;AAAA,UACX;AAAA,QACJ,GAAG;AAAA,MACP;AAQA,sBAAgB,KAAK;AACjB,YAAI,kBAAkB,KAAK,GAAG,GAAG;AAC7B,gBAAM,SAAS,mBAAmB,GAAG,CAAC;AAAA,QAC1C;AAEA,eAAO;AAAA,MACX;AAEA,mCAA6B,KAAK,kBAAkB;AAChD,YAAI,SAAS,IAAI,QACd,OAAO,IAAI,YAAY,MAAM,GAC7B,MAAM,IAAI,WAAW,IAAI,GACzB;AAEH,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,cAAI,KAAK,IAAI,WAAW,CAAC;AAAA,QAC7B;AAEA,eAAO,mBAAmB,MAAM;AAAA,MACpC;AAEA,mCAA6B,MAAM;AAC/B,eAAO,OAAO,aAAa,MAAM,MAAM,IAAI,WAAW,IAAI,CAAC;AAAA,MAC/D;AAEA,uCAAiC,OAAO,QAAQ,kBAAkB;AAC9D,YAAI,SAAS,IAAI,WAAW,MAAM,aAAa,OAAO,UAAU;AAEhE,eAAO,IAAI,IAAI,WAAW,KAAK,CAAC;AAChC,eAAO,IAAI,IAAI,WAAW,MAAM,GAAG,MAAM,UAAU;AAEnD,eAAO,mBAAmB,SAAS,OAAO;AAAA,MAC9C;AAEA,iCAA2B,MAAK;AAC5B,YAAI,QAAQ,CAAC,GACT,SAAS,KAAI,QACb;AAEJ,aAAK,IAAI,GAAG,IAAI,SAAS,GAAG,KAAK,GAAG;AAChC,gBAAM,KAAK,SAAS,KAAI,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC;AAAA,QAC7C;AAEA,eAAO,OAAO,aAAa,MAAM,QAAQ,KAAK;AAAA,MAClD;AAWA,0BAAoB;AAEhB,aAAK,MAAM;AAAA,MACf;AAUA,eAAS,UAAU,SAAS,SAAU,KAAK;AAGvC,aAAK,aAAa,OAAO,GAAG,CAAC;AAE7B,eAAO;AAAA,MACX;AASA,eAAS,UAAU,eAAe,SAAU,UAAU;AAClD,aAAK,SAAS;AACd,aAAK,WAAW,SAAS;AAEzB,YAAI,SAAS,KAAK,MAAM,QACpB;AAEJ,aAAK,IAAI,IAAI,KAAK,QAAQ,KAAK,IAAI;AAC/B,mBAAS,KAAK,OAAO,OAAO,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,QAChE;AAEA,aAAK,QAAQ,KAAK,MAAM,UAAU,IAAI,EAAE;AAExC,eAAO;AAAA,MACX;AAUA,eAAS,UAAU,MAAM,SAAU,KAAK;AACpC,YAAI,OAAO,KAAK,OACZ,SAAS,KAAK,QACd,GACA,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GACtD;AAEJ,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,eAAK,KAAK,MAAM,KAAK,WAAW,CAAC,KAAO,KAAI,KAAM;AAAA,QACtD;AAEA,aAAK,QAAQ,MAAM,MAAM;AACzB,cAAM,IAAI,KAAK,KAAK;AAEpB,YAAI,KAAK;AACL,gBAAM,kBAAkB,GAAG;AAAA,QAC/B;AAEA,aAAK,MAAM;AAEX,eAAO;AAAA,MACX;AAOA,eAAS,UAAU,QAAQ,WAAY;AACnC,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,QAAQ,CAAC,YAAY,YAAY,aAAa,SAAS;AAE5D,eAAO;AAAA,MACX;AAOA,eAAS,UAAU,WAAW,WAAY;AACtC,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,QAAQ,KAAK;AAAA,UACb,MAAM,KAAK,MAAM,MAAM;AAAA,QAC3B;AAAA,MACJ;AASA,eAAS,UAAU,WAAW,SAAU,OAAO;AAC3C,aAAK,QAAQ,MAAM;AACnB,aAAK,UAAU,MAAM;AACrB,aAAK,QAAQ,MAAM;AAEnB,eAAO;AAAA,MACX;AAMA,eAAS,UAAU,UAAU,WAAY;AACrC,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK;AAAA,MAChB;AAQA,eAAS,UAAU,UAAU,SAAU,MAAM,QAAQ;AACjD,YAAI,IAAI,QACJ,KACA,IACA;AAEJ,aAAK,KAAK,MAAM,OAAU,KAAI,KAAM;AACpC,YAAI,IAAI,IAAI;AACR,mBAAS,KAAK,OAAO,IAAI;AACzB,eAAK,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AACxB,iBAAK,KAAK;AAAA,UACd;AAAA,QACJ;AAIA,cAAM,KAAK,UAAU;AACrB,cAAM,IAAI,SAAS,EAAE,EAAE,MAAM,gBAAgB;AAC7C,aAAK,SAAS,IAAI,IAAI,EAAE;AACxB,aAAK,SAAS,IAAI,IAAI,EAAE,KAAK;AAE7B,aAAK,MAAM;AACX,aAAK,MAAM;AACX,iBAAS,KAAK,OAAO,IAAI;AAAA,MAC7B;AAWA,eAAS,OAAO,SAAU,KAAK,KAAK;AAGhC,eAAO,SAAS,WAAW,OAAO,GAAG,GAAG,GAAG;AAAA,MAC/C;AAUA,eAAS,aAAa,SAAU,SAAS,KAAK;AAC1C,YAAI,OAAO,KAAK,OAAO,GACnB,MAAM,IAAI,IAAI;AAElB,eAAO,MAAM,kBAAkB,GAAG,IAAI;AAAA,MAC1C;AASA,eAAS,cAAc,WAAY;AAE/B,aAAK,MAAM;AAAA,MACf;AASA,eAAS,YAAY,UAAU,SAAS,SAAU,KAAK;AACnD,YAAI,OAAO,wBAAwB,KAAK,MAAM,QAAQ,KAAK,IAAI,GAC3D,SAAS,KAAK,QACd;AAEJ,aAAK,WAAW,IAAI;AAEpB,aAAK,IAAI,IAAI,KAAK,QAAQ,KAAK,IAAI;AAC/B,mBAAS,KAAK,OAAO,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,QAC/D;AAEA,aAAK,QAAS,IAAI,KAAM,SAAS,IAAI,WAAW,KAAK,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,IAAI,WAAW,CAAC;AAE7F,eAAO;AAAA,MACX;AAUA,eAAS,YAAY,UAAU,MAAM,SAAU,KAAK;AAChD,YAAI,OAAO,KAAK,OACZ,SAAS,KAAK,QACd,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GACtD,GACA;AAEJ,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,eAAK,KAAK,MAAM,KAAK,MAAQ,KAAI,KAAM;AAAA,QAC3C;AAEA,aAAK,QAAQ,MAAM,MAAM;AACzB,cAAM,IAAI,KAAK,KAAK;AAEpB,YAAI,KAAK;AACL,gBAAM,kBAAkB,GAAG;AAAA,QAC/B;AAEA,aAAK,MAAM;AAEX,eAAO;AAAA,MACX;AAOA,eAAS,YAAY,UAAU,QAAQ,WAAY;AAC/C,aAAK,QAAQ,IAAI,WAAW,CAAC;AAC7B,aAAK,UAAU;AACf,aAAK,QAAQ,CAAC,YAAY,YAAY,aAAa,SAAS;AAE5D,eAAO;AAAA,MACX;AAOA,eAAS,YAAY,UAAU,WAAW,WAAY;AAClD,YAAI,QAAQ,SAAS,UAAU,SAAS,KAAK,IAAI;AAGjD,cAAM,OAAO,oBAAoB,MAAM,IAAI;AAE3C,eAAO;AAAA,MACX;AASA,eAAS,YAAY,UAAU,WAAW,SAAU,OAAO;AAEvD,cAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AAEjD,eAAO,SAAS,UAAU,SAAS,KAAK,MAAM,KAAK;AAAA,MACvD;AAEA,eAAS,YAAY,UAAU,UAAU,SAAS,UAAU;AAE5D,eAAS,YAAY,UAAU,UAAU,SAAS,UAAU;AAU5D,eAAS,YAAY,OAAO,SAAU,KAAK,KAAK;AAC5C,YAAI,OAAO,WAAW,IAAI,WAAW,GAAG,CAAC,GACrC,MAAM,IAAI,IAAI;AAElB,eAAO,MAAM,kBAAkB,GAAG,IAAI;AAAA,MAC1C;AAEA,aAAO;AAAA,IACX,CAAC;AAAA;AAAA;;;ACtuBD,wBAAwB,WAAW,OAAO;AAExC,QAAM,eAAe,KAAK,gBAAgB;AAE1C,YAAU,sBAAsB,SAAU,UAAU,UAAU,UAAU;AAMtE,QAAI,YAAY;AAEhB,QAAI,SAAS,SAAS,GAAG;AACvB,kBAAY,mBAAiB,WAAW,WAAW,SAAS,OAAO,EAAE;AAAA,IACvE;AAEA,QAAI,MAAM,MAAM,oBAAoB,UAAU;AAE9C,QAAI,kBAAkB;AACtB,QAAI,UAAU;AAEd,QAAI,KAAK;AACP,gBAAU;AAAA,IACZ,OAAO;AACL,YAAM,QAAQ,aAAa,0BAA0B;AAErD,UAAI,MAAM,QAAQ,aAAa,gBAAgB,GAAG;AAChD,0BAAkB;AAAA,MACpB;AAEA,UAAI,MAAM,QAAQ,aAAa,wBAAwB,GAAG;AACxD,2BAAmB;AAAA,MACrB;AAAA,IACF;AAEA,gBAAY,mBAAiB,WAAW,WAAW,sBAAsB,CAAC,GAAG,OAAO,SAAS,IAAI,GAAG,MAAM,KAAK,qDAAqD,iBAAiB,qCAAqC,0BAA0B,wBAAwB,SAAS,4BAA4B,0BAA0B,QAAQ,CAAC,EAAE;AACtV,QAAI,YAAY,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,GAAG,OAAO,SAAS,IAAI,GAAG,qCAAqC,0BAA0B,wBAAwB,SAAS,4BAA4B,0BAA0B,QAAQ,CAAC,EAAE;AAExQ,QAAI,KAAK;AACP,kBAAY,mBAAiB,WAAW,WAAW,WAAW,KAAK,EAAE;AACrE,kBAAY,mBAAiB,WAAW,WAAW,WAAW,IAAI,EAAE;AACpE,UAAI,gBAAgB;AACpB,UAAI,cAAc;AAElB,aAAO,UAAU,SAAS,eAAe,OAAO,aAAa,GAAG,CAAC,GAAG;AAClE,oBAAY,mBAAiB,WAAW,WAAW,iBAAiB,OAAO,aAAa,KAAK,GAAG,aAAa,OAAO,WAAW,CAAC,EAAE;AAClI,yBAAiB,qBAAqB,OAAO,aAAa,uBAAuB,EAAE,OAAO,aAAa,KAAK;AAC5G;AAAA,MACF;AAEA,kBAAY,mBAAiB,WAAW,WAAW,sBAAsB,aAAa,EAAE;AAAA,IAC1F;AAIA,QAAI,YAAY,mBAAiB,WAAW,UAAU,sBAAsB,OAAO,EAAE;AACrF,WAAO;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,EACF;AAGA,YAAU,0BAA0B,SAAU,YAAY,cAAc,cAAc;AACpF,QAAI,OAAO,UAAU,oBAAoB,YAAY,cAAc,YAAY;AAC/E,QAAI,SAAS,UAAU,iBAAiB,KAAK,UAAU,KAAK,UAAU,KAAK,QAAQ;AACnF,WAAO,UAAU,mBAAmB,MAAM;AAAA,EAC5C;AAEA,YAAU,qBAAqB,SAAU,QAAQ;AAC/C,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,OAAO,YAAY,KAAK,CAAC,OAAO,cAAc,GAAG;AACpD,aAAO;AAAA,IACT;AAGA,QAAI,CAAC,UAAU,WAAW,MAAM,GAAG;AACjC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,mBAAmB,SAAU,YAAY,cAAc,cAAc;AAE7E,QAAI,YAAY,GAAG,OAAO,UAAU,EAAE,OAAO,YAAY,EAAE,OAAO,YAAY;AAC9E,QAAI,SAAS,yBAAI,KAAK,SAAS;AAE/B,QAAI,MAAM,OAAO,KAAK,MAAM,cAAc,EAAE,QAAQ,MAAM;AAE1D,QAAI,QAAQ,IAAI;AAEd,UAAI,MAAM,mBAAiB,YAAY;AACvC,UAAI,WAAW,MAAM,OAAO;AAC5B,UAAI,gBAAgB,EAAE,UAAU,UAAU;AAC1C,UAAI,kBAAkB,EAAE,UAAU,YAAY;AAE9C,UAAI,cAAc;AAChB,YAAI,kBAAkB,EAAE,UAAU,YAAY;AAAA,MAChD;AAEA,UAAI,WAAW,MAAM;AACrB,YAAM,eAAe,UAAU;AAC/B,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,eAAe;AAAA,EAC9B;AAEA,YAAU,2BAA2B,SAAU,KAAK;AAQlD,cAAU,qBAAqB;AAC/B,WAAO,KAAK,MAAM,cAAc,EAAE,IAAI,SAAU,KAAK;AACnD,aAAO,MAAM,eAAe;AAAA,IAC9B,CAAC,EAAE,QAAQ,SAAU,IAAI;AACvB,aAAO,GAAG,yBAAyB,GAAG;AAAA,IACxC,CAAC;AAAA,EACH;AAEA,YAAU,2BAA2B,WAAY;AAE/C,QAAI,MAAM,gBAAgB;AACxB,YAAM,gBAAgB,QAAQ;AAC9B,YAAM,kBAAkB;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,QAAQ;AACvC,QAAI,MAAM,oBAAoB,QAAQ;AACpC,aAAO;AAAA,IACT;AAGA,QAAI,MAAM,iBAAiB;AACzB,YAAM,gBAAgB,QAAQ;AAAA,IAChC;AAEA,WAAO,KAAK;AACZ,UAAM,kBAAkB;AACxB,WAAO;AAAA,EACT;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,QAAM,iBAAiB,CAAC;AAExB,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,OAAO,WAAW,OAAO,cAAc;AAC7C,QAAM,gBAAgB,WAAW,OAAO,CAAC,oBAAoB,CAAC;AAE9D,iBAAe,WAAW,KAAK;AACjC;AAvLA,sBAII,gBAiKA,kBAoBA,eAEA;AA3LJ;AAAA;AAAA,uBAAgB;AAChB;AACA;AAEA,IAAI,iBAAiB,CAAC,mBAAmB,WAAW,qBAAqB;AAiKzE,IAAI,mBAAiB;AAAA,MACnB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,SAAS;AAAA,IAEX;AAeA,IAAI,gBAAc,MAAM,YAAY,UAAQ,gBAAgB;AAE5D,IAAI,mBAAmB;AAAA,MACrB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACxLA,qCAAqC,WAAW,OAAO;AAErD,QAAM,eAAe,KAAK,6BAA6B;AAKvD,YAAU,cAAc,WAAY;AAClC,aAAS,IAAI,GAAG,IAAI,MAAM,sBAAsB,EAAE,GAAG;AACnD,UAAI,MAAM,aAAa,OAAO,MAAM;AAClC,wBAAc,gDAAgD;AAAA,MAChE;AAAA,IACF;AAEA,UAAM,eAAe,CAAC;AACtB,UAAM,uBAAuB;AAAA,EAC/B;AAGA,YAAU,aAAa,SAAU,KAAK;AACpC,QAAI,MAAM,YAAY,KAAK;AACzB,UAAI,MAAM,YAAY,GAAG;AACvB,kBAAU,YAAY;AAAA,MACxB;AAEA,YAAM,UAAU;AAEhB,UAAI,MAAM,SAAS;AACjB,cAAM,uBAAuB,IAAI,aAAa,IAAI,uBAAuB;AAEzE,iBAAS,IAAI,GAAG,IAAI,MAAM,sBAAsB,EAAE,GAAG;AACnD,gBAAM,aAAa,KAAK;AAAA,QAC1B;AAAA,MACF;AAEA,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AASA,YAAU,WAAW,WAAY;AAC/B,aAAS,IAAI,GAAG,IAAI,MAAM,sBAAsB,KAAK;AACnD,UAAI,CAAC,UAAU,YAAY,CAAC,GAAG;AAC7B,cAAM,aAAa,KAAK;AACxB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,SAAU,MAAM;AACvC,QAAI,UAAU,YAAY,IAAI,GAAG;AAC/B,aAAO;AAAA,IACT;AAEA,UAAM,aAAa,QAAQ;AAC3B,WAAO;AAAA,EACT;AAMA,YAAU,cAAc,SAAU,eAAe;AAC/C,WAAO,MAAM,aAAa;AAAA,EAC5B;AAOA,YAAU,OAAO,SAAU,KAAK;AAC9B,UAAM,aAAa,OAAO;AAAA,EAC5B;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAClD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,eAAe,CAAC;AAEtB,QAAM,IAAI,WAAW,OAAO,CAAC,sBAAsB,CAAC;AACpD,QAAM,OAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AAE1C,8BAA4B,WAAW,KAAK;AAC9C;AA7GA,IAEI,iBA2FA,kBAkBA,eAEA;AAjHJ;AAAA;AAAA;AAEA,IAAI,kBAAgB,MAAM;AA2F1B,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,sBAAsB;AAAA,MACtB,cAAc;AAAA,IAChB;AAcA,IAAI,gBAAc,MAAM,YAAY,UAAQ,6BAA6B;AAEzE,IAAI,wBAAwB;AAAA,MAC1B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACvGA,iCAAiC,WAAW,OAAO;AAEjD,QAAM,eAAe,KAAK,yBAAyB;AAEnD,YAAU,qBAAqB,WAAY;AACzC,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,WAAO,MAAM,KAAK,KAAK,MAAM,KAAK;AAAA,EACpC;AAEA,YAAU,4BAA4B,SAAU,UAAU;AACxD,QAAI,WAAW,SAAS,uBAAuB;AAC/C,WAAO,MAAM,KAAK,KAAM,UAAS,KAAK,SAAS,MAAQ,WAAS,KAAK,SAAS,MAAM,MAAM,KAAK;AAAA,EACjG;AAEA,YAAU,eAAe,SAAU,GAAG,GAAG,UAAU;AACjD,QAAI,UAAU,SAAS,uBAAuB;AAC9C,QAAI,OAAO,UAAU,mBAAmB;AAExC,QAAI,QAAQ,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,KAAK,MAAM,GAAG;AACpH,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,kBAAkB,SAAU,UAAU;AAC9C,QAAI,UAAU,SAAS,uBAAuB;AAC9C,QAAI,OAAO,UAAU,mBAAmB;AACxC,WAAO,CAAE,SAAQ,KAAK,QAAQ,MAAM,KAAK,IAAK,SAAQ,KAAK,QAAQ,MAAM,KAAK,EAAE;AAAA,EAClF;AAEA,YAAU,oBAAoB,SAAU,UAAU;AAChD,QAAI,OAAO,UAAU,gBAAgB,QAAQ;AAC7C,WAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,EACtC;AAEA,YAAU,6BAA6B,SAAU,GAAG,GAAG,GAAG;AACxD,QAAI,OAAO,UAAU,mBAAmB;AACxC,WAAO,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC;AAAA,EACrC;AAEA,YAAU,6BAA6B,SAAU,GAAG,GAAG,GAAG;AACxD,QAAI,OAAO,UAAU,mBAAmB;AACxC,WAAO,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC;AAAA,EACrC;AAEA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG,UAAU;AACnD,WAAO,SAAS,YAAY,GAAG,GAAG,CAAC;AAAA,EACrC;AAEA,YAAU,cAAc,SAAU,GAAG,GAAG,GAAG,UAAU;AACnD,WAAO,SAAS,YAAY,GAAG,GAAG,CAAC;AAAA,EACrC;AAEA,YAAU,iBAAiB,SAAU,GAAG,GAAG,GAAG,UAAU;AACtD,QAAI,MAAM,SAAS,YAAY,GAAG,GAAG,CAAC;AACtC,QAAI,OAAO,UAAU,gBAAgB,QAAQ;AAC7C,QAAI,OAAO,SAAS,iBAAiB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,EAAE;AAC9E,QAAI,OAAO,SAAS,8BAA8B,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAC3E,WAAO,UAAU,2BAA2B,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EACvE;AAEA,YAAU,iBAAiB,SAAU,GAAG,GAAG,GAAG,UAAU;AACtD,QAAI,MAAM,UAAU,2BAA2B,GAAG,GAAG,CAAC;AACtD,QAAI,OAAO,SAAS,8BAA8B,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACxE,QAAI,OAAO,UAAU,gBAAgB,QAAQ;AAC7C,QAAI,OAAO,SAAS,iBAAiB,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,EAAE;AACjF,WAAO,SAAS,YAAY,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EACvD;AAEA,YAAU,8BAA8B,SAAU,GAAG,GAAG,GAAG,UAAU;AACnE,QAAI,UAAU,SAAS,uBAAuB;AAC9C,cAAU,UAAU,2BAA2B,QAAQ,IAAI,QAAQ,IAAI,CAAG;AAC1E,QAAI,SAAS,UAAU,2BAA2B,GAAG,GAAG,CAAC;AACzD,WAAO,CAAC,OAAO,KAAK,QAAQ,KAAK,KAAK,OAAO,KAAK,QAAQ,KAAK,KAAK,CAAC;AAAA,EACvE;AAEA,YAAU,+BAA+B,SAAU,GAAG,GAAG,GAAG,UAAU;AACpE,QAAI,OAAO,UAAU,gBAAgB,QAAQ;AAE7C,QAAI,QAAQ,KAAK,OAAO,KAAK,KAAK,OAAO,GAAG;AAC1C,aAAO,CAAC,IAAK,MAAK,KAAK,IAAM,IAAK,MAAK,KAAK,IAAM,CAAC;AAAA,IACrD;AAEA,WAAO,CAAC,GAAG,GAAG,CAAC;AAAA,EACjB;AAEA,YAAU,+BAA+B,SAAU,GAAG,GAAG,GAAG,UAAU;AACpE,QAAI,OAAO,UAAU,gBAAgB,QAAQ;AAC7C,WAAO,CAAC,IAAK,MAAK,KAAK,IAAM,IAAK,MAAK,KAAK,IAAM,CAAC;AAAA,EACrD;AAEA,YAAU,wBAAwB,SAAU,GAAG,GAAG,GAAG;AACnD,QAAI,OAAO,UAAU,mBAAmB;AACxC,WAAO,CAAC,GAAG,KAAK,KAAK,IAAI,GAAG,CAAC;AAAA,EAC/B;AAEA,YAAU,8BAA8B,SAAU,GAAG,GAAG,GAAG,UAAU;AACnE,QAAI,UAAU,SAAS,uBAAuB;AAC9C,cAAU,UAAU,2BAA2B,QAAQ,IAAI,QAAQ,IAAI,CAAG;AAC1E,QAAI,KAAK,IAAI,QAAQ,KAAK;AAC1B,QAAI,KAAK,IAAI,QAAQ,KAAK;AAC1B,WAAO,UAAU,2BAA2B,IAAI,IAAI,CAAC;AAAA,EACvD;AAEA,YAAU,eAAe,SAAU,IAAI,IAAI,IAAI,IAAI;AACjD,UAAM,cAAc,iBAAiB;AACrC,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,UAAM,cAAc,iBAAiB;AACrC,WAAO;AAAA,EACT;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,MAAI,CAAC,MAAM,MAAM;AACf,UAAM,OAAO,CAAC,KAAK,GAAG;AAAA,EACxB;AAEA,QAAM,SAAS,WAAW,OAAO,CAAC,MAAM,GAAG,CAAC;AAC5C,QAAM,IAAI,WAAW,OAAO,CAAC,UAAU,CAAC;AAExC,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,0BAAwB,WAAW,KAAK;AAC1C;AA1JA,IAuII,kBAqBA,eAEA;AA9JJ;AAAA;AAAA;AACA;AAsIA,IAAI,mBAAiB;AAAA,MACnB,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAkBA,IAAI,gBAAc,MAAM,YAAY,UAAQ,yBAAyB;AAErE,IAAI,4BAA4B;AAAA,MAC9B,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACjKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA,kCAAkC,IAAI,QAAQ,MAAM;AAElD,MAAI,cAAc,GAAG,kBAAkB;AACvC,MAAI,UAAU,GAAG,cAAc;AAC/B,KAAG,YAAY,GAAG,YAAY,OAAO;AACrC,KAAG,WAAW,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,QAAQ,MAAM,IAAI;AACnE,KAAG,gBAAgB,GAAG,aAAa,WAAW;AAC9C,KAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,SAAS,CAAC;AAEvF,MAAI,SAAS,GAAG,uBAAuB,GAAG,WAAW;AAErD,KAAG,gBAAgB,GAAG,aAAa,IAAI;AACvC,KAAG,YAAY,GAAG,YAAY,IAAI;AAClC,SAAO,WAAW,GAAG;AACvB;AAQA,2BAA2B;AACzB;AACA,uBAAqB,QAAQ,SAAU,IAAI;AACzC,WAAO,GAAG,gBAAgB;AAAA,EAC5B,CAAC;AACH;AAEA,2BAA2B;AACzB;AACA,uBAAqB,QAAQ,SAAU,IAAI;AACzC,WAAO,GAAG,gBAAgB;AAAA,EAC5B,CAAC;AACH;AAEA,mCAAmC,IAAI;AACrC,uBAAqB,KAAK,EAAE;AAC9B;AACA,kCAAkC,IAAI;AACpC,SAAO,qBAAqB,IAAI;AAClC;AAIA,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,YAAU,qBAAqB,WAAY;AACzC,WAAO,MAAM;AAAA,EACf;AAGA,MAAI,eAAe,CAAC,GAAG,CAAC;AAExB,0BAAwB;AAEtB,QAAI,MAAM,YAAY;AACpB,UAAI,MAAM,KAAK,OAAO,aAAa,MAAM,MAAM,KAAK,OAAO,aAAa,IAAI;AAC1E,qBAAa,KAAK,MAAM,KAAK;AAC7B,qBAAa,KAAK,MAAM,KAAK;AAC7B,cAAM,OAAO,aAAa,SAAS,MAAM,KAAK,EAAE;AAChD,cAAM,OAAO,aAAa,UAAU,MAAM,KAAK,EAAE;AAAA,MACnD;AAAA,IACF;AAGA,QAAI,MAAM,YAAY;AAEpB,YAAM,WAAW,QAAQ,MAAM,KAAK,IAAI,MAAM,KAAK,EAAE;AAAA,IACvD;AAGA,UAAM,OAAO,MAAM,UAAU,MAAM,eAAe,SAAS;AAE3D,QAAI,MAAM,IAAI;AACZ,YAAM,GAAG,MAAM,SAAS,MAAM,mBAAmB,MAAM,SAAS;AAAA,IAClE;AAGA,UAAM,gBAAgB;AAAA,EACxB;AAEA,YAAU,WAAW,YAAY;AAEjC,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,gBAAU,aAAa;AACvB,gBAAU,gBAAgB,MAAM,WAAW,wBAAwB,CAAC;AACpE,gBAAU,kBAAkB;AAC5B,gBAAU,WAAW;AACrB,YAAM,SAAS,QAAQ,SAAU,OAAO;AACtC,cAAM,sBAAsB,SAAS;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF;AAEA,YAAU,aAAa,WAAY;AACjC,QAAI,CAAC,MAAM,aAAa;AACtB,YAAM,UAAU,UAAU,aAAa;AACvC,YAAM,qBAAqB,sBAAsB,YAAY;AAC7D,YAAM,mBAAmB,WAAW,MAAM,OAAO;AACjD,YAAM,YAAY,WAAW,MAAM,OAAO;AAE1C,UAAI,KAAK,MAAM;AACf,SAAG,kBAAkB,GAAG,WAAW,GAAG,qBAAqB,GAAG,KAAK,GAAG,mBAAmB;AACzF,SAAG,UAAU,GAAG,MAAM;AACtB,SAAG,OAAO,GAAG,KAAK;AAClB,YAAM,cAAc;AAAA,IACtB;AAAA,EACF;AAEA,YAAU,cAAc,WAAY;AAClC,UAAM,QAAQ,YAAY;AAAA,EAC5B;AAEA,YAAU,eAAe,SAAU,IAAI;AACrC,QAAI,MAAM,MAAM,MAAM,OAAO,IAAI;AAC/B,UAAI,MAAM,OAAO,eAAe,MAAM,IAAI;AACxC,wBAAc,oDAAoD;AAAA,MACpE;AAGA,YAAM,GAAG,YAAY,MAAM,MAAM;AAGjC,UAAI,MAAM,GAAG,SAAS,MAAM,OAAO,GAAG;AACpC,cAAM,GAAG,YAAY,MAAM,OAAO;AAAA,MACpC;AAAA,IACF;AAEA,QAAI,MAAM,OAAO,IAAI;AACnB,YAAM,KAAK;AAEX,UAAI,MAAM,IAAI;AACZ,cAAM,GAAG,YAAY,MAAM,MAAM;AAGjC,YAAI,MAAM,oBAAoB;AAC5B,gBAAM,GAAG,YAAY,MAAM,OAAO;AAAA,QACpC;AAAA,MACF;AAGA,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,eAAe,WAAY;AACnC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,CAAC,MAAM,iBAAiB,MAAM,IAAI;AACpC,UAAI,wBAAwB,MAAM,GAAG,sBAAsB,GACvD,QAAQ,sBAAsB,OAC9B,SAAS,sBAAsB;AAEnC,YAAM,gBAAgB,CAAC,OAAO,MAAM;AAAA,IACtC;AAEA,WAAO,MAAM,iBAAiB,MAAM;AAAA,EACtC;AAEA,YAAU,qBAAqB,WAAY;AACzC,QAAI,MAAM,mBAAmB;AAC3B,aAAO,MAAM,kBAAkB,QAAQ;AAAA,IACzC;AAEA,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,eAAe,SAAU,IAAI,IAAI,IAAI,IAAI;AACjD,QAAI,SAAS,IAAI,WAAY,MAAK,KAAK,KAAM,MAAK,KAAK,KAAK,CAAC;AAC7D,UAAM,QAAQ,WAAW,IAAI,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,MAAM,QAAQ,MAAM,MAAM,QAAQ,eAAe,MAAM;AAClH,WAAO;AAAA,EACT;AAEA,YAAU,eAAe,WAAY;AACnC,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAAA,MAChF,uBAAuB;AAAA,MACvB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,iBAAiB;AAAA,IACnB;AACA,QAAI,SAAS;AAEb,QAAI,UAAU,OAAO,UAAa,UAAU,GAAG,mBAAmB,cAAc,GAAG;AACjF,gBAAU,oBAAoB;AAAA,IAChC;AAEA,QAAI,kBAAkB,OAAO,2BAA2B;AACxD,UAAM,SAAS;AAEf,QAAI,MAAM,mBAAmB,iBAAiB;AAC5C,eAAS,MAAM,OAAO,WAAW,UAAU,OAAO;AAElD,UAAI,QAAQ;AACV,cAAM,SAAS;AACf,wBAAc,cAAc;AAAA,MAC9B;AAAA,IACF;AAEA,QAAI,CAAC,QAAQ;AACX,sBAAc,cAAc;AAC5B,eAAS,MAAM,OAAO,WAAW,SAAS,OAAO,KAAK,MAAM,OAAO,WAAW,sBAAsB,OAAO;AAAA,IAC7G;AAGA,UAAM,OAAO,iBAAiB,oBAAoB,SAAU,QAAO;AACjE,aAAM,eAAe;AAAA,IACvB,GAAG,KAAK;AACR,UAAM,OAAO,iBAAiB,wBAAwB,UAAU,gBAAgB,KAAK;AACrF,WAAO;AAAA,EACT;AAIA,YAAU,UAAU,SAAU,MAAM;AAClC,QAAI,UAAU,OAAO,QAAW;AAC9B,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEA,UAAM,gBAAgB;AACtB,QAAI,cAAc,OAAO,iBAAiB;AAE1C,QAAI,CAAC,UAAU,GAAG,mBAAmB,WAAW,GAAG;AACjD,UAAI,MAAM;AACR,cAAM,IAAI,MAAM,oCAAoC;AAAA,MACtD,OAAO;AACL,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AAAA,IACF;AAEA,QAAI,MAAM,cAAc,MAAM;AAC5B,gBAAU,GAAG,eAAe,WAAW,EAAE,KAAK,UAAU,SAAS,WAAY;AAC3E,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD,CAAC;AAAA,IACH,OAAO;AACL,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAC9C;AAAA,EACF;AAIA,YAAU,UAAuB,WAAY;AAC3C,QAAI,OAAO,kBAAgC,4BAAoB,KAAK,iBAAiB,WAAW;AAC9F,UAAI,IAAI;AACR,aAAO,4BAAoB,KAAK,kBAAkB,UAAU;AAC1D,eAAO,GAAG;AACR,kBAAQ,SAAS,OAAO,SAAS;AAAA,iBAC1B;AACH,oBAAM,YAAY;AAClB,oBAAM,gBAAgB,MAAM,KAAK,MAAM;AAEvC,kBAAI,CAAE,OAAM,cAAc,OAAO;AAC/B,yBAAS,OAAO;AAChB;AAAA,cACF;AAEA,mBAAK,UAAU,aAAa;AAC5B,uBAAS,OAAO;AAChB,qBAAO,GAAG,iBAAiB;AAAA,iBAExB;AACH,wBAAU,IAAI,OAAO,aAAa,MAAM,WAAW,EAAE;AACrD,wBAAU,QAAQ,QAAQ,kBAAkB,QAAQ,iBAAiB;AACrE,oBAAM,UAAU,kBAAkB;AAAA,gBAChC,WAAW;AAAA,cACb,CAAC;AACD,oBAAM,UAAU,sBAAsB,OAAO,EAAE,KAAK,SAAU,UAAU;AACtE,sBAAM,mBAAmB;AAAA,cAC3B,CAAC;AACD,wBAAU,aAAa;AACvB,oBAAM,WAAW,cAAc,EAAE,oBAAoB;AACrD,oBAAM,eAAe,MAAM,UAAU,sBAAsB,UAAU,QAAQ;AAC7E,uBAAS,OAAO;AAChB;AAAA,iBAEG;AACH,oBAAM,IAAI,MAAM,2CAA2C;AAAA,iBAExD;AAAA,iBACA;AACH,qBAAO,SAAS,KAAK;AAAA;AAAA,QAE3B;AAAA,MACF,GAAG,OAAO;AAAA,IACZ,CAAC,CAAC;AAEF,WAAO,SAAU,IAAI;AACnB,aAAO,KAAK,MAAM,MAAM,SAAS;AAAA,IACnC;AAAA,EACF,EAAE;AAEF,YAAU,eAAe,WAAY;AACnC,QAAI,qBAAqB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,sBAAsB,GAAG;AACtH,QAAI,kBAAkB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,sBAAsB,GAAG;AAGnH,QAAI,gBAAgB;AACpB,QAAI,aAAa;AAEjB,QAAI,MAAM,iBAAiB,kBAAkB,sBAAsB,GAAG,eAAe;AAEnF,sBAAgB,sBAAsB,GAAG;AAAA,IAC3C;AAEA,QAAI,MAAM,iBAAiB,eAAe,sBAAsB,GAAG,YAAY;AAE7E,mBAAa,sBAAsB,GAAG;AAAA,IACxC;AAEA,QAAI,MAAM,MAAM,WAAW,aAAa,EAAE;AAC1C,QAAI,YAAY;AAChB,QAAI,SAAS,IAAI,gBAAgB;AACjC,QAAI,gBAAgB,OAAO,iBAAiB;AAC5C,QAAI,sBAAsB,OAAO,uBAAuB;AACxD,qBAAiB;AACjB,kBAAc;AACd,wBAAoB,MAAM;AAC1B,WAAO,iBAAiB,aAAa;AACrC,WAAO,uBAAuB,mBAAmB;AAAA,EACnD;AAEA,YAAU,SAAsB,kBAAgC,4BAAoB,KAAK,oBAAoB;AAC3G,QAAI,IAAI;AACR,WAAO,4BAAoB,KAAK,mBAAmB,WAAW;AAC5D,aAAO,GAAG;AACR,gBAAQ,UAAU,OAAO,UAAU;AAAA,eAC5B;AACH,gBAAI,CAAE,WAAU,OAAO,SAAY;AACjC,wBAAU,OAAO;AACjB;AAAA,YACF;AAEA,mBAAO,UAAU,OAAO,QAAQ;AAAA,eAE7B;AACH,gBAAI,CAAE,OAAM,cAAc,OAAO;AAC/B,wBAAU,OAAO;AACjB;AAAA,YACF;AAEA,kBAAM,UAAU,qBAAqB,MAAM,YAAY;AACvD,kBAAM,WAAW,cAAc,EAAE,sBAAsB;AACvD,iBAAK,UAAU,aAAa;AAC5B,eAAG,gBAAgB,GAAG,aAAa,IAAI;AACvC,sBAAU,OAAO;AACjB,mBAAO,MAAM,UAAU,IAAI,EAAE,MAAM,SAAU,OAAO;AAClD,kBAAI,CAAE,kBAAiB,eAAe;AACpC,sBAAM;AAAA,cACR;AAAA,YACF,CAAC;AAAA,eAEE;AACH,kBAAM,YAAY;AAAA,eAEf;AACH,gBAAI,MAAM,kBAAkB,QAAW;AACrC,wBAAU,QAAQ,MAAM,WAAW,mBAAmB,MAAM,aAAa,CAAC;AAAA,YAC5E;AAGA,kBAAM,MAAM,WAAW,aAAa,EAAE;AACtC,gBAAI,gBAAgB,EAAE,oBAAoB,IAAI;AAC9C,gBAAI,YAAY;AAChB,gBAAI,YAAY,GAAK,GAAG,GAAK,CAAG;AAChC,sBAAU,kBAAkB;AAAA,eAEzB;AAAA,eACA;AACH,mBAAO,UAAU,KAAK;AAAA;AAAA,MAE5B;AAAA,IACF,GAAG,QAAQ;AAAA,EACb,CAAC,CAAC;AAEF,YAAU,WAAwB,WAAY;AAC5C,QAAI,QAAQ,kBAAgC,4BAAoB,KAAK,kBAAkB,GAAG,OAAO;AAC/F,UAAI,WAAW,QAAQ,IAAI,SAAS;AACpC,aAAO,4BAAoB,KAAK,mBAAmB,WAAW;AAC5D,eAAO,GAAG;AACR,kBAAQ,UAAU,OAAO,UAAU;AAAA,iBAC5B;AACH,0BAAY,MAAM;AAClB,oBAAM,WAAW,cAAc,EAAE,iBAAiB,WAAW,OAAO,MAAM,gBAAgB;AAC1F,oBAAM,eAAe,MAAM,UAAU,sBAAsB,UAAU,QAAQ;AAC7E,uBAAS,MAAM,cAAc,MAAM,gBAAgB;AAEnD,kBAAI,QAAQ;AACV,qBAAK,UAAU,aAAa;AAE5B,oBAAI,MAAM,iBAAiB,MAAM,kBAAkB,QAAW;AAC5D,qBAAG,OAAO,QAAQ,MAAM,cAAc;AACtC,qBAAG,OAAO,SAAS,MAAM,cAAc;AAAA,gBACzC;AAEA,0BAAU,UAAU,YAAY;AAChC,mBAAG,gBAAgB,GAAG,aAAa,QAAQ,WAAW;AACtD,mBAAG,MAAM,GAAG,gBAAgB;AAC5B,mBAAG,MAAM,GAAG,gBAAgB;AAE5B,sBAAM,MAAM,WAAW,aAAa,EAAE;AAEtC,uBAAO,MAAM,QAAQ,SAAU,MAAM;AACnC,sBAAI,WAAW,QAAQ,YAAY,IAAI;AACvC,qBAAG,SAAS,SAAS,GAAG,SAAS,GAAG,SAAS,OAAO,SAAS,MAAM;AAGnE,sBAAI,CAAC,MAAM,eAAe;AACxB,wBAAI,KAAK,QAAQ,QAAQ;AACvB,0BAAI,YAAY,GAAG,GAAG,KAAK,CAAG;AAAA,oBAChC,WAAW,KAAK,QAAQ,SAAS;AAC/B,0BAAI,YAAY,KAAK,GAAG,GAAK,CAAG;AAAA,oBAClC,OAAO;AAEL;AAAA,oBACF;AAAA,kBACF;AAEA,sBAAI,gBAAgB,EAAE,wCAAwC,KAAK,UAAU,QAAQ,MAAM;AAC3F,sBAAI,gBAAgB,EAAE,oBAAoB,KAAK,gBAAgB;AAC/D,4BAAU,kBAAkB;AAAA,gBAC9B,CAAC;AAAA,cACH;AAAA,iBAEG;AAAA,iBACA;AACH,qBAAO,UAAU,KAAK;AAAA;AAAA,QAE5B;AAAA,MACF,GAAG,QAAQ;AAAA,IACb,CAAC,CAAC;AAEF,WAAO,SAAU,KAAK,KAAK;AACzB,aAAO,MAAM,MAAM,MAAM,SAAS;AAAA,IACpC;AAAA,EACF,EAAE;AAEF,YAAU,iBAAiB,WAAY;AACrC,QAAI,KAAK,gBAAc,YAAY;AACnC,OAAG,oBAAoB,SAAS;AAChC,OAAG,SAAS,WAAW,IAAI;AAAA,EAC7B;AAEA,YAAU,kBAAkB,SAAU,SAAS;AAE7C,QAAI,SAAS,MAAM,oBAAoB,IAAI,OAAO;AAElD,QAAI,WAAW,QAAW;AACxB,YAAM,QAAQ,cAAc,MAAM,QAAQ,WAAW,MAAM;AAC3D;AAAA,IACF;AAEA,QAAI,aAAa,UAAU,sBAAsB,EAAE,SAAS;AAE5D,QAAI,aAAa,GAAG;AAClB,sBAAc,2DAA2D;AACzE;AAAA,IACF;AAEA,UAAM,oBAAoB,IAAI,SAAS,UAAU;AAEjD,UAAM,QAAQ,cAAc,MAAM,QAAQ,WAAW,UAAU;AAAA,EACjE;AAEA,YAAU,oBAAoB,SAAU,SAAS;AAE/C,QAAI,SAAS,MAAM,oBAAoB,IAAI,OAAO;AAElD,QAAI,WAAW,QAAW;AACxB,gBAAU,sBAAsB,EAAE,KAAK,MAAM;AAC7C,aAAO,MAAM,oBAAoB,OAAO,OAAO;AAAA,IACjD;AAAA,EACF;AAEA,YAAU,2BAA2B,SAAU,SAAS;AACtD,QAAI,SAAS,MAAM,oBAAoB,IAAI,OAAO;AAElD,QAAI,WAAW,QAAW;AACxB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,kCAAkC,SAAU,SAAS,UAAU,UAAU;AACjF,QAAI,MAAM,QAAQ;AAChB,cAAQ;AAAA,aACD,aAAa;AAChB,kBAAQ;AAAA,iBACD;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AAAA;AAEH,qBAAO,MAAM,QAAQ;AAAA;AAAA,aAGtB,aAAa;AAAA;AAEhB,kBAAQ;AAAA,iBACD;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AACH,qBAAO,MAAM,QAAQ;AAAA,iBAElB;AAAA;AAEH,qBAAO,MAAM,QAAQ;AAAA;AAAA;AAAA,IAI/B;AAGA,YAAQ;AAAA,WACD;AACH,eAAO,MAAM,QAAQ;AAAA,WAElB;AACH,eAAO,MAAM,QAAQ;AAAA,WAElB;AACH,eAAO,MAAM,QAAQ;AAAA,WAElB;AAAA;AAEH,eAAO,MAAM,QAAQ;AAAA;AAAA,EAE3B;AAEA,YAAU,qBAAqB,SAAU,KAAK;AAC5C,UAAM,QAAQ,MAAM,IAAI;AAAA,EAC1B;AAEA,YAAU,wBAAwB,SAAU,OAAO;AACjD,UAAM,qBAAqB;AAG3B,QAAI,MAAM,sBAAsB,CAAC,MAAM,GAAG,SAAS,MAAM,OAAO,GAAG;AACjE,YAAM,GAAG,YAAY,MAAM,OAAO;AAAA,IACpC,WAAW,CAAC,MAAM,sBAAsB,MAAM,GAAG,SAAS,MAAM,OAAO,GAAG;AACxE,YAAM,GAAG,YAAY,MAAM,OAAO;AAAA,IACpC;AAAA,EACF;AAEA,8BAA4B;AAC1B,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,MAAM;AAEvF,QAAI,kBAAkB,SAAS,cAAc,QAAQ;AACrD,QAAI,mBAAmB,gBAAgB,WAAW,IAAI;AACtD,oBAAgB,QAAQ,MAAM,OAAO;AACrC,oBAAgB,SAAS,MAAM,OAAO;AACtC,qBAAiB,UAAU,MAAM,QAAQ,GAAG,CAAC;AAE7C,QAAI,yBAAyB,MAAM,OAAO,sBAAsB;AAChE,QAAI,eAAe,MAAM;AACzB,QAAI,YAAY,aAAa,aAAa;AAC1C,cAAU,QAAQ,SAAU,UAAU;AACpC,UAAI,YAAY,SAAS,aAAa;AACtC,gBAAU,QAAQ,SAAU,UAAU;AAEpC,YAAI,SAAS,cAAc;AACzB,cAAI,YAAY,SAAS,aAAa;AACtC,cAAI,aAAa,UAAU,qBAAqB,QAAQ;AAExD,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,gBAAI,gBAAgB,WAAW;AAC/B,gBAAI,qBAAqB,cAAc,sBAAsB;AAC7D,gBAAI,eAAe,mBAAmB,IAAI,uBAAuB;AACjE,gBAAI,eAAe,mBAAmB,IAAI,uBAAuB;AACjE,6BAAiB,UAAU,eAAe,cAAc,YAAY;AAAA,UACtE;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,QAAI,aAAa,gBAAgB,UAAU,MAAM;AACjD,oBAAgB,OAAO;AACvB,cAAU,iBAAiB,UAAU;AAAA,EACvC;AAEA,YAAU,mBAAmB,WAAY;AACvC,QAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEjF,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC,GAC7E,oBAAoB,MAAM,aAC1B,cAAc,sBAAsB,SAAS,QAAQ,mBACrD,aAAa,MAAM,MACnB,OAAO,eAAe,SAAS,OAAO,YACtC,cAAc,MAAM,OACpB,QAAQ,gBAAgB,SAAS,IAAI;AAEzC,QAAI,MAAM,SAAS;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,cAAc;AACpB,QAAI,WAAW,MAAM;AACrB,UAAM,0BAA0B;AAChC,UAAM,cAAc;AAAA,MAClB,MAAM,CAAC,CAAC,QAAQ,UAAU,IAAI,QAAQ,MAAM,KAAK,IAAI,SAAU,KAAK;AAClE,eAAO,MAAM;AAAA,MACf,CAAC,IAAI;AAAA,IACP;AACA,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,UAAI,eAAe,UAAU,aAAa,SAAU,UAAU;AAC5D,YAAI,MAAM,YAAY,SAAS,MAAM;AACnC,gBAAM,0BAA0B;AAChC,uBAAa,YAAY;AAEzB,cAAI,MAAM,YAAY,aAAa;AAEjC,kBAAM,OAAO,MAAM,YAAY;AAE/B,sBAAU,SAAS;AAEnB,gBAAI,MAAM,YAAY,SAAS;AAC7B,oBAAM,YAAY,QAAQ,QAAQ,SAAU,OAAO;AACjD,oBAAI,kBAAkB,MAAM,iBACxB,MAAM,MAAM;AAChB,uBAAO,gBAAgB,GAAG;AAAA,cAC5B,CAAC;AAAA,YACH;AAGA,sBAAU,kBAAkB;AAE5B,kBAAM,GAAG,YAAY,MAAM,YAAY,WAAW;AAElD,kBAAM,YAAY,YAAY,OAAO;AAErC,kBAAM,cAAc;AAAA,UACtB;AAEA,kBAAQ,QAAQ;AAAA,QAClB,OAAO;AAEL,cAAI,SAAS,SAAS,cAAc,KAAK;AACzC,iBAAO,QAAQ;AACf,iBAAO,MAAM;AACb,gBAAM,YAAY,cAAc,MAAM,GAAG,YAAY,MAAM;AAE3D,gBAAM,OAAO,MAAM,UAAU;AAE7B,gBAAM,YAAY,eAAe,MAAM;AACvC,gBAAM,OAAO,MAAM,YAAY;AAC/B,gBAAM,YAAY,OAAO;AAEzB,oBAAU,SAAS;AAEnB,cAAI,aAAa;AACf,gBAAI,oBAAoB,gBAAgB;AAGxC,kBAAM,YAAY,UAAU,MAAM,WAAW,aAAa,EAAE,IAAI,SAAU,UAAU;AAClF,kBAAI,SAAS,SAAS,gBAAgB;AACtC,kBAAI,SAAS,OAAO,IAAI,cAAc,YAAY,eAAe;AACjE,qBAAO;AAAA,gBACL,iBAAiB,oBAAoB;AAAA,kBACnC;AAAA,gBACF,IAAI;AAAA,gBACJ,eAAe,oBAAoB,cAAc,SAAS;AAAA,gBAC1D,iBAAiB,OAAO;AAAA,gBAExB,KAAK,KAAK,MAAM,KAAK,UAAU,MAAM,CAAC;AAAA,cACxC;AAAA,YACF,CAAC;AAID,kBAAM,YAAY,QAAQ,QAAQ,SAAU,OAAO;AACjD,kBAAI,gBAAgB,MAAM,eACtB,kBAAkB,MAAM;AAC5B,qBAAO,cAAc,eAAe;AAAA,YACtC,CAAC;AAAA,UACH;AAGA,oBAAU,kBAAkB;AAAA,QAC9B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,KAAK,UAAU,aAAa;AAChC,QAAI,iBAAiB,GAAG,aAAa,mBAAmB;AACxD,QAAI,qBAAqB,GAAG,aAAa,wBAAwB;AACjE,QAAI,sBAAsB,GAAG,aAAa,2BAA2B;AACrE,QAAI,gBAAgB,GAAG,aAAa,oBAAoB;AACxD,QAAI,gBAAgB,GAAG,aAAa,gCAAgC,KAAK,GAAG,aAAa,uCAAuC;AAChI,QAAI,SAAS,CAAC,CAAC,yBAAyB,sBAAsB,GAAG,aAAa,GAAG,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,uBAAuB,GAAG,aAAa,GAAG,mBAAmB,CAAC,GAAG,CAAC,8BAA8B,8BAA8B,GAAG,aAAa,GAAG,0BAA0B,CAAC,GAAG,CAAC,gCAAgC,gCAAgC,GAAG,aAAa,GAAG,4BAA4B,CAAC,GAAG,CAAC,oCAAoC,2BAA2B,GAAG,aAAa,GAAG,uBAAuB,CAAC,GAAG,CAAC,kCAAkC,kCAAkC,GAAG,aAAa,GAAG,8BAA8B,CAAC,GAAG,CAAC,oCAAoC,oCAAoC,GAAG,aAAa,GAAG,gCAAgC,CAAC,GAAG,CAAC,uBAAuB,oBAAoB,GAAG,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,yBAAyB,6BAA6B,GAAG,aAAa,GAAG,yBAAyB,CAAC,GAAG,CAAC,0BAA0B,kCAAkC,iBAAiB,GAAG,aAAa,cAAc,8BAA8B,CAAC,GAAG,CAAC,oBAAoB,4BAA4B,GAAG,aAAa,GAAG,wBAAwB,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,oBAAoB,4BAA4B,GAAG,aAAa,GAAG,wBAAwB,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,2BAA2B,qBAAqB,GAAG,aAAa,GAAG,iBAAiB,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,yBAAyB,yBAAyB,GAAG,aAAa,GAAG,qBAAqB,CAAC,GAAG,CAAC,wBAAwB,YAAY,GAAG,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAA0B,cAAc,GAAG,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,yBAAyB,aAAa,GAAG,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,0BAA0B,cAAc,GAAG,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,0BAA0B,cAAc,GAAG,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,4BAA4B,gBAAgB,GAAG,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,6BAA6B,iBAAiB,GAAG,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,gBAAgB,WAAW,GAAG,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,kBAAkB,GAAG,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,mDAAmD,uCAAuC,CAAC,kBAAkB,yBAAyB,IAAI,GAAG,MAAM,GAAG,aAAa,IAAI,SAAS,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,KAAK,GAAG,aAAa,IAAI,QAAQ,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,WAAW,GAAG,aAAa,IAAI,cAAc,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,OAAO,GAAG,aAAa,IAAI,UAAU,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,iBAAiB,GAAG,aAAa,IAAI,oBAAoB,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,mDAAmD,oCAAoC,CAAC,sBAAsB,yBAAyB,IAAI,GAAG,MAAM,mBAAmB,cAAc,IAAI,SAAS,IAAI,sBAAsB,yBAAyB,IAAI,GAAG,KAAK,mBAAmB,cAAc,IAAI,QAAQ,IAAI,sBAAsB,yBAAyB,IAAI,GAAG,WAAW,mBAAmB,cAAc,IAAI,cAAc,IAAI,sBAAsB,yBAAyB,IAAI,GAAG,OAAO,mBAAmB,cAAc,IAAI,UAAU,IAAI,sBAAsB,yBAAyB,IAAI,GAAG,iBAAiB,mBAAmB,cAAc,IAAI,oBAAoB,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,mDAAmD,+BAA+B,CAAC,kBAAkB,yBAAyB,IAAI,GAAG,MAAM,GAAG,KAAK,IAAI,SAAS,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,KAAK,GAAG,KAAK,IAAI,QAAQ,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,WAAW,GAAG,KAAK,IAAI,cAAc,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,OAAO,GAAG,KAAK,IAAI,UAAU,IAAI,kBAAkB,yBAAyB,IAAI,GAAG,iBAAiB,GAAG,KAAK,IAAI,oBAAoB,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,uCAAuC,0BAA0B,gBAAgB,GAAG,aAAa,cAAc,sBAAsB,IAAI,CAAC,GAAG,CAAC,yCAAyC,4BAA4B,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,2CAA2C,8BAA8B,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,YAAY,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,YAAY,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,YAAY,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,wCAAwC,2BAA2B,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,SAAS,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,SAAS,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,SAAS,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,2CAA2C,8BAA8B,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,6CAA6C,gCAAgC,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,YAAY,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,YAAY,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,YAAY,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,0CAA0C,6BAA6B,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,SAAS,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,SAAS,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,SAAS,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,uCAAuC,0BAA0B,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,QAAQ,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,QAAQ,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,QAAQ,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,yCAAyC,4BAA4B,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,UAAU,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,sCAAsC,yBAAyB,CAAC,GAAG,yBAAyB,GAAG,eAAe,GAAG,OAAO,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,eAAe,GAAG,OAAO,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,eAAe,GAAG,OAAO,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,yCAAyC,4BAA4B,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,QAAQ,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,QAAQ,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,QAAQ,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,2CAA2C,8BAA8B,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,wCAAwC,2BAA2B,CAAC,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,OAAO,EAAE,WAAW,aAAa,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,OAAO,EAAE,UAAU,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,OAAO,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,wBAAwB,cAAc,GAAG,uBAAuB,EAAE,KAAK,gBAAqB,CAAC,GAAG,CAAC,kBAAkB,YAAY,GAAG,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,gBAAgB,UAAU,GAAG,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,iBAAiB,WAAW,GAAG,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,4BAA4B,4BAA4B,GAAG,aAAa,GAAG,wBAAwB,CAAC,GAAG,CAAC,qBAAqB,qBAAqB,uBAAuB,GAAG,aAAa,oBAAoB,uBAAuB,CAAC,GAAG,CAAC,mBAAmB,mBAAmB,uBAAuB,GAAG,aAAa,oBAAoB,qBAAqB,CAAC,GAAG,CAAC,iBAAiB,iBAAiB,MAAM,SAAS,IAAI,CAAC,CAAC;AAC5rR,QAAI,SAAS,CAAC;AAEd,WAAO,OAAO,QAAQ;AACpB,UAAI,cAAc,OAAO,IAAI,GACzB,eAAe,eAAe,aAAa,CAAC,GAC5C,QAAQ,aAAa,IACrB,MAAM,aAAa,IACnB,QAAQ,aAAa;AAEzB,UAAI,KAAK;AACP,eAAO,OAAO;AAAA,UACZ;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,QAAI,MAAM,cAAc;AACtB,eAAS,QAAQ,GAAG,QAAQ,MAAM,aAAa,QAAQ,EAAE,OAAO;AAC9D,cAAM,aAAa,OAAO,SAAS,WAAW,IAAI;AAAA,MACpD;AAAA,IACF;AAEA,QAAI,MAAM,yBAAyB;AACjC,uBAAiB;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,kBAAkB,WAAY;AACtC,QAAI,MAAM,iBAAiB;AACzB,YAAM,QAAQ,QAAQ,MAAM,QAAQ,SAAS;AAC7C,YAAM,kBAAkB;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,CAAC,MAAM,iBAAiB;AAC1B,YAAM,QAAQ,OAAO,MAAM,QAAQ,SAAS;AAC5C,YAAM,kBAAkB;AAAA,IAC1B;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,QAAQ;AAC1C,QAAI,MAAM,eAAe,QAAQ;AAC/B,aAAO;AAAA,IACT;AAEA,QAAI,MAAM,cAAc;AACtB,YAAM,aAAa,YAAY;AAC/B,YAAM,eAAe;AAAA,IACvB;AAEA,UAAM,aAAa;AAEnB,QAAI,MAAM,YAAY;AAEpB,UAAI,eAAe,MAAM,WAAW,aAAa,EAAE;AACnD,mBAAa,yBAAyB,EAAE,KAAK;AAE7C,gBAAU,sBAAsB,IAAI;AAEpC,YAAM,eAAe,MAAM,WAAW,aAAa,SAAU,GAAG;AAC9D,eAAO,UAAU,mBAAmB,EAAE,KAAK;AAAA,MAC7C,CAAC;AACD,YAAM,WAAW,QAAQ,MAAM,KAAK,IAAI,MAAM,KAAK,EAAE;AACrD,YAAM,WAAW,gBAAgB;AACjC,YAAM,WAAW,OAAO;AACxB,gBAAU,SAAS;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,iBAAiB,WAAY;AACrC,QAAI,MAAM,qBAAoB,YAAY;AAC1C,QAAI,sBAAsB,SAAS;AACnC,WAAO;AAAA,EACT;AAEA,YAAU,SAAS,MAAM,MAAM,UAAU,QAAQ,UAAU,eAAe,eAAe;AAC3F;AA+BA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,4BAAwB,OAAO,WAAW,OAAO,aAAa;AAE9D,QAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,QAAM,OAAO,MAAM,QAAQ;AAC3B,kBAAgB;AAEhB,MAAI,CAAC,MAAM,UAAU;AACnB,UAAM,WAAW,qBAAoB,YAAY;AACjD,UAAM,SAAS,sBAAsB,SAAS;AAAA,EAChD;AAGA,QAAM,UAAU,IAAI,MAAM;AAC1B,QAAM,QAAQ,MAAM,WAAW;AAC/B,QAAM,QAAQ,MAAM,OAAO;AAC3B,QAAM,QAAQ,MAAM,MAAM;AAC1B,QAAM,QAAQ,MAAM,QAAQ;AAC5B,QAAM,QAAQ,MAAM,SAAS;AAC7B,QAAM,QAAQ,MAAM,SAAS;AAC7B,QAAM,sBAAsB,oBAAI,IAAI;AACpC,QAAM,YAAY,oBAAmB,YAAY;AAGjD,QAAM,UAAU,iBAAiB,mBAAmB,aAAW;AAG/D,QAAM,cAAc,iBAAe,YAAY;AAC/C,QAAM,YAAY,sBAAsB,SAAS;AAEjD,QAAM,aAAa,KAAK,iBAAe,YAAY;AACnD,QAAM,MAAM,WAAW,OAAO,YAAY;AAC1C,QAAM,MAAM,WAAW,OAAO,eAAe;AAE7C,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,sBAAsB,UAAU,aAAa,sBAAsB,aAAa,CAAC;AAC7H,QAAM,OAAO,WAAW,OAAO;AAAA,IAAC;AAAA,IAAe;AAAA,IAAW;AAAA,IAAU;AAAA,IAAgB;AAAA,IAA2B;AAAA,IAAmB;AAAA,IAAU;AAAA,IAI5I;AAAA,EAAmB,CAAC;AACpB,QAAM,YAAY,WAAW,OAAO,CAAC,MAAM,GAAG,CAAC;AAE/C,wBAAsB,WAAW,KAAK;AACxC;AA54BA,IAGA,qBAYI,iBACA,iBACA,wBAOA,uBAiCA,kBACA,sBA0wBA,kBA0EA,eAMA;AAp5BJ;AAAA;AAAA;AACA;AACA;AACA,0BAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB,MAAM;AAA1B,IACI,kBAAgB,MAAM;AAC1B,IAAI,yBAAyB;AAAA,MAC3B,UAAU;AAAA,MACV,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AACA,IAAI,wBAAwB;AAAA,MAC1B,IAAI;AAAA,QACF,eAAe;AAAA,QACf,YAAY;AAAA,MAEd;AAAA,MACA,IAAI;AAAA,QACF,eAAe;AAAA,QAEf,YAAY;AAAA,MAEd;AAAA,IACF;AAqBA,IAAI,mBAAmB;AACvB,IAAI,uBAAuB,CAAC;AA0wB5B,IAAI,mBAAiB;AAAA,MACnB,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,kBAAkB;AAAA,MAClB,QAAQ;AAAA,MACR,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,cAAc,CAAC;AAAA,MACf,yBAAyB;AAAA,MACzB,QAAQ;AAAA,MACR,iBAAiB;AAAA,MAEjB,mBAAmB;AAAA,MACnB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,cAAc;AAAA,MACd,oBAAoB;AAAA,IACtB;AAkDA,IAAI,gBAAc,MAAM,YAAY,UAAQ,uBAAuB;AAInE,4BAAwB,SAAS,aAAW;AAE5C,IAAI,mBAAkB;AAAA,MACpB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACz5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,wBAAwB,WAAW,OAAO;AAExC,QAAM,eAAe,KAAK,gBAAgB;AAE1C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,sBAAsB,UAAU,uBAAuB,uBAAuB;AACpF,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,gBAAU,aAAa;AACvB,gBAAU,gBAAgB,MAAM,WAAW,YAAY,CAAC;AACxD,gBAAU,eAAe,MAAM,WAAW,UAAU,CAAC;AACrD,gBAAU,kBAAkB;AAE5B,YAAM,cAAc;AACpB,YAAM,iBAAiB;AAEvB,eAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,SAAS;AAC1D,YAAI,QAAQ,MAAM,SAAS;AAE3B,YAAI,MAAM,IAAI,kBAAkB,GAAG;AACjC,cAAI,CAAC,MAAM,aAAa;AACtB,kBAAM,cAAc,CAAC;AAAA,UACvB;AAEA,gBAAM,YAAY,KAAK,KAAK;AAAA,QAC9B,OAAO;AACL,gBAAM,YAAY;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,YAAY;AAC1D,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAC/I;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAGA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,CAAC,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AAClL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAGA,YAAU,0BAA0B,SAAU,YAAY;AACxD,QAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AACjL;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,mBAAmB,WAAY;AAEvC,QAAI,CAAC,MAAM,aAAa;AACtB;AAAA,IACF;AAEA,UAAM,iBAAiB,CAAC;AAExB,aAAS,QAAQ,GAAG,QAAQ,MAAM,YAAY,QAAQ,SAAS;AAC7D,UAAI,QAAQ,MAAM,YAAY;AAC9B,YAAM,OAAO;AAEb,UAAI,MAAM,UAAU,GAAG;AACrB,cAAM,eAAe,KAAK,KAAK;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,UAAI,MAAM,WAAW,YAAY,GAAG;AAClC,mBAAW,0BAA0B;AAAA,MACvC,OAAO;AACL,mBAAW,+BAA+B;AAAA,MAC5C;AAAA,IACF;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS,YAAY;AAC3D,WAAO,UAAU,WAAW,SAAS,UAAU;AAAA,EACjD;AAEA,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,IAAI;AAC5B,gBAAU,iBAAiB;AAAA,IAC7B,WAAW,MAAM,gBAAgB;AAC/B,eAAS,QAAQ,GAAG,QAAQ,MAAM,eAAe,QAAQ,SAAS;AAChE,cAAM,eAAe,OAAO,WAAW;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,SAAS,YAAY;AACzD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,KAAK;AAC7B,gBAAU,iBAAiB;AAAA,IAC7B,WAAW,MAAM,gBAAgB;AAC/B,eAAS,QAAQ,GAAG,QAAQ,MAAM,eAAe,QAAQ,SAAS;AAChE,cAAM,eAAe,OAAO,WAAW;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAEA,YAAU,iBAAiB,WAAY;AAErC,QAAI,MAAM,WAAW,SAAS,IAAI,MAAM,cAAc,SAAS,GAAG;AAChE,YAAM,WAAW,cAAc;AAC/B,mBAAK,KAAK,MAAM,YAAY,MAAM,MAAM,WAAW,UAAU,CAAC;AAC9D,mBAAK,UAAU,MAAM,YAAY,MAAM,MAAM,YAAY,IAAI;AAE7D,UAAI,MAAM,WAAW,cAAc,GAAG;AACpC,qBAAK,SAAS,MAAM,YAAY,YAAY;AAAA,MAC9C,OAAO;AACL,qBAAK,SAAS,MAAM,YAAY,cAAc,MAAM,YAAY,IAAI;AACpE,qBAAK,OAAO,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAC1E,qBAAK,UAAU,MAAM,YAAY,cAAc,MAAM,YAAY,YAAY;AAAA,MAC/E;AAEA,YAAM,cAAc,SAAS;AAAA,IAC/B;AAEA,WAAO,MAAM;AAAA,EACf;AACF;AAYA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,eAAe;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,cAAc,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AAAA,IAC/C,MAAM,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAAA,EAC1C;AAEA,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AACpC,MAAI,WAAW,OAAO,CAAC,gBAAgB,CAAC;AAExC,iBAAe,WAAW,KAAK;AACjC;AAtLA,IA6JI,kBA2BA,eAEA;AA1LJ;AAAA;AAAA;AACA;AACA;AACA;AA0JA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,aAAa;AAAA,MACb,gBAAgB;AAAA,IAClB;AAsBA,IAAI,gBAAc,YAAc,QAAM;AAEtC,IAAI,YAAW;AAAA,MACb,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,YAAY,aAAW;AAAA;AAAA;;;AC/LxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAA0B,WAAW,OAAO;AAE1C,QAAM,eAAe,KAAK,kBAAkB;AAE5C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,YAAY;AACrB;AAAA,MACF;AAEA,YAAM,sBAAsB,UAAU,uBAAuB,uBAAuB;AACpF,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,gBAAU,aAAa;AACvB,gBAAU,gBAAgB,MAAM,WAAW,YAAY,CAAC;AACxD,gBAAU,eAAe,MAAM,WAAW,UAAU,CAAC;AACrD,gBAAU,kBAAkB;AAE5B,YAAM,cAAc;AACpB,YAAM,iBAAiB;AAEvB,eAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,QAAQ,SAAS;AAC1D,YAAI,QAAQ,MAAM,SAAS;AAE3B,YAAI,MAAM,IAAI,kBAAkB,GAAG;AACjC,cAAI,CAAC,MAAM,aAAa;AACtB,kBAAM,cAAc,CAAC;AAAA,UACvB;AAEA,gBAAM,YAAY,KAAK,KAAK;AAAA,QAC9B,OAAO;AACL,gBAAM,YAAY;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,iBAAW,2BAA2B;AAAA,IACxC;AAAA,EACF;AAGA,YAAU,qBAAqB,SAAU,YAAY;AACnD,QAAI,CAAC,MAAM,aAAa,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,CAAC,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AACtM;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAGA,YAAU,0BAA0B,SAAU,YAAY;AACxD,QAAI,CAAC,MAAM,aAAa,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,WAAW,YAAY,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,kBAAkB,GAAG;AACrM;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,sBAAsB,SAAU,YAAY;AACpD,QAAI,CAAC,MAAM,aAAa,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,oBAAoB,KAAK,MAAM,eAAe,YAAY,KAAK,CAAC,MAAM,WAAW,mBAAmB;AACjK;AAAA,IACF;AAEA,cAAU,MAAM,YAAY,IAAI;AAChC,UAAM,UAAU,SAAS,UAAU;AACnC,cAAU,MAAM,YAAY,KAAK;AAAA,EACnC;AAEA,YAAU,mBAAmB,WAAY;AAEvC,QAAI,CAAC,MAAM,aAAa;AACtB;AAAA,IACF;AAEA,UAAM,iBAAiB,CAAC;AAExB,aAAS,QAAQ,GAAG,QAAQ,MAAM,YAAY,QAAQ,SAAS;AAC7D,UAAI,QAAQ,MAAM,YAAY;AAC9B,YAAM,OAAO;AAEb,UAAI,MAAM,UAAU,GAAG;AACrB,cAAM,eAAe,KAAK,KAAK;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAGA,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,IAAI;AAC5B,gBAAU,iBAAiB;AAAA,IAC7B,WAAW,MAAM,gBAAgB;AAE/B,eAAS,QAAQ,GAAG,QAAQ,MAAM,eAAe,QAAQ,SAAS;AAChE,cAAM,eAAe,OAAO,WAAW;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,SAAS,YAAY;AACzD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,KAAK;AAC7B,gBAAU,iBAAiB;AAAA,IAC7B,WAAW,MAAM,gBAAgB;AAC/B,eAAS,QAAQ,GAAG,QAAQ,MAAM,eAAe,QAAQ,SAAS;AAChE,cAAM,eAAe,OAAO,WAAW;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAGA,YAAU,cAAc,SAAU,SAAS,YAAY;AACrD,QAAI,SAAS;AACX,YAAM,QAAQ,UAAU,IAAI;AAC5B,gBAAU,iBAAiB;AAAA,IAC7B,WAAW,MAAM,gBAAgB;AAE/B,eAAS,QAAQ,GAAG,QAAQ,MAAM,eAAe,QAAQ,SAAS;AAChE,cAAM,eAAe,OAAO,WAAW;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACF;AAUA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAElD,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AACpC,MAAI,WAAW,OAAO,CAAC,gBAAgB,CAAC;AAExC,mBAAiB,WAAW,KAAK;AACnC;AAjKA,IAkJI,kBAiBA,eAEA;AArKJ;AAAA;AAAA;AACA;AACA;AAgJA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,gBAAgB;AAAA,IAClB;AAcA,IAAI,gBAAc,YAAc,QAAM;AAEtC,IAAI,aAAa;AAAA,MACf,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,cAAc,aAAW;AAAA;AAAA;;;AC1K1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA,iCAAiC,WAAW,OAAO;AAEjD,QAAM,eAAe,KAAK,yBAAyB;AAEnD,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,oBAAoB;AAC1B,YAAM,cAAc,UAAU,uBAAuB,gBAAgB;AACrE,YAAM,iBAAiB,MAAM,YAAY,uBAAuB,mBAAmB;AACnF,YAAM,sBAAsB,MAAM,eAAe,UAAU;AAC3D,YAAM,eAAe,MAAM,eAAe,eAAe,MAAM,eAAe,cAAc,EAAE,gBAAgB,CAAC;AAAA,IACjH;AAAA,EACF;AAGA,YAAU,kBAAkB,SAAU,SAAS,YAAY;AACzD,QAAI,SAAS;AACX,YAAM,oBAAoB;AAC1B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS;AAC/C,QAAI,SAAS;AACX,YAAM,uBAAuB;AAC7B,YAAM,cAAc;AACpB,gBAAU,OAAO;AACjB,YAAM,cAAc;AAAA,IACtB;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,SAAS;AACxC,QAAI,SAAS;AACX,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AAEA,YAAU,SAAS,WAAY;AAC7B,QAAI,MAAM,MAAM,oBAAoB,WAAW;AAE/C,QAAI,MAAM,YAAY,KAAK;AACzB,YAAM,UAAU;AAEhB,eAAS,IAAI,UAAU,OAAO,IAAI,UAAU,KAAK,KAAK;AACpD,cAAM,WAAW,GAAG,sBAAsB,MAAM,mBAAmB;AAAA,MACrE;AAAA,IACF;AAEA,QAAI,QAAQ,MAAM,YAAY,cAAc;AAC5C,QAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,cAAU,YAAY,KAAK,KAAK;AAAA,EAClC;AAEA,YAAU,eAAe,SAAU,SAAS,KAAK,OAAO;AACtD,cAAU,kBAAkB,SAAS,KAAK,KAAK;AAE/C,QAAI,MAAM,iCAAiC;AACzC,YAAM,gCAAgC,OAAO;AAAA,IAC/C;AAGA,QAAI,aAAa,MAAM,WAAW,0BAA0B,EAAE;AAC9D,QAAI,qBAAqB;AAEzB,QAAI,YAAY;AACd,2BAAqB,WAAW;AAAA,IAClC;AAEA,QAAI,oBAAoB;AACtB,eAAS,IAAI,GAAG,IAAI,mBAAmB,QAAQ,KAAK;AAClD,YAAI,kBAAkB,mBAAmB;AAEzC,YAAI,gBAAgB,cAAc;AAChC,cAAI,aAAa,gBAAgB;AACjC,cAAI,OAAO,QAAQ;AACnB,cAAI,gBAAgB,mBAAiB,WAAW,MAAM,gBAAgB,eAAe,gBAAgB,kBAAkB,gBAAgB,UAAU;AACjJ,kBAAQ,cAAc,cAAc;AAAA,QACtC;AAAA,MACF;AAAA,IACF;AAEA,cAAU,oBAAoB,SAAS,KAAK,KAAK;AAEjD,QAAI,oBAAoB;AACtB,eAAS,KAAK,GAAG,KAAK,mBAAmB,QAAQ,MAAM;AACrD,YAAI,mBAAmB,mBAAmB;AAE1C,YAAI,CAAC,iBAAiB,cAAc;AAClC,cAAI,cAAc,iBAAiB;AACnC,cAAI,QAAQ,QAAQ;AAEpB,cAAI,iBAAiB,mBAAiB,WAAW,OAAO,iBAAiB,eAAe,iBAAiB,kBAAkB,iBAAiB,UAAU;AAEtJ,kBAAQ,eAAe,eAAe;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,QAAI,iBAAiB,MAAM,WAAW,0BAA0B,EAAE;AAClE,QAAI,mBAAmB;AAEvB,QAAI,gBAAgB;AAClB,UAAI,iBAAiB,eAAe;AAEpC,UAAI,mBAAmB,UAAa,mBAAmB,IAAI;AACzD,2BAAmB;AAAA,MACrB;AAAA,IACF;AAEA,YAAQ,SAAS;AACjB,QAAI,qBAAqB;AAEzB,QAAI,gBAAgB;AAClB,UAAI,mBAAmB,eAAe;AAEtC,UAAI,qBAAqB,UAAa,qBAAqB,IAAI;AAC7D,6BAAqB;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,WAAW;AACnB,QAAI,qBAAqB;AAEzB,QAAI,gBAAgB;AAClB,UAAI,mBAAmB,eAAe;AAEtC,UAAI,qBAAqB,QAAW;AAClC,6BAAqB;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,qBAAqB,SAAU,SAAS,KAAK,OAAO;AAC5D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAGpF,QAAI,WAAW,CAAC,0BAA0B,0BAA0B,2BAA2B,yDAAyD,qCAAqC,mCAAmC;AAEhO,QAAI,qBAAqB;AACvB,iBAAW,SAAS,OAAO,CAAC,sCAAsC,qCAAqC,CAAC;AAAA,IAC1G;AAKA,QAAI,YAAY,CAAC,sBAAsB,wBAAwB,kBAAkB;AAEjF,QAAI,qBAAqB;AACvB,kBAAY,UAAU,OAAO,CAAC,yBAAyB,wBAAwB,CAAC;AAAA,IAClF;AAEA,gBAAY,UAAU,OAAO,CAAC,yCAAyC,yCAAyC,6BAA6B,CAAC;AAE9I,QAAI,qBAAqB;AACvB,kBAAY,UAAU,OAAO,CAAC,2CAA2C,yCAAyC,CAAC;AAAA,IACrH;AAGA,QAAI,MAAM,YAAY,QAAQ,EAAE,mBAAmB,MAAM,KAAK,CAAC,MAAM,cAAc;AACjF,iBAAW,SAAS,OAAO,CAAC,mCAAmC,CAAC;AAChE,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,+BAA+B,mCAAmC,CAAC,EAAE;AAC5I,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,qCAAqC,CAAC,EAAE;AAChH,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,kCAAkC,+BAA+B,CAAC,EAAE;AAC3I,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+CAA+C,CAAC,EAAE;AAAA,IAC5H;AAEA,QAAI,MAAM,YAAY,QAAQ,EAAE,mBAAmB,MAAM,KAAK,CAAC,MAAM,cAAc;AACjF,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,UAAU,OAAO,CAAC,6CAA6C,6CAA6C,4CAA4C,CAAC,CAAC,EAAE;AAAA,IACrO,OAAO;AACL,UAAI,MAAM,WAAW,mCAAmC,KAAK,MAAM,WAAW,oBAAoB,KAAK,CAAC,MAAM,cAAc;AAC1H,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,UAAU,OAAO,CAAC,+DAA+D,kCAAkC,kCAAkC,iCAAiC,CAAC,CAAC,EAAE;AAAA,MACnQ,OAAO;AACL,YAAI,MAAM,oBAAoB,KAAK,CAAC,MAAM,cAAc;AACtD,qBAAW,SAAS,OAAO,CAAC,2DAA2D,6DAA6D,6DAA6D,iEAAiE,+DAA+D,CAAC;AAElV,cAAI,qBAAqB;AACvB,uBAAW,SAAS,OAAO,CAAC,yEAAyE,oEAAoE,uCAAuC,CAAC;AACjN,wBAAY,UAAU,OAAO,CAAC,kCAAkC,gEAAgE,gEAAgE,mEAAmE,6CAA6C,iCAAiC,CAAC;AAAA,UACpV,OAAO;AACL,wBAAY,UAAU,OAAO,CAAC,kCAAkC,gEAAgE,gEAAgE,iCAAiC,CAAC;AAAA,UACpO;AAAA,QACF;AAEA,YAAI,MAAM,mBAAmB,CAAC,MAAM,cAAc;AAChD,qBAAW,SAAS,OAAO,CAAC,iCAAiC,CAAC;AAAA,QAChE;AAEA,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,SAAS,EAAE;AAAA,MACpF;AAAA,IACF;AAEA,eAAW,mBAAiB,WAAW,UAAU,qBAAqB,QAAQ,EAAE;AAChF,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,qBAAqB,SAAU,SAAS,KAAK,OAAO;AAC5D,QAAI,WAAW,QAAQ;AAEvB,QAAI,eAAe;AACnB,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AACpF,QAAI,iBAAiB,MAAM,YAAY,mBAAmB,gBAAgB;AAC1E,QAAI,UAAU,CAAC;AAEf,YAAQ;AAAA,WACD;AAEH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,sFAAsF,sBAAsB,GAAG,KAAK,EAAE;AAC9L;AAAA,WAEG;AAEH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,8CAA8C,wCAAwC,wCAAwC,0CAA0C,yGAAyG,sBAAsB,GAAG,KAAK,EAAE;AACzX;AAAA,WAEG;AAEH,iBAAS,KAAK,GAAG,KAAK,gBAAgB,EAAE,IAAI;AAC1C,oBAAU,QAAQ,OAAO,CAAC,0BAA0B,OAAO,IAAI,GAAG,GAAG,gCAAgC,OAAO,IAAI,iBAAiB,GAAG,gCAAgC,OAAO,IAAI,iBAAiB,CAAC,CAAC;AAAA,QACpM;AAEA,mBAAW,mBAAiB,WAAW,UAAU,qBAAqB,OAAO,EAAE;AAC/E,kBAAU,CAAC,gCAAgC,mCAAmC,aAAa;AAE3F,iBAAS,MAAM,GAAG,MAAM,gBAAgB,EAAE,KAAK;AAC7C,oBAAU,QAAQ,OAAO,CAAC,0DAA0D,OAAO,KAAK,KAAK,GAAG,qBAAqB,OAAO,cAAc,gBAAgB,EAAE,OAAO,KAAK,IAAI,GAAG,+CAA+C,OAAO,KAAK,UAAU,GAAG,SAAS,oDAAoD,OAAO,KAAK,sCAAsC,GAAG,wBAAwB,OAAO,cAAc,gBAAgB,EAAE,OAAO,KAAK,IAAI,GAAG,OAAO,CAAC;AAAA,QAC7c;AAEA,kBAAU,QAAQ,OAAO,CAAC,yCAAyC,4CAA4C,yGAAyG,sBAAsB,CAAC;AAC/O,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,SAAS,KAAK,EAAE;AACvF;AAAA,WAEG;AAEH,iBAAS,OAAO,GAAG,OAAO,gBAAgB,EAAE,MAAM;AAChD,oBAAU,QAAQ,OAAO,CAAC,0BAA0B,OAAO,MAAM,GAAG,GAAG,gCAAgC,OAAO,MAAM,iBAAiB,GAAG,gCAAgC,OAAO,MAAM,iBAAiB,GAAG,+BAA+B,OAAO,MAAM,GAAG,GAAG,gCAAgC,OAAO,MAAM,GAAG,GAAG,+BAA+B,OAAO,MAAM,GAAG,GAAG,8BAA8B,OAAO,MAAM,GAAG,GAAG,8BAA8B,OAAO,MAAM,GAAG,CAAC,CAAC;AAAA,QACnc;AAEA,mBAAW,mBAAiB,WAAW,UAAU,qBAAqB,OAAO,EAAE;AAC/E,kBAAU,CAAC,gCAAgC,mCAAmC,gCAAgC,wBAAwB,aAAa;AAEnJ,iBAAS,OAAO,GAAG,OAAO,gBAAgB,EAAE,MAAM;AAChD,oBAAU,QAAQ,OAAO,CAAC,wBAAwB,wBAAwB,OAAO,MAAM,QAAQ,GAAG,SAAS,gDAAgD,OAAO,MAAM,GAAG,GAAG,SAAS,UAAU,SAAS,4DAA4D,OAAO,MAAM,GAAG,GAAG,wDAAwD,+DAA+D,2BAA2B,0BAA0B,OAAO,MAAM,IAAI,GAAG,4BAA4B,OAAO,MAAM,iBAAiB,GAAG,4BAA4B,OAAO,MAAM,gCAAgC,GAAG,wEAAwE,yBAAyB,OAAO,MAAM,WAAW,GAAG,WAAW,mEAAmE,OAAO,MAAM,IAAI,GAAG,+BAA+B,kDAAkD,OAAO,MAAM,KAAK,GAAG,aAAa,iEAAiE,OAAO,MAAM,IAAI,GAAG,aAAa,cAAc,aAAa,8BAA8B,aAAa,WAAW,SAAS,gFAAgF,uBAAuB,OAAO,cAAc,gBAAgB,EAAE,OAAO,MAAM,IAAI,GAAG,8DAA8D,WAAW,kEAAkE,OAAO,MAAM,sCAAsC,GAAG,wBAAwB,OAAO,cAAc,gBAAgB,EAAE,OAAO,MAAM,IAAI,GAAG,OAAO,CAAC;AAAA,QAC/iD;AAEA,kBAAU,QAAQ,OAAO,CAAC,yCAAyC,4CAA4C,yGAAyG,sBAAsB,CAAC;AAC/O,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,SAAS,KAAK,EAAE;AACvF;AAAA;AAGA,wBAAc,sBAAsB;AAAA;AAGxC,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,QAAI,sBAAsB,GAAG;AAC3B,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AAEvB,UAAI,MAAM,YAAY,QAAQ,EAAE,gBAAgB,GAAG;AACjD,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,4BAA4B,8BAA8B,gCAAgC,CAAC,EAAE;AACrK,mBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,6CAA6C,CAAC,EAAE;AACzH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+BAA+B,4BAA4B,CAAC,EAAE;AACtI,mBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,yCAAyC,CAAC,EAAE;AACrH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,gCAAgC,CAAC,EAAE;AAC3G,mBAAW,mBAAiB,WAAW,UAAU,uBAAuB;AAAA,UAAC;AAAA,UAEzE;AAAA,QAA0E,CAAC,EAAE;AAAA,MAC/E,OAAO;AACL,YAAI,MAAM,iBAAiB;AACzB,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,8BAA8B,iCAAiC,CAAC,EAAE;AAC1I,qBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,oDAAoD,4EAA4E,0EAA0E,CAAC,EAAE;AAAA,QACxR,OAAO;AACL,cAAI,UAAU,cAAc,MAAM,YAAY,EAAE,kBAAkB,GAAG,MAAM,YAAY,iBAAiB,CAAC,MAAM,MAAM,QAAQ,OAAO;AAYlI,uBAAW,mBAAiB,WAAW,UAAU,4BAA4B,CAAC,oCAAoC,oCAAoC,4BAA4B,CAClL,EAAE;AACF,uBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,0BAA0B,2BAA2B,qGAAqG,qGAAqG,CAAC,EAAE;AAAA,UAC7U,OAAO;AACL,uBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,6BAA6B,CAAC,EAAE;AACxG,uBAAW,mBAAiB,WAAW,UAAU,4BAA4B;AAAA,cAE7E;AAAA,cAAoC;AAAA,cAAoC;AAAA,YAA4B,CACpG,EAAE;AACF,uBAAW,mBAAiB,WAAW,UAAU,uBAAuB;AAAA,cAAC;AAAA,cAA2B;AAAA,cAA2B;AAAA,cAE/H;AAAA,cAAwG;AAAA,YAAsH,CAAC,EAAE;AAAA,UACnO;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,SAAS;AACjB,cAAQ,WAAW;AACnB,cAAQ,WAAW;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,0BAA0B,SAAU,SAAS,KAAK,OAAO;AACjE,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AAEvB,QAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,gBAAe,UAAU,MAAM,YAAY,iBAAiB,MAAM,UAAU,QAAQ;AAClI,iBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,2BAA2B,oBAAoB,OAAO,MAAM,YAAY,EAAE,aAAa,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE;AAAA,IACzL;AAGA,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,QAAI,sBAAsB,GAAG;AAC3B,iBAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,gCAAgC,CAAC,EAAE;AAC/G,iBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,6CAA6C,wCAAwC,CAAC,EAAE;AACrK,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,4BAA4B,0BAA0B,CAAC,EAAE;AACjI,iBAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,+BAA+B,4BAA4B,CAAC,EAAE;AAC1I,iBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,yCAAyC,CAAC,EAAE;AACzH,iBAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,gCAAgC,CAAC,EAAE;AAC/G,iBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,mCAAmC,CAAC,EAAE;AAAA,IACrH,OAAO;AACL,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,0BAA0B,CAAC,EAAE;AACrG,iBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,wCAAwC,CAAC,EAAE;AAAA,IAC1H;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,MAAM,YAAY,QAAQ,EAAE,gBAAgB,GAAG;AACjD,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AAEvB,UAAI,MAAM,cAAc;AACtB;AAAA,MACF;AAEA,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,8BAA8B,EAAE;AAKxG,UAAI,MAAM,MAAM,YAAY,kBAAkB;AAC9C,UAAI,WAAW;AACf,UAAI,QAAQ;AAEZ,UAAI,OAAO,IAAI,SAAS,GAAG;AACzB,mBAAW,IAAI,GAAG,cAAc;AAEhC,YAAI,IAAI,GAAG,UAAU,MAAM,MAAM,QAAQ,kBAAkB;AACzD,kBAAQ;AAAA,QACV;AAAA,MACF;AAEA,UAAI,MAAM,WAAW,mBAAmB,GAAG;AACzC,mBAAW,MAAM,WAAW,mBAAmB,EAAE,aAAa,EAAE,WAAW,EAAE,sBAAsB;AACnG,gBAAQ;AAAA,MACV;AAEA,UAAI,UAAU,GAAG;AACf,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,yDAAyD,EAAE;AAClI,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+BAA+B,4BAA4B,CAAC,EAAE;AACtI,mBAAW,mBAAiB,WAAW,UAAU,uBAAuB,yCAAyC,EAAE;AACnH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,kCAAkC,6BAA6B,CAAC,EAAE;AAE1I,YAAI,OAAO,IAAI,UAAU,GAAG;AAC1B,kBAAQ;AAAA,iBACD;AACH,yBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,0DAA0D,2CAA2C,yCAAyC,CAAC,EAAE;AAC1N;AAAA,iBAEG;AACH,yBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,0DAA0D,2CAA2C,2CAA2C,iCAAiC,CAAC,EAAE;AAC7P;AAAA;AAGA,yBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,0DAA0D,6CAA6C,6CAA6C,iCAAiC,CAAC,EAAE;AAAA;AAAA,QAEvQ;AAAA,MACF,OAAO;AACL,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,yDAAyD,EAAE;AAClI,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+BAA+B,4BAA4B,CAAC,EAAE;AACtI,mBAAW,mBAAiB,WAAW,UAAU,uBAAuB,yCAAyC,EAAE;AACnH,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,kCAAkC,+BAA+B,CAAC,EAAE;AAE5I,gBAAQ;AAAA,eACD;AACH,uBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,4DAA4D,2CAA2C,yCAAyC,CAAC,EAAE;AAC5N;AAAA,eAEG;AACH,uBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,4DAA4D,2CAA2C,2CAA2C,iCAAiC,CAAC,EAAE;AAC/P;AAAA;AAGA,uBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,4DAA4D,6CAA6C,6CAA6C,iCAAiC,CAAC,EAAE;AAAA;AAAA,MAEzQ;AAEA,cAAQ,SAAS;AACjB,cAAQ,WAAW;AACnB,cAAQ,WAAW;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AAEvB,QAAI,MAAM,WAAW,0BAA0B,GAAG;AAChD,UAAI,gBAAgB,MAAM,WAAW,0BAA0B;AAC/D,iBAAW,mBAAiB,WAAW,UAAU,oBAAoB,CAAC,8BAA8B,2BAA2B,OAAO,eAAe,IAAI,GAAG,uCAAuC,OAAO,eAAe,IAAI,CAAC,CAAC,EAAE;AACjO,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,qCAAqC,OAAO,eAAe,eAAe,GAAG,SAAS,sCAAsC,aAAa,kBAAkB,aAAa,8EAA8E,OAAO,CAAC,EAAE;AACvU,iBAAW,mBAAiB,WAAW,UAAU,oBAAoB,CAAC,8BAA8B,uCAAuC,OAAO,eAAe,IAAI,CAAC,CAAC,EAAE;AACzK,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,qCAAqC,OAAO,eAAe,eAAe,GAAG,SAAS,sCAAsC,aAAa,kBAAkB,aAAa,2DAA2D,OAAO,CAAC,EAAE;AAAA,IACtT;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,0BAA0B,SAAU,KAAK,OAAO;AAGxD,QAAI,KAAK;AACT,QAAI,OAAO,MAAM,YAAY;AAE7B,QAAI,MAAM,WAAW,6BAA6B,KAAK,KAAK,kBAAkB,KAAK,KAAK,kBAAkB,MAAM,gBAAe,SAAS;AACtI,UAAI,WAAW,MAAM,YAAY,iBAAiB;AAElD,UAAI,aAAa,UAAU,UAAU,KAAK,kBAAkB,MAAM,gBAAe,QAAQ;AACvF,aAAK,MAAM,WAAW,0CAA0C;AAAA,MAClE,WAAW,aAAa,UAAU,SAAS,KAAK,kBAAkB,MAAM,gBAAe,WAAW;AAChG,aAAK,MAAM,WAAW,0CAA0C;AAAA,MAClE,WAAW,aAAa,UAAU,QAAQ,aAAa,UAAU,WAAW;AAC1E,aAAK,MAAM,WAAW,6CAA6C;AAAA,MACrE;AAEA,UAAI,aAAa,UAAU,aAAa,aAAa,UAAU,gBAAgB;AAC7E,aAAK,MAAM,WAAW,6CAA6C;AACnE,WAAG,UAAU;AACb,WAAG,UAAU;AAAA,MACf;AAAA,IACF;AAWA,WAAO;AAAA,EACT;AAEA,YAAU,uBAAuB,SAAU,SAAS,KAAK,OAAO;AAC9D,QAAI,WAAW,QAAQ;AACvB,eAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,6BAA6B,sBAAsB,CAAC,EAAE;AAC/H,eAAW,mBAAiB,WAAW,UAAU,wBAAwB,2EAA2E,EAAE;AACtJ,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,cAAU,mBAAmB,SAAS,KAAK,KAAK;AAChD,cAAU,oBAAoB,SAAS,KAAK,KAAK;AACjD,cAAU,mBAAmB,SAAS,KAAK,KAAK;AAChD,cAAU,oBAAoB,SAAS,KAAK,KAAK;AACjD,cAAU,qBAAqB,SAAS,KAAK,KAAK;AAClD,cAAU,kBAAkB,SAAS,KAAK,KAAK;AAC/C,cAAU,8BAA8B,SAAS,KAAK,KAAK;AAC3D,cAAU,wBAAwB,SAAS,KAAK,KAAK;AAErD,QAAI,MAAM,sBAAsB;AAC9B,UAAI,WAAW,QAAQ;AACvB,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,2BAA2B,EAAE;AACrG,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,4BAA4B,mDAAmD,qCAAqC,mCAAmC,4CAA4C,CAAC,EAAE;AAChR,cAAQ,WAAW;AAAA,IACrB;AAAA,EACF;AAEA,YAAU,0BAA0B,SAAU,QAAQ,KAAK,OAAO;AAChE,QAAI,kBAAkB;AACtB,QAAI,iBAAiB;AACrB,QAAI,WAAW,OAAO,iBAAiB;AACvC,QAAI,OAAO,MAAM;AAEjB,QAAI,eAAe;AACnB,QAAI,eAAe,KAAK,aAAa,EAAE,WAAW;AAClD,QAAI,cAAc,KAAK,YAAY,EAAE,WAAW;AAChD,QAAI,OAAO,MAAM,YAAY,EAAE,iBAAiB,MAAM,SAAQ;AAC9D,QAAI,iBAAiB,MAAM,YAAY,EAAE,kBAAkB;AAC3D,QAAI,OAAO,UAAU,cAAc,gBAAgB,QAAQ;AAE3D,QAAI,SAAS,MAAM,QAAQ,WAAW;AACpC,qBAAe;AAAA,IACjB,WAAW,eAAe,CAAC,cAAc;AACvC,qBAAe;AAAA,IACjB,WAAW,CAAC,QAAQ,cAAc;AAChC,qBAAe;AAAA,IACjB,WAAW,CAAC,QAAQ,SAAS,MAAM,QAAQ,OAAO;AAChD,qBAAe;AAAA,IACjB;AAIA,QAAI,MAAM,YAAY,EAAE,YAAY,KAAK,cAAc;AAGrD,wBAAkB;AAClB,UAAI,SAAS,IAAI,qBAAqB;AAEtC,eAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,EAAE,OAAO;AAClD,YAAI,QAAQ,OAAO;AACnB,YAAI,SAAS,MAAM,UAAU;AAE7B,YAAI,SAAS,GAAG;AACd;AAEA,cAAI,oBAAoB,GAAG;AACzB,8BAAkB;AAAA,UACpB;AAAA,QACF;AAEA,YAAI,oBAAoB,KAAM,kBAAiB,KAAK,MAAM,aAAa,MAAM,KAAO,CAAC,MAAM,qBAAqB,IAAI;AAClH,4BAAkB;AAAA,QACpB;AAEA,YAAI,kBAAkB,KAAK,MAAM,cAAc,GAAG;AAChD,4BAAkB;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAEA,QAAI,cAAc;AAClB,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AACpF,QAAI,iBAAiB,MAAM,YAAY,mBAAmB,gBAAgB;AAE1E,QAAI,wBAAwB,mBAAmB,mBAAmB,gBAAgB;AAChF,YAAM,YAAY,IAAI;AAAA,QACpB,qBAAqB;AAAA,MACvB,GAAG,IAAI;AACP,YAAM,YAAY,IAAI;AAAA,QACpB,gBAAgB;AAAA,MAClB,GAAG,IAAI;AACP,oBAAc;AAAA,IAChB;AAGA,QAAI,CAAC,MAAM,qBAAqB,MAAM,iCAAiC;AACrE,oBAAc;AACd,YAAM,kCAAkC;AAAA,IAC1C;AAEA,QAAI,MAAM,qBAAqB,MAAM,kBAAkB,qBAAqB,MAAM,MAAM,iCAAiC;AACvH,YAAM,kCAAkC,MAAM,kBAAkB,qBAAqB;AACrF,oBAAc;AAAA,IAChB;AAOA,QAAI,MAAM,6BAA6B,MAAM,wBAAwB,OAAO,WAAW,MAAM,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,UAAU,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,MAAM,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,MAAM,WAAW,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,MAAM,aAAa,SAAS,KAAK,aAAa;AACjY,YAAM,2BAA2B,MAAM;AACvC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,gBAAgB,SAAU,QAAQ,KAAK,OAAO;AACtD,UAAM,cAAc;AAEpB,QAAI,UAAU,wBAAwB,QAAQ,KAAK,KAAK,GAAG;AACzD,UAAI,UAAU;AAAA,QACZ,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,MACZ;AACA,gBAAU,aAAa,SAAS,KAAK,KAAK;AAE1C,UAAI,YAAY,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ;AAGrI,UAAI,cAAc,OAAO,WAAW,GAAG;AACrC,eAAO,WAAW,SAAS;AAE3B,eAAO,OAAO,EAAE,yBAAyB;AAAA,MAC3C;AAEA,aAAO,oBAAoB,EAAE,SAAS;AAAA,IACxC,OAAO;AACL,YAAM,oBAAoB,eAAe,EAAE,mBAAmB,OAAO,WAAW,CAAC;AAAA,IACnF;AAEA,WAAO,OAAO,EAAE,KAAK;AACrB,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,4BAA4B,QAAQ,KAAK,KAAK;AACxD,cAAU,0BAA0B,QAAQ,KAAK,KAAK;AACtD,cAAU,4BAA4B,QAAQ,KAAK,KAAK;AACxD,QAAI,gBAAgB,MAAM,WAAW,0BAA0B,EAAE;AAEjE,QAAI,eAAe;AACjB,oBAAc,QAAQ,SAAU,QAAQ;AACtC,eAAO,SAAS,OAAO,UAAU,QAAQ,KAAK,KAAK;AAAA,MACrD,CAAC;AAAA,IACH;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAElE,QAAI,OAAO,WAAW,EAAE,cAAc,mBAAmB,GAAG;AAC1D,aAAO,WAAW,EAAE,YAAY,qBAAqB,MAAM,iBAAiB;AAAA,IAC9E;AAEA,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,aAAa,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,IAAI;AAC9M,UAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACnD,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,KAAK,GAAG;AAC1L,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,KAAK,OAAO,QAAQ,EAAE,gBAAgB,KAAK,sBAAsB,GAAG;AACpH,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,KAAK,GAAG;AAC1L,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,UAAU;AAAA,MACjD;AAEA,YAAM,WAAW,0BAA0B,EAAE,QAAQ,SAAU,UAAU,KAAK;AAC5E,YAAI,OAAO,WAAW,EAAE,gBAAgB,GAAG,OAAO,UAAU,IAAI,CAAC,GAAG;AAClE,cAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,GAAG,OAAO,UAAU,IAAI,GAAG,OAAO,QAAQ,EAAE,cAAc,EAAE,KAAK,QAAQ,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,OAAO,QAAQ,EAAE,cAAc,EAAE,KAAK,YAAY,KAAK,GAAG;AAClQ,4BAAc,iBAAiB,OAAO,UAAU,mBAAmB,CAAC;AAAA,UACtE;AAAA,QACF;AAAA,MACF,CAAC;AAED,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,KAAK,OAAO,QAAQ,EAAE,gBAAgB,GAAG;AACzF,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,OAAO,QAAQ,EAAE,gBAAgB,GAAG,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,OAAO,QAAQ,EAAE,oBAAoB,GAAG,KAAK,GAAG;AAC/N,0BAAc,uCAAuC;AAAA,QACvD;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,UAAU;AAAA,MACjD;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,aAAa,KAAK,OAAO,QAAQ,EAAE,mBAAmB,GAAG;AAC/F,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,EAAE,WAAW,GAAG,eAAe,OAAO,QAAQ,EAAE,eAAe,GAAG,OAAO,QAAQ,EAAE,iBAAiB,GAAG,MAAM,QAAQ,eAAe,GAAG,IAAI,GAAG;AACvN,0BAAc,0CAA0C;AAAA,QAC1D;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,aAAa;AAAA,MACpD;AAEA,aAAO,uBAAuB,EAAE,SAAS;AAAA,IAC3C;AAEA,QAAI,MAAM,WAAW,0BAA0B,GAAG;AAEhD,UAAI,gBAAgB,MAAM,WAAW,0BAA0B;AAC/D,UAAI,iBAAiB,CAAC;AACtB,UAAI,oBAAoB,OAAO,QAAQ,EAAE,6BAA6B;AACtE,UAAI,0BAA0B,oBAAoB,OAAO,QAAQ,EAAE,8BAA8B,IAAI;AACrG,UAAI,MAAM,0BAA0B,aAAK,KAAK,MAAM,SAAS,MAAM,UAAU,CAAC,IAAI,MAAM,UAAU;AAElG,UAAI,yBAAyB;AAC3B,qBAAK,UAAU,KAAK,GAAG;AACvB,qBAAK,SAAS,KAAK,KAAK,uBAAuB;AAC/C,qBAAK,UAAU,KAAK,GAAG;AAAA,MACzB;AAEA,eAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,YAAI,gBAAgB,CAAC;AACrB,cAAM,WAAW,6BAA6B,KAAK,GAAG,aAAa;AAEnE,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,yBAAe,KAAK,cAAc,EAAE;AAAA,QACtC;AAAA,MACF;AAEA,aAAO,WAAW,EAAE,YAAY,iBAAiB,aAAa;AAC9D,aAAO,WAAW,EAAE,cAAc,cAAc,cAAc;AAAA,IAChE;AAEA,QAAI,MAAM,wBAAwB,OAAO,WAAW,EAAE,cAAc,UAAU,GAAG;AAC/E,aAAO,WAAW,EAAE,YAAY,YAAY,MAAM,qBAAqB,eAAe,CAAC;AAAA,IACzF;AAEA,QAAI,MAAM,MAAM,YAAY,kBAAkB;AAE9C,QAAI,KAAK;AACP,eAAS,QAAQ,GAAG,QAAQ,IAAI,QAAQ,EAAE,OAAO;AAC/C,YAAI,MAAM,IAAI;AACd,YAAI,UAAU,IAAI,eAAe;AACjC,YAAI,QAAQ,UAAU,OAAO,UAAU,CAAC;AAExC,YAAI,OAAO,WAAW,EAAE,cAAc,KAAK,GAAG;AAC5C,iBAAO,WAAW,EAAE,YAAY,OAAO,OAAO;AAAA,QAChD;AAAA,MACF;AAAA,IACF;AAGA,QAAI,MAAM,sBAAsB;AAC9B,aAAO,WAAW,EAAE,YAAY,gBAAgB,MAAM,cAAc,IAAI,CAAC;AAAA,IAC3E;AAGA,QAAI,OAAO,WAAW,EAAE,cAAc,SAAS,GAAG;AAChD,UAAI,KAAK,UAAU,wBAAwB,KAAK,KAAK;AACrD,aAAO,WAAW,EAAE,YAAY,WAAW,GAAG,MAAM;AAEpD,UAAI,OAAO,WAAW,EAAE,cAAc,SAAS,GAAG;AAChD,eAAO,WAAW,EAAE,YAAY,WAAW,GAAG,MAAM;AAAA,MACtD;AAAA,IACF;AAEA,QAAI,WAAW,MAAM,eAAe,YAAY;AAChD,WAAO,WAAW,EAAE,kBAAkB,eAAe,WAAW,SAAS,kBAAkB,IAAI,CAAC,GAAK,GAAK,CAAG,CAAC;AAC9G,WAAO,WAAW,EAAE,YAAY,WAAW,WAAW,SAAS,eAAe,IAAI,IAAI,CAAC;AAAA,EACzF;AAEA,YAAU,8BAA8B,SAAU,QAAQ,KAAK,OAAO;AAEpE,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,QAAI,sBAAsB,GAAG;AAC3B;AAAA,IACF;AAEA,QAAI,UAAU,OAAO,WAAW;AAEhC,QAAI,iBAAiB;AACrB,QAAI,SAAS,IAAI,qBAAqB;AAEtC,aAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,EAAE,OAAO;AAClD,UAAI,QAAQ,OAAO;AACnB,UAAI,SAAS,MAAM,UAAU;AAE7B,UAAI,SAAS,GAAK;AAChB,YAAI,SAAS,MAAM,oBAAoB;AACvC,YAAI,YAAY,MAAM,aAAa;AACnC,cAAM,WAAW,KAAK,OAAO,KAAK;AAClC,cAAM,WAAW,KAAK,OAAO,KAAK;AAClC,cAAM,WAAW,KAAK,OAAO,KAAK;AAElC,YAAI,KAAK,MAAM,aAAa;AAC5B,YAAI,YAAY,IAAI,gBAAgB,EAAE,cAAc;AAEpD,YAAI,oBAAoB,mBAAmB,EAAE;AAE7C,YAAI,MAAM,sBAAsB,GAAG;AACjC,4BAAkB,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,KAAK,GAAG;AACvF,4BAAkB,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,KAAK,GAAG;AACvF,4BAAkB,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,KAAK,GAAG,KAAK,UAAU,MAAM,GAAG;AACxF,oBAAU,iBAAiB;AAAA,QAC7B;AAEA,cAAM,eAAe,KAAK,kBAAkB;AAC5C,cAAM,eAAe,KAAK,kBAAkB;AAC5C,cAAM,eAAe,KAAK,kBAAkB;AAC5C,cAAM,eAAe,KAAK,CAAC,MAAM,eAAe;AAChD,cAAM,eAAe,KAAK,CAAC,MAAM,eAAe;AAChD,cAAM,eAAe,KAAK,CAAC,MAAM,eAAe,KAAK;AACrD,kBAAU,MAAM,cAAc;AAC9B,gBAAQ,kBAAkB,aAAa,OAAO,cAAc,GAAG,MAAM,UAAU;AAC/E,gBAAQ,kBAAkB,mBAAmB,OAAO,cAAc,GAAG,MAAM,cAAc;AACzF,gBAAQ,kBAAkB,mBAAmB,OAAO,cAAc,GAAG,MAAM,cAAc;AACzF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,sBAAsB,GAAG;AAC3B;AAAA,IACF;AAGA,QAAI,MAAM,IAAI,gBAAgB;AAC9B,QAAI,SAAS,IAAI,cAAc;AAC/B,iBAAK,UAAU,QAAQ,MAAM;AAC7B,qBAAiB;AAEjB,aAAS,SAAS,GAAG,SAAS,OAAO,QAAQ,EAAE,QAAQ;AACrD,UAAI,SAAS,OAAO;AAEpB,UAAI,UAAU,OAAO,UAAU;AAE/B,UAAI,UAAU,GAAK;AACjB,YAAI,KAAK,OAAO,uBAAuB;AAEvC,YAAI,KAAK,IAAI,aAAa,CAAC;AAC3B,qBAAK,cAAc,IAAI,IAAI,MAAM;AACjC,gBAAQ,kBAAkB,mBAAmB,OAAO,cAAc,GAAG,OAAO,gCAAgC,CAAC;AAC7G,gBAAQ,YAAY,kBAAkB,OAAO,cAAc,GAAG,OAAO,cAAc,CAAC;AACpF,gBAAQ,YAAY,gBAAgB,OAAO,cAAc,GAAG,OAAO,YAAY,CAAC;AAChF,gBAAQ,YAAY,iBAAiB,OAAO,cAAc,GAAG,OAAO,aAAa,CAAC;AAClF,gBAAQ,kBAAkB,kBAAkB,OAAO,cAAc,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AACzF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,8BAA4B,aAAa,YAAY,QAAQ;AAC3D,eAAW,SAAS,MAAM;AAC1B,WAAO,YAAY,OAAO,SAAU,KAAK,QAAQ,OAAO;AACtD,UAAI,UAAU,GAAG;AACf,eAAO,SAAS,WAAW,KAAK,KAAK,MAAM,IAAI,WAAW,SAAS,GAAG;AAAA,MACxE;AAEA,aAAO,SAAS,WAAW,SAAS,KAAK,KAAK,MAAM,IAAI;AAAA,IAC1D,GAAG,MAAM;AAAA,EACX;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,UAAU,OAAO,WAAW;AAGhC,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,QAAI,MAAM,IAAI,gBAAgB;AAC9B,QAAI,OAAO,MAAM,aAAa,iBAAiB,EAAE,SAAS;AAC1D,QAAI,QAAQ,QAAQ,mBAAmB;AACvC,QAAI,oBAAoB,OAAO,QAAQ,EAAE,6BAA6B;AACtE,QAAI,0BAA0B,oBAAoB,OAAO,QAAQ,EAAE,8BAA8B,IAAI;AACrG,QAAI,kBAAkB,MAAM,cAAc;AAC1C,QAAI,UAAU,kBAAkB;AAAA,MAC9B,MAAM;AAAA,MACN,cAAc;AAAA,IAChB,IAAI,MAAM,YAAY,eAAe;AACrC,YAAQ,iBAAiB,cAAc,mBAAmB,CAAC,QAAQ,MAAM,QAAQ,MAAM,uBAAuB,GAAG,cAAM,MAAM,OAAO,CAAC;AAErI,QAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,cAAQ,iBAAiB,cAAc,mBAAmB,CAAC,QAAQ,MAAM,QAAQ,MAAM,uBAAuB,GAAG,cAAM,MAAM,OAAO,CAAC;AAAA,IACvI;AAEA,QAAI,QAAQ,cAAc,cAAc,GAAG;AACzC,cAAQ,oBAAoB,gBAAgB,mBAAmB,CAAC,QAAQ,cAAc,QAAQ,YAAY,GAAG,cAAM,MAAM,OAAO,CAAC;AAAA,IACnI;AAEA,QAAI,UAAU,MAAM;AAClB,UAAI,QAAQ,cAAc,gBAAgB,GAAG;AAC3C,gBAAQ,YAAY,kBAAkB,IAAI,sBAAsB,CAAC;AAAA,MACnE;AAEA,cAAQ,mBAAmB,IAAI;AAAA,IACjC;AAEA,QAAI,CAAC,iBAAiB;AAEpB,cAAQ,mBAAmB,CAAC;AAAA,IAC9B;AAAA,EACF;AAEA,YAAU,8BAA8B,SAAU,QAAQ,KAAK,OAAO;AACpE,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,OAAO,MAAM,YAAY;AAC7B,QAAI,UAAU,KAAK,WAAW;AAC9B,QAAI,SAAS,MAAM,eAAe,KAAK,wBAAwB,IAAI,KAAK,2BAA2B;AACnG,QAAI,SAAS,MAAM,eAAe,KAAK,wBAAwB,IAAI,KAAK,2BAA2B;AACnG,QAAI,aAAa,MAAM,eAAe,IAAM,KAAK,WAAW;AAC5D,QAAI,aAAa,MAAM,eAAe,IAAM,KAAK,WAAW;AAC5D,QAAI,aAAa,MAAM,eAAe,IAAM,KAAK,YAAY;AAC7D,QAAI,gBAAgB,KAAK,iBAAiB;AAC1C,YAAQ,YAAY,kBAAkB,OAAO;AAC7C,YAAQ,kBAAkB,uBAAuB,MAAM;AACvD,YAAQ,kBAAkB,uBAAuB,MAAM;AACvD,YAAQ,YAAY,WAAW,UAAU;AACzC,YAAQ,YAAY,WAAW,UAAU;AAEzC,QAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,QAAI,sBAAsB,GAAG;AAC3B;AAAA,IACF;AAEA,QAAI,SAAS,KAAK,4BAA4B;AAC9C,YAAQ,kBAAkB,wBAAwB,MAAM;AACxD,YAAQ,YAAY,wBAAwB,aAAa;AACzD,YAAQ,YAAY,YAAY,UAAU;AAE1C,QAAI,QAAQ,cAAc,oBAAoB,GAAG;AAC/C,aAAO,MAAM,oBAAoB;AACjC,gBAAU,KAAK,WAAW;AAC1B,eAAS,KAAK,gBAAgB;AAC9B,mBAAa,KAAK,WAAW;AAC7B,eAAS,KAAK,gBAAgB;AAC9B,mBAAa,KAAK,WAAW;AAC7B,eAAS,KAAK,iBAAiB;AAC/B,mBAAa,KAAK,YAAY;AAC9B,cAAQ,YAAY,sBAAsB,UAAU;AACpD,cAAQ,YAAY,sBAAsB,UAAU;AACpD,cAAQ,YAAY,oBAAoB,OAAO;AAC/C,cAAQ,kBAAkB,yBAAyB,MAAM;AACzD,cAAQ,kBAAkB,yBAAyB,MAAM;AAEzD,UAAI,sBAAsB,GAAG;AAC3B;AAAA,MACF;AAEA,cAAQ,YAAY,uBAAuB,UAAU;AACrD,cAAQ,kBAAkB,0BAA0B,MAAM;AAC1D,cAAQ,YAAY,0BAA0B,aAAa;AAAA,IAC7D;AAAA,EACF;AAEA,YAAU,mBAAmB,SAAU,KAAK,OAAO;AACjD,UAAM,oBAAoB;AAE1B,QAAI,MAAM,eAAe,YAAY,GAAG;AACtC,cAAQ,MAAM,eAAe,YAAY,EAAE,eAAe;AAAA;AAEtD,gBAAM,eAAe,YAAY,EAAE,WAAW,KAAK;AAAA;AAAA,IAEzD;AAGA,cAAU,oBAAoB,KAAK,KAAK;AAGxC,QAAI,MAAM,WAAW,mBAAmB,GAAG;AACzC,YAAM,qBAAqB,SAAS;AAAA,IACtC;AAGA,UAAM,cAAc;AAAA,EACtB;AAEA,YAAU,kBAAkB,SAAU,KAAK,OAAO;AAChD,QAAI,iBAAiB,MAAM,YAAY,EAAE,kBAAkB;AAC3D,QAAI,KAAK,MAAM;AACf,QAAI,uBAAuB,MAAM,YAAY,EAAE,kBAAkB,KAAK,mBAAmB,gBAAe;AACxG,OAAG,UAAU,MAAM,YAAY,EAAE,aAAa,CAAC;AAE/C,aAAS,IAAI,UAAU,OAAO,IAAI,UAAU,KAAK,KAAK;AAEpD,UAAI,OAAO,MAAM,WAAW,GAAG,QAAQ;AAEvC,UAAI,KAAK,gBAAgB,GAAG;AAE1B,cAAM,eAAe,wBAAyB,OAAM,UAAU,aAAa,MAAM,UAAU;AAC3F,YAAI,OAAO,UAAU,cAAc,gBAAgB,CAAC;AAEpD,YAAI,CAAC,MAAM,gBAAgB,CAAC,MAAM,aAAa;AAC7C,oBAAU,cAAc,MAAM,WAAW,IAAI,KAAK,KAAK;AACvD,aAAG,WAAW,MAAM,GAAG,KAAK,gBAAgB,CAAC;AAAA,QAC/C;AAEA,YAAI,SAAU,UAAS,GAAG,SAAS,IAAI,MAAO,UAAS,GAAG,QAAQ,IAAI;AACtE,cAAM,qBAAqB,KAAK,gBAAgB,IAAI;AAAA,MACtD;AAAA,IACF;AAGA,OAAG,UAAU,CAAC;AAAA,EAChB;AAEA,YAAU,gBAAgB,SAAU,KAAK,MAAM;AAC7C,QAAI,QAAQ,gBAAe,UAAU,SAAS,UAAU,QAAQ;AAC9D,aAAO,MAAM,QAAQ;AAAA,IACvB;AAEA,QAAI,QAAQ,gBAAe,aAAa,SAAS,UAAU,SAAS,SAAS,UAAU,aAAa,SAAS,UAAU,gBAAgB;AACrI,aAAO,MAAM,QAAQ;AAAA,IACvB;AAEA,WAAO,MAAM,QAAQ;AAAA,EACvB;AAEA,YAAU,oBAAoB,SAAU,KAAK,OAAO;AAClD,QAAI,MAAM,aAAa;AACrB,YAAM,YAAY,OAAO,EAAE,QAAQ;AAAA,IACrC;AAEA,QAAI,MAAM,WAAW,mBAAmB,GAAG;AACzC,YAAM,qBAAqB,WAAW;AAAA,IACxC;AAAA,EACF;AAEA,YAAU,cAAc,SAAU,KAAK,OAAO;AAK5C,cAAU,YAAY,UAAU;AAEhC,QAAI,CAAC,MAAM,WAAW,UAAU,GAAG;AACjC,YAAM,WAAW,OAAO;AAAA,IAC1B;AAEA,UAAM,eAAe,MAAM,WAAW,aAAa;AACnD,cAAU,YAAY,QAAQ;AAE9B,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,WAAW;AACzB;AAAA,IACF;AAGA,QAAI,CAAC,MAAM,aAAa,aAAa,CAAC,MAAM,aAAa,UAAU,EAAE,kBAAkB,GAAG;AACxF;AAAA,IACF;AAGA,QAAI,KAAK,MAAM;AACf,QAAI,kBAAkB,MAAM,YAAY,EAAE,mBAAmB;AAC7D,QAAI,mBAAmB,MAAM,YAAY,EAAE,oBAAoB;AAE/D,QAAI,CAAC,mBAAmB,CAAC,kBAAkB;AACzC,YAAM,oBAAoB,gBAAgB;AAAA,IAC5C,WAAW,kBAAkB;AAC3B,YAAM,oBAAoB,eAAe;AAEzC,SAAG,SAAS,GAAG,KAAK;AAAA,IACtB,OAAO;AACL,YAAM,oBAAoB,eAAe;AAEzC,SAAG,SAAS,GAAG,IAAI;AAAA,IACrB;AAEA,cAAU,iBAAiB,KAAK,KAAK;AACrC,cAAU,gBAAgB,KAAK,KAAK;AACpC,cAAU,kBAAkB,KAAK,KAAK;AAAA,EACxC;AAEA,YAAU,gBAAgB,SAAU,KAAK,OAAO;AAC9C,QAAI,CAAC,UAAU,SAAS,GAAG;AACzB,yBAAmB,MAAM,MAAM;AAC/B;AAAA,IACF;AAEA,UAAM,SAAS,UAAU,SAAS,EAAE,UAAU;AAAA,EAChD;AAEA,YAAU,sBAAsB,SAAU,KAAK,OAAO;AAEpD,QAAI,UAAU,8BAA8B,KAAK,KAAK,GAAG;AACvD,gBAAU,mBAAmB,KAAK,KAAK;AAAA,IACzC;AAAA,EACF;AAEA,YAAU,gCAAgC,SAAU,KAAK,OAAO;AAG9D,QAAI,SAAS,MAAM,aAAa,SAAS;AAEzC,QAAI,SAAS,UAAU,SAAS,KAAK,SAAS,MAAM,WAAW,SAAS,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,MAAM,aAAa,SAAS,GAAG;AAChJ,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,OAAO,MAAM;AAEjB,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AAEA,UAAM,WAAW,WAAW,MAAM,CAAG;AACrC,QAAI,IAAI,MAAM,WAAW,kBAAkB;AAC3C,UAAM,kBAAkB;AACxB,QAAI,aAAa,MAAM,WAAW,cAAc;AAEhD,QAAI,MAAM,WAAW,oBAAoB,GAAG;AAE1C,UAAK,gBAAe,YAAW,iBAAiB,eAAe,YAAW,uBAAuB,eAAe,YAAW,kBAAkB,CAAC,KAAK,aAAa,EAAE,WAAW,MAAM,eAAe,YAAW,wBAAwB,GAAG;AACtO,cAAM,kBAAkB;AAAA,MAC1B;AAAA,IACF;AAGA,QAAI,IAAI,MAAM,YAAY,EAAE,iBAAiB,MAAM,SAAQ,OAAO,KAAK,aAAa,EAAE,WAAW,IAAI;AAErG,QAAI,MAAM,QAAQ,KAAK,YAAY,EAAE,WAAW,GAAG;AACjD,YAAM,kBAAkB;AACxB,UAAI,KAAK,YAAY,EAAE,WAAW;AAAA,IACpC;AAOA,QAAI,iBAAiB,MAAM,YAAY,EAAE,kBAAkB;AAC3D,QAAI,UAAU,KAAK,aAAa,EAAE,WAAW;AAE7C,QAAI,CAAC,MAAM,YAAY,kBAAkB,GAAG;AAC1C,gBAAU;AAAA,IACZ;AAGA,QAAI,MAAM,WAAW,oBAAoB,GAAG;AAC1C,gBAAU,MAAM,WAAW,oBAAoB;AAE/C,UAAI,CAAC,MAAM,sBAAsB;AAC/B,cAAM,uBAAuB,mBAAiB,YAAY;AAAA,MAC5D;AAEA,UAAI,MAAM,MAAM;AAEhB,UAAI,sBAAsB,QAAO,OAAO;AACxC,UAAI,uBAAuB,QAAO,OAAO;AACzC,UAAI,SAAS,MAAK,aAAa;AAC/B,UAAI,SAAS,MAAK,aAAa;AAC/B,UAAI,sBAAsB,MAAM,mBAAmB;AACnD,UAAI,QAAQ,MAAM,WAAW,mBAAmB;AAChD,UAAI,MAAM,MAAM,UAAU;AAC1B,UAAI,YAAY,MAAM,aAAa,EAAE,WAAW;AAChD,UAAI,gBAAgB,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,GAAG,UAAU,sBAAsB,GAAG,UAAU,YAAY,GAAG,UAAU,QAAQ,CAAC;AAC7I,UAAI,SAAS;AACb,UAAI,eAAe;AACnB,UAAI,WAAW;AAAA,IACjB;AAEA,QAAI,WAAW,GAAG,OAAO,KAAK,SAAS,GAAG,GAAG,EAAE,OAAO,gBAAgB,GAAG,EAAE,OAAO,KAAK,SAAS,CAAC,IAAI,IAAI,OAAO,IAAI,EAAE,SAAS,IAAI,GAAG,GAAG,EAAE,OAAO,IAAI,EAAE,SAAS,IAAI,CAAC,IAAI,IAAI,OAAO,MAAM,YAAY,EAAE,kBAAkB,CAAC,IAAI,IAAI,OAAO,UAAU,QAAQ,SAAS,IAAI,CAAC;AAE3Q,QAAI,MAAM,mBAAmB,UAAU;AAErC,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,UAAU;AAAA,QACZ;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,iBAAiB,MAAM;AAAA,QACvB,iBAAiB,MAAM;AAAA,QACvB,kBAAkB,MAAM,WAAW,0BAA0B,EAAE,IAAI,SAAU,WAAW;AACtF,iBAAO,KAAK,aAAa,EAAE,eAAe,SAAS;AAAA,QACrD,CAAC;AAAA,MACH;AACA,cAAQ,cAAc,MAAM,WAAW,UAAU,QAAQ,QAAQ,EAAE,UAAU,KAAK,SAAS,GAAG,SAAS,gBAAgB,OAAO;AAC9H,cAAQ,cAAc,MAAM,WAAW,UAAU,OAAO,QAAQ,EAAE,UAAU,KAAK,SAAS,GAAG,SAAS,gBAAgB,OAAO;AAC7H,cAAQ,cAAc,MAAM,WAAW,UAAU,MAAM,QAAQ,EAAE,UAAU,KAAK,SAAS,GAAG,SAAS,gBAAgB,OAAO;AAC5H,cAAQ,cAAc,MAAM,WAAW,UAAU,WAAW,QAAQ,EAAE,UAAU,KAAK,UAAU,GAAG,UAAU,gBAAgB,OAAO;AACnI,UAAI,uBAAuB,MAAM,YAAY,EAAE,kBAAkB,KAAK,mBAAmB,gBAAe;AAExG,UAAI,sBAAsB;AACxB,cAAM,WAAW,UAAU,WAAW,QAAQ,EAAE,UAAU,KAAK,SAAS,GAAG,SAAS,gBAAe,WAAW;AAAA,UAC5G;AAAA,UACA,SAAS;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,YAAY;AAAA,UACZ,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,QACnB,CAAC;AACD,cAAM,WAAW,UAAU,gBAAgB,QAAQ,EAAE,UAAU,KAAK,UAAU,GAAG,UAAU,gBAAe,WAAW;AAAA,UACnH;AAAA,UACA,SAAS;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,YAAY;AAAA,UACZ,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,QACnB,CAAC;AAAA,MACH,OAAO;AAEL,cAAM,WAAW,UAAU,WAAW,yBAAyB,MAAM,mBAAmB;AACxF,cAAM,WAAW,UAAU,gBAAgB,yBAAyB,MAAM,mBAAmB;AAAA,MAC/F;AAEA,YAAM,aAAa,SAAS;AAC5B,YAAM,iBAAiB;AAAA,IACzB;AAAA,EACF;AACF;AA6BA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,6BAA2B,uCAAuC,WAAW,OAAO,aAAa;AACjG,QAAM,aAAa,CAAC;AACpB,QAAM,YAAY;AAClB,QAAM,UAAU,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AACjD,QAAM,UAAU,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAElD,WAAS,IAAI,UAAU,OAAO,IAAI,UAAU,KAAK,KAAK;AACpD,UAAM,WAAW,KAAK,UAAU,YAAY;AAC5C,UAAM,WAAW,GAAG,iBAAiB,CAAC;AACtC,UAAM,WAAW,GAAG,IAAI;AAAA,MACtB,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,IACrB,GAAG,IAAI;AAAA,EACT;AAGA,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AACpC,QAAM,eAAe,CAAC;AACtB,MAAI,MAAM,cAAc;AAAA,IACtB,OAAO;AAAA,EACT,CAAC;AAED,0BAAwB,WAAW,KAAK;AAC1C;AA/wCA,IAiBI,WAUA,iBACA,UACA,aACA,SACA,OACA,iBACA,YAGA,UAsrCA,kBAuDA,eAEA;AAnxCJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAI,YAAY;AAAA,MACd,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,MACN,WAAW;AAAA,MACX,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,KAAK;AAAA,IACP;AACA,IAAI,kBAAiB,cAAY;AAAjC,IACI,WAAU,cAAY;AAC1B,IAAI,cAAa,YAAU;AAC3B,IAAI,UAAS,mBAAiB;AAA9B,IACI,QAAO,mBAAiB;AAC5B,IAAI,kBAAgB;AACpB,IAAI,aAAa;AAAA,MACf,MAAM;AAAA,IACR;AACA,IAAI,WAAW;AAAA,MACb,MAAM;AAAA,IACR;AAorCA,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,SAAS;AAAA,MACT,cAAc,CAAC;AAAA,MAEf,cAAc,CAAC;AAAA,MAEf,eAAe,CAAC;AAAA,MAEhB,YAAY,CAAC;AAAA,MAEb,gBAAgB,CAAC;AAAA,MAEjB,gBAAgB,CAAC;AAAA,MAEjB,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,IACxB;AAiCA,IAAI,gBAAc,YAAc,UAAQ,yBAAyB;AAEjE,IAAI,4BAA4B;AAAA,MAC9B,aAAa;AAAA,MACb,QAAQ;AAAA,MACR;AAAA,IACF;AAEA,qBAAiB,aAAa,aAAW;AAAA;AAAA;;;ACzxCzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAczf,gCAAgC,WAAW,OAAO;AAEhD,QAAM,eAAe,KAAK,wBAAwB;AAElD,MAAI,aAAa,gBAAc,CAAC,GAAG,SAAS;AAE5C,YAAU,cAAc,SAAU,KAAK,OAAO;AAC5C,cAAU,YAAY,WAAU;AAEhC,QAAI,CAAC,MAAM,WAAW,UAAU,GAAG;AACjC,YAAM,WAAW,OAAO;AAAA,IAC1B;AAEA,UAAM,eAAe,MAAM,WAAW,aAAa,CAAC;AACpD,cAAU,YAAY,SAAQ;AAE9B,QAAI,CAAC,MAAM,cAAc;AACvB,sBAAc,WAAW;AACzB;AAAA,IACF;AAGA,QAAI,CAAC,MAAM,aAAa,aAAa,CAAC,MAAM,aAAa,UAAU,EAAE,kBAAkB,GAAG;AACxF;AAAA,IACF;AAGA,QAAI,KAAK,MAAM;AAEf,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,YAAM,kBAAkB;AACxB,YAAM,YAAY;AAAA,IACpB,WAAW,CAAC,MAAM,WAAW;AAC3B,YAAM,YAAY,MAAM,QAAQ,aAAa,wBAAwB;AACrE,YAAM,kBAAkB,CAAC,CAAC,MAAM;AAAA,IAClC;AAKA,QAAI,kBAAkB,MAAM,YAAY,EAAE,mBAAmB;AAC7D,QAAI,mBAAmB,MAAM,YAAY,EAAE,oBAAoB;AAE/D,QAAI,CAAC,mBAAmB,CAAC,kBAAkB;AACzC,YAAM,oBAAoB,gBAAgB;AAAA,IAC5C,WAAW,kBAAkB;AAC3B,YAAM,oBAAoB,eAAe;AAEzC,SAAG,SAAS,GAAG,KAAK;AAAA,IACtB,OAAO;AACL,YAAM,oBAAoB,eAAe;AAEzC,SAAG,SAAS,GAAG,IAAI;AAAA,IACrB;AAEA,cAAU,iBAAiB,KAAK,KAAK;AACrC,cAAU,gBAAgB,KAAK,KAAK;AACpC,cAAU,kBAAkB,KAAK,KAAK;AAAA,EACxC;AAEA,YAAU,wBAAwB,SAAU,KAAK,GAAG,GAAG,KAAK;AAC1D,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,EAAE;AAEZ,QAAI,KAAK,EAAE;AACX,QAAI,KAAK,EAAE,MAAM;AACjB,QAAI,KAAK,EAAE,MAAM;AACjB,QAAI,KAAK,EAAE,MAAM;AACjB,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,SAAK,EAAE,MAAM;AACb,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAAA,EAClD;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,MAAM,iBAAiB;AACzB,UAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,UAAI,sBAAsB,GAAG;AAC3B,YAAI,WAAW,QAAQ;AAEvB,YAAI,MAAM,YAAY,QAAQ,EAAE,gBAAgB,GAAG;AACjD,qBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,4BAA4B,2BAA2B,8BAA8B,gCAAgC,CAAC,EAAE;AAChM,qBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,uDAAuD,CAAC,EAAE;AAAA,QACrI;AAEA,gBAAQ,SAAS;AAAA,MACnB;AAAA,IACF;AAEA,eAAW,oBAAoB,SAAS,KAAK,KAAK;AAAA,EACpD;AAEA,YAAU,qBAAqB,SAAU,SAAS,KAAK,OAAO;AAC5D,QAAI,MAAM,mBAAmB,MAAM,WAAW,cAAc,GAAG;AAC7D,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AACvB,UAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAGpF,UAAI,WAAW,CAAC,0BAA0B,0BAA0B,2BAA2B,uDAAuD;AAEtJ,UAAI,qBAAqB;AACvB,mBAAW,SAAS,OAAO,CAAC,sCAAsC,qCAAqC,CAAC;AAAA,MAC1G;AAKA,UAAI,YAAY,CAAC,sBAAsB,wBAAwB,kBAAkB;AAEjF,UAAI,qBAAqB;AACvB,oBAAY,UAAU,OAAO,CAAC,yBAAyB,wBAAwB,CAAC;AAAA,MAClF;AAEA,kBAAY,UAAU,OAAO,CAAC,6BAA6B,CAAC;AAE5D,UAAI,qBAAqB;AACvB,oBAAY,UAAU,OAAO,CAAC,2CAA2C,yCAAyC,CAAC;AAAA,MACrH;AAEA,UAAI,CAAC,MAAM,cAAc;AACvB,mBAAW,SAAS,OAAO,CAAC,mCAAmC,CAAC;AAChE,mBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,0BAA0B,mCAAmC,CAAC,EAAE;AACvI,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+BAA+B,CAAC,EAAE;AAC1G,mBAAW,mBAAiB,WAAW,UAAU,qBAAqB,CAAC,kCAAkC,+BAA+B,CAAC,EAAE;AAC3I,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,+CAA+C,CAAC,EAAE;AAC1H,oBAAY,UAAU,OAAO,CAAC,6CAA6C,6CAA6C,4CAA4C,CAAC;AAAA,MACvK;AAEA,iBAAW,mBAAiB,WAAW,UAAU,sBAAsB,SAAS,EAAE;AAClF,iBAAW,mBAAiB,WAAW,UAAU,qBAAqB,QAAQ,EAAE;AAChF,cAAQ,SAAS;AACjB,cAAQ,WAAW;AACnB,cAAQ,WAAW;AAAA,IACrB;AAEA,eAAW,mBAAmB,SAAS,KAAK,KAAK;AAAA,EACnD;AAEA,YAAU,0BAA0B,SAAU,SAAS,KAAK,OAAO;AACjE,QAAI,MAAM,iBAAiB;AACzB,UAAI,WAAW,QAAQ;AAEvB,UAAI,sBAAsB,MAAM,YAAY,mBAAmB,qBAAqB;AAEpF,UAAI,sBAAsB,GAAG;AAC3B,mBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,wCAAwC,8CAA8C,yCAAyC,CAAC,EAAE;AAC/M,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,2BAA2B,4BAA4B,0BAA0B,CAAC,EAAE;AAAA,MAC9J,OAAO;AACL,mBAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,2BAA2B,0BAA0B,CAAC,EAAE;AAChI,mBAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,wCAAwC,yCAAyC,CAAC,EAAE;AAAA,MACnK;AAEA,cAAQ,SAAS;AAAA,IACnB;AAEA,eAAW,wBAAwB,SAAS,KAAK,KAAK;AAAA,EACxD;AAEA,YAAU,uBAAuB,SAAU,SAAS,KAAK,OAAO;AAC9D,QAAI,MAAM,iBAAiB;AACzB,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,QAAQ;AACvB,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,iCAAiC,mCAAmC,CAAC,EAAE;AAChJ,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,wCAAwC,EAAE;AACnH,cAAQ,SAAS;AACjB,iBAAW,mBAAiB,WAAW,UAAU,uBAAuB,CAAC,qCAAqC,6BAA6B,sBAAsB,CAAC,EAAE;AACpK,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,4FAA4F,+DAA+D,CAAC,EAAE;AACxO,cAAQ,WAAW;AAAA,IACrB,OAAO;AACL,iBAAW,qBAAqB,SAAS,KAAK,KAAK;AAAA,IACrD;AAAA,EACF;AAEA,YAAU,8BAA8B,SAAU,kBAAkB,gBAAgB,QAAQ,QAAQ,QAAQ,QAAQ,GAAG,UAAU;AAC/H,QAAI,UAAU,OAAO,WAAW;AAEhC,QAAI,kBAAkB;AACpB,UAAI,IAAI,MAAM;AACd,UAAI,IAAI;AACR,UAAI,MAAM,IAAI;AACd,UAAI,MAAM,MAAM;AAChB,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE;AACZ,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,MAAM,EAAE,MAAM;AAClB,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,UAAI,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,cAAQ,oBAAoB,gBAAgB,MAAM,OAAO;AAAA,IAC3D;AAEA,cAAU,sBAAsB,MAAM,SAAS,MAAM,YAAY,QAAQ,IAAI,EAAE;AAC/E,YAAQ,iBAAiB,cAAc,MAAM,OAAO;AAEpD,QAAI,gBAAgB;AAClB,gBAAU,sBAAsB,MAAM,SAAS,MAAM,YAAY,QAAQ,IAAI,EAAE;AAC/E,cAAQ,iBAAiB,cAAc,MAAM,OAAO;AAAA,IACtD;AAGA,QAAI,QAAQ;AACV,UAAI,QAAQ,OAAO,QAAQ;AAC3B,YAAM,SAAS,KAAK,MAAM,IAAI,KAAK;AACnC,YAAM,SAAS,KAAK,MAAM,IAAI,IAAI,KAAK;AACvC,YAAM,SAAS,KAAK,MAAM,IAAI,IAAI,KAAK;AACvC,cAAQ,kBAAkB,uBAAuB,MAAM,QAAQ;AAC/D,cAAQ,kBAAkB,uBAAuB,MAAM,QAAQ;AAAA,IACjE;AAEA,QAAI,UAAU;AACZ,cAAQ,kBAAkB,eAAe,SAAS,kBAAkB,CAAC;AAAA,IACvE;AAAA,EACF;AAEA,YAAU,kBAAkB,SAAU,KAAK,OAAO;AAChD,QAAI,iBAAiB,MAAM,YAAY,EAAE,kBAAkB;AAC3D,QAAI,KAAK,MAAM;AACf,QAAI,uBAAuB,MAAM,YAAY,EAAE,kBAAkB,KAAK,mBAAmB,gBAAe;AAGxG,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,QAAI,UAAU,MAAM,YAAY,eAAe;AAE/C,iBAAK,SAAS,MAAM,cAAc,QAAQ,cAAc,QAAQ,YAAY;AAC5E,iBAAK,SAAS,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AAC1D,iBAAK,SAAS,MAAM,YAAY,QAAQ,MAAM,QAAQ,IAAI;AAC1D,QAAI,SAAS,MAAM,WAAW,eAAe;AAC7C,QAAI,SAAS,MAAM,WAAW,eAAe;AAC7C,QAAI,SAAS,MAAM,WAAW,cAAc;AAC5C,QAAI,SAAS,OAAO,SAAS;AAC7B,QAAI,gBAAgB;AAEpB,QAAI,MAAM,eAAe,YAAY,GAAG;AACtC,UAAI,MAAM,eAAe,YAAY,EAAE,eAAe,MAAM,WAAU,sBAAsB;AAC1F,wBAAgB;AAAA,MAClB;AAAA,IACF;AAGA,aAAS,IAAI,MAAM,UAAU,OAAO,IAAI,MAAM,UAAU,KAAK,KAAK;AAEhE,UAAI,OAAO,MAAM,WAAW,GAAG,QAAQ;AAEvC,UAAI,KAAK,gBAAgB,GAAG;AAE1B,cAAM,eAAe,wBAAyB,OAAM,MAAM,UAAU,aAAa,MAAM,MAAM,UAAU;AACvG,kBAAU,cAAc,MAAM,WAAW,IAAI,KAAK,KAAK;AACvD,YAAI,UAAU,MAAM,WAAW,GAAG,WAAW;AAC7C,YAAI,OAAO,UAAU,cAAc,gBAAgB,CAAC;AACpD,YAAI,mBAAmB,QAAQ,cAAc,cAAc;AAC3D,YAAI,iBAAiB,QAAQ,cAAc,YAAY;AAEvD,YAAI,MAAM,iBAAiB;AACzB,cAAI,MAAM,WAAW;AACnB,kBAAM,UAAU,yBAAyB,MAAM,GAAG,KAAK,gBAAgB,GAAG,MAAM;AAAA,UAClF,OAAO;AACL,eAAG,oBAAoB,MAAM,GAAG,KAAK,gBAAgB,GAAG,MAAM;AAAA,UAChE;AAAA,QACF,OAAO;AAEL,mBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,gBAAI,eAAe;AACjB,oBAAM,eAAe,YAAY,EAAE,qBAAqB,CAAC;AAAA,YAC3D;AAEA,sBAAU,4BAA4B,kBAAkB,gBAAgB,MAAM,WAAW,IAAI,QAAQ,QAAQ,QAAQ,GAAG,gBAAgB,MAAM,eAAe,YAAY,IAAI,IAAI;AACjL,eAAG,WAAW,MAAM,GAAG,KAAK,gBAAgB,CAAC;AAAA,UAC/C;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,iBAAiB,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,IAAI;AAClN,UAAI,OAAO,WAAW,EAAE,gBAAgB,SAAS,GAAG;AAClD,YAAI,CAAC,OAAO,OAAO,EAAE,8BAA8B,OAAO,WAAW,GAAG,MAAM,cAAc,WAAW,GAAG,IAAI,MAAM,QAAQ,OAAO,GAAG,OAAO,CAAC,GAAG;AAC/I,0BAAc,sCAAsC;AAAA,QACtD;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,SAAS;AAAA,MAChD;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,SAAS,GAAG;AAClD,YAAI,CAAC,OAAO,OAAO,EAAE,8BAA8B,OAAO,WAAW,GAAG,MAAM,cAAc,WAAW,GAAG,IAAI,MAAM,QAAQ,OAAO,GAAG,OAAO,CAAC,GAAG;AAC/I,0BAAc,sCAAsC;AAAA,QACtD;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,SAAS;AAAA,MAChD;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,QAAQ,GAAG;AACjD,YAAI,CAAC,OAAO,OAAO,EAAE,6BAA6B,OAAO,WAAW,GAAG,MAAM,aAAa,UAAU,GAAG,GAAG,MAAM,QAAQ,eAAe,GAAG,MAAM,GAAG,KAAK,GAAG;AACzJ,0BAAc,qCAAqC;AAAA,QACrD;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,QAAQ;AAAA,MAC/C;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,eAAe,GAAG;AACxD,YAAI,CAAC,OAAO,OAAO,EAAE,6BAA6B,OAAO,WAAW,GAAG,MAAM,YAAY,iBAAiB,GAAG,GAAG,MAAM,QAAQ,eAAe,GAAG,MAAM,GAAG,KAAK,GAAG;AAC/J,0BAAc,4CAA4C;AAAA,QAC5D;AAAA,MACF,OAAO;AACL,eAAO,OAAO,EAAE,qBAAqB,eAAe;AAAA,MACtD;AAEA,iBAAW,0BAA0B,QAAQ,KAAK,KAAK;AACvD,aAAO,uBAAuB,EAAE,SAAS;AACzC;AAAA,IACF;AAEA,eAAW,0BAA0B,QAAQ,KAAK,KAAK;AAAA,EACzD;AAEA,YAAU,gCAAgC,SAAU,KAAK,OAAO;AAC9D,UAAM,WAAW,YAAY;AAG7B,QAAI,SAAS,MAAM,aAAa,SAAS;AAEzC,QAAI,SAAS,MAAM,WAAW,aAAa,EAAE,SAAS,GAAG;AACvD,aAAO;AAAA,IACT;AAEA,WAAO,WAAW,8BAA8B,KAAK,KAAK;AAAA,EAC5D;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,MAAM,iBAAiB;AAEzB,UAAI,SAAS,MAAM,WAAW,eAAe;AAC7C,UAAI,SAAS,MAAM,WAAW,eAAe;AAC7C,UAAI,SAAS,MAAM,WAAW,cAAc;AAE5C,UAAI,CAAC,MAAM,cAAc;AACvB,cAAM,eAAe,gBAAgB,YAAY;AACjD,cAAM,aAAa,sBAAsB,MAAM,mBAAmB;AAClE,cAAM,eAAe,gBAAgB,YAAY;AACjD,cAAM,aAAa,sBAAsB,MAAM,mBAAmB;AAClE,cAAM,cAAc,gBAAgB,YAAY;AAChD,cAAM,YAAY,sBAAsB,MAAM,mBAAmB;AACjE,cAAM,aAAa,gBAAgB,YAAY;AAC/C,cAAM,WAAW,sBAAsB,MAAM,mBAAmB;AAAA,MAClE;AAEA,UAAI,MAAM,WAAW,aAAa,EAAE,SAAS,IAAI,MAAM,iBAAiB,SAAS,GAAG;AAClF,cAAM,aAAa,OAAO,QAAQ,YAAW,YAAY;AACzD,cAAM,aAAa,OAAO,QAAQ,YAAW,YAAY;AAEzD,YAAI,QAAQ;AACV,gBAAM,YAAY,OAAO,OAAO,QAAQ,GAAG,YAAW,YAAY;AAAA,QACpE,OAAO;AACL,gBAAM,YAAY,yBAAyB;AAAA,QAC7C;AAEA,YAAI,SAAS,OAAO,SAAS;AAC7B,YAAI,SAAS,IAAI,WAAW,IAAI,MAAM;AAEtC,iBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,cAAI,QAAQ,IAAI;AAChB,cAAI,SAAS,IAAI;AACjB,iBAAO,UAAU,QAAQ;AACzB,mBAAS,OAAO;AAChB,mBAAS;AACT,iBAAO,SAAS,KAAK,QAAQ;AAC7B,mBAAS,OAAO,SAAS;AACzB,mBAAS;AACT,iBAAO,SAAS,KAAK,QAAQ;AAC7B,iBAAO,SAAS,KAAK;AAAA,QACvB;AAEA,cAAM,WAAW,OAAO,QAAQ,YAAW,YAAY;AACvD,cAAM,iBAAiB,SAAS;AAAA,MAClC;AAAA,IACF;AAEA,WAAO,WAAW,mBAAmB,KAAK,KAAK;AAAA,EACjD;AACF;AAWA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,4BAAwB,OAAO,WAAW,OAAO,aAAa;AAC9D,QAAM,UAAU,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AACjD,QAAM,eAAe,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AACtD,QAAM,aAAa,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACrD,QAAM,aAAa,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AACrD,QAAM,WAAW,CAAC;AAClB,QAAM,mBAAmB,CAAC;AAC1B,MAAI,MAAM,kBAAkB;AAAA,IAC1B,OAAO;AAAA,EACT,CAAC;AAED,yBAAuB,WAAW,KAAK;AACzC;AA7eA,IAaI,iBACA,iBACA,aACA,YACA,aAGA,WAmcA,kBAwBA,eAEA;AAjfJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,kBAAgB;AACpB,IAAI,kBAAiB,cAAY;AACjC,IAAI,cAAa,gBAAgB;AACjC,IAAI,aAAY,qBAAoB;AACpC,IAAI,cAAa;AAAA,MACf,MAAM;AAAA,IACR;AACA,IAAI,YAAW;AAAA,MACb,MAAM;AAAA,IACR;AAicA,IAAI,mBAAiB;AAAA,MACnB,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,YAAY;AAAA,IACd;AAoBA,IAAI,gBAAc,YAAc,UAAQ,wBAAwB;AAEhE,IAAI,mBAAmB;AAAA,MACrB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,oBAAoB,aAAW;AAAA;AAAA;;;ACtfhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,yBAAyB,WAAW,OAAO;AAEzC,QAAM,eAAe,KAAK,iBAAiB;AAE3C,YAAU,YAAY,SAAU,SAAS;AACvC,QAAI,SAAS;AACX,YAAM,iBAAiB,UAAU,uBAAuB,mBAAmB;AAC3E,YAAM,sBAAsB,MAAM,eAAe,UAAU;AAC3D,YAAM,UAAU,MAAM,oBAAoB,WAAW;AACrD,YAAM,KAAK,sBAAsB,MAAM,mBAAmB;AAC1D,YAAM,cAAc,sBAAsB,MAAM,mBAAmB;AACnE,UAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,YAAM,eAAe,MAAM,eAAe,eAAe,IAAI,gBAAgB,CAAC;AAAA,IAChF;AAAA,EACF;AAEA,YAAU,YAAY,SAAU,SAAS,YAAY;AACnD,QAAI,SAAS;AACX,UAAI,CAAC,MAAM,cAAc,CAAC,MAAM,WAAW,cAAc,GAAG;AAC1D;AAAA,MACF;AAEA,iBAAW,0BAA0B;AAAA,IACvC;AAAA,EACF;AAEA,YAAU,aAAa,SAAU,SAAS,YAAY;AACpD,QAAI,WAAW,CAAC,MAAM,eAAe,YAAY,GAAG;AAClD,gBAAU,oBAAoB;AAC9B,YAAM,QAAQ,UAAU,IAAI;AAE5B,YAAM,oBAAoB,eAAe,EAAE,mBAAmB,MAAM,KAAK,WAAW,CAAC;AAErF,YAAM,cAAc,OAAO,MAAM,mBAAmB;AACpD,UAAI,UAAU,MAAM,cAAc,eAAe;AACjD,YAAM,KAAK,WAAW,EAAE,YAAY,aAAa,OAAO;AACxD,UAAI,MAAM,MAAM,eAAe,cAAc;AAC7C,UAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AACnD,UAAI,OAAO,IAAI,aAAa,EAAE;AAC9B,mBAAK,OAAO,MAAM,QAAQ,IAAI;AAC9B,YAAM,KAAK,WAAW,EAAE,iBAAiB,eAAe,IAAI;AAE5D,UAAI,MAAM,eAAe,OAAO;AAC9B,YAAI,SAAS,IAAI,gBAAgB,EAAE,YAAY;AAC/C,cAAM,KAAK,WAAW,EAAE,aAAa,UAAU,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AAAA,MAChF;AAEA,YAAM,KAAK,OAAO,EAAE,KAAK;AAEzB,YAAM,QAAQ,WAAW,MAAM,QAAQ,WAAW,GAAG,MAAM,KAAK,QAAQ,EAAE,gBAAgB,CAAC;AAC3F,YAAM,KAAK,OAAO,EAAE,QAAQ;AAC5B,YAAM,cAAc,WAAW;AAAA,IACjC;AAAA,EACF;AAEA,YAAU,sBAAsB,WAAY;AAE1C,QAAI,CAAC,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG;AAC3C,UAAI,WAAW,IAAI,aAAa,EAAE;AAElC,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,iBAAS,IAAI,KAAK,IAAI,IAAI,IAAI;AAC9B,iBAAS,IAAI,IAAI,KAAK,IAAI,IAAI,IAAM;AACpC,iBAAS,IAAI,IAAI,KAAK;AAAA,MACxB;AAEA,UAAI,SAAS,eAAa,YAAY;AAAA,QACpC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,aAAO,QAAQ,QAAQ;AACvB,UAAI,YAAY,IAAI,YAAY,CAAC;AACjC,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,gBAAU,KAAK;AACf,UAAI,QAAQ,eAAa,YAAY;AAAA,QACnC,oBAAoB;AAAA,QACpB,QAAQ;AAAA,MACV,CAAC;AACD,YAAM,KAAK,QAAQ,EAAE,UAAU,OAAO,SAAS,eAAe,SAAS;AAAA,QACrE;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAGA,QAAI,MAAM,WAAW,UAAU,MAAM,MAAM,YAAY;AACrD,YAAM,aAAa,MAAM,WAAW,UAAU;AAE9C,UAAI,MAAM,eAAe,OAAO;AAY9B,cAAM,KAAK,WAAW,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,gVAAgV,+vBAA+vB,EAAE,CAAC;AAAA,MAC7qC;AAEA,UAAI,MAAM,eAAe,cAAc;AAErC,cAAM,KAAK,WAAW,MAAM,oBAAoB,eAAe,EAAE,wBAAwB,uWAAuW,uPAAuP,EAAE,CAAC;AAAA,MAC5rB;AAEA,YAAM,KAAK,oBAAoB,EAAE,SAAS;AAC1C,YAAM,KAAK,OAAO,EAAE,KAAK;AAEzB,UAAI,CAAC,MAAM,KAAK,OAAO,EAAE,kBAAkB,MAAM,KAAK,WAAW,GAAG,MAAM,KAAK,QAAQ,GAAG,YAAY,MAAM,KAAK,QAAQ,EAAE,gBAAgB,GAAG,MAAM,KAAK,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,MAAM,QAAQ,KAAK,GAAG;AAC5N,wBAAc,uCAAuC;AAAA,MACvD;AAAA,IACF;AAGA,QAAI,QAAQ,MAAM,WAAW,YAAY;AAEzC,QAAI,CAAC,MAAM,QAAQ;AACjB,sBAAc,kCAAkC;AAAA,IAClD;AAEA,QAAI,MAAM,cAAc,cAAc,MAAM,MAAM,IAAI;AACpD,YAAM,cAAc,yBAAyB,MAAM,mBAAmB;AACtE,YAAM,cAAc,cAAc,MAAM,EAAE;AAAA,IAC5C;AAAA,EACF;AACF;AASA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,gBAAY,OAAO,WAAW,OAAO,aAAa;AAClD,QAAM,gBAAgB,mBAAiB,YAAY;AACnD,QAAM,OAAO,UAAU,YAAY;AACnC,QAAM,gBAAgB,CAAC;AACvB,MAAI,MAAM,eAAe;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AACD,QAAM,cAAc;AAAA,IAClB,cAAc,aAAK,SAAS,IAAI,aAAa,CAAC,CAAC;AAAA,IAC/C,MAAM,aAAK,SAAS,IAAI,aAAa,EAAE,CAAC;AAAA,EAC1C;AAEA,SAAO,WAAW,OAAO,CAAC,SAAS,CAAC;AACpC,MAAI,WAAW,OAAO,CAAC,gBAAgB,CAAC;AAExC,kBAAgB,WAAW,KAAK;AAClC;AAhLA,IASI,iBA+IA,kBA0BA,eAEA;AApLJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,kBAAgB;AA+IpB,IAAI,mBAAiB;AAAA,MACnB,SAAS;AAAA,IACX;AAwBA,IAAI,gBAAc,YAAc,QAAM;AAEtC,IAAI,YAAY;AAAA,MACd,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,aAAa,aAAW;AAAA;AAAA;;;ACzLzC,IAAI;AAAJ;AAAA;AAAA,IAAI,oBAAoB;AAAA;AAAA;;;ACAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAKzf,+BAA+B,WAAW,OAAO;AAE/C,QAAM,eAAe,KAAK,uBAAuB;AAEjD,MAAI,aAAa,gBAAc,CAAC,GAAG,SAAS;AAE5C,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,8BAA8B,0BAA0B,CAAC,EAAE;AACnI,eAAW,mBAAiB,WAAW,UAAU,0BAA0B,CAAC,gCAAgC,CAAC,EAAE;AAG/G,eAAW,mBAAiB,WAAW,UAAU,2BAA2B,CAAC,qCAAqC,CAAC,EAAE;AAGrH,QAAI,cAAc,CAAC,kCAAkC,iCAAiC,qCAAqC,oCAAoC,4BAA4B;AAC3L,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,WAAW,EAAE;AACpF,QAAI,aAAa;AAEjB,QAAI,MAAM,QAAQ,aAAa,gBAAgB,GAAG;AAChD,mBAAa;AAAA,IACf;AAEA,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,mBAAa;AAAA,IACf;AAEA,eAAW,mBAAiB,WAAW,UAAU,sBAAsB;AAAA,MACvE;AAAA,MAAoB;AAAA,MAAoB;AAAA,MAAkC;AAAA,MAAmF;AAAA,MAAwC;AAAA,MAAc;AAAA,MAAgC;AAAA,MAAqC;AAAA,MAA0C;AAAA,MAElU;AAAA,MAAgD;AAAA,MAAkE;AAAA,MAClH;AAAA,MACA;AAAA,MACA;AAAA,MAAyC;AAAA,MAA2C;AAAA,MAA8B;AAAA,MAAkD;AAAA,MAAiC;AAAA,MAAc;AAAA,MAEnN;AAAA,MACA;AAAA,MAA8E;AAAA,MAE9E;AAAA,MAAyC;AAAA,IAAU,CAAC,EAAE;AAEtD,eAAW,mBAAiB,WAAW,UAAU,uBAAuB,EAAE,EAAE;AAE5E,QAAI,MAAM,sBAAsB;AAE9B,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,4BAA4B,kDAAkD,gDAAgD,qCAAqC,mCAAmC,4CAA4C,CAAC,EAAE;AAAA,IACjU;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,eAAW,oBAAoB,SAAS,KAAK,KAAK;AAAA,EACpD;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,eAAe,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,MAAM,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACtP,UAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,IAC1F,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,KAAK,GAAG;AAC5D,wBAAc,yCAAyC;AAAA,MACzD;AAAA,IACF;AAEA,QAAI,OAAO,WAAW,EAAE,cAAc,eAAe,GAAG;AACtD,aAAO,WAAW,EAAE,YAAY,iBAAiB,MAAM,SAAS,KAAO,CAAG;AAAA,IAC5E;AAEA,eAAW,0BAA0B,QAAQ,KAAK,KAAK;AAAA,EACzD;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,MAAM,IAAI,gBAAgB;AAC9B,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AAEnD,QAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,cAAQ,iBAAiB,cAAc,QAAQ,IAAI;AAAA,IACrD;AAEA,QAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,UAAI,CAAC,MAAM,cAAc,GAAG;AAC1B,YAAI,UAAU,MAAM,YAAY,eAAe;AAC/C,YAAI,OAAO,IAAI,aAAa,EAAE;AAC9B,qBAAK,SAAS,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAC9C,gBAAQ,iBAAiB,cAAc,IAAI;AAAA,MAC7C,OAAO;AACL,gBAAQ,iBAAiB,cAAc,QAAQ,IAAI;AAAA,MACrD;AAAA,IACF;AAEA,QAAI,QAAQ,cAAc,gBAAgB,GAAG;AAC3C,aAAO,WAAW,EAAE,YAAY,kBAAkB,IAAI,sBAAsB,CAAC;AAAA,IAC/E;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,KAAK,MAAM;AAC7C,WAAO,MAAM,QAAQ;AAAA,EACvB;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,OAAO,MAAM;AAEjB,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AAEA,UAAM,WAAW,WAAW,MAAM,CAAG;AACrC,QAAI,IAAI,MAAM,WAAW,kBAAkB;AAC3C,QAAI,MAAM,MAAM,WAAW,MAAM,UAAU,MAAM,QAAQ;AACzD,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,SAAS,KAAK,UAAU;AAC5B,QAAI,aAAY,OAAO,kBAAkB;AACzC,QAAI,aAAa,OAAO,QAAQ;AAChC,QAAI,YAAY;AAEhB,QAAI,SAAS;AAEb,QAAI,MAAM,WAAW,cAAc,KAAK,QAAQ,UAAU,SAAS,MAAM,WAAW,cAAc,CAAC,GAAG;AACpG,eAAS,UAAU,SAAS,MAAM,WAAW,cAAc,CAAC,EAAE,QAAQ;AAAA,IACxE;AAEA,QAAI,YAAY;AAChB,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAElB,QAAI,GAAG;AACL,wBAAkB,EAAE,sBAAsB;AAC1C,UAAI,eAAe,CAAC;AACpB,UAAI,iBAAiB,CAAC;AACtB,kBAAY,EAAE,QAAQ;AACtB,oBAAc,IAAI,WAAW,IAAI,aAAY,CAAC;AAE9C,UAAI,CAAC,IAAI,WAAW,GAAG;AACrB,YAAI,WAAW,gBAAgB,YAAY,CAAC;AAAA,MAC9C;AAEA,UAAI,WAAW,EAAE,sBAAsB,MAAM,mBAAmB;AAAA,IAClE,WAAW,IAAI,WAAW,GAAG;AAC3B,UAAI,WAAW,IAAI;AAAA,IACrB;AAEA,QAAI,mBAAmB,eAAe;AACtC,QAAI,YAAY,IAAI,aAAa,YAAY,aAAY,CAAC;AAC1D,QAAI,UAAU,YAAY,CAAC;AAC3B,QAAI,QAAQ,KAAK,IAAI,mBAAmB,EAAI,CAAC;AAC7C,QAAI,WAAW;AACf,QAAI,WAAW;AAIf,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,UAAI,SAAS,MAAM,WAAW,UAAU;AAExC,UAAI,QAAQ;AACV,iBAAS,OAAO;AAAA,MAClB;AAEA,iBAAW,IAAI;AACf,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,KAAO,SAAS;AACtC,gBAAU,YAAY,CAAC;AAEvB,UAAI,WAAW;AACb,mBAAW,IAAI;AACf,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAAA,MAC9C;AAEA,iBAAW,IAAI;AACf,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,IAAM,SAAS;AACrC,gBAAU,YAAY,CAAC;AAEvB,UAAI,WAAW;AACb,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAAA,MAC9C;AAEA,iBAAW,IAAI;AACf,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY,WAAW;AACjC,gBAAU,YAAY;AACtB,gBAAU,YAAY,IAAM;AAE5B,UAAI,WAAW;AACb,oBAAY,WAAW,UAAU;AACjC,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAC5C,oBAAY,WAAW,UAAU,WAAW;AAAA,MAC9C;AAAA,IACF;AAEA,QAAI,gBAAgB,SAAS,SAAS;AACtC,QAAI,OAAO,WAAW,WAAW,YAAY;AAE7C,QAAI,GAAG;AACL,UAAI,WAAW,EAAE,OAAO,aAAa,WAAW,YAAY;AAAA,IAC9D;AAEA,UAAM,aAAa,SAAS;AAAA,EAC9B;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,4BAAwB,OAAO,WAAW,OAAO,aAAa;AAE9D,wBAAsB,WAAW,KAAK;AACxC;AA1PA,IAeI,iBAkOA,kBAWA,eAEA;AA9PJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,kBAAgB;AAkOpB,IAAI,mBAAiB,CAAC;AAWtB,IAAI,gBAAc,YAAc,UAAQ,uBAAuB;AAE/D,IAAI,kBAAkB;AAAA,MACpB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,mBAAmB,aAAW;AAAA;AAAA;;;ACnQ/C,IAAI;AAAJ;AAAA;AAAA,IAAI,mBAAmB;AAAA;AAAA;;;ACAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,mBAAiB,QAAQ,gBAAgB;AAAE,MAAI,OAAO,OAAO,KAAK,MAAM;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,UAAU,OAAO,sBAAsB,MAAM;AAAG,sBAAmB,WAAU,QAAQ,OAAO,SAAU,KAAK;AAAE,aAAO,OAAO,yBAAyB,QAAQ,GAAG,EAAE;AAAA,IAAY,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,OAAO;AAAA,EAAG;AAAE,SAAO;AAAM;AAEpV,yBAAuB,QAAQ;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,SAAS,AAAQ,UAAU,MAAlB,OAAuB,UAAU,KAAK,CAAC;AAAG,QAAI,IAAI,UAAQ,OAAO,MAAM,GAAG,IAAE,EAAE,QAAQ,SAAU,KAAK;AAAE,sBAAgB,QAAQ,KAAK,OAAO,IAAI;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,QAAQ,OAAO,0BAA0B,MAAM,CAAC,IAAI,UAAQ,OAAO,MAAM,CAAC,EAAE,QAAQ,SAAU,KAAK;AAAE,aAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ,GAAG,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAQ;AAKzf,8BAA8B,WAAW,OAAO;AAE9C,QAAM,eAAe,KAAK,sBAAsB;AAEhD,MAAI,aAAa,gBAAc,CAAC,GAAG,SAAS;AAE5C,YAAU,oBAAoB,SAAU,SAAS,KAAK,OAAO;AAC3D,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,YAAQ,WAAW;AAAA,EACrB;AAEA,YAAU,sBAAsB,SAAU,SAAS,KAAK,OAAO;AAC7D,QAAI,WAAW,QAAQ;AACvB,QAAI,WAAW,QAAQ;AACvB,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,CAAC,8BAA8B,0BAA0B,CAAC,EAAE;AACnI,eAAW,mBAAiB,WAAW,UAAU,0BAA0B,gCAAgC,EAAE;AAG7G,eAAW,mBAAiB,WAAW,UAAU,2BAA2B,uCAAuC,EAAE;AAGrH,QAAI,cAAc,CAAC,iCAAiC,qCAAqC,oCAAoC,qCAAqC,oCAAoC,4BAA4B;AAClO,eAAW,mBAAiB,WAAW,UAAU,sBAAsB,WAAW,EAAE;AACpF,QAAI,aAAa;AAEjB,QAAI,MAAM,QAAQ,aAAa,gBAAgB,GAAG;AAChD,mBAAa;AAAA,IACf;AAEA,QAAI,MAAM,oBAAoB,UAAU,GAAG;AACzC,mBAAa;AAAA,IACf;AAGA,eAAW,mBAAiB,WAAW,UAAU,sBAAsB;AAAA,MACvE;AAAA,MAAoB;AAAA,MAAoB;AAAA,MAAkC;AAAA,MAAmF;AAAA,MAAwC;AAAA,MAAc;AAAA,MAAgC;AAAA,MAAqC;AAAA,MAA0C;AAAA,MAElU;AAAA,MAAgD;AAAA,MAAkE;AAAA,MAClH;AAAA,MAEA;AAAA,MAAmB;AAAA,MAA6C;AAAA,MAAyE;AAAA,MAAc;AAAA,MAAyE;AAAA,MAAmD;AAAA,MAAwF;AAAA,MAC3W;AAAA,MACA;AAAA,MAAwD;AAAA,MAA8D;AAAA,MAA8D;AAAA,MAAgC;AAAA,MAAkD;AAAA,MAAiC;AAAA,MAAc;AAAA,MAA4C;AAAA,MAA2C;AAAA,MAA0C;AAAA,MACtb;AAAA,MAA8C;AAAA,MAA+C;AAAA,MAAwH;AAAA,MAAkB;AAAA,MAAkD;AAAA,MAAqF;AAAA,MAA0C;AAAA,MAA+H;AAAA,MAAe;AAAA,MAAa;AAAA,MACnjB;AAAA,MACA;AAAA,MAA8G;AAAA,MAAa;AAAA,MAE3H;AAAA,MAAyC;AAAA,IAAU,CAAC,EAAE;AAEtD,eAAW,mBAAiB,WAAW,UAAU,uBAAuB,EAAE,EAAE;AAE5E,QAAI,MAAM,sBAAsB;AAE9B,iBAAW,mBAAiB,WAAW,UAAU,wBAAwB,CAAC,4BAA4B,kDAAkD,gDAAgD,qCAAqC,mCAAmC,4CAA4C,CAAC,EAAE;AAAA,IACjU;AAEA,YAAQ,SAAS;AACjB,YAAQ,WAAW;AACnB,eAAW,oBAAoB,SAAS,KAAK,KAAK;AAAA,EACpD;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,OAAO,QAAQ,EAAE,gBAAgB,KAAM,OAAM,eAAe,OAAO,uBAAuB,EAAE,SAAS,KAAK,OAAO,oBAAoB,EAAE,SAAS,IAAI,OAAO,uBAAuB,EAAE,SAAS,IAAI;AACnM,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACnD,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,IAC1F,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,KAAK,GAAG;AAC5D,0BAAc,yCAAyC;AAAA,QACzD;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACnD,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,EAAE,WAAW,GAAG,YAAY,GAAG,OAAO,QAAQ,EAAE,iBAAiB,GAAG,MAAM,QAAQ,eAAe,GAAG,IAAI,GAAG;AACpL,0BAAc,yCAAyC;AAAA,QACzD;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,EAAE,gBAAgB,UAAU,GAAG;AACnD,YAAI,CAAC,OAAO,OAAO,EAAE,kBAAkB,OAAO,WAAW,GAAG,OAAO,QAAQ,GAAG,YAAY,IAC1F,OAAO,QAAQ,EAAE,UAAU,GAAG,MAAM,QAAQ,OAAO,GAAG,KAAK,GAAG;AAC5D,0BAAc,yCAAyC;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAEA,eAAW,0BAA0B,QAAQ,KAAK,KAAK;AAAA,EACzD;AAEA,YAAU,4BAA4B,SAAU,QAAQ,KAAK,OAAO;AAClE,QAAI,UAAU,OAAO,WAAW;AAChC,QAAI,MAAM,IAAI,gBAAgB;AAC9B,QAAI,UAAU,MAAM,aAAa,eAAe,GAAG;AAEnD,QAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,cAAQ,iBAAiB,cAAc,QAAQ,IAAI;AAAA,IACrD;AAEA,QAAI,CAAC,MAAM,cAAc,GAAG;AAC1B,UAAI,UAAU,MAAM,YAAY,eAAe;AAE/C,UAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,YAAI,OAAO,IAAI,aAAa,EAAE;AAC9B,qBAAK,SAAS,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAC9C,gBAAQ,iBAAiB,cAAc,IAAI;AAAA,MAC7C;AAEA,UAAI,QAAQ,cAAc,cAAc,GAAG;AACzC,YAAI,SAAS,IAAI,aAAa,CAAC;AAC/B,qBAAK,SAAS,QAAQ,QAAQ,cAAc,QAAQ,YAAY;AAChE,gBAAQ,oBAAoB,gBAAgB,MAAM;AAAA,MACpD;AAAA,IACF,OAAO;AACL,UAAI,QAAQ,cAAc,YAAY,GAAG;AACvC,gBAAQ,iBAAiB,cAAc,QAAQ,IAAI;AAAA,MACrD;AAEA,UAAI,QAAQ,cAAc,cAAc,GAAG;AACzC,gBAAQ,oBAAoB,gBAAgB,QAAQ,YAAY;AAAA,MAClE;AAAA,IACF;AAEA,QAAI,QAAQ,cAAc,gBAAgB,GAAG;AAC3C,aAAO,WAAW,EAAE,YAAY,kBAAkB,IAAI,sBAAsB,CAAC;AAAA,IAC/E;AAAA,EACF;AAEA,YAAU,gBAAgB,SAAU,KAAK,MAAM;AAC7C,WAAO,MAAM,QAAQ;AAAA,EACvB;AAEA,YAAU,qBAAqB,SAAU,KAAK,OAAO;AACnD,QAAI,OAAO,MAAM;AAEjB,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AAEA,UAAM,WAAW,WAAW,MAAM,CAAG;AACrC,QAAI,IAAI,MAAM,WAAW,kBAAkB;AAC3C,QAAI,MAAM,MAAM,WAAW,MAAM,UAAU,MAAM,QAAQ;AACzD,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,SAAS,KAAK,UAAU;AAC5B,QAAI,aAAY,OAAO,kBAAkB;AACzC,QAAI,aAAa,OAAO,QAAQ;AAChC,QAAI,YAAY;AAGhB,iBAAa;AACb,QAAI,YAAY;AAChB,QAAI,kBAAkB;AACtB,QAAI,iBAAiB,CAAC;AAEtB,QAAI,CAAC,IAAI,WAAW,GAAG;AACrB,UAAI,WAAW,gBAAgB,YAAY,CAAC;AAAA,IAC9C;AAEA,QAAI,WAAW,EAAE,sBAAsB,MAAM,mBAAmB;AAEhE,QAAI,GAAG;AACL,wBAAkB,EAAE,sBAAsB;AAC1C,UAAI,eAAe,CAAC;AACpB,kBAAY,EAAE,QAAQ;AACtB,UAAI,iBAAiB,CAAC;AAAA,IACxB;AAEA,QAAI,mBAAmB,eAAe;AACtC,QAAI,UAAU,YAAY,CAAC;AAE3B,QAAI,YAAY,IAAI,aAAa,YAAY,aAAY,EAAE;AAC3D,QAAI,cAAc,IAAI,WAAW,KAAK,aAAa,aAAY,IAAI,EAAE;AACrE,QAAI,SAAS;AACb,QAAI,mBAAmB;AAIvB,QAAI,MAAM,WAAW,cAAc,KAAK,QAAQ,UAAU,SAAS,MAAM,WAAW,cAAc,CAAC,GAAG;AACpG,eAAS,UAAU,SAAS,MAAM,WAAW,cAAc,CAAC,EAAE,QAAQ;AAAA,IACxE;AAEA,QAAI,MAAM,WAAW,oBAAoB,KAAK,QAAQ,UAAU,SAAS,MAAM,WAAW,oBAAoB,CAAC,GAAG;AAChH,yBAAmB,UAAU,SAAS,MAAM,WAAW,oBAAoB,CAAC,EAAE,QAAQ;AAAA,IACxF,OAAO;AACL,sBAAc,CAAC,qCAAqC,2CAA2C,CAAC;AAAA,IAClG;AAuBA,QAAI,gBAAgB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACvD,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,YAAW,EAAE,GAAG;AAClC,UAAI,SAAS,MAAM,WAAW,UAAU;AACxC,UAAI,SAAS,MAAM,WAAW,UAAU;AAExC,UAAI,QAAQ;AACV,iBAAS,OAAO,IAAI;AACpB,iBAAS,OAAO,IAAI,IAAI;AAAA,MAC1B;AAEA,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,EAAE,GAAG;AAC7C,mBAAW,IAAI;AACf,kBAAU,YAAY,WAAW;AACjC,kBAAU,YAAY,WAAW;AACjC,kBAAU,YAAY,WAAW;AACjC,mBAAW,IAAI;AACf,kBAAU,YAAY,iBAAiB,cAAc;AACrD,kBAAU,YAAY,iBAAiB,cAAc;AACrD,kBAAU,YAAY,iBAAiB,cAAc;AACrD,kBAAU,YAAY;AACtB,oBAAY,WAAW,MAAO,eAAc,KAAK;AACjD,oBAAY,WAAW,cAAc,MAAM,IAAI,MAAM;AACrD,oBAAY,WAAW,cAAc,MAAM,IAAI,MAAM;AACrD,oBAAY,WAAW;AACvB,mBAAW,IAAI;AAEf,YAAI,WAAW;AACb,sBAAY,WAAW,UAAU;AACjC,sBAAY,WAAW,UAAU,WAAW;AAC5C,sBAAY,WAAW,UAAU,WAAW;AAC5C,sBAAY,WAAW,UAAU,WAAW;AAAA,QAC9C;AAAA,MACF;AAAA,IACF;AAEA,QAAI,gBAAgB,SAAS,SAAS;AACtC,QAAI,OAAO,WAAW,WAAW,YAAY;AAC7C,QAAI,WAAW,EAAE,OAAO,aAAa,WAAW,YAAY;AAC5D,UAAM,aAAa,SAAS;AAAA,EAC9B;AACF;AAOA,kBAAgB,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,kBAAgB,aAAa;AAElD,4BAAwB,OAAO,WAAW,OAAO,aAAa;AAE9D,uBAAqB,WAAW,KAAK;AACvC;AA3RA,IAcI,iBAoQA,kBAWA,eAEA;AA/RJ;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAI,kBAAgB;AAoQpB,IAAI,mBAAiB,CAAC;AAWtB,IAAI,gBAAc,YAAc,UAAQ,sBAAsB;AAE9D,IAAI,iBAAiB;AAAA,MACnB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV;AAEA,qBAAiB,kBAAkB,aAAW;AAAA;AAAA;;;;;KCpS9C,SAA2C,GAAM,GAAA;AAC1B,MAAA,OAAZ,WAAY,YAA8B,AAAA,OAAX,UAAW,WACnD,OAAO,UAAU,EAAQ,qDAAkE,yCAAsB,+CAAmC,+CAAkD,4CAA6C,+CAAkD,iDAAsD,qDAAuD,qDAAkD,iDAAqD,6DAAwD,6DAAsD,qDAAoD,2DAAwD,+EAAkE,+CAA+C,mDAAsD,6CAAiD,+CAAkD,6DAA0D,+CAAmD,iDAAqD,iDAAoD,6DAA2D,yDAAyD,uDAAwD,mFAAsE,+DAA4D,mDAAsD,+CAAoD,2DAA0D,yDAAyD,iDAAoD,2DAA0D,iEAAiE,wDAA+D,uDAA4D,qDAAQ,IACv9D,AAAA,OAAX,UAAW,cAAc,OAAO,MAC9C,OAAO,CAAC,yDAAyD,aAAa,0BAA0B,yCAAyC,oCAAoC,yCAAyC,6CAA6C,8CAA8C,yCAAyC,4CAA4C,+CAA+C,6CAA6C,2CAA2C,+CAA+C,yDAAyD,sCAAsC,6CAA6C,wCAAwC,yCAAyC,iDAAiD,0CAA0C,4CAA4C,2CAA2C,kDAAkD,gDAAgD,+CAA+C,6DAA6D,mDAAmD,6CAA6C,2CAA2C,iDAAiD,gDAAgD,2CAA2C,iDAAiD,wDAAwD,sDAAsD,mDAAmD,mDAAA,GAAsD,CAAA,IACtqD,AAAA,OAAZ,WAAY,WAC1B,QAAuB,gBAAI,EAAQ,qDAAkE,yCAAsB,+CAAmC,+CAAkD,4CAA6C,+CAAkD,iDAAsD,qDAAuD,qDAAkD,iDAAqD,6DAAwD,6DAAsD,qDAAoD,2DAAwD,+EAAkE,+CAA+C,mDAAsD,6CAAiD,+CAAkD,6DAA0D,+CAAmD,iDAAqD,iDAAoD,6DAA2D,yDAAyD,uDAAwD,mFAAsE,+DAA4D,mDAAsD,+CAAoD,2DAA0D,yDAAyD,iDAAoD,2DAA0D,iEAAiE,wDAA+D,uDAA4D,qDAAQ,IAE1/D,EAAoB,gBAAI,EAAQ,EAAK,0DAA0D,EAAa,QAAG,EAAK,2BAA2B,EAAK,0CAA0C,EAAK,qCAAqC,EAAK,0CAA0C,EAAK,8CAA8C,EAAK,+CAA+C,EAAK,0CAA0C,EAAK,6CAA6C,EAAK,gDAAgD,EAAK,8CAA8C,EAAK,4CAA4C,EAAK,gDAAgD,EAAK,0DAA0D,EAAK,uCAAuC,EAAK,8CAA8C,EAAK,yCAAyC,EAAK,0CAA0C,EAAK,kDAAkD,EAAK,2CAA2C,EAAK,6CAA6C,EAAK,4CAA4C,EAAK,mDAAmD,EAAK,iDAAiD,EAAK,gDAAgD,EAAK,8DAA8D,EAAK,oDAAoD,EAAK,8CAA8C,EAAK,4CAA4C,EAAK,kDAAkD,EAAK,iDAAiD,EAAK,4CAA4C,EAAK,kDAAkD,EAAK,yDAAyD,EAAK,uDAAuD,EAAK,oDAAoD,EAAK,oDAAA;IAAA,EACj4D,MAAM,SAAS,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAgC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAiC,GAAkC,GAAkC,GAAiC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAkC,GAAA;AACxvC,aAAA,WAAA;AAAA,YAAA,IAAA,EAAA,KAAA,SAAA,IAAA,IAAA,IAAA;ACVA,aAAO,UAAU,GAAjB,EAAA;QAAA,GAAA,KAAA,SAAA,IAAA,IAAA,IAAA;AAAA,eAAA,GAAA,IAAA,EAAA;ACUA,cAGI,KAAiB,6BAGjB,KAAmB,kBAGnB,KAAU,sBAEV,KAAU,oBACV,KAAU,iBAEV,KAAU,qBACV,KAAS,8BACT,KAAS,gBACT,KAAY,mBACZ,KAAY,mBACZ,KAAa,oBACb,KAAY,mBACZ,KAAS,gBACT,KAAY,mBACZ,KAAY,mBACZ,KAAa,oBAEb,KAAiB,wBACjB,KAAc,qBACd,KAAa,yBACb,KAAa,yBACb,KAAU,sBACV,KAAW,uBACX,KAAW,uBACX,KAAW,uBACX,KAAkB,8BAClB,KAAY,wBACZ,KAAY,wBASZ,KAAU,QAGV,KAAe,+BAGf,KAAW,oBAGX,KAAgB,CAAA;AACpB,aAAc,MAAW,GA7CV,oBA8Cf,GAAc,MAAkB,GAAc,MAC9C,GAAc,MAAW,GAAc,MACvC,GAAc,MAAc,GAAc,MAC1C,GAAc,MAAW,GAAc,MACvC,GAAc,MAAY,GAAc,MACxC,GAAc,MAAa,GAAc,MACzC,GAAc,MAAa,GAAc,MACzC,GAAc,MAAa,GAAc,MACzC,GAAc,MAAY,GAAc,MACxC,GAAc,MAAa,GAAc,MAAA,MACzC,GArDe,oBAqDW,GAAc,MACxC,GAAc,MAAA;AAGd,cAAI,KAA8B,AAAA,OAAV,GAAA,KAAU,YAAY,GAAA,KAAU,GAAA,EAAO,WAAW,UAAU,GAAA,GAGhF,KAA0B,AAAA,OAAR,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU,MAGxE,KAAO,MAAc,MAAY,SAAS,aAAA,EAAT,GAGjC,KAA4C,MAAA,CAAY,GAAQ,YAAY,IAG5E,KAAa,MAA4C,MAAA,CAAW,GAAO,YAAY,IAGvF,KAAgB,MAAc,GAAW,YAAY;AAUzD,sBAAqB,IAAK,IAAA;AAGxB,mBADA,GAAI,IAAI,GAAK,IAAI,GAAK,EAAA,GACf;UAAA;AAWT,sBAAqB,IAAK,IAAA;AAGxB,mBADA,GAAI,IAAI,EAAA,GACD;UAAA;AAuDT,qBAAqB,IAAO,IAAU,IAAa,IAAA;AACjD,gBAAI,KAAA,IACA,KAAS,KAAQ,GAAM,SAAS;AAKpC,iBAHI,MAAa,MACf,MAAc,GAAA,EAAQ,MAAA,EAEf,KAAQ;AACf,mBAAc,GAAS,IAAa,GAAM,KAAQ,IAAO,EAAA;AAE3D,mBAAO;UAAA;AAyCT,qBAAsB,IAAA;AAGpB,gBAAI,KAAA;AACJ,gBAAa,AAAT,MAAS,QAAiC,AAAA,OAAlB,GAAM,YAAY;AAC5C,kBAAA;AACE,qBAAA,CAAA,CAAY,MAAQ;cAAA,SACb,IAAP;cAAO;AAEX,mBAAO;UAAA;AAUT,qBAAoB,IAAA;AAClB,gBAAI,KAAA,IACA,KAAS,MAAM,GAAI,IAAA;AAKvB,mBAHA,GAAI,QAAQ,SAAS,IAAO,IAAA;AAC1B,iBAAA,EAAS,MAAS,CAAC,IAAK,EAAA;YAAA,CAAA,GAEnB;UAAA;AAWT,qBAAiB,IAAM,IAAA;AACrB,mBAAO,SAAS,IAAA;AACd,qBAAO,GAAK,GAAU,EAAA,CAAA;YAAA;UAAA;AAW1B,qBAAoB,IAAA;AAClB,gBAAI,KAAA,IACA,KAAS,MAAM,GAAI,IAAA;AAKvB,mBAHA,GAAI,QAAQ,SAAS,IAAA;AACnB,iBAAA,EAAS,MAAS;YAAA,CAAA,GAEb;UAAA;AAIT,cASM,GATF,IAAa,MAAM,WACnB,IAAY,SAAS,WACrB,IAAc,OAAO,WAGrB,IAAa,GAAK,uBAGlB,IACE,KAAM,SAAS,KAAK,KAAc,EAAW,QAAQ,EAAW,KAAK,YAAY,EAAA,KACvE,mBAAmB,IAAO,IAItC,IAAe,EAAU,UAGzB,KAAiB,EAAY,gBAO7B,KAAiB,EAAY,UAG7B,KAAa,OAAO,MACtB,EAAa,KAAK,EAAA,EAAgB,QAzQjB,uBAyQuC,MAAA,EACvD,QAAQ,0DAA0D,OAAA,IAAW,GAAA,GAI5E,KAAS,KAAgB,GAAK,SAAA,QAC9B,KAAS,GAAK,QACd,KAAa,GAAK,YAClB,KAAe,EAAQ,OAAO,gBAAgB,MAAA,GAC9C,KAAe,OAAO,QACtB,KAAuB,EAAY,sBACnC,KAAS,EAAW,QAGpB,KAAmB,OAAO,uBAC1B,KAAiB,KAAS,GAAO,WAAA,QACjC,KAAa,EAAQ,OAAO,MAAM,MAAA,GAGlC,KAAW,GAAU,IAAM,UAAA,GAC3B,KAAM,GAAU,IAAM,KAAA,GACtB,KAAU,GAAU,IAAM,SAAA,GAC1B,KAAM,GAAU,IAAM,KAAA,GACtB,KAAU,GAAU,IAAM,SAAA,GAC1B,KAAe,GAAU,QAAQ,QAAA,GAGjC,KAAqB,GAAS,EAAA,GAC9B,KAAgB,GAAS,EAAA,GACzB,KAAoB,GAAS,EAAA,GAC7B,KAAgB,GAAS,EAAA,GACzB,KAAoB,GAAS,EAAA,GAG7B,KAAc,KAAS,GAAO,YAAA,QAC9B,KAAgB,KAAc,GAAY,UAAA;AAS9C,sBAAc,IAAA;AACZ,gBAAI,KAAA,IACA,KAAS,KAAU,GAAQ,SAAS;AAGxC,iBADA,KAAK,MAAA,GAAA,EACI,KAAQ,MAAQ;AACvB,kBAAI,KAAQ,GAAQ;AACpB,mBAAK,IAAI,GAAM,IAAI,GAAM,EAAA;YAAA;UAAA;AA2F7B,sBAAmB,IAAA;AACjB,gBAAI,KAAA,IACA,KAAS,KAAU,GAAQ,SAAS;AAGxC,iBADA,KAAK,MAAA,GAAA,EACI,KAAQ,MAAQ;AACvB,kBAAI,KAAQ,GAAQ;AACpB,mBAAK,IAAI,GAAM,IAAI,GAAM,EAAA;YAAA;UAAA;AAyG7B,sBAAkB,IAAA;AAChB,gBAAI,KAAA,IACA,KAAS,KAAU,GAAQ,SAAS;AAGxC,iBADA,KAAK,MAAA,GAAA,EACI,KAAQ,MAAQ;AACvB,kBAAI,KAAQ,GAAQ;AACpB,mBAAK,IAAI,GAAM,IAAI,GAAM,EAAA;YAAA;UAAA;AAuF7B,sBAAe,IAAA;AACb,iBAAK,WAAW,IAAI,GAAU,EAAA;UAAA;AAyHhC,sBAAqB,IAAQ,IAAK,IAAA;AAChC,gBAAI,KAAW,GAAO;AAChB,eAAe,KAAK,IAAQ,EAAA,KAAQ,GAAG,IAAU,EAAA,KAAA,CAClD,OADkD,UACzB,MAAO,OACnC,IAAO,MAAO;UAAA;AAYlB,sBAAsB,IAAO,IAAA;AAE3B,qBADI,KAAS,GAAM,QACZ;AACL,kBAAI,GAAG,GAAM,IAAQ,IAAI,EAAA;AACvB,uBAAO;AAGX,mBAAA;UAAQ;AA8BV,sBAAmB,IAAO,IAAQ,IAAQ,IAAY,IAAK,IAAQ,IAAA;AACjE,gBAAI;AAIJ,gBAHI,MACF,MAAS,KAAS,GAAW,IAAO,IAAK,IAAQ,EAAA,IAAS,GAAW,EAAA,IAAA,AAEnE,OAFmE;AAGrE,qBAAO;AAET,gBAAA,CAAK,GAAS,EAAA;AACZ,qBAAO;AAET,gBAAI,KAAQ,GAAQ,EAAA;AACpB,gBAAI,IAAA;AAEF,kBADA,KA2XJ,SAAwB,IAAA;AACtB,oBAAI,KAAS,GAAM,QACf,KAAS,GAAM,YAAY,EAAA;AAO/B,uBAJI,MAA6B,AAAA,OAAZ,GAAM,MAAM,YAAY,GAAe,KAAK,IAAO,OAAA,KACtE,IAAO,QAAQ,GAAM,OACrB,GAAO,QAAQ,GAAM,QAEhB;cAAA,EApYmB,EAAA,GAAA,CACnB;AACH,uBA6ON,SAAmB,IAAQ,IAAA;AACzB,sBAAI,KAAA,IACA,KAAS,GAAO;AAGpB,uBADA,MAAU,MAAQ,MAAM,EAAA,IAAA,EACf,KAAQ;AACf,uBAAM,MAAS,GAAO;AAExB,yBAAO;gBAAA,EArPc,IAAO,EAAA;YAAA,OAErB;AACL,kBAAI,KAAM,GAAO,EAAA,GACb,KAAS,MAAO,MAAW,MAAO;AAEtC,kBAAI,GAAS,EAAA;AACX,uBA0HN,SAAqB,IAAQ,IAAA;AAC3B,sBAAI;AACF,2BAAO,GAAO,MAAA;AAEhB,sBAAI,KAAS,IAAI,GAAO,YAAY,GAAO,MAAA;AAE3C,yBADA,GAAO,KAAK,EAAA,GACL;gBAAA,EAhIgB,IAAO,EAAA;AAE5B,kBAAI,MAAO,MAAa,MAAO,MAAY,MAAA,CAAW,IAAS;AAC7D,oBAAI,EAAa,EAAA;AACf,yBAAO,KAAS,KAAQ,CAAA;AAG1B,oBADA,KA+XN,SAAyB,IAAA;AACvB,yBAAqC,AAAA,OAAtB,GAAO,eAAe,cAAe,GAAY,EAAA,IAE5D,CAAA,IAxVG,GADW,KAwVH,GAAa,EAAA,CAAA,IAvVH,GAAa,EAAA,IAAS,CAAA;AADjD,sBAAoB;gBAAA,EAzCW,KAAS,CAAA,IAAK,EAAA,GAAA,CAClC;AACH,yBA6QR,SAAqB,IAAQ,IAAA;AAC3B,2BAAO,GAAW,IAAQ,GAAW,EAAA,GAAS,EAAA;kBAAA,EA9QrB,IAhD3B,SAAoB,IAAQ,IAAA;AAC1B,2BAAO,MAAU,GAAW,IAAQ,GAAK,EAAA,GAAS,EAAA;kBAAA,EA+CP,IAAQ,EAAA,CAAA;cAAA,OAE1C;AACL,oBAAA,CAAK,GAAc;AACjB,yBAAO,KAAS,KAAQ,CAAA;AAE1B,qBA0YN,SAAwB,IAAQ,IAAK,IAAW,IAAA;AAC9C,sBA5MmB,IA4Mf,KAAO,GAAO;AAClB,0BAAQ;yBACD;AACH,6BAAO,GAAiB,EAAA;yBAErB;yBACA;AACH,6BAAO,IAAI,GAAA,CAAM,EAAA;yBAEd;AACH,6BA3QN,SAAuB,IAAU,IAAA;AAC/B,4BAAI,KAAS,KAAS,GAAiB,GAAS,MAAA,IAAU,GAAS;AACnE,+BAAO,IAAI,GAAS,YAAY,IAAQ,GAAS,YAAY,GAAS,UAAA;sBAAA,EAyQ7C,IAAQ,EAAA;yBAE1B;yBAAiB;yBACjB;yBAAc;yBAAe;yBAC7B;yBAAe;yBAAsB;yBAAgB;AACxD,6BA/MN,SAAyB,IAAY,IAAA;AACnC,4BAAI,KAAS,KAAS,GAAiB,GAAW,MAAA,IAAU,GAAW;AACvE,+BAAO,IAAI,GAAW,YAAY,IAAQ,GAAW,YAAY,GAAW,MAAA;sBAAA,EA6MjD,IAAQ,EAAA;yBAE5B;AACH,6BArQN,SAAkB,IAAK,IAAQ,IAAA;AAE7B,+BAAO,EADK,KAAS,GAAU,EAAW,EAAA,GAAA,IAAM,IAAQ,EAAW,EAAA,GACzC,IAAa,IAAI,GAAI,aAAA;sBAAA,EAmQ3B,IAAQ,IAAQ,EAAA;yBAE7B;yBACA;AACH,6BAAO,IAAI,GAAK,EAAA;yBAEb;AACH,6BAhQN,SAAqB,IAAA;AACnB,4BAAI,KAAS,IAAI,GAAO,YAAY,GAAO,QAAQ,GAAQ,KAAK,EAAA,CAAA;AAEhE,+BADA,GAAO,YAAY,GAAO,WACnB;sBAAA,EA6PgB,EAAA;yBAEhB;AACH,6BApPN,SAAkB,IAAK,IAAQ,IAAA;AAE7B,+BAAO,EADK,KAAS,GAAU,EAAW,EAAA,GAAA,IAAM,IAAQ,EAAW,EAAA,GACzC,IAAa,IAAI,GAAI,aAAA;sBAAA,EAkP3B,IAAQ,IAAQ,EAAA;yBAE7B;AACH,6BA3Oe,KA2OI,IA1OhB,KAAgB,OAAO,GAAc,KAAK,EAAA,CAAA,IAAW,CAAA;;gBAAA,EAhMhC,IAAO,IAAK,IAAW,EAAA;cAAA;YAAA;AAInD,kBAAU,MAAQ,IAAI;AACtB,gBAAI,KAAU,GAAM,IAAI,EAAA;AACxB,gBAAI;AACF,qBAAO;AAIT,gBAFA,GAAM,IAAI,IAAO,EAAA,GAAA,CAEZ;AACH,kBAAI,KAAQ,KAsQhB,SAAoB,IAAA;AAClB,uBAnOF,SAAwB,IAAQ,IAAU,IAAA;AACxC,sBAAI,KAAS,GAAS,EAAA;AACtB,yBAAO,GAAQ,EAAA,IAAU,KApwB3B,SAAmB,IAAO,IAAA;AAKxB,6BAJI,KAAA,IACA,KAAS,GAAO,QAChB,KAAS,GAAM,QAAA,EAEV,KAAQ;AACf,yBAAM,KAAS,MAAS,GAAO;AAEjC,2BAAO;kBAAA,EA4vBqC,IAAQ,GAAY,EAAA,CAAA;gBAAA,EAiO1C,IAAQ,IAAM,EAAA;cAAA,EAvQF,EAAA,IAAS,GAAK,EAAA;AAUhD,mBA5vBF,SAAmB,IAAO,IAAA;AAIxB,uBAHI,KAAA,IACA,KAAS,KAAQ,GAAM,SAAS,GAAA,EAE3B,KAAQ,MAAA,AACX,GAAS,GAAM,KAAQ,EAAA,MADZ;AACY;YAAA,EA+uBnB,MAAS,IAAO,SAAS,IAAU,IAAA;AACvC,oBAEF,MAAW,GADX,KAAM,MAIR,GAAY,IAAQ,IAAK,GAAU,IAAU,IAAQ,IAAQ,IAAY,IAAK,IAAO,EAAA,CAAA;YAAA,CAAA,GAEhF;UAAA;AAsGT,sBAA0B,IAAA;AACxB,gBAAI,KAAS,IAAI,GAAY,YAAY,GAAY,UAAA;AAErD,mBADA,IAAI,GAAW,EAAA,EAAQ,IAAI,IAAI,GAAW,EAAA,CAAA,GACnC;UAAA;AA8GT,sBAAoB,IAAQ,IAAO,IAAQ,IAAA;AACzC,kBAAW,MAAS,CAAA;AAKpB,qBAHI,KAAA,IACA,KAAS,GAAM,QAAA,EAEV,KAAQ,MAAQ;AACvB,kBAAI,KAAM,GAAM,KAEZ,KAAW,KACX,GAAW,GAAO,KAAM,GAAO,KAAM,IAAK,IAAQ,EAAA,IAAA;AAGtD,iBAAY,IAAQ,IAAA,AAAK,OAAL,SAA8B,GAAO,MAAO,EAAA;YAAA;AAElE,mBAAO;UAAA;AAkCT,sBAAoB,IAAK,IAAA;AACvB,gBAqKiB,IACb,IAtKA,KAAO,GAAI;AACf,mBAsKgB,CADZ,MAAA,OADa,MApKA,QAsKD,YAAoB,AAAR,MAAQ,YAAoB,AAAR,MAAQ,YAAoB,AAAR,MAAQ,YAC7D,AAAV,OAAU,cACA,AAAV,OAAU,QAvKX,GAAmB,AAAA,OAAP,MAAO,WAAW,WAAW,UACzC,GAAK;UAAA;AAWX,sBAAmB,IAAQ,IAAA;AACzB,gBAAI,KAj8BN,SAAkB,IAAQ,IAAA;AACxB,qBAAiB,AAAV,MAAU,OAAV,SAA6B,GAAO;YAAA,EAg8BtB,IAAQ,EAAA;AAC7B,mBAvOF,SAAsB,IAAA;AACpB,qBAAA,CAAA,EAAK,GAAS,EAAA,KAyYE,MAzYiB,IA0YxB,KAAe,KAAc,QAvYvB,IAAW,EAAA,KAAU,EAAa,EAAA,IAAU,KAAa,IACzD,KAAK,GAAS,EAAA,CAAA;AAqY/B,kBAAkB;YAAA,EAnKI,EAAA,IAAS,KAAA;UAAQ;AA7tBvC,aAAK,UAAU,QAnEf,WAAA;AACE,iBAAK,WAAW,KAAe,GAAa,IAAA,IAAQ,CAAA;UAAA,GAmEtD,GAAK,UAAkB,SAtDvB,SAAoB,IAAA;AAClB,mBAAO,KAAK,IAAI,EAAA,KAAA,OAAe,KAAK,SAAS;UAAA,GAsD/C,GAAK,UAAU,MA1Cf,SAAiB,IAAA;AACf,gBAAI,KAAO,KAAK;AAChB,gBAAI,IAAc;AAChB,kBAAI,KAAS,GAAK;AAClB,qBAAO,OAAW,KAAA,SAA6B;YAAA;AAEjD,mBAAO,GAAe,KAAK,IAAM,EAAA,IAAO,GAAK,MAAA;UAAO,GAqCtD,GAAK,UAAU,MAzBf,SAAiB,IAAA;AACf,gBAAI,KAAO,KAAK;AAChB,mBAAO,KAAA,AAAe,GAAK,QAApB,SAAyC,GAAe,KAAK,IAAM,EAAA;UAAA,GAwB5E,GAAK,UAAU,MAXf,SAAiB,IAAK,IAAA;AAGpB,mBAFW,KAAK,SACX,MAAQ,MAAA,AAAgB,OAAhB,SAAuC,KAAiB,IAC9D;UAAA,GAoHT,GAAU,UAAU,QAjFpB,WAAA;AACE,iBAAK,WAAW,CAAA;UAAA,GAiFlB,GAAU,UAAkB,SArE5B,SAAyB,IAAA;AACvB,gBAAI,KAAO,KAAK,UACZ,KAAQ,GAAa,IAAM,EAAA;AAE/B,mBAAA,CAAI,MAAQ,KAIR,OADY,GAAK,SAAS,IAE5B,GAAK,IAAA,IAEL,GAAO,KAAK,IAAM,IAAO,CAAA,GAEpB;UAAA,GAyDT,GAAU,UAAU,MA7CpB,SAAsB,IAAA;AACpB,gBAAI,KAAO,KAAK,UACZ,KAAQ,GAAa,IAAM,EAAA;AAE/B,mBAAO,KAAQ,IAAA,SAAgB,GAAK,IAAO;UAAA,GA0C7C,GAAU,UAAU,MA9BpB,SAAsB,IAAA;AACpB,mBAAO,GAAa,KAAK,UAAU,EAAA,IAAA;UAAQ,GA8B7C,GAAU,UAAU,MAjBpB,SAAsB,IAAK,IAAA;AACzB,gBAAI,KAAO,KAAK,UACZ,KAAQ,GAAa,IAAM,EAAA;AAO/B,mBALI,KAAQ,IACV,GAAK,KAAK,CAAC,IAAK,EAAA,CAAA,IAEhB,GAAK,IAAO,KAAK,IAEZ;UAAA,GAkGT,GAAS,UAAU,QA/DnB,WAAA;AACE,iBAAK,WAAW,EACd,MAAQ,IAAI,MACZ,KAAO,IAAK,OAAO,OACnB,QAAU,IAAI,KAAA;UAAA,GA4DlB,GAAS,UAAkB,SA/C3B,SAAwB,IAAA;AACtB,mBAAO,GAAW,MAAM,EAAA,EAAa,OAAE,EAAA;UAAA,GA+CzC,GAAS,UAAU,MAnCnB,SAAqB,IAAA;AACnB,mBAAO,GAAW,MAAM,EAAA,EAAK,IAAI,EAAA;UAAA,GAmCnC,GAAS,UAAU,MAvBnB,SAAqB,IAAA;AACnB,mBAAO,GAAW,MAAM,EAAA,EAAK,IAAI,EAAA;UAAA,GAuBnC,GAAS,UAAU,MAVnB,SAAqB,IAAK,IAAA;AAExB,mBADA,GAAW,MAAM,EAAA,EAAK,IAAI,IAAK,EAAA,GACxB;UAAA,GAgGT,GAAM,UAAU,QApEhB,WAAA;AACE,iBAAK,WAAW,IAAI;UAAA,GAoEtB,GAAM,UAAkB,SAxDxB,SAAqB,IAAA;AACnB,mBAAO,KAAK,SAAiB,OAAE,EAAA;UAAA,GAwDjC,GAAM,UAAU,MA5ChB,SAAkB,IAAA;AAChB,mBAAO,KAAK,SAAS,IAAI,EAAA;UAAA,GA4C3B,GAAM,UAAU,MAhChB,SAAkB,IAAA;AAChB,mBAAO,KAAK,SAAS,IAAI,EAAA;UAAA,GAgC3B,GAAM,UAAU,MAnBhB,SAAkB,IAAK,IAAA;AACrB,gBAAI,KAAQ,KAAK;AACjB,gBAAI,cAAiB,IAAW;AAC9B,kBAAI,KAAQ,GAAM;AAClB,kBAAA,CAAK,MAAQ,GAAM,SAAS;AAE1B,uBADA,GAAM,KAAK,CAAC,IAAK,EAAA,CAAA,GACV;AAET,mBAAQ,KAAK,WAAW,IAAI,GAAS,EAAA;YAAA;AAGvC,mBADA,GAAM,IAAI,IAAK,EAAA,GACR;UAAA;AAicT,cAAI,KAAa,KAAmB,EAAQ,IAAkB,MAAA,IAyhB9D,WAAA;AACE,mBAAO,CAAA;UAAA,GAjhBL,KAtQJ,SAAoB,IAAA;AAClB,mBAAO,GAAe,KAAK,EAAA;UAAA;AAyX7B,sBAAiB,IAAO,IAAA;AAEtB,mBAAA,CAAA,CADA,MAAmB,AAAV,MAAU,OAAO,KAAmB,OAE1B,CAAA,OAAT,MAAS,YAAY,GAAS,KAAK,EAAA,MAC1C,KAAA,MAAc,KAAQ,KAAK,KAAK,KAAQ;UAAA;AAmC7C,sBAAqB,IAAA;AACnB,gBAAI,KAAO,MAAS,GAAM;AAG1B,mBAAO,OAFqB,CAAA,OAAR,MAAQ,cAAc,GAAK,aAAc;UAAA;AAY/D,sBAAkB,IAAA;AAChB,gBAAY,AAAR,MAAQ,MAAM;AAChB,kBAAA;AACE,uBAAO,EAAa,KAAK,EAAA;cAAA,SAClB,IAAP;cAAO;AACT,kBAAA;AACE,uBAAQ,KAAO;cAAA,SACR,IAAP;cAAO;YAAA;AAEX,mBAAO;UAAA;AAyDT,sBAAY,IAAO,IAAA;AACjB,mBAAO,OAAU,MAAU,MAAU,MAAS,MAAU;UAAA;AAAA,UAxOrD,OAAY,GAAO,IAAI,GAAS,IAAI,YAAY,CAAA,CAAA,CAAA,KAAQ,MACxD,MAAO,GAAO,IAAI,IAAA,KAAQ,MAC1B,MAAW,GAAO,GAAQ,QAAA,CAAA,KAAc,MACxC,MAAO,GAAO,IAAI,IAAA,KAAQ,MAC1B,MAAW,GAAO,IAAI,IAAA,KAAY,OACrC,MAAS,SAAS,IAAA;AAChB,gBAAI,KAAS,GAAe,KAAK,EAAA,GAC7B,KAAO,MAAU,KAAY,GAAM,cAAA,QACnC,KAAa,KAAO,GAAS,EAAA,IAAA;AAEjC,gBAAI;AACF,sBAAQ;qBACD;AAAoB,yBAAO;qBAC3B;AAAe,yBAAO;qBACtB;AAAmB,yBAAO;qBAC1B;AAAe,yBAAO;qBACtB;AAAmB,yBAAO;;AAGnC,mBAAO;UAAA;AAuQX,cAAI,KAAU,MAAM;AA2BpB,sBAAqB,IAAA;AACnB,mBAAgB,AAAT,MAAS,QAqGlB,SAAkB,IAAA;AAChB,qBAAuB,AAAA,OAAT,MAAS,YACrB,KAAA,MAAc,KAAQ,KAAK,KAAK,MAAS;YAAA,EAvGV,GAAM,MAAA,KAAA,CAAY,GAAW,EAAA;UAAA;AAiDhE,cAAI,KAAW,MAsLf,WAAA;AACE,mBAAA;UAAO;AApKT,sBAAoB,IAAA;AAGlB,gBAAI,KAAM,GAAS,EAAA,IAAS,GAAe,KAAK,EAAA,IAAS;AACzD,mBAAO,MAAO,MAAW,MAAO;UAAA;AA2DlC,sBAAkB,IAAA;AAChB,gBAAI,KAAA,OAAc;AAClB,mBAAA,CAAA,CAAS,MAAkB,CAAR,MAAQ,YAAoB,AAAR,MAAQ;UAAR;AA2DzC,sBAAc,IAAA;AACZ,mBAAO,GAAY,EAAA,IAn7BrB,SAAuB,IAAO,IAAA;AAG5B,kBAAI,KAAU,GAAQ,EAAA,KAsrBxB,SAAqB,IAAA;AAEnB,uBAmFF,SAA2B,IAAA;AACzB,yBAmIF,SAAsB,IAAA;AACpB,2BAAA,CAAA,CAAS,MAAyB,AAAA,OAAT,MAAS;kBAAT,EApIL,EAAA,KAAU,GAAY,EAAA;gBAAA,EApFjB,EAAA,KAAU,GAAe,KAAK,IAAO,QAAA,KAAA,EAC1D,GAAqB,KAAK,IAAO,QAAA,KAAa,GAAe,KAAK,EAAA,KAAU;cAAA,EAzrBpC,EAAA,IAljB9C,SAAmB,IAAG,IAAA;AAIpB,yBAHI,KAAA,IACA,KAAS,MAAM,EAAA,GAAA,EAEV,KAAQ;AACf,qBAAO,MAAS,GAAS,EAAA;AAE3B,uBAAO;cAAA,EA4iBO,GAAM,QAAQ,MAAA,IACxB,CAAA,GAEA,KAAS,GAAO,QAChB,KAAA,CAAA,CAAgB;AAEpB,uBAAS,MAAO;AAAA,iBACT,MAAA,CAAa,GAAe,KAAK,IAAO,EAAA,KACvC,MAAuB,CAAP,MAAO,YAAY,GAAQ,IAAK,EAAA,MACpD,GAAO,KAAK,EAAA;AAGhB,qBAAO;YAAA,EAm6BoC,EAAA,IAtuB7C,SAAkB,IAAA;AAChB,kBAAA,CAAK,GAAY,EAAA;AACf,uBAAO,GAAW,EAAA;AAEpB,kBAAI,KAAS,CAAA;AACb,uBAAS,MAAO,OAAO,EAAA;AACjB,mBAAe,KAAK,IAAQ,EAAA,KAAe,AAAP,MAAO,iBAC7C,GAAO,KAAK,EAAA;AAGhB,qBAAO;YAAA,EA4tBuD,EAAA;UAAA;AA0ChE,aAAO,UA9VP,SAAmB,IAAA;AACjB,mBAAO,GAAU,IAAA,MAAO,IAAM;UAAA;QAAA,GAAA,IAAA,SAAA,IAAA;AC/2ChC,cAAI,KAAW,SAAU,IAAA;AACvB;AAEA,gBAEI,IAFA,KAAK,OAAO,WACZ,KAAS,GAAG,gBAEZ,KAA4B,AAAA,OAAX,UAAW,aAAa,SAAS,CAAA,GAClD,KAAiB,GAAQ,YAAY,cACrC,KAAsB,GAAQ,iBAAiB,mBAC/C,KAAoB,GAAQ,eAAe;AAE/C,wBAAgB,IAAK,IAAK,IAAA;AAOxB,qBANA,OAAO,eAAe,IAAK,IAAK,EAC9B,OAAO,IACP,YAAA,MACA,cAAA,MACA,UAAA,KAAU,CAAA,GAEL,GAAI;YAAA;AAEb,gBAAA;AAEE,iBAAO,CAAA,GAAI,EAAA;YAAA,SACJ,IAAP;AACA,mBAAS,SAAS,IAAK,IAAK,IAAA;AAC1B,uBAAO,GAAI,MAAO;cAAA;YAAA;AAItB,wBAAc,IAAS,IAAS,IAAM,IAAA;AAEpC,kBAAI,KAAiB,MAAW,GAAQ,qBAAqB,KAAY,KAAU,IAC/E,KAAY,OAAO,OAAO,GAAe,SAAA,GACzC,KAAU,IAAI,GAAQ,MAAe,CAAA,CAAA;AAMzC,qBAFA,GAAU,UAuMZ,SAA0B,IAAS,IAAM,IAAA;AACvC,oBAAI,KAAQ;AAEZ,uBAAO,SAAgB,IAAQ,IAAA;AAC7B,sBAAI,OAAU;AACZ,0BAAM,IAAI,MAAM,8BAAA;AAGlB,sBAAI,OAAU,IAAmB;AAC/B,wBAAe,AAAX,OAAW;AACb,4BAAM;AAKR,2BAAO,GAAA;kBAAA;AAMT,uBAHA,GAAQ,SAAS,IACjB,GAAQ,MAAM,QAED;AACX,wBAAI,KAAW,GAAQ;AACvB,wBAAI,IAAU;AACZ,0BAAI,KAAiB,GAAoB,IAAU,EAAA;AACnD,0BAAI,IAAgB;AAClB,4BAAI,OAAmB;AAAkB;AACzC,+BAAO;sBAAA;oBAAA;AAIX,wBAAuB,AAAnB,GAAQ,WAAW;AAGrB,yBAAQ,OAAO,GAAQ,QAAQ,GAAQ;6BAEX,AAAnB,GAAQ,WAAW,SAAS;AACrC,0BAAI,OAAU;AAEZ,8BADA,KAAQ,IACF,GAAQ;AAGhB,yBAAQ,kBAAkB,GAAQ,GAAA;oBAAA;AAEN,sBAAnB,GAAQ,WAAW,YAC5B,GAAQ,OAAO,UAAU,GAAQ,GAAA;AAGnC,yBAAQ;AAER,wBAAI,KAAS,GAAS,IAAS,IAAM,EAAA;AACrC,wBAAoB,AAAhB,GAAO,SAAS,UAAU;AAO5B,0BAJA,KAAQ,GAAQ,OACZ,KACA,IAEA,GAAO,QAAQ;AACjB;AAGF,6BAAO,EACL,OAAO,GAAO,KACd,MAAM,GAAQ,KAAA;oBAAA;AAGS,oBAAhB,GAAO,SAAS,WACzB,MAAQ,IAGR,GAAQ,SAAS,SACjB,GAAQ,MAAM,GAAO;kBAAA;gBAAA;cAAA,EA/QU,IAAS,IAAM,EAAA,GAE7C;YAAA;AAcT,wBAAkB,IAAI,IAAK,IAAA;AACzB,kBAAA;AACE,uBAAO,EAAE,MAAM,UAAU,KAAK,GAAG,KAAK,IAAK,EAAA,EAAA;cAAA,SACpC,IAAP;AACA,uBAAO,EAAE,MAAM,SAAS,KAAK,GAAA;cAAA;YAAA;AAhBjC,eAAQ,OAAO;AAoBf,gBAAI,KAAyB,kBACzB,KAAyB,kBACzB,KAAoB,aACpB,KAAoB,aAIpB,KAAmB,CAAA;AAMvB,0BAAS;YAAA;AACT,0BAAS;YAAA;AACT,0BAAS;YAAA;AAIT,gBAAI,KAAoB,CAAA;AACxB,eAAO,IAAmB,IAAgB,WAAA;AACxC,qBAAO;YAAA,CAAA;AAGT,gBAAI,KAAW,OAAO,gBAClB,KAA0B,MAAY,GAAS,GAAS,GAAO,CAAA,CAAA,CAAA,CAAA;AAC/D,kBACA,OAA4B,MAC5B,GAAO,KAAK,IAAyB,EAAA,KAGvC,MAAoB;AAGtB,gBAAI,KAAK,GAA2B,YAClC,GAAU,YAAY,OAAO,OAAO,EAAA;AAYtC,wBAA+B,IAAA;AAC7B,eAAC,QAAQ,SAAS,QAAA,EAAU,QAAQ,SAAS,IAAA;AAC3C,mBAAO,IAAW,IAAQ,SAAS,IAAA;AACjC,yBAAO,KAAK,QAAQ,IAAQ,EAAA;gBAAA,CAAA;cAAA,CAAA;YAAA;AAkClC,wBAAuB,IAAW,IAAA;AAChC,0BAAgB,IAAQ,IAAK,IAAS,IAAA;AACpC,oBAAI,KAAS,GAAS,GAAU,KAAS,IAAW,EAAA;AACpD,oBAAoB,AAAhB,GAAO,SAAS,SAEb;AACL,sBAAI,KAAS,GAAO,KAChB,KAAQ,GAAO;AACnB,yBAAI,MACiB,AAAA,OAAV,MAAU,YACjB,GAAO,KAAK,IAAO,SAAA,IACd,GAAY,QAAQ,GAAM,OAAA,EAAS,KAAK,SAAS,IAAA;AACtD,uBAAO,QAAQ,IAAO,IAAS,EAAA;kBAAA,GAC9B,SAAS,IAAA;AACV,uBAAO,SAAS,IAAK,IAAS,EAAA;kBAAA,CAAA,IAI3B,GAAY,QAAQ,EAAA,EAAO,KAAK,SAAS,IAAA;AAI9C,uBAAO,QAAQ,IACf,GAAQ,EAAA;kBAAA,GACP,SAAS,IAAA;AAGV,2BAAO,GAAO,SAAS,IAAO,IAAS,EAAA;kBAAA,CAAA;gBAAA;AAvBzC,mBAAO,GAAO,GAAA;cAAA;AA4BlB,kBAAI;AAgCJ,mBAAK,UA9BL,SAAiB,IAAQ,IAAA;AACvB,8BAAS;AACP,yBAAO,IAAI,GAAY,SAAS,IAAS,IAAA;AACvC,uBAAO,IAAQ,IAAK,IAAS,EAAA;kBAAA,CAAA;gBAAA;AAIjC,uBAAO,KAaL,KAAkB,GAAgB,KAChC,IAGA,EAAA,IACE,GAAA;cAAA;YAAA;AAkHV,wBAA6B,IAAU,IAAA;AACrC,kBAAI,KAAS,GAAS,SAAS,GAAQ;AACvC,kBAAI,OAAW,IAAW;AAKxB,oBAFA,GAAQ,WAAW,MAEI,AAAnB,GAAQ,WAAW,SAAS;AAE9B,sBAAI,GAAS,SAAiB,UAG5B,IAAQ,SAAS,UACjB,GAAQ,MAAM,IACd,GAAoB,IAAU,EAAA,GAEP,AAAnB,GAAQ,WAAW;AAGrB,2BAAO;AAIX,qBAAQ,SAAS,SACjB,GAAQ,MAAM,IAAI,UAChB,gDAAA;gBAAA;AAGJ,uBAAO;cAAA;AAGT,kBAAI,KAAS,GAAS,IAAQ,GAAS,UAAU,GAAQ,GAAA;AAEzD,kBAAoB,AAAhB,GAAO,SAAS;AAIlB,uBAHA,GAAQ,SAAS,SACjB,GAAQ,MAAM,GAAO,KACrB,GAAQ,WAAW,MACZ;AAGT,kBAAI,KAAO,GAAO;AAElB,qBAAM,KAOF,GAAK,OAGP,IAAQ,GAAS,cAAc,GAAK,OAGpC,GAAQ,OAAO,GAAS,SAQD,AAAnB,GAAQ,WAAW,YACrB,IAAQ,SAAS,QACjB,GAAQ,MAAM,KAUlB,GAAQ,WAAW,MACZ,MANE,KA3BP,IAAQ,SAAS,SACjB,GAAQ,MAAM,IAAI,UAAU,kCAAA,GAC5B,GAAQ,WAAW,MACZ;YAAA;AAoDX,wBAAsB,IAAA;AACpB,kBAAI,KAAQ,EAAE,QAAQ,GAAK,GAAA;AAEvB,mBAAK,MACP,IAAM,WAAW,GAAK,KAGpB,KAAK,MACP,IAAM,aAAa,GAAK,IACxB,GAAM,WAAW,GAAK,KAGxB,KAAK,WAAW,KAAK,EAAA;YAAA;AAGvB,wBAAuB,IAAA;AACrB,kBAAI,KAAS,GAAM,cAAc,CAAA;AACjC,iBAAO,OAAO,UAAA,OACP,GAAO,KACd,GAAM,aAAa;YAAA;AAGrB,wBAAiB,IAAA;AAIf,mBAAK,aAAa,CAAC,EAAE,QAAQ,OAAA,CAAA,GAC7B,GAAY,QAAQ,IAAc,IAAA,GAClC,KAAK,MAAA,IAAM;YAAA;AA8Bb,wBAAgB,IAAA;AACd,kBAAI,IAAU;AACZ,oBAAI,KAAiB,GAAS;AAC9B,oBAAI;AACF,yBAAO,GAAe,KAAK,EAAA;AAG7B,oBAA6B,AAAA,OAAlB,GAAS,QAAS;AAC3B,yBAAO;AAGT,oBAAA,CAAK,MAAM,GAAS,MAAA,GAAS;AAC3B,sBAAI,KAAA,IAAQ,KAAO,cAAS;AAC1B,2BAAA,EAAS,KAAI,GAAS;AACpB,0BAAI,GAAO,KAAK,IAAU,EAAA;AAGxB,+BAFA,GAAK,QAAQ,GAAS,KACtB,GAAK,OAAA,OACE;AAOX,2BAHA,GAAK,QAAQ,IACb,GAAK,OAAA,MAEE;kBAAA;AAGT,yBAAO,GAAK,OAAO;gBAAA;cAAA;AAKvB,qBAAO,EAAE,MAAM,GAAA;YAAA;AAIjB,0BAAS;AACP,qBAAO,EAAE,OAAO,IAAW,MAAA,KAAM;YAAA;AA+MnC,mBA7mBA,GAAkB,YAAY,IAC9B,GAAO,IAAI,eAAe,EAAA,GAC1B,GAAO,IAA4B,eAAe,EAAA,GAClD,GAAkB,cAAc,GAC9B,IACA,IACA,mBAAA,GAaF,GAAQ,sBAAsB,SAAS,IAAA;AACrC,kBAAI,KAAyB,AAAA,OAAX,MAAW,cAAc,GAAO;AAClD,qBAAA,CAAA,CAAO,MACH,QAAS,MAG2B,AAAnC,IAAK,eAAe,GAAK,UAAU;YAAV,GAIhC,GAAQ,OAAO,SAAS,IAAA;AAQtB,qBAPI,OAAO,iBACT,OAAO,eAAe,IAAQ,EAAA,IAE9B,IAAO,YAAY,IACnB,GAAO,IAAQ,IAAmB,mBAAA,IAEpC,GAAO,YAAY,OAAO,OAAO,EAAA,GAC1B;YAAA,GAOT,GAAQ,QAAQ,SAAS,IAAA;AACvB,qBAAO,EAAE,SAAS,GAAA;YAAA,GAsEpB,GAAsB,GAAc,SAAA,GACpC,GAAO,GAAc,WAAW,IAAqB,WAAA;AACnD,qBAAO;YAAA,CAAA,GAET,GAAQ,gBAAgB,IAKxB,GAAQ,QAAQ,SAAS,IAAS,IAAS,IAAM,IAAa,IAAA;AAAA,cACxD,OADwD,UAChC,MAAc;AAE1C,kBAAI,KAAO,IAAI,GACb,GAAK,IAAS,IAAS,IAAM,EAAA,GAC7B,EAAA;AAGF,qBAAO,GAAQ,oBAAoB,EAAA,IAC/B,KACA,GAAK,KAAA,EAAO,KAAK,SAAS,IAAA;AACxB,uBAAO,GAAO,OAAO,GAAO,QAAQ,GAAK,KAAA;cAAA,CAAA;YAAA,GAuKjD,GAAsB,EAAA,GAEtB,GAAO,IAAI,IAAmB,WAAA,GAO9B,GAAO,IAAI,IAAgB,WAAA;AACzB,qBAAO;YAAA,CAAA,GAGT,GAAO,IAAI,YAAY,WAAA;AACrB,qBAAO;YAAA,CAAA,GAkCT,GAAQ,OAAO,SAAS,IAAA;AACtB,kBAAI,KAAO,CAAA;AACX,uBAAS,MAAO;AACd,mBAAK,KAAK,EAAA;AAMZ,qBAJA,GAAK,QAAA,GAIE,cAAS;AACd,uBAAO,GAAK,UAAQ;AAClB,sBAAI,KAAM,GAAK,IAAA;AACf,sBAAI,MAAO;AAGT,2BAFA,GAAK,QAAQ,IACb,GAAK,OAAA,OACE;gBAAA;AAQX,uBADA,GAAK,OAAA,MACE;cAAA;YAAA,GAsCX,GAAQ,SAAS,IAMjB,GAAQ,YAAY,EAClB,aAAa,IAEb,OAAO,SAAS,IAAA;AAcd,kBAbA,KAAK,OAAO,GACZ,KAAK,OAAO,GAGZ,KAAK,OAAO,KAAK,QAAQ,IACzB,KAAK,OAAA,OACL,KAAK,WAAW,MAEhB,KAAK,SAAS,QACd,KAAK,MAAM,IAEX,KAAK,WAAW,QAAQ,EAAA,GAAA,CAEnB;AACH,yBAAS,MAAQ;AAEQ,kBAAnB,GAAK,OAAO,CAAA,MAAO,OACnB,GAAO,KAAK,MAAM,EAAA,KAAA,CACjB,MAAA,CAAO,GAAK,MAAM,CAAA,CAAA,KACrB,MAAK,MAAQ;YAAA,GAMrB,MAAM,WAAA;AACJ,mBAAK,OAAA;AAEL,kBACI,KADY,KAAK,WAAW,GACL;AAC3B,kBAAwB,AAApB,GAAW,SAAS;AACtB,sBAAM,GAAW;AAGnB,qBAAO,KAAK;YAAA,GAGd,mBAAmB,SAAS,IAAA;AAC1B,kBAAI,KAAK;AACP,sBAAM;AAGR,kBAAI,KAAU;AACd,0BAAgB,IAAK,IAAA;AAYnB,uBAXA,GAAO,OAAO,SACd,GAAO,MAAM,IACb,GAAQ,OAAO,IAEX,MAGF,IAAQ,SAAS,QACjB,GAAQ,MAAM,KAAA,CAAA,CAGN;cAAA;AAGZ,uBAAS,KAAI,KAAK,WAAW,SAAS,GAAG,MAAK,GAAA,EAAK,IAAG;AACpD,oBAAI,KAAQ,KAAK,WAAW,KACxB,KAAS,GAAM;AAEnB,oBAAqB,AAAjB,GAAM,WAAW;AAInB,yBAAO,GAAO,KAAA;AAGhB,oBAAI,GAAM,UAAU,KAAK,MAAM;AAC7B,sBAAI,KAAW,GAAO,KAAK,IAAO,UAAA,GAC9B,KAAa,GAAO,KAAK,IAAO,YAAA;AAEpC,sBAAI,MAAY,IAAY;AAC1B,wBAAI,KAAK,OAAO,GAAM;AACpB,6BAAO,GAAO,GAAM,UAAA,IAAU;AACzB,wBAAI,KAAK,OAAO,GAAM;AAC3B,6BAAO,GAAO,GAAM,UAAA;kBAAA,WAGb,IAAA;AACT,wBAAI,KAAK,OAAO,GAAM;AACpB,6BAAO,GAAO,GAAM,UAAA,IAAU;kBAAA,OAG3B;AAAA,wBAAA,CAAI;AAMT,4BAAM,IAAI,MAAM,wCAAA;AALhB,wBAAI,KAAK,OAAO,GAAM;AACpB,6BAAO,GAAO,GAAM,UAAA;kBAAA;gBAAA;cAAA;YAAA,GAU9B,QAAQ,SAAS,IAAM,IAAA;AACrB,uBAAS,KAAI,KAAK,WAAW,SAAS,GAAG,MAAK,GAAA,EAAK,IAAG;AACpD,oBAAI,KAAQ,KAAK,WAAW;AAC5B,oBAAI,GAAM,UAAU,KAAK,QACrB,GAAO,KAAK,IAAO,YAAA,KACnB,KAAK,OAAO,GAAM,YAAY;AAChC,sBAAI,KAAe;AACnB;gBAAA;cAAA;AAIA,oBACU,CAAT,OAAS,WACA,AAAT,OAAS,eACV,GAAa,UAAU,MACvB,MAAO,GAAa,cAGtB,MAAe;AAGjB,kBAAI,KAAS,KAAe,GAAa,aAAa,CAAA;AAItD,qBAHA,GAAO,OAAO,IACd,GAAO,MAAM,IAET,KACF,MAAK,SAAS,QACd,KAAK,OAAO,GAAa,YAClB,MAGF,KAAK,SAAS,EAAA;YAAA,GAGvB,UAAU,SAAS,IAAQ,IAAA;AACzB,kBAAoB,AAAhB,GAAO,SAAS;AAClB,sBAAM,GAAO;AAcf,qBAXoB,AAAhB,GAAO,SAAS,WACA,AAAhB,GAAO,SAAS,aAClB,KAAK,OAAO,GAAO,MACM,AAAhB,GAAO,SAAS,WACzB,MAAK,OAAO,KAAK,MAAM,GAAO,KAC9B,KAAK,SAAS,UACd,KAAK,OAAO,SACa,AAAhB,GAAO,SAAS,YAAY,MACrC,MAAK,OAAO,KAGP;YAAA,GAGT,QAAQ,SAAS,IAAA;AACf,uBAAS,KAAI,KAAK,WAAW,SAAS,GAAG,MAAK,GAAA,EAAK,IAAG;AACpD,oBAAI,KAAQ,KAAK,WAAW;AAC5B,oBAAI,GAAM,eAAe;AAGvB,yBAFA,KAAK,SAAS,GAAM,YAAY,GAAM,QAAA,GACtC,GAAc,EAAA,GACP;cAAA;YAAA,GAKb,OAAS,SAAS,IAAA;AAChB,uBAAS,KAAI,KAAK,WAAW,SAAS,GAAG,MAAK,GAAA,EAAK,IAAG;AACpD,oBAAI,KAAQ,KAAK,WAAW;AAC5B,oBAAI,GAAM,WAAW,IAAQ;AAC3B,sBAAI,KAAS,GAAM;AACnB,sBAAoB,AAAhB,GAAO,SAAS,SAAS;AAC3B,wBAAI,KAAS,GAAO;AACpB,uBAAc,EAAA;kBAAA;AAEhB,yBAAO;gBAAA;cAAA;AAMX,oBAAM,IAAI,MAAM,uBAAA;YAAA,GAGlB,eAAe,SAAS,IAAU,IAAY,IAAA;AAa5C,qBAZA,KAAK,WAAW,EACd,UAAU,GAAO,EAAA,GACjB,YAAY,IACZ,SAAS,GAAA,GAGS,AAAhB,KAAK,WAAW,UAGlB,MAAK,MAAM,KAGN;YAAA,EAAA,GAQJ;UAAA,EAOsB,GAAO,OAAA;AAGtC,cAAA;AACE,iCAAqB;UAAA,SACd,IAAP;AAW0B,YAAA,OAAf,cAAe,WACxB,WAAW,qBAAqB,KAEhC,SAAS,KAAK,wBAAA,EAA0B,EAAA;UAAA;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;AC/uB5C,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,IAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,GAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,IAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,GAAA,KAAA,SAAA,IAAA;AAAA;ACAjB,aAAO,UAAU;QAAA,EAAA,GCCb,IAA2B,CAAA;AAG/B,mBAA6B,IAAA;AAE5B,cAAI,KAAe,EAAyB;AAC5C,cAAA,AAAI,OAAJ;AACC,mBAAO,GAAa;AAGrB,cAAI,KAAS,EAAyB,MAAY,EACjD,IAAI,IACJ,QAAA,OACA,SAAS,CAAA,EAAA;AAUV,iBANA,EAAoB,IAAU,IAAQ,GAAO,SAAS,CAAA,GAGtD,GAAO,SAAA,MAGA,GAAO;QAAA;ACvBf,UAAoB,IAAI,SAAS,IAAA;AAChC,cAAI,KAAS,MAAU,GAAO,aAC7B,WAAA;AAAa,mBAAO,GAAgB;UAAA,IACpC,WAAA;AAAa,mBAAO;UAAA;AAErB,iBADA,EAAoB,EAAE,IAAQ,EAAE,GAAG,GAAA,CAAA,GAC5B;QAAA,GCLR,EAAoB,IAAI,SAAS,IAAS,IAAA;AACzC,mBAAQ,MAAO;AACX,cAAoB,EAAE,IAAY,EAAA,KAAA,CAAS,EAAoB,EAAE,IAAS,EAAA,KAC5E,OAAO,eAAe,IAAS,IAAK,EAAE,YAAA,MAAkB,KAAK,GAAW,IAAA,CAAA;QAAA,GCJ3E,EAAoB,IAAI,WAAA;AACvB,cAA0B,AAAA,OAAf,cAAe;AAAU,mBAAO;AAC3C,cAAA;AACC,mBAAO,QAAQ,IAAI,SAAS,aAAA,EAAb;UAAA,SACP,IAAP;AACD,gBAAsB,AAAA,OAAX,UAAW;AAAU,qBAAO;UAAA;QAAA,EALjB,GCAxB,EAAoB,IAAI,SAAS,IAAK,IAAA;AAAQ,iBAAO,OAAO,UAAU,eAAe,KAAK,IAAK,EAAA;QAAA,GCC/F,EAAoB,IAAI,SAAS,IAAA;AACX,UAAA,OAAX,UAAW,eAAe,OAAO,eAC1C,OAAO,eAAe,IAAS,OAAO,aAAa,EAAE,OAAO,SAAA,CAAA,GAE7D,OAAO,eAAe,IAAS,cAAc,EAAE,OAAA,KAAO,CAAA;QAAA,GCLvD,EAAoB,MAAM,SAAS,IAAA;AAGlC,iBAFA,GAAO,QAAQ,CAAA,GACV,GAAO,YAAU,IAAO,WAAW,CAAA,IACjC;QAAA;AAAA,YAAA,IAAA,CAAA;AAAA,eAAA,WAAA;AAAA;AAAA,YAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,QAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,OAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,aAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,iBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,UAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,eAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,UAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,gBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,uBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,OAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,aAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,wBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,qBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,0BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,aAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,2BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,MAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,0BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,UAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,qBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,gBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,4BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,wBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,cAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,WAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,cAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,6BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,YAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,6BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sBAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,uBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,eAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,wBAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,aAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,KAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,gBAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,gBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,eAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,eAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,iBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,kBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,oBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,WAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,qBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,4BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,2BAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA;AAAA,cCAH,IAAA,KAAA,CAAA;AAAA,YAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,wCAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,0BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,wBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,mBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,WAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,cAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,6BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sCAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,uBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,yCAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,sCAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,cAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,uBAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,2BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,SAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,YAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,QAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,0BAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,cAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,QAAA,WAAA;AAAA,mBAAA;UAAA,GAAA,aAAA,WAAA;AAAA,mBAAA;UAAA,EAAA,CAAA,GAAA,SAAA,IAAA;AAAA,eAAA,sBAAA,uBAAA,GAAA,mBAAA,oBAAA,GAAA,kBAAA,+BAAA,GAAA,eAAA,4BAAA,GAAA,mBAAA,gCAAA,GAAA,kBAAA,+BAAA,GAAA,iBAAA,8BAAA,GAAA,wBAAA,qCAAA,GAAA,eAAA,4BAAA,GAAA,oBAAA,iCAAA,GAAA,gBAAA,6BAAA,GAAA,uBAAA,oCAAA,GAAA,0BAAA,uCAAA,GAAA,4BAAA,yCAAA,GAAA,4BAAA,yCAAA,GAAA,8BAAA,2CAAA,GAAA,kBAAA,+BAAA,GAAA,2BAAA,wCAAA,GAAA,sBAAA;UAAA,EAAA,MAAA,MAAA,CAAA,EAAA;AA+IL,cC/IK,ID+IL,KAAA;AAAA,WAAA,SC/IK,IAAA;AAAA,eAAA,cAAA,eAAA,GAAA,YAAA,aAAA,GAAA,WAAA;UAAA,EAAA,MAAA,MAAA,CAAA,EAAA;AASL,cCRK,IDQL,KAAA;AAAA,WAAA,SCRK,IAAA;AAAA,eAAA,QAAA,SAAA,GAAA,eAAA,gBAAA,GAAA,cAAA;UAAA,EAAA,MAAA,MAAA,CAAA,EAAA;AAeL,cChBK,IDgBL,KAAA;AAAA,WAAA,SChBK,IAAA;AAAA,eAAA,GAAA,UAAA,KAAA,WAAA,GAAA,GAAA,SAAA,KAAA,UAAA,GAAA,GAAA,cAAA,KAAA;UAAA,EAAA,MAAA,MAAA,CAAA,EAAA;AASL,cCDK,IDCL,KAAA,IAAA,KAAA,EAAA,GAAA,GCVQ,KAAA,EAAA,EAAA,EAAA,EAAc,EAAA;AAAA,WAAA,SASjB,IAAA;AAAA,eAAA,GAAA,YAES,GAAU,aAAA,aAFnB,GAAA,GAAA,0BAIuB,GAAU,2BAAA,2BAJjC,GAAA,GAAA,0BAMuB,GAAU,2BAAA,2BANjC,GAAA,GAAA,0BAQuB,GAAU,2BAAA;UAAA,EARjC,MAAA,MAAA,CAAA,EAAA;AAWL,cAAA,KAAA,ICaM,KAA2C,EAC/C,OAAO,EACL,aAAqB,CAAC,GAAG,GAAA,EAAI,GAC7B,QAAgB,CAAC,GAAA,IAAO,CAAA,EAAA,GAE1B,UAAU,EACR,aAAqB,CAAC,GAAG,GAAG,CAAA,GAC5B,QAAgB,CAAC,GAAG,GAAG,CAAA,EAAA,GAEzB,SAAS,EACP,aAAqB,CAAC,GAAG,GAAG,CAAA,GAC5B,QAAgB,CAAC,GAAG,GAAG,CAAA,EAAA,EAAA;AAI3B,iBAAO,OAAO,EAAA;AAEd,cAAA,KAAA;ACpDA,sBAA4B,IAAK,IAAS,IAAQ,IAAO,IAAQ,IAAK,IAAA;AACpE,gBAAA;AACE,kBAAI,KAAO,GAAI,IAAK,EAAA,GAChB,KAAQ,GAAK;YAAA,SACV,IAAP;AAEA,qBAAA,KADA,GAAO,EAAA;YAAA;AAIL,eAAK,OACP,GAAQ,EAAA,IAER,QAAQ,QAAQ,EAAA,EAAO,KAAK,IAAO,EAAA;UAAA;AAIxB,sBAA2B,IAAA;AACxC,mBAAO,WAAA;AACL,kBAAI,KAAO,MACP,KAAO;AACX,qBAAO,IAAI,QAAQ,SAAU,IAAS,IAAA;AACpC,oBAAI,KAAM,GAAG,MAAM,IAAM,EAAA;AAEzB,4BAAe,IAAA;AACb,qBAAmB,IAAK,IAAS,IAAQ,IAAO,IAAQ,QAAQ,EAAA;gBAAA;AAGlE,4BAAgB,IAAA;AACd,qBAAmB,IAAK,IAAS,IAAQ,IAAO,IAAQ,SAAS,EAAA;gBAAA;AAGnE,mBAAA,MAAM;cAAA,CAAA;YAAA;UAAA;AAAA,cAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA;AC/BZ,sBAA2B,IAAQ,IAAA;AACjC,qBAAS,KAAI,GAAG,KAAI,GAAM,QAAQ,MAAK;AACrC,kBAAI,KAAa,GAAM;AACvB,iBAAW,aAAa,GAAW,cAAA,OACnC,GAAW,eAAA,MACP,WAAW,MAAY,IAAW,WAAA,OACtC,OAAO,eAAe,IAAQ,GAAW,KAAK,EAAA;YAAA;UAAA;AAInC,sBAAsB,IAAa,IAAY,IAAA;AAM5D,mBALI,MAAY,GAAkB,GAAY,WAAW,EAAA,GACrD,MAAa,GAAkB,IAAa,EAAA,GAChD,OAAO,eAAe,IAAa,aAAa,EAC9C,UAAA,MAAU,CAAA,GAEL;UAAA;AChBM,sBAAyB,IAAU,IAAA;AAChD,gBAAA,CAAM,eAAoB;AACxB,oBAAM,IAAI,UAAU,mCAAA;UAAA;ACFT,sBAAyB,IAAK,IAAK,IAAA;AAYhD,mBAXI,MAAO,KACT,OAAO,eAAe,IAAK,IAAK,EAC9B,OAAO,IACP,YAAA,MACA,cAAA,MACA,UAAA,KAAU,CAAA,IAGZ,GAAI,MAAO,IAGN;UAAA;AAAA,cAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA;ACAT,qBAAmC,IAAW,IAAA;AAC5C,eAAM,eAAe,KAAK,2BAAA;AAE1B,gBAAM,KAAiC,GAAU;AAEjD,eAAU,4BAA4B,SACpC,IACA,IACA,IACA,IACA,IACA,IAAA;AAEA,iBAAM,gBAAgB,IACtB,GAAM,gBAAgB,IAEtB,GACE,IACA,IACA,IACA,IACA,IACA,EAAA;YAAA,GAUJ,GAAU,kBAAkB,SAAC,IAAA;AAC3B,kBAAQ,KAAkB,GAAlB;AAER,kBAAK,GAAc,QAAnB;AAQA,oBAAI,IACA;AAEJ,oBAPA,GAAM,oBAAoB,gBAAgB,EAAA,GAC1C,GAAU,cAAA,GACV,GAAU,KAAA,GAKN,cAAgB;AAClB,uBAAgB,GAChB,KAAwB;yBACf,cAAgB;AACzB,uBAAgB,GAChB,KAAwB;qBACnB;AAAA,sBAAA,CAAI,eAAgB;AAIzB,0BAAM,IAAI,MAAJ,kCAAA;AAHN,uBAAgB,GAChB,KAAwB;gBAAA;AAK1B,yBAAS,KAAI,GAAG,KAAI,GAAc,QAAQ;AACpC,qBAAc,OAChB,GAAM,eAAe,IAAM,IAAG,IAAe,EAAA;AAYjD,uBAPA,GAAM,gBAAgB,CAAA,GAElB,GAAM,kBACR,GAAM,QAAQ,eAAe,GAAM,MAAA,GAGrC,GAAU,WAAA,GAAA;cACH;YAAA,GAaT,GAAM,iBAAiB,SACrB,IACA,IACA,IACA,IAAA;AAuCA,uBArCM,KAAS,GAAK,QAKd,KAAU,KAHI,IAAM,QAAQ,GAAM,SACC,GAAM,aAAa,KAGtD,KAAY,GAAM,QAAQ,GAAM,YAEhC,KAAK,GAAM,SAYX,KAAmB,GAAG,aAAa,GAAG,gBAAA,GACxC,KAAc,KAAK,MACpB,KAAgB,KAAoB,GAAM,KAAA,GAMvC,KAAsB,KAF5B,MAAc,KAAK,IAAI,IAAa,GAAM,MAAA,IAGpC,KAA6B,KAAsB,IAEnD,KAAe,KAAK,MAAM,GAAM,SAAS,EAAA,GAEzC,KAAkB,GAAM,SAAS,IACjC,KAA0B,KAAY,IAGnC,KAAQ,GAAG,KAAQ,IAAc,MAAS;AACjD,oBAAM,KAAU,KAAQ,IAGlB,KAAW,IAAI,GACnB,IACA,KAAU,KAAQ,IAClB,EAAA;AAGF,mBAAG,cACD,GAAM,QACN,GACA,GACA,IACA,IACA,GAAM,OACN,IACA,GACA,GAAM,QACN,GAAM,gBACN,EAAA;cAAA;AAMJ,kBAAwB,AAApB,OAAoB,GAAG;AACzB,oBAAM,KAAU,KAAe,IAGzB,KAAW,IAAI,GACnB,IACA,KAAU,KAAe,IACzB,EAAA;AAGF,mBAAG,cACD,GAAM,QACN,GACA,GACA,IACA,IACA,GAAM,OACN,IACA,GACA,GAAM,QACN,GAAM,gBACN,EAAA;cAAA;YAAA,GAKN,GAAU,uBAAuB,WAAA;AAC/B,qBAAO,EACL,OAAO,GAAM,OACb,QAAQ,GAAM,QACd,OAAO,GAAM,OACb,UAAU,GAAM,eAChB,UAAU,GAAM,cAAA;YAAA,GAQpB,GAAU,kBAAkB,SAAC,IAAA;AAC3B,iBAAM,cAAc,MAAA;YAAc;UAAA;AAUtC,cAAM,IAAiB,EACrB,eAAe,CAAA,EAAA;AAGV,qBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,GAAgB,EAAA,GAErC,GAAA,EAAA,OAAwB,IAAW,IAAO,EAAA,GAG1C,EAA0B,IAAW,EAAA;UAAA;AAKhC,cAOP,IAAA,EAAiB,aAPU,GAAA,EAAA,YACzB,GACA,2BAAA,GAK4B,QAAA,EAAA,GC3OjB,IAAb,GAyCE,YAAY,IAAA;AAAgB,eAAA,MAAA,EAAA,GAAA,GAAA,MAAA,YAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,aAAA,MAAA,GAAA,GAAA,MAAA,YAAA,MAAA,GAAA,GAAA,MAAA,UAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,eAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,aAAA,MAAA,GAAA,GAAA,MAAA,aAAA,MAAA,GAAA,GAAA,MAAA,oBAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,YAAA,MAAA,GAAA,GAAA,MAAA,sBAAA,MAAA,GAC1B,KAAK,WAAW,GAAM,UACtB,KAAK,WAAW,GAAM,UACtB,KAAK,aAAa,GAAM,YACxB,KAAK,UAAU,GAAM,SACrB,KAAK,SAAS,GAAM,QACpB,KAAK,YAAY,GAAM,WACvB,KAAK,YAAY,GAAM,WACvB,KAAK,aAAa,GAAM,YACxB,KAAK,cAAc,GAAM,aACzB,KAAK,mBAAmB,EAAA,YAAA,GACxB,KAAK,YACH,KAAK,WAAW,KAAK,KAAK,WAAW,KAAK,KAAK,WAAW,IAExD,GAAM,WACR,MAAK,UAAU,GAAM,UAGnB,GAAM,sBACR,MAAK,qBAAqB,GAAM;UAAA,CAAA,GC/DhC,IAAA,WAAA;AAGJ,0BAAA;AAAc,iBAAA,MAAA,EAAA,GAAA,GAAA,MAAA,aAAA,MAAA,GACZ,KAAK,YAAY,CAAA;YAAA;AAAA,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,SAAA,OAGnB,WAAA;AACE,mBAAK,YAAY,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,oBAAA,OAGnB,SAAwB,IAAM,IAAA;AACvB,mBAAK,UAAU,OAClB,MAAK,UAAU,MAAQ,CAAA,IAGzB,KAAK,UAAU,IAAM,KAAK,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,uBAAA,OAG5B,SAA2B,IAAM,IAAA;AAC/B,kBAAK,KAAK,UAAU;AAOpB,yBAHM,KAAQ,KAAK,UAAU,KACvB,KAAc,GAAM,QAEjB,KAAI,GAAG,KAAI,IAAa;AAC/B,sBAAI,GAAM,QAAO;AAGf,2BAAA,KAFA,GAAM,OAAO,IAAG,CAAA;;YAAA,EAAA,GAAA,EAAA,KAAA,iBAAA,OAOtB,SAAc,IAAA;AACZ,kBAAK,KAAK,UAAU,GAAM,OAA1B;AAQA,yBAHM,KAAQ,KAAK,UAAU,GAAM,MAAM,MAAA,GACnC,KAAc,GAAM,QAEjB,KAAI,GAAG,KAAI,IAAa;AAC/B,qBAAM,IAAG,KAAK,MAAM,EAAA;AAGtB,uBAAA,CAAQ,GAAM;cAAA;YAAA,EAAA,CAAA,CAAA,GAAA;UAAA,EAjDZ,GAsDN,IAFoB,IAAI;ACjCT,uBAAS;AAIb,gBAHT,KAGS,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAHS,GAClB,KAES,UAAA,SAAA,IAAA,UAAA,KAAA,QADT,KACS,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KADS;AAElB,gBAAA,CAAK;AACH,oBAAM,IAAI,MAAM,4BAAA;AAGlB,gBAAM,KAAQ,IAAI,YAAY,IAAM,EAClC,QAAA,IACA,YAAA,KAAY,CAAA;AAGd,mBAAO,GAAG,cAAc,EAAA;UAAA;AC9BX,qBAAsB,IAAA;AACnC,gBAAM,KAAa,GAAQ,QAAQ,GAAA;AACnC,mBAAO,GAAQ,UAAU,KAAa,CAAA;UAAA;AAAA,qBAAA,IAAA,IAAA;AAAA,gBAAA,KAAA,AAAA,OAAA,UAAA,eAAA,GAAA,OAAA,aAAA,GAAA;AAAA,gBAAA,CAAA,IAAA;AAAA,kBAAA,MAAA,QAAA,EAAA,KAAA,MAAA,SAAA,IAAA,IAAA;AAAA,oBAAA,IAAA;AAAA,sBAAA,AAAA,OAAA,MAAA;AAAA,2BAAA,EAAA,IAAA,EAAA;AAAA,sBAAA,KAAA,OAAA,UAAA,SAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA;AAAA,yBAAA,AAAA,OAAA,YAAA,GAAA,eAAA,MAAA,GAAA,YAAA,OAAA,AAAA,OAAA,SAAA,AAAA,OAAA,QAAA,MAAA,KAAA,EAAA,IAAA,AAAA,OAAA,eAAA,2CAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA;gBAAA;cAAA,EAAA,EAAA,MAAA,MAAA,MAAA,AAAA,OAAA,GAAA,UAAA,UAAA;AAAA,sBAAA,MAAA;AAAA,oBAAA,KAAA,GAAA,KAAA,WAAA;gBAAA;AAAA,uBAAA,EAAA,GAAA,IAAA,GAAA,WAAA;AAAA,yBAAA,MAAA,GAAA,SAAA,EAAA,MAAA,KAAA,IAAA,EAAA,MAAA,OAAA,OAAA,GAAA,MAAA;gBAAA,GAAA,GAAA,SAAA,IAAA;AAAA,wBAAA;gBAAA,GAAA,GAAA,GAAA;cAAA;AAAA,oBAAA,IAAA,UAAA,uIAAA;YAAA;AAAA,gBAAA,IAAA,KAAA,MAAA,KAAA;AAAA,mBAAA,EAAA,GAAA,WAAA;AAAA,mBAAA,GAAA,KAAA,EAAA;YAAA,GAAA,GAAA,WAAA;AAAA,kBAAA,KAAA,GAAA,KAAA;AAAA,qBAAA,KAAA,GAAA,MAAA;YAAA,GAAA,GAAA,SAAA,IAAA;AAAA,mBAAA,MAAA,KAAA;YAAA,GAAA,GAAA,WAAA;AAAA,kBAAA;AAAA,sBAAA,AAAA,GAAA,UAAA,QAAA,GAAA,OAAA;cAAA,UAAA;AAAA,oBAAA;AAAA,wBAAA;cAAA;YAAA,EAAA;UAAA;AAAA,qBAAA,IAAA,IAAA;AAAA,YAAA,CAAA,MAAA,QAAA,KAAA,GAAA,WAAA,MAAA,GAAA;AAAA,qBAAA,KAAA,GAAA,KAAA,IAAA,MAAA,EAAA,GAAA,KAAA,IAAA;AAAA,iBAAA,MAAA,GAAA;AAAA,mBAAA;UAAA;ACMxC,cAktBA,IADc,IAvqBR,YAAA;AAOJ,0BAAA;AAAc,kBAAA,KAAA;AAAA,iBAAA,MAAA,EAAA,GAAA,GAAA,MAAA,eAAA,MAAA,GAAA,GAAA,MAAA,gBAAA,MAAA,GAAA,GAAA,MAAA,mBAAA,MAAA,GAAA,GAAA,MAAA,oBAAA,MAAA,GAAA,GAAA,MAAA,iBAAA,MAAA,GAAA,GAAA,MAAA,mBAiBW,SAAC,IAAA;AACxB,oBAAA,CAAK,MAA8C,AAAA,OAApB,MAAoB,UAAU;AAC3D,sBAAM,KAAe,qBAAH,OAAwB,GAAK,eAA7B,4CAAA;AAClB,wBAAM,IAAI,MAAM,EAAA;gBAAA;AAGlB,mBAAK,gBAAgB;cAAA,CAAA,GAvBT,GAAA,MAAA,eAoCO,SAAC,IAAA;AAKpB,uBAJyB,GAAK,kBAAA,IACP,GAAK,kBAGJ;cAAA,CAAA,GAzCZ,GAAA,MAAA,mBAiDW,WAAA;AAAA,uBAAc,GAAK;cAAA,CAAA,GAjD9B,GAAA,MAAA,gBAwDQ,WAAA;AAAA,uBACpB,GAAK,kBAAkB,GAAK;cAAA,CAAA,GAzDhB,GAAA,MAAA,iBAyEU,SAAC,IAAA;AACvB,oBAAQ,KAAoB,GAAK,YAAY,IAAI,EAAA,EAAzC;AAGJ,mBAAgB,UAClB,GAAgB,OAAA,GAGd,GAAgB,WAClB,GAAgB,QAAA,GAGlB,GAAK,YAAY,OAAO,EAAA;cAAA,CAAA,GArFZ,GAAA,MAAA,kBA8FW,SAAC,IAAA;AACxB,oBACQ,KADa,GAAK,aAAa,IAAI,EAAA,EACnC;AAGJ,mBAAiB,UACnB,GAAiB,OAAA,GAGf,GAAiB,WACnB,GAAiB,QAAA,GAUnB,GAAK,aAAa,OAAO,EAAA;cAAA,CAAA,GAlHb,GAAA,MAAA,cAkIM,WAAA;AAIlB,yBAHM,KAAgB,GAAK,YAAY,KAAA,OAG1B;AACX,sBAAA,KAAiC,GAAc,KAAA,GAAhC,KAAf,GAAQ;AAER,sBAFA,GAAwB;AAGtB;AAGF,qBAAK,sBAAsB,EAAA,GAE3B,EAAa,GAAa,GAAA,2BAAkC,EAAE,SAAA,GAAA,CAAA;gBAAA;AAMhE,yBAHM,KAAiB,GAAK,aAAa,KAAA,OAG5B;AACX,sBAAA,KAAkC,GAAe,KAAA,GAAlC,KAAf,GAAQ;AAER,sBAFA,GAAyB;AAGvB;AAGF,qBAAK,uBAAuB,EAAA,GAE5B,EAAa,GAAa,GAAA,6BAAoC,EAC5D,UAAA,GAAA,CAAA;gBAAA;cAAA,CAAA,GA/JQ,GAAA,MAAA,uBAwiBe,SAAC,IAAA;AAC5B,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MAAM,qDAAA;AAElB,oBAAM,KAAe,GAAK,aAAa,IAAI,EAAA;AAE3C,oBAAA,AAAI,OAAJ;AAOA,yBAFA,GAAa,YAAY,KAAK,IAAA,GAEvB,GAAa;cAAA,CAAA,GArjBR,GAAA,MAAA,aA8jBK,SAAC,IAAA;AAClB,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MAAM,2CAAA;AAElB,oBAAM,KAAe,GAAK,aAAa,IAAI,EAAA;AAE3C,oBAAA,AAAI,OAAJ;AAOA,yBAFA,GAAa,YAAY,KAAK,IAAA,GAEvB,GAAa;cAAA,CAAA,GA3kBR,GAAA,MAAA,yBAulBiB,SAAC,IAAA;AAC9B,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MAAM,sDAAA;AAElB,oBAAM,KAAc,GAAK,YAAY,IAAI,EAAA;AAEzC,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MACR,8DAAA;AAIJ,mBAAK,yBAAA,CAA0B,GAAY,WAAA;AAE3C,oBAAM,KAAe,EACnB,SAAA,GAAA;AAGF,kBAAa,GAAa,GAAA,2BAAkC,EAAA,GAC5D,GAAK,cAAc,EAAA;cAAA,CAAA,GA1mBP,GAAA,MAAA,0BAsnBkB,SAAC,IAAA;AAC/B,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MAAM,wDAAA;AAElB,oBAAM,KAAe,GAAK,aAAa,IAAI,EAAA;AAE3C,oBAAA,AAAI,OAAJ;AACE,wBAAM,IAAI,MACR,iEAAA;AAIJ,mBAAK,0BAAA,CAA2B,GAAa,WAAA;AAE7C,oBAAM,KAAe,EACnB,QAAQ,IACR,UAAA,GAAA;AAGF,kBAAa,GAAa,GAAA,6BAAoC,EAAA,GAC9D,GAAK,eAAe,EAAA;cAAA,CAAA,GA1oBR,GAAA,MAAA,4BAkpBqB,SAAC,IAAA;AAClC,mBAAK,mBAAmB;cAAA,CAAA,GAnpBZ,GAAA,MAAA,6BA2pBsB,SAAC,IAAA;AACnC,mBAAK,oBAAoB;cAAA,CAAA,GA3pBzB,KAAK,cAAc,oBAAI,OACvB,KAAK,eAAe,oBAAI,OACxB,KAAK,kBAAkB,GACvB,KAAK,mBAAmB,GACxB,KAAK,gBAtDkB;YAAA;AAAA,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,qBAAA,OAgHzB,WAAA;AACE,qBAAO,KAAK,gBAAA,IAAoB,KAAK,aAAA;YAAA,EAAA,GAAA,EAAA,KAAA,yCAAA,OA2HvC,SACE,IACA,IAAA;AAEA,kBAAI,KAAiB,KAAK,kBAAA;AAG1B,kBAAI,MAAkB;AACpB,uBAAO;AAGT,kBAAI,KAAe,MAAM,KAAK,KAAK,YAAY,OAAA,CAAA;AAe/C,iBAAa,KAXb,SAAiB,IAAG,IAAA;AAClB,uBAAI,GAAE,YAAY,GAAE,YACX,IAEL,GAAE,YAAY,GAAE,YAAA,KAIb;cAAA,CAAA;AAIT,kBAAI,KAAiB,GAAa,IAAI,SAAC,IAAA;AAAD,uBAAQ,GAAG;cAAA,CAAA,GAE7C,KAAkB;AAIlB,oBACF,MAAkB,GAAe,OAC/B,SAAC,IAAA;AAAD,uBAAA,CAAS,GAAe,SAAS,EAAA;cAAA,CAAA;AAhCjB,kBAAA,IAAA,KAAA,EAsCE,EAAA;AAtCF,kBAAA;AAsCpB,qBAAA,GAAA,EAAA,GAAA,CAAA,MAAA,GAAA,EAAA,GAAA,QAAuC;AAAA,sBAA5B,KAA4B,GAAA;AAMrC,sBALA,KAAK,sBAAsB,EAAA,GAE3B,EAAa,GAAa,GAAA,2BAAkC,EAAE,SAAA,GAAA,CAAA,GAE9D,MAAiB,KAAK,kBAAA,MACA;AACpB,2BAAO;gBAAA;cAAA,SA7CS,IAAA;AAAA,mBAAA,EAAA,EAAA;cAAA,UAAA;AAAA,mBAAA,EAAA;cAAA;AAAA,kBAAA,IAAA,KAAA,EAmDpB,KADA,MAAe,MAAM,KAAK,KAAK,YAAY,OAAA,CAAA,GACb,IAAI,SAAC,IAAA;AAAD,uBAAQ,GAAG;cAAA,CAAA,CAAA;AAnDzB,kBAAA;AAuDpB,qBAAA,GAAA,EAAA,GAAA,CAAA,MAAA,GAAA,EAAA,GAAA,QAAsC;AAAA,sBAA3B,KAA2B,GAAA;AAMpC,sBALA,KAAK,sBAAsB,EAAA,GAE3B,EAAa,GAAa,GAAA,2BAAkC,EAAE,SAAA,GAAA,CAAA,GAE9D,MAAiB,KAAK,kBAAA,MACA;AACpB,2BAAO;gBAAA;cAAA,SA9DS,IAAA;AAAA,mBAAA,EAAA,EAAA;cAAA,UAAA;AAAA,mBAAA,EAAA;cAAA;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAwFtB,SACE,IACA,IAAA;AACc,kBAAA,KAAA;AACd,kBAAA,AAAI,OAAJ;AACE,sBAAM,IAAI,MAAM,mDAAA;AAGlB,kBAAA,AAAI,GAAgB,YAApB;AACE,sBAAM,IAAI,MACR,mEAAA;AAIJ,kBAAI,KAAK,YAAY,IAAI,EAAA;AACvB,sBAAM,IAAI,MAAM,8CAAA;AAGlB,kBACE,GAAgB,UACkB,AAAA,OAA3B,GAAgB,UAAW;AAElC,sBAAM,IAAI,MACR,+DAAA;AAIJ,kBAAM,KAA4B,EAChC,QAAA,OACA,SAAA,IACA,gBAAA,QACA,iBAAA,IACA,WAAW,KAAK,IAAA,GAChB,aAAa,EAAA;AAKf,qBAFA,KAAK,YAAY,IAAI,IAAS,EAAA,GAEvB,GAAgB,QACpB,KAAK,SAAC,IAAA;AACL,oBAAK,GAAK,YAAY,IAAI,EAAA,GAA1B;AAQA,sBAAA,AAAI,GAAM,gBAAV;AACE,0BAAM,IAAI,MACR,6DAAA;AAGJ,sBAAA,AAAI,GAAM,YAAY,YAAtB;AACE,0BAAM,IAAI,MACR,uDAAA;AAKJ,sBAAA,CAAK,GAAK,YAAY,GAAM,WAAA;AAC1B,0BAAM,IAAI,MAAM,GAAA,mBAAA;AAIlB,qBAAK,sCAAsC,GAAM,WAAA,GAEjD,GAAY,SAAA,MACZ,GAAY,QAAQ,IACpB,GAAY,cAAc,GAAM,aAChC,GAAK,yBAAyB,GAAY,WAAA;AAE1C,sBAAM,KAA2D,EAC/D,OAAO,GAAA;AAGT,oBAAa,GAAa,GAAA,yBAAgC,EAAA,GAE1D,GAAY,iBAAiB,GAAM;gBAAA;AApCjC,0BAAQ,KACN,kEAAA;cAAA,CAAA,EAqCL,MAAM,SAAC,IAAA;AAGN,sBADA,GAAK,YAAY,OAAO,EAAA,GAClB;cAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAUZ,SAA0B,IAAA;AACxB,kBAAA,AAAI,OAAJ;AACE,sBAAM,IAAI,MAAM,mDAAA;AAElB,kBAAM,KAAc,KAAK,YAAY,IAAI,EAAA;AAEzC,kBAAA,AAAI,OAAJ;AAOA,uBAFA,GAAY,YAAY,KAAK,IAAA,GAEtB,GAAY;YAAA,EAAA,GAAA,EAAA,KAAA,8BAAA,OAUrB,SAAkC,IAAA;AAOhC,uBAHM,KAAY,MAAM,KAAK,KAAK,aAAa,KAAA,CAAA,GACzC,KAAe,EAAa,EAAA,GAElC,KAAA,GAAA,KAAuB,IAAvB,KAAA,GAAA,QAAA,MAAkC;AAA7B,oBAAM,KAAQ,GAAA,KACX,KAAe,KAAK,aAAa,IAAI,EAAA;AAE3C,oBAAA,CAAK,GAAa;AAChB;AAGF,oBAAM,KAAa,GAAa,OAA1B;AAEN,oBAAK,MAAgC,AAApB,GAAS,WAAW,GAArC;AAMA,sBAAM,KAFN,MAAW,GAAS,IAAI,SAAC,IAAA;AAAD,2BAAQ,EAAa,EAAA;kBAAA,CAAA,GAEf,QAAQ,EAAA;AACtC,sBAAI,KAAA;AACF,2BAAO,EAAE,QAAQ,GAAa,QAAQ,cAAA,GAAA;gBAAA;cAAA;YAAA,EAAA,GAAA,EAAA,KAAA,iCAAA,OAY5C,SAAqC,IAAA;AACnC,kBAAM,KAAe,EAAa,EAAA,GAG5B,KAFkB,MAAM,KAAK,KAAK,YAAY,KAAA,CAAA,EAEf,KACnC,SAAC,IAAA;AAAD,uBAAA,AAAQ,GAAG,QAAQ,EAAA,MAAnB;cAAmB,CAAA;AAGrB,qBAAO,KAAK,YAAY,IAAI,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,uBAAA,OAkB9B,SACE,IACA,IAAA;AACc,kBAAA,KAAA;AACd,kBAAA,AAAI,OAAJ;AACE,sBAAM,IAAI,MAAM,qDAAA;AAElB,kBAAA,AAAI,GAAiB,YAArB;AACE,sBAAM,IAAI,MACR,qEAAA;AAGJ,kBAAI,KAAK,aAAa,IAAI,EAAA;AACxB,sBAAM,IAAI,MAAJ,iCAAA,OAC6B,IAD7B,mBAAA,CAAA;AAIR,kBACE,GAAiB,UACkB,AAAA,OAA5B,GAAiB,UAAW;AAEnC,sBAAM,IAAI,MACR,iEAAA;AAOJ,kBAAM,KAA8B,EAClC,QAAA,OACA,UAAA,IACA,kBAAA,IACA,WAAW,KAAK,IAAA,GAChB,aAAa,EAAA;AAKf,qBAFA,KAAK,aAAa,IAAI,IAAU,EAAA,GAEzB,GAAiB,QACrB,KAAK,SAAC,IAAA;AACL,oBAAK,GAAK,aAAa,IAAI,EAAA,GAA3B;AAQA,sBAAA,AAAI,GAAO,gBAAX;AACE,0BAAM,IAAI,MACR,+DAAA;AAGJ,sBAAA,AAAI,GAAO,YAAY,YAAvB;AACE,0BAAM,IAAI,MACR,yDAAA;AAOJ,qBAAK,sCACH,GAAO,aAEP,GAAO,QAAA,GAIT,GAAa,SAAS,IACtB,GAAa,cAAc,GAAO,aAClC,GAAK,0BAA0B,GAAa,WAAA;AAE5C,sBAAM,KAA6D,EACjE,QAAQ,GAAA;AAGV,oBACE,GACA,GAAA,2BACA,EAAA;gBAAA;AAtCA,0BAAQ,KACN,kEAAA;cAAA,CAAA,EAwCL,MAAM,SAAC,IAAA;AAEN,sBADA,GAAK,aAAa,OAAO,EAAA,GACnB;cAAA,CAAA;YAAA,EAAA,CAAA,CAAA,GAAA;UAAA,EAriBR;AChDS,wBAAS;AACtB,mBAAQ,EAAC,GAAA,IAAA,OAAM,OAAK,OAAK,OAAW,QAAQ,UAAU,SAAA,IAAA;AAAC,qBACpD,MAAI,OAAO,gBAAgB,IAAI,WAAW,CAAA,CAAA,EAAI,KAAK,MAAM,KAAI,GAAG,SAAS,EAAA;YAAA,CAAA;UAAA;ACyB9E,sBAAA,IAAA;AAOqB,gBANnB,KAMmB,GANnB,YACA,KAKmB,GALnB,UACA,KAImB,GAJnB,SACA,KAGmB,GAHnB,WACA,KAEmB,GAFnB,QACA,KACmB,GADnB,YAII,KAAgB;AACc,YAHI,GAA9B,8BAG0B,SAChC,MAAgB;AAGlB,gBAAM,KAAc,GAAA,EAAA,YAAyB,EAC3C,MAAM,UACN,oBAAoB,IACpB,QAAQ,GAAA,CAAA,GAGJ,KAAY,GAAA,EAAA,YAAA;AAQlB,mBANA,GAAU,cAAc,EAAA,GACxB,GAAU,WAAW,EAAA,GACrB,GAAU,aAAa,EAAA,GACvB,GAAU,UAAU,EAAA,GACpB,GAAU,aAAA,EAAe,WAAW,EAAA,GAE7B;UAAA;AAOT,cAEI,IAFE,KAAgB,CAAA;AAiBtB,sBACE,IACA,IAAA;AAEA,gBAAM,KAAa,GAAS,QAAQ,GAAA,GAC9B,KAAS,GAAS,UAAU,GAAG,EAAA,GAC/B,KAAS,GAAc;AAE7B,gBAAI,AAAA,MAAA,MAAyC;AAC3C,kBAAA,AAAI,OAAJ;AACE,uBAAO,GAAoB,IAAU,EAAA;AAGvC,oBAAM,IAAI,MACR,2DAAA;YAAA;AAIJ,gBAAM,KAAmB,GAAO,IAAU,EAAA;AAiB1C,mBAdA,GAAiB,QAAQ,KACvB,SAAU,IAAA;AACR,gBAAa,GAAa,GAAA,eAAsB,EAAE,QAAA,GAAA,CAAA;YAAA,GAEpD,SAAU,IAAA;AACR,kBAAM,KAAwD,EAC5D,UAAA,IACA,OAAA,GAAA;AAGF,gBAAa,GAAa,GAAA,sBAA6B,EAAA;YAAA,CAAA,GAIpD;UAAA;AAYF,sBACL,IAAA;AAE6B,gBAD7B,KAC6B,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KADE,EAAE,UAAU,CAAA,EAAA;AAE3C,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MAAM,sDAAA;AAGlB,gBAAI,KAAmB,EAAA,oBAA0B,EAAA;AAEjD,mBAAA,AAAI,OAAJ,SACS,GAAiB,UAG1B,MAAmB,GAA2B,IAAU,EAAA,GAEhC,QAAQ,KAAK,SAAC,IAAA;AAEpC,qBADA,GAAO,YAAY,GAAgC,EAAA,GAC5C;YAAA,CAAA;UAAA;AAaJ,sBAAP,IAAA,IAAA;AAAA,mBAAA,GAAA,MAAA,MAAA,SAAA;UAAA;AAAA,wBAAA;AAAA,mBAAA,MAAA,GAAA,GAAA,EAAA,KAAO,YACL,IACA,IAAA;AAFK,kBAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAAA,0BAAA,AAID,OAJC,QAAA;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,4BAKG,IAAI,MACR,gEAAA;yBANC;AAAA,0BAAA,AAUD,MAAmB,EAAA,oBAA0B,EAAA,OAV5C,QAAA;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,6BAAA,GAAA,OAAA,UAaI,GAAiB,OAAA;yBAbrB;AAAA,6BAgBL,MAAmB,GAA2B,IAAU,EAAA,GAEvC,QAAQ,KAAK,SAAC,IAAA;AAC7B,2BAAO,YAAY,GAAgC,EAAA;sBAAA,CAAA,GAGrD,EAAA,oBAA0B,IAAU,EAAA,EAAkB,MAAM,SAAC,IAAA;AAC3D,8BAAM;sBAAA,CAAA,GAvBH,GAAA,OAAA,UA0BE,GAAiB,OAAA;yBA1BnB;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,EAAA;YAAA,CAAA,CAAA,GAAA,MAAA,MAAA,SAAA;UAAA;AAwCA,sBACL,IACA,IAAA;AAEA,gBAAM,KAAmB,EAAA,UAAgB,EAAA;AAEzC,gBAAA,CAAK;AACH,oBAAM,IAAI,MAAJ,4DAAA,OACwD,IADxD,kBAAA,CAAA;AAKR,gBAAM,KAAa,GAAb,UACE,KAAiB,GAAjB;AAAA,YAEJ,OAFI,UAGN,MAAW,GAAA;AAGb,gBAII,IAAU,IAJN,KACN,GADM,UAAU,KAChB,GADgB,YAAY,KAC5B,GAD4B,SAAS,KACrC,GADqC,QAAQ,KAC7C,GAD6C,WAEzC,KADJ,GADwD,WAE1B;AAKhC,gBAAI;AACF,kBAA0B,AAAtB,GAAa,SAAS;AACxB,qBAA0B,IAAf,IACX,KAAa;mBACR;AAAA,oBAA0B,AAAtB,GAAa,SAAS;AAI/B,wBAAM,IAAI,MAAM,mDAAA;AAHhB,qBAAW,IACX,KAAa;cAAA;;AAMf,mBAA0B,IAAf,IACX,KAAa;AAKf,gBAAA,CADoB,EAAA,YAAkB,EAAA;AAEpC,oBAAM,IAAI,MAAM,GAAA,mBAAA;AAGlB,gBAAM,KAAmB,IAAI,GAAW,EAAA,GAGlC,KAAc,GAAA,EAAA,YAAyB,EAC3C,MAAM,UACN,oBAAoB,GACpB,QAAQ,GAAA,CAAA,GAGJ,KAAmB,GAAA,EAAA,YAAA;AAEzB,eAAiB,cAAc,EAAA,GAC/B,GAAiB,WAAW,EAAA,GAC5B,GAAiB,aAAa,EAAA,GAC9B,GAAiB,UAAU,EAAA,GAC3B,GAAiB,aAAA,EAAe,WAAW,EAAA;AAE3C,gBAAM,KAAgB,IAAI,EAAY,EACpC,UAAA,IACA,UAAU,GAAA,EAAU,EAAA,GACpB,YAAY,CAAC,GAAW,IAAI,GAAW,IAAI,GAAW,EAAA,GACtD,SAAA,IACA,QAAA,IACA,WAAA,IACA,WAAW,IACX,YAAY,IACZ,aAAa,IACb,oBAAA,GAAA,CAAA,GAGI,KAAmB,EACvB,SAAS,QAAQ,QAAQ,EAAA,EAAA;AAI3B,mBAFA,EAAA,oBAA0B,IAAU,EAAA,GAE7B;UAAA;AAaF,sBACL,IACA,IAAA;AAEa,gBADb,KACa,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA,IACL,KACN,GADM,YAAY,KAClB,GADkB,UAAU,KAC5B,GAD4B,YAAY,KACxC,GADwC,SAAS,KACjD,GADiD,QAAQ,KACzD,GADyD;AAG3D,gBAAA,CACG,MAAA,CACC,eAAsB,cAAc,cAAsB;AAE5D,oBAAM,IAAI,MACR,wFAAA;AAAA,YAKA,OALA,UAMF,MAAW,GAAA;AAGb,gBAAM,KAAe,EAAA,UAAgB,EAAA;AAErC,gBAAI;AACF,qBAAO;AAGT,gBAAM,KAAe,GAAW,KAAK,GAAW,KAAK,GAAW,IAE1D,KAAW,KAAa,GAAW,OAAO,aAA4B,IAAf,IAGvD,KAAc,EAAA,YAAkB,EAAA;AACtC,gBAAA,CAAK;AACH,oBAAM,IAAI,MAAM,GAAA,mBAAA;AAGlB,gBAAM,KAAc,GAAA,EAAA,YAAyB,EAC3C,MAAM,UACN,oBAAoB,GACpB,QAAQ,GAAA,CAAA,GAGJ,KAAY,GAAA,EAAA,YAAA;AAElB,eAAU,cAAc,EAAA,GACxB,GAAU,WAAW,EAAA,GACrB,GAAU,aAAa,EAAA,GACvB,GAAU,UAAU,EAAA,GACpB,GAAU,aAAA,EAAe,WAAW,EAAA;AAEpC,gBAAM,KAAgB,IAAI,EAAY,EACpC,UAAA,IACA,UAAU,GAAA,EAAU,EAAA,GACpB,YAAY,CAAC,GAAW,IAAI,GAAW,IAAI,GAAW,EAAA,GACtD,SAAA,IACA,QAAA,IACA,WAAA,IACA,WAAW,IACX,YAAA,IACA,aAAa,GAAA,CAAA;AAGf,gBAAI;AACF,qBAAO;AAGT,gBAAM,KAAmB,EACvB,SAAS,QAAQ,QAAQ,EAAA,EAAA;AAI3B,mBAFA,EAAA,oBAA0B,IAAU,EAAA,GAE7B;UAAA;AASF,sBACL,IACA,IAAA;AAEA,eAAc,MAAU;UAAA;AAUnB,sBACL,IAAA;AAEA,gBAAM,KAAkB;AAIxB,mBAFA,KAAsB,IAEf;UAAA;AAAA,cAAA,KAAA,EAAA,CAAA,GAAA,KAAA,EAAA,EAAA,EAAA;ACvYT,sBAA+B,IAAW,IAAA;AACxC,eAAM,eAAe,KAAK,uBAAA;UAAA;AAS5B,cAAM,KAAiB,EACrB,eAAe,KAAA;AAGV,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,IAAgB,EAAA,GAErC,GAAA,EAAA,OAAuB,IAAW,IAAO,EAAA,GAEzC,GAAA,EAAA,OAAa,IAAW,IAAO,CAAC,eAAA,CAAA,GAGhC,GAAsB,GAAW,EAAA;UAAA;AAK5B,cAIP,KAAA,EAAiB,aAJU,GAAA,EAAA,YAAkB,IAAQ,uBAAA,GAIvB,QAAA,GAAA;ACjCf,sBACb,IACA,IAAA;AAEA,gBAAM,KAAe,GAAA,YAAA;AAErB,eAAa,aAAa,EAAA;AAE1B,gBAAM,KAAU,GAAU,WAAA,GAGpB,KAAkB,IAAQ,KAAK,GAAQ,KAAK,GAAQ,MAAM;AAShE,mBANA,GAAa,wBAAwB,GAAA,GAErC,GAAa,kBAAkB,EAAA,GAE/B,GAAa,iBAAiB,EAAA,GAEvB;UAAA;AAAA,wBAAA;AAAA,mBAAA,MAAA,GAAA,GAAA,EAAA,KCXT,YACE,IAAA;AADF,kBAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAAA,6BAGU,KAAkC,GAAlC,UAAU,KAAwB,GAAxB,UAAU,KAAc,GAAd,WAH9B,GAAA,OAAA,GAK4B,GAAW,EAAA;yBALvC;AAAA,0BAKQ,KALR,GAAA,MAAA;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,4BAQU,IAAI,MAAJ,wBAAA,OACoB,GAAY,UADhC,iBAAA,CAAA;yBARV;AAAA,6BAaU,KAAgC,GAAhC,WAAW,KAAqB,GAArB,kBAEb,KAAe,GAAmB,IAAW,EAAA,GAE/C,MACF,GAAa,aAAa,EAAA,GAGtB,MAAc,GAAA,EAAA,YAAA,GACR,UAAU,EAAA,GAElB,MACF,GAAS,EAAE,aAAA,IAAa,UAAA,GAAA,CAAA,GAzB5B,GAAA,OAAA,UA4BS,EAAA;yBA5BT;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,EAAA;YAAA,CAAA,CAAA,GAAA,MAAA,MAAA,SAAA;UAAA;AA+BA,cAAA,KAAA,SA/BiC,IAAA;AAAA,mBAAA,GAAA,MAAA,MAAA,SAAA;UAAA,GCrB3B,KAAmB,oBACnB,KAAmB;AA4CV,sBACb,IAAA;AAEA,gBAAM,KAAiB,UAAH,OAAa,EAAA,GAC3B,KAAkB,OAAH,OAAU,EAAA,GAIzB,KACJ,GAAQ,cAAc,EAAA,KA3BnB,SAA+B,IAAA;AACpC,kBAAM,KAAM,SAAS,cAAc,KAAA;AAOnC,qBANA,GAAI,MAAM,WAAW,YACrB,GAAI,MAAM,QAAQ,QAClB,GAAI,MAAM,SAAS,QACnB,GAAI,UAAU,IAAI,EAAA,GAClB,GAAQ,YAAY,EAAA,GAEb;YAAA,EAmB2D,EAAA;AAElE,mBAAO,GAAY,cAAc,EAAA,KA/CnC,SAAsB,IAAA;AACpB,kBAAM,KAAS,SAAS,cAAc,QAAA;AAQtC,qBANA,GAAO,MAAM,WAAW,YACxB,GAAO,MAAM,QAAQ,QACrB,GAAO,MAAM,SAAS,QACtB,GAAO,UAAU,IAAI,EAAA,GACrB,GAAQ,YAAY,EAAA,GAEb;YAAA,EAsC0D,EAAA;UAAA;ACxDpD,sBAA2B,IAAK,IAAA;AAAA,YAClC,CAAP,MAAO,QAAQ,KAAM,GAAI,WAAQ,MAAM,GAAI;AAE/C,qBAAS,KAAI,GAAG,KAAO,IAAI,MAAM,EAAA,GAAM,KAAI,IAAK;AAC9C,iBAAK,MAAK,GAAI;AAGhB,mBAAO;UAAA;ACNM,sBAAqC,IAAG,IAAA;AACrD,gBAAK,IAAL;AACA,kBAAiB,AAAA,OAAN,MAAM;AAAU,uBAAO,GAAiB,IAAG,EAAA;AACtD,kBAAI,KAAI,OAAO,UAAU,SAAS,KAAK,EAAA,EAAG,MAAM,GAAA,EAAI;AAEpD,qBADU,AAAN,OAAM,YAAY,GAAE,eAAa,MAAI,GAAE,YAAY,OAC7C,AAAN,OAAM,SAAe,AAAN,OAAM,QAAc,MAAM,KAAK,EAAA,IACxC,AAAN,OAAM,eAAe,2CAA2C,KAAK,EAAA,IAAW,GAAiB,IAAG,EAAA,IAAA;YAAxG;UAAA;ACHa,sBAA4B,IAAA;AACzC,mBCJa,SAA4B,IAAA;AACzC,kBAAI,MAAM,QAAQ,EAAA;AAAM,uBAAO,GAAiB,EAAA;YAAA,EDGvB,EAAA,KELZ,SAA0B,IAAA;AACvC,kBAAsB,AAAA,OAAX,UAAW,eAAwC,AAAzB,GAAK,OAAO,aAAa,QAA8B,AAAtB,GAAK,iBAAiB;AAAM,uBAAO,MAAM,KAAK,EAAA;YAAA,EFInE,EAAA,KAAQ,GAA2B,EAAA,KGLvE,WAAA;AACb,oBAAM,IAAI,UAAU,sIAAA;YAAA,EHIwE;UAAA;AIH9F,cAAM,KAAQ,CAAA,GAwCd,KA/BO,SAAC,IAAA;AACJ,mBAAO,GAAM;UAAA,GA8BjB,KAvBO,SAAC,IAAA;AACJ,gBAAM,KAAoB,GAAG;AAE7B,eAAM,MAAqB;UAAA,GAoB/B,KAZU,SAAC,IAAA;AACP,mBAAA,OAAc,GAAM;UAAA,GAWxB,KARU,WAAA;AAIN,mBAH2B,OAAO,KAAK,EAAA,EACK,IAAI,SAAC,IAAA;AAAD,qoB,GAAA,EAAA;AAU5B,sBAAwC,IAAW,IAAA;AACjD,eAAM,eAAe,KAAK,gCAAA,GAY1B,GAAU,qBAAqB,SAAC,IAAK,IAAA;AACnC,kBAAM,KAAQ,GAAM;AACpB,kBAAK,IAAL;AAIA,oBAAM,KAAU,GAAM,aAAA,KAAkB,GAAM,aAAA,EAAe,WAAA;AAC7D,oBAAK,IAAL;AAIA,sBAAM,KAAQ,GAAM,YAAA;AAEpB,sBAAA,CAAK,GAAM,cAAc,UAAA,GAAa;AAEpC,6BADM,KAAS,IAAI,WAAW,IAAA,GACrB,KAAI,GAAG,KAAI,MAAA,EAAW;AAC7B,yBAAO,MAAK,MAAQ,KAAK,OAAA;AAE3B,uBAAM,cAAc,sBAAsB,GAAA,OAAA,MAAA,GAC1C,GAAM,cAAc,uBAAuB,GAAA,OAAA,MAAA,GAC3C,GAAM,cAAc,gBAClB,IACA,IACA,GACA,GAAA,aAAA,eACA,EAAA;kBAAA;AAIJ,sBAAM,KAAU,GAAQ,sBAAA,GAElB,KADS,GAAM,yBAAA,IACM,KAAU,GAGjC,KAAW,GAAH,OAAM,GAAM,SAAA,CAAA;AACxB,sBAAI,GAAM,yBAAyB,IAAU;AAM3C,6BALM,KAAS,MACT,KAAQ,OAAa,IACrB,KAAU,IAAI,aAAa,EAAA,GAC3B,KAAW,IAAI,aAAa,EAAA,GAEzB,KAAI,GAAG,KAAI,IAAA,EAAa,IAAG;AAClC,0BAAM,KAAO,GAAM,iBAAiB,EAAA,GAC9B,KACJ,GAAM,WAAW,kBAAA,IACjB,GAAM,6BAA6B,EAAA,GAE/B,KAAS,GAAK,SAAA;AACpB,yBAAK,SAAS,GAAO,IAAI,GAAO,IAAI,IAAQ,IAAU,CAAA;AAEtD,+BAAS,KAAI,GAAG,KAAI,IAAA,EAAU;AAC5B,2BAAQ,KAAI,KAAS,IAAI,MACvB,IAAM,KAAN,IAAO,IAAM,GAAS,KAAO,EAAA,GAC/B,GAAQ,KAAI,KAAS,IAAI,KAAI,MAAU,GAAQ,KAAI,KAAS,IAAI;oBAAA;AAYpE,wBARA,GAAM,eAAe,yBAAyB,GAAM,mBAAA,GACpD,GAAM,eAAe,sBAAsB,GAAA,OAAA,MAAA,GAC3C,GAAM,eAAe,uBAAuB,GAAA,OAAA,MAAA,GAO1C,GAAM,oBAAoB,UAAA,KACzB,GAAM,QAAQ,aAAa,mBAAA,KAC1B,GAAM,QAAQ,aAAa,0BAAA;AAE7B,yBAAM,eAAe,gBACnB,IACA,IAAI,IACJ,GACA,GAAA,aAAA,OACA,EAAA;yBAEG;AAEL,+BADM,KAAS,IAAI,WAAW,EAAA,GACrB,KAAI,GAAG,KAAI,IAAA,EAAS;AAC3B,2BAAO,MAAK,MAAQ,GAAQ;AAE9B,yBAAM,eAAe,gBACnB,IACA,IAAI,IACJ,GACA,GAAA,aAAA,eACA,EAAA;oBAAA;AAGJ,uBAAM,uBAAuB;kBAAA;AAM/B,sBAFA,KAAW,GAAH,OAAM,GAAM,SAAA,CAAA,GAEhB,GAAM,uBAAuB,IAAU;AAMzC,6BALM,KAAS,MAET,KAAS,IAAI,WADL,OAAa,KAAY,CAAA,GAEjC,KAAW,IAAI,aAAa,IAAA,GAEzB,KAAI,GAAG,KAAI,IAAA,EAAa,IAAG;AAClC,0BAAM,KAAO,GAAM,uBAAuB,EAAA,GACpC,KAAS,GAAK,SAAA;AACpB,yBAAK,SAAS,GAAO,IAAI,GAAO,IAAI,IAAQ,IAAU,CAAA;AACtD,+BAAS,KAAI,GAAG,KAAI,MAAA,EAAc;AAChC,2BAAO,KAAI,KAAS,IAAI,MAAK,MAAQ,GAAS,KAC9C,GAAO,KAAI,KAAS,IAAI,KAAI,QAAc,MAAQ,GAAS;oBAAA;AAI/D,uBAAM,aAAa,yBAAyB,GAAM,mBAAA,GAClD,GAAM,aAAa,sBAAsB,GAAA,OAAA,MAAA,GACzC,GAAM,aAAa,uBAAuB,GAAA,OAAA,MAAA,GAE1C,GAAM,aAAa,gBACjB,IACA,IAAI,IACJ,GACA,GAAA,aAAA,eACA,EAAA,GAEF,GAAM,qBAAqB;kBAAA;AAM7B,sBAFA,KAAW,GAAH,OAAM,GAAM,SAAA,CAAA,GAEhB,GAAM,wBAAwB,IAAU;AAE1C,wBAAM,KAAO,GAAM,cAAA,GAEb,KACJ,GAAM,cAAc,qBAAA,GAEhB,KAAW,GAAM,aAAA,EAAe,WAAA,EAAa,YAAA,GAC7C,KAAO,GAAM,aAAA,EAAe,WAAA,EAAa,QAAA,GAE3C,KAAA;AAEJ,wBACE,GAA0B,YAC1B,GAA0B,aAAa,IACvC;AACA,0BAAM,KACJ,GAA0B,QAC1B,GAA0B,SAC1B,GAA0B,QAC1B,GAA0B;AACxB,yBAAK,WAAW,MAClB,MAAA;oBAAc;AAId,yBACF,IAAM,cAAc,yBAAyB,GAAM,mBAAA,GACnD,GAAM,cAAc,mBAAA,GAEpB,GAAM,cAAc,0BAClB,GAAK,IACL,GAAK,IACL,GAAK,IACL,IACA,GAAQ,YAAA,GACR,GAAQ,QAAA,GACR,GAAM,WAAW,0BAAA,CAAA,KAGnB,IAAM,cAAc,WAAA,GACpB,GAAM,cAAc,gBAAgB,EAAA,IAGtC,GAAM,sBAAsB;kBAAA;AAG9B,sBAAA,CAAK,GAAM,KAAK,QAAA,EAAU,gBAAA,GAAmB;AAG3C,6BADM,KAAW,IAAI,aAAa,EAAA,GACzB,KAAI,GAAG,KAAI,GAAG;AACrB,yBAAa,IAAJ,MAAU,KAAI,IAAK,IAAI,GAChC,GAAa,IAAJ,KAAQ,KAAK,KAAI,IAAI,IAAA,IAC9B,GAAa,IAAJ,KAAQ,KAAA;AAGnB,wBAAM,KAAY,IAAI,YAAY,CAAA;AAClC,uBAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK,GACf,GAAU,KAAK;AAEf,wBAAM,KAAS,GAAA,EAAA,YAAyB,EACtC,oBAAoB,GACpB,QAAQ,GAAA,CAAA;AAEV,uBAAO,QAAQ,QAAA;AACf,wBAAM,KAAQ,GAAA,EAAA,YAAyB,EACrC,oBAAoB,GACpB,QAAQ,GAAA,CAAA;AAEV,uBAAM,KAAK,QAAA,EAAU,UAAU,IAAO,SAAS,GAAA,eAAA,SAAwB,EACrE,QAAA,IACA,YAAY,EAAA,CAAA;kBAAA;AAIhB,qBAAM,aAAa,SAAA;gBAAA;cAAA;YAAA,GAGrB,GAAU,4BAA4B,SAAC,IAAQ,IAAK,IAAA;AAClD,kBAAM,KAAU,GAAO,WAAA,GACjB,KAAM,GAAM,aAAa,cAAA,GACzB,KAAY,GAAM,UAAA,EAAY,aAAA,GAC9B,KAAgB,GAAI,iBAAA,GACpB,KAAS,GAAI,iBAAA,GAGb,KAA2C,MAAzB,IAAO,KAAK,GAAO;AAIzC,qBAAc,GAAA,UAAA,mBALa,AAM3B,OAN2B,OAQ3B,IAAO,KAAK,KAAiB,IAC7B,GAAO,KAAK,KAAiB,IAC7B,GAAI,uBAAA,IAAuB,KAE3B,GAAI,uBAAA,KAAuB,GAG7B,GAAQ,YAAY,YAAY,GAAO,KAAK,GAAO,EAAA,GACnD,GAAQ,YAAY,WAAW,GAAO,EAAA,GACtC,GAAQ,YAAY,UAAU,GAAO,EAAA;AAIrC,kBAAM,KAAU,GAAM,aAAa,eAAe,EAAA,GAC5C,KAAU,GAAM,aAAa,eAAA;AACnC,iBAAA,KAAA,SAAc,GAAM,aAAa,GAAQ,MAAM,GAAQ,IAAA;AAevD,uBAbM,KAAS,GAAM,aAAa,UAAA,GAC5B,KAAM,GAAM,aAAa,WAAA,GACzB,KAAO,GAAM,aAAa,cAAA,GAI1B,KAAM,IAAI,aAAa,CAAA,GACvB,KAAM,IAAI,aAAa,CAAA,GACzB,KAAS,GACT,KAAA,IACA,KAAS,GACT,KAAA,IAEK,KAAI,GAAG,KAAI,GAAA,EAAK,IAAG;AAQ1B,oBAPA,GAAA,KAAA,IACE,IACA,GAAO,KAAI,IACX,GAAO,IAAK,KAAK,MAAM,KAAI,CAAA,IAAK,IAChC,GAAO,IAAI,KAAK,MAAM,KAAI,CAAA,EAAA,GAE5B,GAAA,KAAA,cAAmB,IAAK,IAAK,GAAM,WAAA,GAAA,CAC9B,GAAI,sBAAA,GAAyB;AAChC,qBAAA,KAAA,UAAe,IAAK,EAAA;AAOpB,sBAAM,KAAA,CAAK,GAAO,KAAK,GAAI;AAC3B,qBAAA,KAAA,MAAW,IAAK,IAAK,EAAA;gBAAA;AAGvB,mBAAA,KAAA,cAAmB,IAAK,IAAK,GAAQ,IAAA,GAErC,KAAS,KAAK,IAAI,GAAI,IAAI,EAAA,GAC1B,KAAS,KAAK,IAAI,GAAI,IAAI,EAAA,GAC1B,KAAS,KAAK,IAAI,GAAI,IAAI,EAAA,GAC1B,KAAS,KAAK,IAAI,GAAI,IAAI,EAAA;cAAA;AAG5B,iBAAQ,YAAY,UAAU,EAAA,GAC9B,GAAQ,YAAY,UAAU,EAAA,GAC9B,GAAQ,YAAY,UAAU,EAAA,GAC9B,GAAQ,YAAY,UAAU,EAAA,GAE1B,GAAQ,cAAc,gBAAA,KACxB,GAAQ,YAAY,kBAAkB,GAAI,sBAAA,CAAA;AAG5C,kBAAM,KAAM,GAAM,aAAa,iBAAA,GACzB,KAAQ,IAAI,aAAa,CAAA;AAC/B,iBAAA,KAAA,IACE,IACC,IAAI,KAAK,GAAI,MAAM,GAAI,IACvB,IAAI,KAAK,GAAI,MAAM,GAAI,IACvB,IAAI,KAAK,GAAI,MAAM,GAAI,EAAA,GAE1B,GAAQ,aAAa,YAAY,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA,GAErD,GAAA,KAAA,IAAS,IAAK,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA,GAElC,GAAM,aAAa,iBAAiB,IAAK,EAAA,GAEzC,GAAA,KAAA,cAAmB,IAAK,IAAK,GAAM,WAAA,GAEnC,GAAQ,aAAa,aAAa,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AAGtD,kBAAM,KAAU,GAAM,aAAa,gBAAA;AACnC,iBAAA,KAAA,SAAc,GAAM,WAAW,GAAM,aAAa,EAAA,GAElD,GAAA,KAAA,SACE,GAAM,iBACN,GAAQ,cACR,GAAQ,YAAA,GAEV,GAAA,KAAA,SACE,GAAM,iBACN,GAAM,iBACN,GAAM,aAAa,aAAA,CAAA;AAGrB,kBAAM,KACJ,GAAA,KAAA,OAAY,EAAA,IAAS,GAAM,WAAW,kBAAA;AACpC,mBAAa,GAAM,WAAW,wBAAA,KAChC,GAAgB,gCAAD,OAAiC,KAAK,KACnD,EAAA,GADa,iEAAA,EAAA,OAGuB,GAAM,WAAW,wBAAA,GAHxC,4GAAA,CAAA;AAQjB,kBAAM,KAAU,IAAI,aAAa,CAAA;AAOjC,kBALA,GAAA,KAAA,IAAS,IAAS,GAAK,GAAK,CAAA,GAC5B,GAAA,KAAA,OAAY,IAAS,IAAS,EAAA,GAC9B,GAAQ,aAAa,YAAY,GAAQ,IAAI,GAAQ,IAAI,GAAQ,EAAA,GACjE,GAAQ,aAAa,oBAAoB,GAAK,IAAI,GAAK,IAAI,GAAK,EAAA,GAAA,CAE3D,GAAM,oBAAoB,UAAA,GAAa;AAC1C,oBAAM,KAAU,GAAM,cAAc,cAAA;AACpC,mBAAQ,YAAY,YAAY,GAAM,cAAc,SAAA,CAAA,GACpD,GAAQ,YAAY,aAAa,GAAM,cAAc,UAAA,CAAA,GACrD,GAAQ,YAAY,SAAS,GAAQ,KAAA,GACrC,GAAQ,YAAY,WAAW,GAAQ,OAAA,GACvC,GAAQ,YAAY,WAAW,GAAQ,OAAA;cAAA;AAOzC,uBAFM,KAAS,IAAI,aAAa,CAAA,GAC1B,KAAO,IAAI,aAAa,CAAA,GACrB,KAAI,GAAG,KAAI,GAAA,EAAK,IAAG;AAC1B,wBAAQ;uBACD;AACH,uBAAA,KAAA,IAAS,IAAA,IAAc,GAAK,CAAA,GAC5B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AACnC;uBACG;AACH,uBAAA,KAAA,IAAS,IAAQ,GAAK,GAAK,CAAA,GAC3B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AACnC;uBACG;AACH,uBAAA,KAAA,IAAS,IAAQ,GAAA,IAAW,CAAA,GAC5B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AACnC;uBACG;AACH,uBAAA,KAAA,IAAS,IAAQ,GAAK,GAAK,CAAA,GAC3B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AACnC;uBACG;AACH,uBAAA,KAAA,IAAS,IAAQ,GAAK,GAAA,EAAM,GAC5B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;AACnC;;AAGA,uBAAA,KAAA,IAAS,IAAQ,GAAK,GAAK,CAAA,GAC3B,GAAA,KAAA,IAAS,IAAM,GAAI,IAAI,GAAI,IAAI,GAAI,EAAA;;AAGvC,mBAAA,KAAA,cAAmB,IAAQ,IAAQ,GAAM,eAAA,GACzC,GAAA,KAAA,cAAmB,IAAM,IAAM,GAAM,SAAA;AACrC,oBAAM,KAAA,KAAc,GAAA,KAAA,IAAS,IAAM,EAAA;AAOnC,oBAHA,GAAQ,aAAR,eAAA,OAAoC,EAAA,GAAK,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GACtE,GAAQ,YAAR,iBAAA,OAAqC,EAAA,GAAK,EAAA,GAEtC,GAAM,YAAA,EAAc,mBAAA,GAAsB;AAC5C,sBACM,KADQ,GAAM,aACO,gBAAA;AAE3B,qBAAQ,iBAAiB,YAAY,EAAA,GAGrC,GAAA,KAAA,OAAY,GAAM,mBAAmB,GAAQ,IAAA,GAC7C,GAAQ,iBAAiB,cAAc,GAAM,iBAAA;AAE7C,sBAAM,KAAO,GAAU,oBAAA,GACjB,KAAS,GAAU,sBAAA;AAEzB,qBAAQ,YAAY,WAAW,GAAK,EAAA,GACpC,GAAQ,YAAY,YAAY,GAAK,EAAA,GAIrC,GAAQ,YAAY,aAAa,GAAO,KAAK,GAAK,EAAA,GAClD,GAAQ,YAAY,aAAa,GAAO,KAAK,GAAK,EAAA;gBAAA;cAAA;AAQtD,sBAJA,GAAA,KAAA,OAAY,GAAM,kBAAkB,GAAQ,IAAA,GAC5C,GAAQ,iBAAiB,cAAc,GAAM,gBAAA,GAGrC,GAAM;;qBAEP;AACH;qBAEG;qBACA;qBACA;AAGH,sBAAI,KAAW,GACT,KAAa,CAAA;AACnB,qBAAI,UAAA,EAAY,QAAQ,SAAC,IAAA;AAEvB,wBADe,GAAM,UAAA,IACR,GAAG;AACd,0BAAM,KAAS,GAAM,SAAA,GACf,KAAY,GAAM,aAAA;AACxB,yBAAW,KAAK,GAAO,KAAK,IAC5B,GAAW,KAAK,GAAO,KAAK,IAC5B,GAAW,KAAK,GAAO,KAAK,IAC5B,GAAQ,kBAAR,aAAA,OAAuC,EAAA,GAAY,EAAA;AACnD,0BAAM,KAAO,GAAM,aAAA;AACnB,yBAAA,KAAA,IAAS,IAAQ,GAAK,IAAI,GAAK,IAAI,GAAK,EAAA,GACxC,GAAA,KAAA,cAAmB,IAAQ,IAAQ,GAAQ,YAAA,GAC3C,GAAQ,aAAR,mBAAA,OACqB,EAAA,GACnB,GAAO,IACP,GAAO,IACP,GAAO,EAAA;AAGT,0BAAM,KAAY,CAAA,OACT,GAAO,IAAA,OACP,GAAO,IAAA,OACN,IAAO,KAAK,EAAA;AAEtB,yBAAQ,kBAAR,mBAAA,OAA6C,EAAA,GAAY,EAAA,GACzD;oBAAA;kBAAA,CAAA;;YAAA,GA8BV,GAAU,sBAAsB,WAAA;AAC9B,kBAAI,GAAM;AACR,uBAAO,CAAC,GAAM,qBAAqB,GAAM,oBAAA;AAG3C,kBAAA,KAAyB,GAAM,eAAe,sBAAA;AAE9C,qBAAO,CAFP,GAAQ,OAAR,GAAe,KAAA;YAAA,GAKjB,GAAU,wBAAwB,WAAA;AAChC,kBAAA,KACE,GAAM,eAAe,sBAAA;AAEvB,qBAAO,CAHP,GAAQ,YAAR,GAAoB,UAAA;YAAA;UAAA;AAaxB,cAAM,KAAiB,CAAA;AAEhB,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,IAAgB,EAAA,GAErC,GAAA,EAAA,OAA6B,IAAW,IAAO,EAAA,GAE/C,GAAM,gBAAgB,GAAc,eACpC,GAAM,gBAAgB,CAAA,GAGtB,GAA+B,IAAW,EAAA;UAAA;AAKrC,cAOP,KAAA,EAAiB,aAPU,GAAA,EAAA,YACzB,IACA,gCAAA,GAK4B,QAAA,GAAA;AC9hB9B,sBAA2C,IAAW,IAAA;AAEpD,eAAM,eAAe,KAAK,mCAAA,GAQ1B,GAAU,aAAa,SAAC,IAAA;AACtB,kBAAI,GAAW,UAAA;AACb,uBAAO;AAOT,uBAJI,KAAM,GACN,KAAY,GAAW,aAAa,IAAA,GACpC,KAAA,OACE,KAAO,OAAO,KAAK,GAAM,SAAA,GACxB,MAAA,CAAc;AAAA,gBACf,GAAK,QAAQ,EAAA,MADE,KAEjB,KAAA,OAEA,KAAY,GAAW,aAAa,IAAA;AAIxC,kBAAA,CAAK;AACH,uBAAO;AAGT,kBAAM,KAAgB,GAAM,sBAAsB,EAAA,GAE5C,KAAK,GAAM,UAAU,IAAW,EAAA;AAEtC,qBADA,GAAG,aAAa,EAAA,GACT;YAAA,GAaT,GAAM,wBAAwB,SAAC,IAAA;AAC7B,kBAAM,KAAgB,CAAA;AAQtB,qBAJkB,AAFA,GAAW,aAAA,MAEX,2BAChB,IAAc,gBAAgB,GAAW,iBAAA,IAGpC;YAAA;UAAA;AAQX,cAAM,KAAiB,CAAA;AAIhB,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,IAAgB,EAAA,GAGrC,GAAA,EAAA,OAA0B,IAAW,IAAO,EAAA,GAG5C,GAAkC,IAAW,EAAA,GAG7C,GAAU,iBAAiB,YAAY,GAAA,EAAA,WAAA,GACvC,GAAU,iBAAiB,cAAc,GAAA,EAAA,WAAA,GACzC,GAAU,iBAAiB,aAAa,GAAA,EAAA,WAAA,GACxC,GAAU,iBACR,oBACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBACR,kBACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBAAiB,iBAAiB,GAAA,EAAA,WAAA,GAC5C,GAAU,iBAAiB,aAAa,GAAA,EAAA,WAAA,GACxC,GAAU,iBACR,+BACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBAAiB,eAAe,GAAA,EAAA,WAAA,GAC1C,GAAU,iBAAiB,aAAa,GAAA,EAAA,WAAA,GACxC,GAAU,iBACR,mBACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBACR,kBACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBAAiB,cAAc,GAAA,EAAA,WAAA,GACzC,GAAU,iBAAiB,aAAa,GAAA,EAAA,WAAA,GACxC,GAAU,iBACR,mBACA,GAAA,EAAA,WAAA,GAEF,GAAU,iBACR,yBACA,GAAA,WAAA;UAAA;AAUG,cAOP,KAAA,EAAiB,aAPU,GAAA,EAAA,YACzB,IACA,mCAAA,GAK4B,QAAA,GAAA;ACjJ9B,sBAAwC,IAAW,IAAA;AACjD,eAAM,eAAe,KAAK,gCAAA;UAAA;AASrB,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,EAAA,GAErB,GAAA,EAAA,OAA6B,IAAW,IAAO,EAAA,GAE/C,GAAM,YAAY,GAAA,YAAA,GAElB,GAAM,UAAU,iBAAiB,mBAAmB,EAAA,GAIpD,GAA+B,GAAW,EAAA;UAAA;AAKrC,cAAM,KAAc,GAAA,EAAA,YACzB,IACA,gCAAA,GAKF,KAAA,EAAiB,aAAA,IAAa,QAAA,GAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA;AClB9B,sBAAuC,IAAW,IAAA;AAEhD,gBAAM,KAAe,GAAU;AAAA,mBACxB,GAAU,cAGjB,GAAM,eAAe,GAAA,EAAA,YAAA,GACrB,GAAM,cAAc,CAAA,GAGpB,GAAM,qBAAqB,GAAA,YAAA,GAC3B,GAAM,aAAa,QAAQ,GAAM,kBAAA,GAGjC,GAAM,aAAa,GAAA,EAAA,YAAA,GACnB,GAAM,WAAW,QAAQ,GAAM,kBAAA,GAC/B,GAAM,WAAW,WAAA,GAEjB,GAAU,cAAc,SAAA,IAAA;AAAkC,kBAA/B,KAA+B,GAA/B,UAAU,KAAqB,GAArB,IAAI,KAAiB,GAAjB,YACjC,KAAW,GAAA,EAAA,YAAwB,EACvC,UAAA,IACA,YAAY,MAAc,GAAM,WAAA,CAAA;AAGlC,iBAAM,aAAa,YAAY,EAAA,GAC/B,GAAM,YAAY,MAAM;YAAA,GAG1B,GAAU,iBAAiB,SAAC,IAAA;AAC1B,kBAAM,KAAW,GAAU,YAAY,EAAA;AACvC,iBAAM,aAAa,eAAe,EAAA,GAAA,OAC3B,GAAM,YAAY;YAAA,GAG3B,GAAU,cAAc,SAAC,IAAA;AACvB,qBAAO,GAAM,YAAY;YAAA,GAG3B,GAAU,eAAe,WAAA;AACvB,kBAAQ,KAAgB,GAAhB;AAMR,qBAJkB,OAAO,KAAK,EAAA,EAAa,IAAI,SAAC,IAAA;AAC9C,uBAAO,EAAE,IAAA,IAAI,UAAU,GAAY,IAAA;cAAA,CAAA;YAAA,GAOvC,GAAU,SAAS,WAAA;AACjB,kBAAI,GAAM,WAAW;AAEnB,oBAAA,KAA0B,GAAM,WAAxB,KAAR,GAAQ,OAAO,KAAf,GAAe;AAGf,mBAAM,mBAAmB,QACvB,KAAK,MAFkB,IAEZ,EAAA,GACX,KAAK,MAHkB,IAGZ,EAAA,CAAA,GAEb,GAAA,GACA,GAAM,aAAa,OAAA;cAAA;YAAA,GAKvB,GAAU,eAAe,SAAC,IAAA;AAExB,iBAAM,YAAY,IAClB,GAAM,mBAAmB,aAAa,GAAM,SAAA;YAAA,GAI9C,GAAU,SAAS,GAAA,EAAA,MACjB,GAAU,cACV,GAAM,mBAAmB,QACzB,GAAU,MAAA,GAGZ,GAAU,OAAA;UAAA;AAAA,YAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA;AAOZ,cAAM,KAAiB,EACrB,YAAY,CAAC,GAAK,GAAK,CAAA,GACvB,WAAW,KAAA;AAKN,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,IAAgB,EAAA,GAGrC,GAAA,EAAA,IAAU,IAAW,EAAA,GACrB,GAAA,EAAA,IAAU,IAAW,IAAO,CAC1B,gBACA,sBACA,cACA,WAAA,CAAA,GAEF,GAAA,EAAA,MAAY,IAAW,IAAO,QAAA,GAG9B,GAA8B,IAAW,EAAA;UAAA;AAKpC,cAIP,KAAA,EAAiB,aAJU,GAAA,EAAA,YAAkB,EAAA,GAIf,QAAA,GAAA;AC/If,sBAAgC,IAAA;AAC7C,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,eAAe,2DAAA;AAG3B,mBAAO;UAAA;ACLM,sBAAyB,IAAA;AAItC,mBAHA,KAAkB,OAAO,iBAAiB,OAAO,iBAAiB,SAAyB,IAAA;AACzF,qBAAO,GAAE,aAAa,OAAO,eAAe,EAAA;YAAA,GAEvC,GAAgB,EAAA;UAAA;ACHV,sBAAwB,IAAQ,IAAA;AAC7C,mBAAA,CAAQ,OAAO,UAAU,eAAe,KAAK,IAAQ,EAAA,KAEpC,AADf,MAAS,GAAe,EAAA,OACT;AADS;AAI1B,mBAAO;UAAA;ACNM,wBAAS;AAiBtB,mBAfE,KADqB,AAAA,OAAZ,WAAY,eAAe,QAAQ,MACrC,QAAQ,MAER,SAAc,IAAQ,IAAU,IAAA;AACrC,kBAAI,KAAO,GAAc,IAAQ,EAAA;AACjC,kBAAK,IAAL;AACA,oBAAI,KAAO,OAAO,yBAAyB,IAAM,EAAA;AAEjD,uBAAI,GAAK,MACA,GAAK,IAAI,KAAK,UAAU,SAAS,IAAI,KAAS,EAAA,IAGhD,GAAK;cAAA;YAAA,GAIT,GAAK,MAAM,MAAM,SAAA;UAAA;AClBX,sBAAyB,IAAG,IAAA;AAMzC,mBALA,KAAkB,OAAO,kBAAkB,SAAyB,IAAG,IAAA;AAErE,qBADA,GAAE,YAAY,IACP;YAAA,GAGF,GAAgB,IAAG,EAAA;UAAA;ACLb,sBAAmB,IAAU,IAAA;AAC1C,gBAA0B,AAAA,OAAf,MAAe,cAA6B,AAAf,OAAe;AACrD,oBAAM,IAAI,UAAU,oDAAA;AAGtB,eAAS,YAAY,OAAO,OAAO,MAAc,GAAW,WAAW,EACrE,aAAa,EACX,OAAO,IACP,UAAA,MACA,cAAA,KAAc,EAAA,CAAA,GAGlB,OAAO,eAAe,IAAU,aAAa,EAC3C,UAAA,MAAU,CAAA,GAER,MAAY,GAAe,IAAU,EAAA;UAAA;AChB5B,sBAAiB,IAAA;AAG9B,mBAAO,KAAU,AAAA,OAAqB,UAArB,cAA+B,AAAA,OAAmB,OAAO,YAA1B,WAAqC,SAAU,IAAA;AAC7F,qBAAA,OAAc;YAAA,IACZ,SAAU,IAAA;AACZ,qBAAO,MAAO,AAAA,OAAqB,UAArB,cAA+B,GAAI,gBAAgB,UAAU,OAAQ,OAAO,YAAY,WAAA,OAAkB;YAAA,GACvH,GAAQ,EAAA;UAAA;ACLE,sBAAoC,IAAM,IAAA;AACvD,gBAAI,MAA2B,CAAlB,GAAQ,EAAA,MAAU,YAA4B,AAAA,OAAT,MAAS;AACzD,qBAAO;AACF,gBAAA,AAAI,OAAJ;AACL,oBAAM,IAAI,UAAU,0DAAA;AAGtB,mBAAO,GAAsB,EAAA;UAAA;ACL/B,cAAA,KAAA;ACAe,sBAAwB,IAAK,IAAA;AAC1C,mBCLa,SAAyB,IAAA;AACtC,kBAAI,MAAM,QAAQ,EAAA;AAAM,uBAAO;YAAA,EDIT,EAAA,KELT,SAA+B,IAAK,IAAA;AACjD,kBAAI,KAAY,AAAP,MAAO,OAAO,OAAyB,AAAA,OAAX,UAAW,eAAe,GAAI,OAAO,aAAa,GAAI;AAE3F,kBAAU,AAAN,MAAM,MAAV;AACA,oBAII,IAAI,IAJJ,KAAO,CAAA,GACP,KAAA,MACA,KAAA;AAIJ,oBAAA;AACE,uBAAK,KAAK,GAAG,KAAK,EAAA,GAAA,CAAQ,MAAM,MAAK,GAAG,KAAA,GAAQ,SAC9C,IAAK,KAAK,GAAG,KAAA,GAAA,CAET,MAAK,GAAK,WAAW,KAH4B,KAAA;AAAK;gBAAA,SAKrD,IAAP;AACA,uBAAA,MACA,KAAK;gBAAA,UACL;AACA,sBAAA;AACO,0BAAsB,AAAhB,GAAW,UAAK,QAAM,GAAW,OAAA;kBAAA,UAC5C;AACA,wBAAI;AAAI,4BAAM;kBAAA;gBAAA;AAIlB,uBAAO;cAAA;YAAA,EFtB4C,IAAK,EAAA,KAAM,GAA2B,IAAK,EAAA,KGLjF,WAAA;AACb,oBAAM,IAAI,UAAU,2IAAA;YAAA,EHIgF;UAAA;AAAA,cAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA;AIMtG,sBAA+B,IAAY,IAAY,IAAA;AACrD,gBAAA,KAAA,GAAqB,IAArB,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IACA,KAAA,GAAqB,IAArB,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IACA,KAAA,GAAqB,IAArB,CAAA,GAAO,KAAP,GAAA,IAAU,KAAV,GAAA,IAAa,KAAb,GAAA,IACM,KAAI,KAAK,IACT,KAAI,KAAK,IACT,KAAI,KAAK,IACT,KAAA,KAAW,MAAI,KAAK,KAAI,KAAK,KAAI,KAJvC,GAAA,MAImD,MAAI,KAAI,KAAI,KAAI,KAAI;AAKvE,mBAAO,CAJG,KAAI,KAAI,IACR,KAAI,KAAI,IACR,KAAI,KAAI,EAAA;UAAA;AAWpB,sBAAuB,IAAgB,IAAA;AACrC,gBAAA,KAAA,GAAkB,IAAlB,CAAA,GAAO,KAAP,GAAA,IAAU,KAAV,GAAA,IAAa,KAAb,GAAA;AAEA,mBAAO,CAAC,IAAG,IAAG,IADJ,KAAI,GAAM,KAAK,KAAI,GAAM,KAAK,KAAI,GAAM,EAAA;UAAA;AAWpD,sBACE,IACA,IACA,IAAA;AAEA,gBAAA,KAAA,GAAyB,IAAzB,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IAAmB,KAAnB,GAAA,IACA,KAAA,GAAyB,IAAzB,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IAAmB,KAAnB,GAAA,IACA,KAAA,GAAyB,IAAzB,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IAAmB,KAAnB,GAAA,IACM,KAAK,GAAA,KAAA,WAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAA,GACrD,KAAK,GAAA,KAAA,WAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAA,GACrD,KAAK,GAAA,KAAA,WAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAA,GACrD,KAAK,GAAA,KAAA,WAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAA;AAM3D,mBAAO,CAHG,GAAA,KAAA,YAAiB,EAAA,IAAM,GAAA,KAAA,YAAiB,EAAA,GACxC,GAAA,KAAA,YAAiB,EAAA,IAAM,GAAA,KAAA,YAAiB,EAAA,GACxC,GAAA,KAAA,YAAiB,EAAA,IAAM,GAAA,KAAA,YAAiB,EAAA,CAAA;UAAA;AAAA,sBAAA,IAAA,IAAA;AAAA,YAAA,CAAA,MAAA,QAAA,KAAA,GAAA,WAAA,MAAA,GAAA;AAAA,qBAAA,KAAA,GAAA,KAAA,IAAA,MAAA,EAAA,GAAA,KAAA,IAAA;AAAA,iBAAA,MAAA,GAAA;AAAA,mBAAA;UAAA;AAAA,cC7B9C,KAAA,WAAA;AAgCJ,wBAAY,IAAA;AAAsB,kBAAA,KAAA;AAAA,iBAAA,MAAA,EAAA,GAAA,GAAA,MAAA,MAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,UAAA,MAAA,GAAA,GAAA,MAAA,qBAAA,MAAA,GAAA,GAAA,MAAA,QAAA,MAAA,GAAA,GAAA,MAAA,kBAAA,KArBP,GAqBO,GAAA,MAAA,gBAAA,KApBT,GAoBS,GAAA,MAAA,MAAA,MAAA,GAAA,GAAA,MAAA,MAAA,MAAA,GAAA,GAAA,MAAA,UAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,kBAAA,MAAA,GAAA,GAAA,MAAA,WAAA,MAAA,GAAA,GAAA,MAAA,iCAAA,KAJM,GAIN,GAAA,MAAA,kBAAA,MAAA,GAAA,GAAA,MAAA,0BAAA,MAAA,GAAA,GAAA,MAAA,iBAAA,MAAA,GAAA,GAAA,MAAA,iBAAA,MAAA,GAAA,GAAA,MAAA,gCAAA,MAAA,GAAA,GAAA,MAAA,UAAA,MAAA,GAAA,GAAA,MAAA,iBAAA,MAAA,GAAA,GAAA,MAAA,eAsGV,SAAC,IAAA;AACvB,oBAAM,KAAQ,GAAK,gBAAA;AAEnB,oBAAA,CAAK;AACH,yBAAO;AAGT,oBACM,KADc,GAAM,YACF,UAAA,GAElB,KAAS,GAAA,KAAA,OAAA,GACT,KAAO,GAAA,KAAA,OAAA;AAIb,uBAHA,GAAA,KAAA,UAAe,IAAM,EAAA,GACrB,GAAA,KAAA,cAAmB,IAAQ,IAAU,EAAA,GAE9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA;cAAA,CAAA,GApHrC,KAAK,KAAK,GAAM,IAChB,KAAK,oBAAoB,GAAM,mBAC/B,KAAK,OAAO,GAAM,MAClB,KAAK,UAAU,GAAM,SACrB,KAAK,SAAS,GAAM,QACpB,KAAK,KAAK,GAAM,IAChB,KAAK,KAAK,GAAM,IAChB,KAAK,SAAS,GAAM,QACpB,KAAK,UAAU,GAAM,SACrB,KAAK,UAAU,oBAAI,OAEnB,KAAK,QAAQ,aAAa,qBAAqB,KAAK,EAAA,GACpD,KAAK,QAAQ,aACX,6BACA,KAAK,iBAAA,GAGP,KAAK,iBAAiB,GAAA,EAAW,GAAM,cAAA,GACvC,KAAK,iBAAA,CAAA,CAAiB,GAAM,eAAe,kBACvC,GAAM,eAAe,gBAEzB,KAAK,UAAU,GAAA,EAAW,GAAM,cAAA;YAAA;AAAA,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,sBAAA,OAmBlC,WAAA;AACE,qBAAO,GAAyB,KAAK,iBAAA;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAQvC,WAAA;AACE,kBAAM,KAAkB,KAAK,mBAAA;AAE7B,kBAAA,CAAK,MAAmB,GAAgB;AACtC,sBAAM,IAAI,MAAM,qCAAA;AAGlB,qBAAO,GAAgB,2BAA2B,YAAY,KAAK,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,UAAA,OAMrE,WAAA;AAC0B,mBAAK,mBAAA,EAEb,eAAe,KAAK,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,cAAA,OAStC,SAAkB,IAAA;AAAwD,kBAAzB,KAAyB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA;AACxE,mBAAK,UAAgC,GAAA,EAAW,EAAA,GAK5C,MACF,KAAK,OAAA;YAAA,EAAA,GAAA,EAAA,KAAA,SAAA,OAST,WAAA;AAAgC,kBAAnB,KAAmB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA;AAC9B,mBAAK,UAAU,GAAA,EAAW,KAAK,cAAA,GAK3B,MACF,KAAK,OAAA;YAAA,EAAA,GAAA,EAAA,KAAA,QAAA,OA8BT,SAAA,IAAA;AAAsE,kBAAA,KAAA,MAArD,KAAqD,GAArD,gBAAgB,KAAqC,GAArC,cACzB,KAAY,KAAK,oBAAA;AAEvB,kBAAK,IAAL;AAIA,oBAAI,KAAA,OACA,KAAA;AAkBJ,oBAAA,AAfS,OAeT,UAdI,OAAA,CAAmB,KAAK,kBAAA,CACtB,MAAkB,KAAK,mBAE3B,MAAA,OAAQ,AAID,OAJC,UAKN,OAAA,CAAiB,KAAK,gBAAA,CACpB,MAAgB,KAAK,iBAEzB,MAAA,OAGG,MAAU,IAAf;AAYA,sBAeI,IAAS,IAfP,KAAS,GAAU,UAAA,GACnB,KAAY,GAAU,aAAA,GACtB,KAAU,GAAU,WAAA,GACpB,KAAO,GAAU,cAAA,GAEjB,KAAU,GAAU,MAAM,GAAG,CAAA,GAC7B,KAAU,GAAU,MAAM,GAAG,CAAA,GAC7B,KAAU,GAAU,MAAM,GAAG,CAAA,GAG7B,KAAS,GAAA,KAAA,OAAA;AACf,qBAAA,KAAA,YAAiB,IAAQ,IAAQ,IAAU,GAAK,KAAK,IAAO,GAAQ,EAAA,GACpE,GAAA,KAAA,YAAiB,IAAQ,IAAQ,IAAU,GAAK,KAAK,IAAO,GAAQ,EAAA,GACpE,GAAA,KAAA,YAAiB,IAAQ,IAAQ,IAAU,GAAK,KAAK,IAAO,GAAQ,EAAA;AAIpE,sBAAM,KAAsB,GAAA,EAAA,gBAAA,EAEzB,SAAA,EACA,UAAU,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,EACvC,qBAAqB,IAAS,CAAC,GAAG,GAAG,CAAA,CAAA,EACrC,qBAAqB,IAAS,CAAC,GAAG,GAAG,CAAA,CAAA,GAElC,KAA4B,GAAA,EAAA,gBAAA,EAE/B,SAAA,EACA,qBAAqB,CAAC,GAAG,GAAG,CAAA,GAAI,EAAA,EAChC,qBAAqB,CAAC,GAAG,GAAG,CAAA,GAAI,EAAA,EAChC,UAAA,CAAW,GAAO,IAAA,CAAK,GAAO,IAAA,CAAK,GAAO,EAAA;AAEzC,wBACF,MAAK,iBAAiB,IACtB,KAAU,GAAA,EAAA,gBAAA,EAEP,SAAS,GAAoB,UAAA,CAAA,EAC7B,MAAA,IAAU,GAAG,CAAA,EACb,SAAS,GAA0B,UAAA,CAAA,IAGpC,MACF,MAAK,eAAe,IACpB,KAAU,GAAA,EAAA,gBAAA,EAEP,SAAS,GAAoB,UAAA,CAAA,EAC7B,MAAM,GAAA,IAAO,CAAA,EACb,SAAS,GAA0B,UAAA,CAAA,IAGzB,KAAK,UAAA,EAEb,QAAQ,SAAC,IAAA;AACd,wBAAM,KAAc,GAAM,aAEpB,KAAM,GAAY,cAAA;AAEpB,0BACF,GAAA,KAAA,SAAc,IAAK,IAAK,GAAQ,UAAA,CAAA,GAG9B,MACF,GAAA,KAAA,SAAc,IAAK,IAAK,GAAQ,UAAA,CAAA,GAGlC,GAAY,cAAc,EAAA,GAE1B,GAAK,mBAAA,EAAqB,OAAA;kBAAA,CAAA,GAG5B,KAAK,mBAAA,EAAqB,OAAA;gBAAA;cAAA;YAAA,EAAA,GAAA,EAAA,KAAA,uBAAA,OAG5B,WAAA;AACE,kBAAM,KAAQ,KAAK,gBAAA;AAEnB,kBAAI;AACF,uBAAO,GAAM,YAAY,UAAA,EAAY,aAAA;YAAA,EAAA,GAAA,EAAA,KAAA,mBAAA,OAQzC,WAAA;AACE,qBAAO,KAAK,UAAA,EAAY;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAO1B,WAAA;AACE,qBAAO,MAAM,KAAK,KAAK,QAAQ,OAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OAQjC,SAAgB,IAAA;AACd,qBAAO,KAAK,QAAQ,IAAI,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAO1B,SAAiB,IAAA;AACf,mBAAK,gBAAA,GACL,KAAK,UAAU,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAOjB,SAAmB,IAAA;AACjB,kBAAM,KAAQ,KAAK,SAAS,EAAA;AACvB,mBAIY,MAAK,YAAA,EACb,eAAe,GAAM,WAAA,GAC9B,KAAK,QAAQ,OAAO,EAAA,KALlB,QAAQ,KAAR,SAAA,OAAsB,IAAtB,mCAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,gBAAA,OAYJ,SAAoB,IAAA;AAAgC,kBAAA,KAAA;AAClD,iBAAU,QAAQ,SAAC,IAAA;AACjB,mBAAK,YAAY,EAAA;cAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAQrB,SAAiB,IAAA;AAAiC,kBAAA,KAAA;AAChD,iBAAO,QAAQ,SAAC,IAAA;AAAD,uBAAW,GAAK,SAAS,EAAA;cAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OAW1C,SAAgB,IAAA;AACd,kBAAa,KAA0B,GAA/B,KAAe,KAAgB,GAAhB,aACjB,KAAkB,KAAK,mBAAA;AAE7B,kBAAK,MAAA,CAAmB,GAAgB,kBAAxC;AAOA,oBAAA,CAAK,MAAA,CAAa;AAChB,wBAAM,IAAI,MAAM,uDAAA;AAGJ,qBAAK,SAAS,EAAA,IAE1B,QAAQ,KAAR,SAAA,OAAsB,IAAtB,mCAAA,CAAA,IAIe,MAAK,YAAA,EACb,SAAS,EAAA,GAClB,KAAK,QAAQ,IAAI,IAAU,OAAO,OAAO,CAAA,GAAI,EAAA,CAAA;cAAA;AAlB3C,wBAAQ,KAAR,2BAAA,OAC6B,IAD7B,sCAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,mBAAA,OAwBJ,WAAA;AACE,mBAAK,YAAA,EAAc,mBAAA,GACnB,KAAK,UAAU,oBAAI;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAOrB,WAAA;AACE,mBAAK,gCAAA,MACL,KAAK,YAAA,GACL,KAAK,gCAAA;YAAgC,EAAA,GAAA,EAAA,KAAA,oBAAA,OAOvC,SAA2B,IAAA;AACzB,mBAAK,gCAAA,MACL,KAAK,UAAU,EAAA,GACf,KAAK,gCAAA;YAAgC,EAAA,GAAA,EAAA,KAAA,kCAAA,OAiBvC,SAAuC,IAAW,IAAY,IAAA;AAE5D,kBAFoE,IAE9D,KAAI,GAAO,IACX,KAAI,GAAO,IACX,KAAI,GAAO,IACX,KAAI,KAAI,GAAW,KAAK,KAAI,GAAW,KAAK,KAAI,GAAW,IAG3D,KAAS,GAAU,UAAA,GAGnB,KAAgB,CAAA,GAX8C,KAAA,SAAA,IAAA,IAAA;AAAA,oBAAA,KAAA,AAAA,OAAA,UAAA,eAAA,GAAA,OAAA,aAAA,GAAA;AAAA,oBAAA,CAAA,IAAA;AAAA,sBAAA,MAAA,QAAA,EAAA,KAAA,MAAA,SAAA,IAAA,IAAA;AAAA,wBAAA,IAAA;AAAA,0BAAA,AAAA,OAAA,MAAA;AAAA,+BAAA,GAAA,IAAA,EAAA;AAAA,0BAAA,KAAA,OAAA,UAAA,SAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA;AAAA,6BAAA,AAAA,OAAA,YAAA,GAAA,eAAA,MAAA,GAAA,YAAA,OAAA,AAAA,OAAA,SAAA,AAAA,OAAA,QAAA,MAAA,KAAA,EAAA,IAAA,AAAA,OAAA,eAAA,2CAAA,KAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA;oBAAA;kBAAA,EAAA,EAAA,MAAA,MAAA,MAAA,AAAA,OAAA,GAAA,UAAA,UAAA;AAAA,0BAAA,MAAA;AAAA,wBAAA,KAAA,GAAA,KAAA,WAAA;oBAAA;AAAA,2BAAA,EAAA,GAAA,IAAA,GAAA,WAAA;AAAA,6BAAA,MAAA,GAAA,SAAA,EAAA,MAAA,KAAA,IAAA,EAAA,MAAA,OAAA,OAAA,GAAA,MAAA;oBAAA,GAAA,GAAA,SAAA,IAAA;AAAA,4BAAA;oBAAA,GAAA,GAAA,GAAA;kBAAA;AAAA,wBAAA,IAAA,UAAA,uIAAA;gBAAA;AAAA,oBAAA,IAAA,KAAA,MAAA,KAAA;AAAA,uBAAA,EAAA,GAAA,WAAA;AAAA,uBAAA,GAAA,KAAA,EAAA;gBAAA,GAAA,GAAA,WAAA;AAAA,sBAAA,KAAA,GAAA,KAAA;AAAA,yBAAA,KAAA,GAAA,MAAA;gBAAA,GAAA,GAAA,SAAA,IAAA;AAAA,uBAAA,MAAA,KAAA;gBAAA,GAAA,GAAA,WAAA;AAAA,sBAAA;AAAA,0BAAA,AAAA,GAAA,UAAA,QAAA,GAAA,OAAA;kBAAA,UAAA;AAAA,wBAAA;AAAA,4BAAA;kBAAA;gBAAA,EAAA;cAAA,EAStD,KAAK,UAAU,EAAA,CAAA;AATuC,kBAAA;AAapE,qBAAA,GAAA,EAAA,GAAA,CAAA,MAAA,GAAA,EAAA,GAAA,QAA0B;AAAA,sBAExB,KAAA,GAFwB,GAAA,OAExB,CAAA,GAAA,KAAA,GAAA,GAAA,IAAA,CAAA,GAAQ,KAAR,GAAA,IAAY,KAAZ,GAAA,IAAgB,KAAhB,GAAA,IAAA,KAAA,GAAA,GAAA,IAAA,CAAA,GAAsB,KAAtB,GAAA,IAA0B,KAA1B,GAAA,IAA8B,KAA9B,GAAA;AAEA,sBAAI,KAAK,MAAK,MAAM,KAAK,MAAK,MAAM,KAAK,MAAK,OAAQ,GAAtD;AAGA,wBAAM,KAAoB,GACxB,CAAC,IAAI,IAAI,EAAA,GACT,CAAC,IAAI,IAAI,EAAA,GACT,CAAC,IAAG,IAAG,IAAG,EAAA,CAAA;AAGR,yBAAK,YAAY,IAAmB,EAAA,KACtC,GAAc,KAAK,EAAA;kBAAA;gBAAA;cAAA,SA3B6C,IAAA;AAAA,mBAAA,EAAA,EAAA;cAAA,UAAA;AAAA,mBAAA,EAAA;cAAA;AA+BpE,qBAAO;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAWT,WAAA;AAAiE,kBAA3C,KAA2C,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA,IACzD,KAAW,KAAK,YAAA,GAChB,KAAiB,GAAA,EAAW,KAAK,UAAA,CAAA,GAEjC,KAAS,GAAS,yBAAA,GAClB,KAAa,CAAC,GAAG,GAAG,CAAA,GACpB,KAAY,KAAK,oBAAA;AAGvB,kBAAI,IAAW;AACb,oBAAM,KAAM,GAAU,WAAA;AAEtB,mBAAO,KAAK,GAAO,KAAK,GAAI,KAAK,GACjC,GAAO,KAAK,GAAO,KAAK,GAAI,KAAK,GACjC,GAAO,KAAK,GAAO,KAAK,GAAI,KAAK,GACjC,GAAO,KAAK,GAAO,KAAK,GAAI,KAAK,GACjC,GAAO,KAAK,GAAO,KAAK,GAAI,KAAK,GACjC,GAAO,KAAK,GAAO,KAAK,GAAI,KAAK;cAAA;AAGnC,kBAAM,KAAe,KAAK,mBAAA,GACpB,KAA0B,GAAa,mBAAA,GACvC,KAAiB,GAAa,UAAA;AAWpC,kBANA,GAAa,aAAa,EAAA,GAE1B,GAAW,KAAM,IAAO,KAAK,GAAO,MAAM,GAC1C,GAAW,KAAM,IAAO,KAAK,GAAO,MAAM,GAC1C,GAAW,KAAM,IAAO,KAAK,GAAO,MAAM,GAEtC,IAAW;AACb,oBAAM,KAAa,GAAU,cAAA,GACvB,KAAY,GAAW,IAAI,SAAC,IAAA;AAAD,yBAAO,KAAK,MAAM,KAAI,CAAA;gBAAA,CAAA,GAEjD,KAAM,CAAC,GAAU,IAAI,GAAU,IAAI,GAAU,EAAA;AACnD,mBAAU,aAAa,IAAK,EAAA;cAAA;AAG9B,kBAQI,IARJ,KACE,KAAK,oCAAoC,IAAQ,IAAQ,EAAA,GADnD,KAAR,GAAQ,YAAY,KAApB,GAAoB,aAGd,KAAa,CAAC,KAAK,QAAQ,KAAK,OAAA,GAEhC,KAAoB,KAAa,IACjC,KAAoB,GAAW,KAAK,GAAW;AAIrD,kBAAI,KAAoB;AAEtB,qBAAS,KAAc;mBAClB;AACL,oBAAM,KAAc,KAAoB;AAExC,qBAAU,KAAc,KAAe;cAAA;AAIzC,kBAAM,KAAgB,MAAM,IAExB,KAAK,GAAO,KAAK,GAAO,IACxB,KAAK,GAAO,KAAK,GAAO,IACxB,KAAK,GAAO,KAAK,GAAO;AAO5B,mBAAoB,AAHpB,MAHA,OAAM,MACN,OAAM,MACN,OAAM,QAIc,IAAI,IAAM;AAK9B,kBAAM,KAAW,MAFjB,MAA6B,MAApB,KAAK,KAAK,EAAA;AAMf,mBAAK,IAAI,GAAA,EAAA,IAAY,IAAQ,EAAA,CAAA,IAAoB,SACnD,GAAa,UAAA,CAAW,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA;AAGvD,kBAAI,KAAkB;AAElB,oBAA4B,MAC9B,MAAkB,KAAK,gCAAgC,EAAA,IAGzD,GAAa,cACX,GAAgB,IAChB,GAAgB,IAChB,GAAgB,EAAA,GAElB,GAAa,YACX,GAAgB,KAAK,KAAW,GAAgB,IAChD,GAAgB,KAAK,KAAW,GAAgB,IAChD,GAAgB,KAAK,KAAW,GAAgB,EAAA,GAGlD,GAAS,yBAAyB,EAAA,GAElC,GAAa,iBAAiB,EAAA,GAG9B,GAAa,iBAAiB,EAAA,GAG9B,GAAa,uBAAA,CACV,GAAgB,IAAA,CAChB,GAAgB,IAAA,CAChB,GAAgB,EAAA,GAInB,GAAa,iBAAiB,IAAU,KAAW,GAAA;AAEnD,kBAAM,KAAqB,EACzB,MAAM,oBACN,UAAA,GAAA;AAOF,kBAFA,GAAS,YAAY,EAAA,GAAA,CAEhB,KAAK,iCAAA,CAAkC,KAAK,gBAAgB;AAC/D,oBAAM,KAAc,EAClB,gBAAgB,IAChB,QAAQ,KAAK,UAAA,GACb,QAAQ,KAAK,QACb,SAAS,KAAK,SACd,YAAY,KAAK,IACjB,mBAAmB,KAAK,kBAAA;AAI1B,kBAAa,KAAK,SAAS,GAAA,iBAAwB,EAAA;cAAA;AAGrD,qBAAA;YAAO,EAAA,GAAA,EAAA,KAAA,mCAAA,OAaT,SAAwC,IAAA;AAEtC,kBAAA,KAAgD,KAAK,UAAA,GAA7C,KAAR,GAAQ,YAA6B,KAArC,GAAoB,iBACd,KAAgB,KAAK,+BACzB,IACA,IACA,EAAA,GAGE,KAAI,GACJ,KAAI,GACJ,KAAI;AASR,qBAPA,GAAc,QAAQ,SAAA,IAAA;AAAiC,oBAAA,KAAA,GAAA,IAAA,CAAA,GAA/B,KAA+B,GAAA,IAAtB,KAAsB,GAAA,IAAb,KAAa,GAAA;AACrD,sBAAK,IACL,MAAK,IACL,MAAK;cAAA,CAAA,GAIA,CACL,KAAI,GAAc,QAClB,KAAI,GAAc,QAClB,KAAI,GAAc,MAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAStB,WAAA;AACE,qBAA0B,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAOjC,WAAA;AAGE,qBAFiB,KAAK,YAAA,EAEN,gBAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAOlB,WAAA;AACE,kBAGI,IAHE,KAAY,KAAK,mBAAA;AASvB,qBAJI,sBAAsB,MACxB,MAAgB,GAAU,iBAAA,IAGrB,EACL,QAAgB,GAAU,UAAA,GAC1B,iBAAyB,GAAU,mBAAA,GACnC,eAAuB,GAAU,iBAAA,GAWjC,UAAkB,KAAK,YAAY,GAAU,YAAA,CAAA,GAC7C,YAAoB,KAAK,YAAY,GAAU,cAAA,CAAA,GAG/C,oBAAoB,GAAU,sBAAA,GAC9B,eAAe,GAAU,iBAAA,GACzB,WAAW,GAAU,aAAA,GACrB,eAAA,GAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAQJ,SAAiB,IAAA;AACf,kBAAM,KAAY,KAAK,mBAAA,GACjB,KAAiB,GAAA,EAAW,KAAK,UAAA,CAAA,GACjC,KAAgB,OAAO,OAAO,CAAA,GAAI,IAAgB,EAAA,GAEtD,KAQE,GARF,QACA,KAOE,GAPF,iBACA,KAME,GANF,eACA,KAKE,GALF,UACA,KAIE,GAJF,YACA,KAGE,GAHF,eACA,KAEE,GAFF,WACA,KACE,GADF;AAuCF,kBAAA,AApCI,OAoCJ,UAnCE,GAAU,UAAU,EAAA,GAAA,AAGlB,OAHkB,UAIpB,GAAU,yBAAA,CACP,GAAgB,IAAA,CAChB,GAAgB,IAAA,CAChB,GAAgB,EAAA,GAAA,AAIjB,OAJiB,UAKnB,GAAU,iBAAiB,EAAA,GAAA,AAGzB,OAHyB,UAI3B,GAAU,YAAV,MAAA,IAAS,GAAgB,KAAK,YAAY,EAAA,CAAA,CAAA,GAAA,AAGxC,OAHwC,UAI1C,GAAU,cAAV,MAAA,IAAS,GAAkB,KAAK,YAAY,EAAA,CAAA,CAAA,GAAA,AAG1C,OAH0C,UAI5C,GAAU,iBAAiB,EAAA,GAAA,AAGzB,OAHyB,UAI3B,GAAU,aAAa,EAAA,GAAA,AAGrB,OAHqB,UAGU,sBAAsB,MACvD,GAAU,iBAAiB,EAAA,GAAA,CAGxB,KAAK,iCAAA,CAAkC,KAAK,gBAAgB;AAC/D,oBAAM,KAAc,EAClB,gBAAA,IACA,QAAQ,IACR,QAAQ,KAAK,QACb,SAAS,KAAK,SACd,YAAY,KAAK,IACjB,mBAAmB,KAAK,kBAAA;AAG1B,kBAAa,KAAK,SAAS,GAAA,iBAAwB,EAAA;cAAA;AAGjD,mBAAK,QAAQ,GAAA,eACE,KAAK,YAAA,EAEb,yBAAA;YAAA,EAAA,GAAA,EAAA,KAAA,uCAAA,OAIb,SAA4C,IAAQ,IAAQ,IAAA;AAC1D,kBAAM,KAAgB,KAAK,YAAY,EAAA,GACjC,KAAmB,KAAK,YAAY,EAAA,GAEtC,KAAY,GAAA,KAAA,OAAA;AAEhB,iBAAA,KAAA,MAAW,IAAW,IAAQ,EAAA,GAE9B,KAAY,CAAA,CAAE,GAAU,IAAA,CAAK,GAAU,IAAA,CAAK,GAAU,EAAA;AAEtD,kBAAI,KAAY,GAAA,EAAA,gBAAA,EAEb,SAAA,EACA,qBAAqB,IAAQ,CAAC,GAAG,GAAG,CAAA,CAAA;AAEvC,iBAAc,QAAQ,SAAC,IAAA;AAAD,uBAAQ,GAAU,MAAM,EAAA;cAAA,CAAA;AAK9C,uBAFI,KAAO,IAAA,GACP,KAAA,KAAO,GACF,KAAI,GAAG,KAAI,GAAG,MAAK;AAC1B,oBAAM,KAAI,GAAc,IAAG;AACvB,qBAAI,MACN,MAAO,KAEL,KAAI,MACN,MAAO;cAAA;AAIX,mBAAY,GAAA,EAAA,gBAAA,EAET,SAAA,EACA,qBAAqB,IAAW,CAAC,GAAG,GAAG,CAAA,CAAA,GAE1C,GAAiB,QAAQ,SAAC,IAAA;AAAD,uBAAQ,GAAU,MAAM,EAAA;cAAA,CAAA;AAKjD,uBAFI,KAAO,IAAA,GACP,KAAA,KAAO,GACF,KAAI,GAAG,KAAI,GAAG,MAAK;AAC1B,oBAAM,KAAI,GAAiB,IAAG;AAC1B,qBAAI,MACN,MAAO,KAEL,KAAI,MACN,MAAO;cAAA;AAIX,qBAAO,EAAE,YAAY,KAAO,IAAM,aAAa,KAAO,GAAA;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAGxD,SAAY,IAAA;AACV,qBAAO,CACL,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,GAC9B,CAAC,GAAO,IAAI,GAAO,IAAI,GAAO,EAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAUlC,SAAY,IAAe,IAAA;AACzB,kBAAA,KAAA,GAA6C,IAA7C,CAAA,GAAO,KAAP,GAAA,IAAa,KAAb,GAAA,IAAmB,KAAnB,GAAA,IAAyB,KAAzB,GAAA,IAA+B,KAA/B,GAAA,IAAqC,KAArC,GAAA,IACA,KAAA,GAAkB,IAAlB,CAAA,GAAO,KAAP,GAAA,IAAU,KAAV,GAAA,IAAa,KAAb,GAAA;AACA,qBAAA,CAAI,MAAI,MAAQ,KAAI,MAAQ,KAAI,MAAQ,KAAI,MAAQ,KAAI,MAAQ,KAAI;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAoBtE,SAAU,IAAA;AACR,kBAAA,KAAA,GAAyC,KAAK,YAAY,EAAA,GAA1D,CAAA,GAAO,KAAP,GAAA,IAAW,KAAX,GAAA,IAAe,KAAf,GAAA,IAAmB,KAAnB,GAAA,IAAuB,KAAvB,GAAA,IAA2B,KAA3B,GAAA,IAA+B,KAA/B,GAAA,IAAmC,KAAnC,GAAA;AACA,qBAAO,CACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,GACL,CAAC,IAAI,EAAA,CAAA;YAAA,EAAA,CAAA,GAAA,CAAA,EAAA,KAAA,8BAAA,KAvzBT,WAAA;AACE,qBAAA;YAAO,EAAA,CAAA,CAAA,GAAA;UAAA,EAjEL,GA43BN,KAAA,IAAA,KAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA;AC93BA,sBAAuB,IAAW,IAAA;AAChC,eAAM,eAAe,KAAK,eAAA;AAE1B,gBAAM,KAAY,GAAA,KAAA,OAAA;AASlB,eAAU,sBAAsB,SAAC,IAAQ,IAAO,IAAA;AAC9C,kBAAM,KAAS,GAAA,KAAA,OAAA;AAEf,kBAAI,GAAM,kBAAkB;AAC1B,oBAAM,KAAQ,IAAI,GAAM;AAMxB,uBALA,GAAA,KAAA,IAAS,SAAS,IAAO,IAAO,EAAA,GAEhC,GAAA,KAAA,KAAU,IAAQ,GAAM,gBAAA,GACxB,GAAA,KAAA,MAAW,IAAQ,IAAQ,OAAA,GAC3B,GAAA,KAAA,UAAe,IAAQ,EAAA,GAChB;cAAA;AAGT,iBAAA,KAAA,SAAc,EAAA;AAEd,kBAAI,KAAU,GAAM,cAAc,IAC9B,KAAU,GAAM,cAAc;AAElC,kBAAI,GAAM,qBAAqB;AAC7B,oBAAM,KACgD,MAAnD,IAAM,cAAc,KAAK,GAAM,cAAc;AAChD,qBAAU,KAAiB,GAAM,eACjC,KAAU,KAAiB,GAAM;cAAA;AAGnC,kBAAM,KAAS,KAAU,IACnB,KAAS,CACb,KAAY,MAAQ,KAAK,KAAU,GACnC,KAAY,MAAO,KAAK,KAAU,CAAA;AAGpC,kBAAI,GAAM,oBAAoB;AAE5B,oBAAM,KAAQ,GAAM,gBAAgB,IAC9B,KAAS,GAAM,eAEf,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO;AAE7C,mBAAA,KAAA,MAAW,IAAW,IAAM,IAAM,IAAM,IAAM,GAAO,IAAI,GAAO,EAAA,GAChE,GAAA,KAAA,UAAe,IAAW,EAAA;cAAA,OACrB;AAAA,oBAAI,GAAM;AACf,wBAAM,IAAI,MAAM,mDAAA;AAEhB,oBACI,IACA,IAFE,KAAM,KAAK,IAAI,GAAA,EAAA,mBAA2B,GAAM,SAAA,IAAa,CAAA;AAAA,gBAG/D,GAAM,2BAHyD,OAIjE,MAAQ,KAAU,IAClB,KAAU,KAAU,KAAO,MAE3B,MAAQ,KAAU,KAAM,IACxB,KAAS,KAAU;AAGrB,oBAAM,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,IAAM,aAAa,KAAK,KAAO,IACvC,KAAQ,GAAO,IACf,KAAO,GAAO;AAEpB,mBAAU,KAAM,IAAM,KAAU,MAAO,KACvC,GAAU,KAAM,IAAM,KAAU,MAAO,KACvC,GAAU,KAAM,MAAO,MAAS,MAAO,KACvC,GAAU,KAAM,MAAO,MAAS,MAAO,KACvC,GAAU,MAAA,CAAQ,MAAQ,MAAS,MAAO,KAC1C,GAAU,MAAA,IACV,GAAU,MAAA,KAAc,KAAQ,KAAS,MAAO,KAChD,GAAU,MAAM;cAAA;AAKlB,qBAFA,GAAA,KAAA,KAAU,IAAQ,EAAA,GAEX;YAAA;UAAA;AAUX,cAAM,KAAiB,EACrB,eAAe,MACf,qBAAA,MAAqB;AAGhB,sBAAgB,IAAW,IAAA;AAA2B,gBAApB,KAAoB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KAAJ,CAAA;AACvD,mBAAO,OAAO,IAAO,IAAgB,EAAA,GAErC,GAAA,EAAA,OAAiB,IAAW,IAAO,EAAA,GAEnC,GAAA,EAAA,OAAa,IAAW,IAAO,CAAC,iBAAiB,qBAAA,CAAA,GAGjD,GAAc,IAAW,EAAA;UAAA;AAKpB,cAIP,KAAA,EAAiB,aAJU,GAAA,EAAA,YAAkB,IAAQ,eAAA,GAIvB,QAAA,GAAA;ACtJ9B,sBAAW,IAAE,IAAE,IAAE,IAAA;AAAG,mBAAO,IAAI,OAAI,MAAE,UAAU,SAAU,IAAE,IAAA;AAAG,0BAAW,IAAA;AAAG,oBAAA;AAAI,qBAAE,GAAE,KAAK,EAAA,CAAA;gBAAA,SAAU,IAAN;AAAS,qBAAE,EAAA;gBAAA;cAAA;AAAI,0BAAW,IAAA;AAAG,oBAAA;AAAI,qBAAE,GAAE,MAAM,EAAA,CAAA;gBAAA,SAAU,IAAN;AAAS,qBAAE,EAAA;gBAAA;cAAA;AAAI,0BAAW,IAAA;AAAG,oBAAI;AAAE,mBAAE,OAAK,GAAE,GAAE,KAAA,IAAQ,MAAE,GAAE,OAAM,cAAa,KAAE,KAAE,IAAI,GAAE,SAAU,IAAA;AAAG,qBAAE,EAAA;gBAAA,CAAA,GAAO,KAAK,IAAE,EAAA;cAAA;AAAG,iBAAG,MAAE,GAAE,MAAM,IAAE,MAAG,CAAA,CAAA,GAAK,KAAA,CAAA;YAAA,CAAA;UAAA;AAAW,gBAAM,KAAE,CAAC,gBAAe,gBAAe,oBAAmB,mBAAkB,mBAAkB,gBAAe,mBAAkB,iBAAgB,oBAAmB,iBAAgB,qBAAoB,kBAAiB,kBAAiB,mBAAkB,mBAAkB,sBAAqB,aAAY,aAAY,qBAAoB,mBAAkB,iBAAgB,aAAY,UAAS,UAAS,UAAS,UAAS,kBAAiB,eAAc,eAAc,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,kBAAiB,mBAAkB,mBAAkB,mBAAkB,mBAAkB,mBAAkB,WAAU,QAAA;AAAU,sBAAW,IAAA;AAAG,mBAAS,GAAE,YAAA,EAAc,QAAQ,sBAAqB,IAAA,EAAM,QAAQ,gDAA+C,EAAA;UAAA;AAAI,gBAAM,KAAE,AAAA,OAAoB,UAApB,aAA2B,KAAE,OAAA;AAAM,gBAAG;AAAE;AAAO,kBAAA,EAAM,WAAU,IAAE,UAAS,IAAE,gBAAe,OAAG,OAAO,WAAU,KAAE,sBAAsB,KAAK,EAAA,GAAG,KAAE,AAAS,OAAT,UAAY,AAAa,OAAb,cAAgB,KAAE,KAAA,CAAI,OAAO;AAAS,mBAAM,EAAC,QAAO,IAAE,UAAS,WAAW,KAAK,EAAA,KAAI,MAAG,IAAE,YAAW,sBAAsB,KAAK,EAAA,EAAA;UAAA,GAA9P,GAA09D,KAAE,CAAA,GAAG,KAAE,CAAA;AAAG,sBAAW,IAAE,IAAA;AAAG,gBAAG,OAAI;AAAE,qBAAO;AAAE,kBAAM,KAAE;AAAE,eAAE,SAAO,GAAE,UAAS,MAAE,IAAE,KAAE;AAAG,gBAAI,KAAE,GAAE,QAAO,KAAE,GAAE;AAAO,mBAAK,KAAE,KAAG,GAAE,WAAA,CAAA,CAAa,EAAA,MAAK,GAAE,WAAA,CAAA,CAAa,EAAA;AAAI,oBAAI;AAAI,gBAAI,IAAE,KAAE;AAAE,mBAAK,KAAE,MAAG,GAAE,WAAW,EAAA,MAAK,GAAE,WAAW,EAAA;AAAI;AAAI,gBAAG,MAAG,IAAE,MAAG,IAAE,AAAI,OAAJ;AAAM,qBAAO;AAAE,gBAAI,IAAE,IAAE,KAAE,GAAE,KAAE,GAAE,KAAE;AAAE,mBAAK,KAAE;AAAG,iBAAE,MAAG,GAAE,WAAW,KAAE,EAAA,GAAG,GAAE,MAAA,EAAK;AAAE,mBAAK,KAAE;AAAG,mBAAI,KAAE,GAAE,WAAW,KAAE,EAAA,GAAG,KAAE,MAAI,KAAE,IAAE,KAAE,GAAE,KAAE,IAAE;AAAI,qBAAE,OAAI,GAAE,MAAG,KAAE,KAAE,GAAE,KAAE,GAAE,KAAG,KAAE,GAAE,MAAG,KAAE,KAAE,KAAE,KAAE,KAAE,IAAE,KAAE,KAAE,KAAE,KAAE,IAAE;AAAE,mBAAO;UAAA;AAAE,sBAAW,IAAA;AAAG,mBAAO,AAAM,MAAN;UAAM;AAAE,gBAAM,WAAU,MAAA;YAAM,YAAY,IAAA;AAAG,oBAAM,EAAA,GAAG,OAAO,eAAe,MAAA,WAAgB,SAAA;YAAA;UAAA;AAAY,gBAAM,KAAE,CAAA,EAAE,aAAY,KAAE,CAAC,GAAE,IAAG,IAAG,EAAA,GAAI,cAAa,KAAE,CAAC,GAAE,IAAG,IAAG,EAAA,GAAI,UAAS,KAAE,CAAA,GAAG,WAAU,IAAE,8BAA6B,KAAA,OAAK,eAAc,KAAE,0DAAuD,CAAA,MAAK,GAAA,QAAE,QAAO,QAAc,aAAA;AAAa,kBAAM,KAAE,CAAA;AAAG,gBAAG;AAAE,qBAAM,EAAC,MAAK,GAAE,MAAK,MAAA;AAAO,kBAAA,EAAM,QAAO,KAAA,CAAA,CAAK,CAAM,MAAN,OAAM,SAAS,GAAE,SAAQ,UAAS,KAAA,CAAA,CAAK,CAAM,MAAN,OAAM,SAAS,GAAE,WAAU,YAAW,KAAE,OAAO,QAAO,gBAAe,KAAG,QAAG,GAAA,QAAE,QAAO,QAAc,aAAA;AAAa,oBAAM,KAAA,MAAQ,MAAM,GAAG,MAAK,IAAA,EAAK,KAAM,QAAG,GAAE,KAAA,CAAA;AAAS,kBAAG,SAAS,GAAE,MAAA,EAAQ,MAAM,GAAA,EAAK,IAAG,EAAA,IAAI;AAAE,sBAAM,IAAI,GAAE,uEAAA;AAAyE,qBAAO;YAAA,CAAA,MAAO;AAAE,gBAAA,EAAI,UAAS,OAAG;AAAE,kBAAM,KAAE,CAAC,IAAE,IAAE,IAAE,IAAE,OAAI,GAAE,QAAO,IAAE,KAAI,IAAE,KAAI,IAAE,UAAS,IAAE,MAAK,IAAE,MAAK,GAAA;AAAI,gBAAI,IAAE,KAAE;AAAG,gBAAG;AAAE,mBAAE,GAAE,EAAA,GAAG,KAAE,CAAC,EAAA;iBAAO;AAAC,oBAAM,KAAE,MAAG,SAAS,IAAE,KAAA,OAAE;AAAI,sBAAM,KAAE,EAAC,OAAA,OAAS,WAAA,OAAa,OAAA,OAAS,8BAA6B,IAAE,iBAAgB,oBAAmB,SAAA,MAAQ;AAAI,sBAAA,OAAU,GAAE;AAAgB,sBAAM,KAAE,OAAO,SAAS,cAAc,QAAA,GAAU,KAAE,GAAE,WAAW,SAAQ,EAAA,KAAI,GAAE,WAAW,sBAAqB,EAAA;AAAG,uBAAO,AAAM,MAAN,OAAQ,KAAA;cAAE,EAAQ,AAAM,MAAN,OAAM,SAAS,GAAE,YAAW,EAAA;AAAG,kBAAA,CAAI;AAAE,uBAAO,GAAE,GAAE,mBAAA;AAAqB,oBAAM,KAAE,GAAE,aAAa,2BAAA;AAA6B,kBAAG,MAAI,MAAE,GAAE,aAAa,GAAE,uBAAA,IAAA,CAA2B;AAAE,uBAAO,GAAE,GAAE,UAAA;AAAY,mBAAE,IAAE,KAAE,GAAE,EAAA,GAAG,KAAE,SAAS,IAAE,IAAE,IAAA;AAAG,uBAAM,AAAc,OAAd,cAAniH,SAAW,IAAE,IAAE,IAAA;AAAG,sBAAA,CAAI;AAAE,2BAAM,CAAC,EAAA;AAAG,wBAAM,KAAE,SAAS,IAAA;AAAG,0BAA8d,KAAE,GAAE,aAAa,KAAA,GAAO,KAAE,GAAE,aAAa,KAAA,GAAO,KAAE,GAAE,cAAA;AAAgB,wBAAA,CAAK,OAAG,MAAG;AAAG;AAAO,uBAAE,aAAa,IAA9jB,gMAAA,GAAmkB,GAAE,aAAa,IAA/Y,kRAAA,GAAoZ,GAAE,cAAc,EAAA,GAAG,GAAE,cAAc,EAAA,GAAG,GAAE,aAAa,IAAE,EAAA,GAAG,GAAE,aAAa,IAAE,EAAA,GAAG,GAAE,YAAY,EAAA,GAAG,GAAE,aAAa,IAAE,EAAA,GAAG,GAAE,aAAa,IAAE,EAAA,GAAG,GAAE,aAAa,EAAA,GAAG,GAAE,aAAa,EAAA,GAAG,GAAE,WAAW,EAAA;AAAG,0BAAM,KAAE,GAAE,aAAA;AAAe,uBAAE,WAAW,OAAM,EAAA,GAAG,GAAE,WAAW,OAAM,IAAI,aAAa,CAAA,IAAE,IAAK,GAAE,GAAA,IAAK,GAAA,IAAK,GAAE,CAAA,CAAA,GAAI,KAAA;AAAO,0BAAM,KAAE,GAAE,kBAAkB,IAAE,WAAA;AAAa,uBAAE,oBAAoB,IAAE,GAAE,MAAA,OAAQ,GAAE,CAAA,GAAG,GAAE,wBAAwB,EAAA,GAAG,GAAE,WAAW,GAAE,GAAE,GAAE,CAAA,GAAG,GAAE,MAAM,KAAA,GAAO,GAAE,SAAS,GAAE,GAAE,GAAE,CAAA,GAAG,GAAE,WAAW,GAAE,GAAE,CAAA;AAAG,0BAAM,KAAE,IAAI,WAAW,CAAA;AAAG,2BAAO,GAAE,WAAW,GAAE,GAAE,GAAE,GAAE,MAAK,MAAK,EAAA,GAAG,GAAE,cAAc,EAAA,GAAG,GAAE,aAAa,EAAA,GAAG,GAAE,KAAK,EAAA;kBAAA,EAAK,EAAA,GAAG,KAAE,aAAY,KAAE,cAAa,KAAE,eAAc,KAAG,CAAM,MAAN,OAAM,SAAS,GAAE,UAAQ,CAAC,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,QAAO,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,QAAO,IAAE,EAAA,GAAI,CAAC,QAAO,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,MAAK,IAAE,EAAA,CAAA,IAAK,CAAC,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,MAAK,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,GAAI,CAAC,OAAM,IAAE,EAAA,CAAA;AAAK,sBAAI;AAA+F,yBAA7F,AAAgB,OAAhB,gBAAkB,KAAE,GAAE,OAAO,CAAA,CAAG,EAAC,EAAC,QAAK,MAAG,EAAA,IAAM,MAAE,GAAE,OAAO,CAAA,CAAG,EAAC,QAAK,OAAI,EAAA,GAAI,GAAE,UAAS,MAAE,MAAW,GAAE,IAAI,CAAA,CAAG,QAAK,SAAS,QAAA;gBAAA,EAAi3D,IAAE,IAAE,EAAA,IAAG,CAAC,EAAA;cAAA,EAAI,IAAE,IAAE,EAAA;YAAA;AAAG,kBAAM,KAAA,OAAS,QAAQ,IAAI,GAAE,IAAK,QAAG,GAAA,QAAE,QAAO,QAAc,aAAA;AAAa,kBAAI;AAAE,oBAAM,KAAG,SAAA;AAAI,sBAAM,KAAE,KAAE,CAAC,UAAS,SAAQ,UAAS,QAAO,UAAS,SAAA,IAAW,CAAC,SAAQ,SAAQ,OAAM,UAAS,UAAS,SAAA;AAAW,2BAAU,MAAK;AAAE,sBAAG,GAAE,SAAS,EAAA;AAAG,2BAAO;cAAA,GAAI,EAAA;AAAG,kBAAA,CAAI;AAAE;AAAO,oBAAM,KAAE,GAAG,KAAE,MAAI,OAAO,KAAI,KAAE,UAAQ,WAAU,KAAE,GAAE,MAAG,AAAQ,MAAE,GAAE,SAAZ,QAAY,AAAc,OAAd,SAAgB,KAAE,GAAE,EAAA;AAAG,kBAAI;AAAE,kBAAA;AAAI,qBAAA,MAAQ;cAAA,SAAQ,IAAN;AAAS,oBAAG,cAAa;AAAE,wBAAM;AAAE;cAAA;AAAO,oBAAM,KAAE,SAAS,IAAA;AAAG,oBAAI;AAAE,sBAAM,KAAG,MAAE,GAAE,QAAQ,aAAY,EAAA,GAAK,MAAM,KAAA,KAAQ,GAAE,MAAM,8BAAA;AAAgC,uBAAO,AAAQ,MAAE,AAAM,MAAN,OAAM,SAAS,GAAE,KAAK,EAAA,EAAI,QAAQ,WAAU,EAAA,OAAtD,QAAsD,AAAe,OAAf,SAAiB,KAAE;cAAA,EAAI,EAAA;AAAG,kBAAI,KAAE,GAAE,OAAO,CAAA,CAAG,EAAC,QAAK,OAAI,EAAA;AAAI,iBAAE,UAAS,MAAE,GAAE,OAAO,CAAA,CAAG,QAAK,GAAE,SAAS,EAAA,CAAA;AAAM,oBAAM,KAAE,GAAE;AAAO,kBAAG,AAAI,OAAJ;AAAM;AAAO,kBAAI,IAAA,CAAG,IAAE,EAAC,EAAC,MAAG,KAAE,IAAE,GAAE,IAAK,QAAG,CAAC,IAAE,GAAE,IAAE,GAAE,EAAA,CAAA,CAAA,EAAO,KAAK,CAAA,CAAG,EAAC,KAAA,CAAI,EAAC,QAAK,KAAE,EAAA,EAAI,GAAG,KAAG,GAAE,IAAG,KAAE,OAAO;AAAU,oBAAA,EAAM,kBAAiB,OAAG,QAAO,KAAE,GAAE,QAAM,KAAE,GAAE,SAAO;AAAE,yBAAU,MAAK,IAAE;AAAC,sBAAA,CAAM,IAAE,MAAG,IAAE,KAAE,KAAE,IAAE,KAAE,KAAK,IAAI,KAAE,EAAA;AAAG,qBAAE,MAAI,MAAE,IAAE,KAAE;cAAA;AAAG,kBAAA,CAAI;AAAE;AAAO,oBAAA,CAAM,EAAC,EAAC,IAAE,MAAG;AAAE,qBAAM,CAAC,IAAE,IAAE,IAAE,EAAA;YAAA,CAAA,CAAA,CAAA,GAAU,OAAO,EAAA,EAAG,KAAK,CAAA,CAAG,KAAE,OAAO,WAAU,KAAA,CAAI,KAAE,OAAO,WAAU,QAAK,OAAI,KAAE,KAAE,KAAE,KAAE,EAAA;AAAI,gBAAA,CAAI,GAAE,QAAO;AAAC,oBAAM,KAAE,GAAE,KAAM,QAAG,GAAE,SAAS,EAAA,CAAA;AAAK,qBAAO,KAAE,GAAE,GAAE,eAAc,EAAA,IAAG,GAAE,GAAE,YAAW,GAAG,OAAM,KAAA;YAAA;AAAM,kBAAA,CAAM,EAAC,IAAE,IAAE,MAAG,GAAE;AAAG,gBAAA,AAAQ,OAAR;AAAU,qBAAO,GAAE,GAAE,eAAc,IAAE,IAAE,EAAA;AAAG,kBAAM,KAAE,KAAE,KAAE;AAAE,gBAAI,KAAE;AAAE,qBAAQ,KAAE,GAAE,KAAE,GAAE,QAAO;AAAI,oBAAG,GAAE,OAAK,MAAE;AAAG,mBAAO,GAAE,IAAE,aAAY,IAAE,IAAE,EAAA;UAAA,CAAA;ACE51M,cAAI,KAAA,OACA,KAAA;AAGJ,wBAAS;AAIP,gBAAM,KAAS,SAAS,cAAc,QAAA,GAEhC,KACJ,GAAO,WAAW,OAAA,KAAY,GAAO,WAAW,oBAAA;AAGlD,mBAAA,CAAA,CAAI,OAAM,cAAc;UAAA;AAAA,wBAgBX;AAAA,mBAAA,GAAA,MAAA,MAAA,SAAA;UAAA;AAAA,wBAAA;AAAA,mBAAA,KAAA,GAAA,GAAA,EAAA,KAAf,cAAA;AAAA,kBAAA,IAAA,KAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAAA,0BAAA,GAAA,SAAA,KAAA,AAAA,GAAA,OAAA,UAAA,GAAA,IAAA,CACM,IADN;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,6BAAA,GAAA,OAAA,UAEW,EAAA;yBAFX;AAAA,0BAM0B,GAAA,GAN1B;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAQI,2BAAA,MACA,QAAQ,IAAI,0DAAA,GAThB,GAAA,OAAA;AAAA;yBAAA;AAAA,6BAAA,GAAA,OAAA,IAW0B,GAAA;yBAX1B;AAWU,2BAXV,GAAA,MAYI,QAAQ,IACN,iEACA,EAAA,GAEE,GAAQ,OAAO,IACjB,SAAQ,IACN,oEAAA,GAEF,KAAA,QAEA,QAAQ,IAAI,wCAAA;yBAtBlB;AAAA,6BAyBE,KAAA,MAzBF,GAAA,OAAA,UA0BS,EAAA;yBA1BT;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,EAAA;YAAA,CAAA,CAAA,GAAA,GAAA,MAAA,MAAA,SAAA;UAAA;AAqCA,sBAA4B,IAAA;AAC1B,iBAAkB,IAClB,KAAA;UAAsB;AASxB,wBAAS;AACP,iBAAA,CAAmB,GAAA;UAAA;AASrB,wBAAS;AACP,mBAAO;UAAA;AAUT,wBAAS;AACP,mBAAO;UAAA;ACjFT,cAWM,KAAA,SAAA,IAAA;AAAA,eAAA,IAAA,EAAA;AAAA,gBAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,MAAA,IAAA,KAAA,WAAA;AAAA,kBAAA,AAAA,OAAA,WAAA,eAAA,CAAA,QAAA;AAAA,uBAAA;AAAA,kBAAA,QAAA,UAAA;AAAA,uBAAA;AAAA,kBAAA,AAAA,OAAA,SAAA;AAAA,uBAAA;AAAA,kBAAA;AAAA,uBAAA,QAAA,UAAA,QAAA,KAAA,QAAA,UAAA,SAAA,CAAA,GAAA,WAAA;gBAAA,CAAA,CAAA,GAAA;cAAA,SAAA,IAAA;AAAA,uBAAA;cAAA;YAAA,EAAA,GAAA,WAAA;AAAA,kBAAA,IAAA,KAAA,GAAA,EAAA;AAAA,kBAAA,IAAA;AAAA,oBAAA,KAAA,GAAA,IAAA,EAAA;AAAA,qBAAA,QAAA,UAAA,IAAA,WAAA,EAAA;cAAA;AAAA,qBAAA,GAAA,MAAA,MAAA,SAAA;AAAA,qBAAA,GAAA,MAAA,EAAA;YAAA;AAIJ,wBAAY,IAAA;AAAsB,kBAAA;AAKhC,kBALgC,GAAA,MAAA,EAAA,GAAA,GAAA,GAChC,KAAA,GAAA,KAAA,MAAM,EAAA,CAAA,GAD0B,mBAAA,KAHhB,GAGgB,GAAA,GAAA,EAAA,GAAA,wBAAA,MAAA,GAAA,GAAA,GAAA,EAAA,GAAA,0BA2OF,WAAA;AAC9B,uBAAO,GAAK;cAAA,CAAA,GA5OoB,GAAA,GAAA,EAAA,GAAA,iBAuSX,WAAA;AACrB,uBAAO,EACL,gBAAgB,GAAK,gBACrB,cAAc,GAAK,aAAA;cAAA,CAAA,GA1SW,GAAA,GAAA,EAAA,GAAA,iBAkWX,SAAC,IAAA;AACtB,oBAAM,KAAY,GAAK,mBAAA,GAEjB,KAAsB,GAAU,uBAAA;AAMtC,mBAAU,uBAAA,KAAuB;AAEjC,oBAAM,KAAW,GAAK,YAAA,GAGhB,KADJ,GAAK,mBAAA,EAAqB,2BAEC,sBAAA,GACvB,KAAO,GAAmB,QAAA,GAC1B,KAAe,CAAC,GAAU,KAAK,GAAK,IAAI,GAAU,KAAK,GAAK,EAAA;AAGlE,mBAAa,KAAK,GAAK,KAAK,GAAa;AAEzC,oBAAI,KAAa,GAAmB,eAClC,GAAa,IACb,GAAa,IACb,GACA,EAAA;AAMF,uBAHA,GAAU,uBAAuB,EAAA,GAEpB,GAAK,YAAY,EAAA;cAAA,CAAA,GAjYE,GAAA,GAAA,EAAA,GAAA,iBA6YX,SAAC,IAAA;AACtB,oBAAM,KAAY,GAAK,mBAAA,GAEjB,KAAsB,GAAU,uBAAA;AAMtC,mBAAU,uBAAA,KAAuB;AAEjC,oBAAM,KAAW,GAAK,YAAA,GAGhB,KADJ,GAAK,mBAAA,EAAqB,2BAEC,sBAAA,GACvB,KAAO,GAAmB,QAAA,GAC1B,KAAe,GAAmB,eAAnB,MAAA,IAAkB,GAClC,GAAK,YAAY,EAAA,CAAA,EADiB,OAAA,CAErC,EAAA,CAAA,CAAA;AAIF,mBAAa,KAAK,GAAK,KAAK,GAAa;AAEzC,oBAAM,KAAsB,CAC1B,GAAa,KAAK,GAAK,IACvB,GAAa,KAAK,GAAK,EAAA;AAKzB,uBAFA,GAAU,uBAAuB,EAAA,GAE1B;cAAA,CAAA,GA7ayB,GAAA,GAAA,EAAA,GAAA,0BAwbF,WAAA;AAC9B,uBAAO,GAAK,iBAAA;cAAA,CAAA,GAzboB,GAAA,GAAA,EAAA,GAAA,qBAocP,WAAA;AACzB,oBAAM,KAAQ,GAAK,iBAAA;AAEnB,oBAAK,IAAL;AAIA,sBAAQ,KAAQ,GAAK,gBAAA,EAAb,KACF,KAAS,GAAA,UAAgB,EAAA;AAE/B,sBAAK;AAML,2BAFiB,GAAO,SAER;gBAAA;cAAA,CAAA,GApdgB,GAAA,GAAA,EAAA,GAAA,oBAudP,WAAA;AACzB,oBAAA,KAAwC,GAAK,UAAA,GAArC,KAAR,GAAQ,iBAAiB,KAAzB,GAAyB,YAKzB,KAAuC,GAAK,aAAA,GAApC,KAAR,GAAQ,WAAW,KAAnB,GAAmB,QAAQ,KAA3B,GAA2B,SAGrB,KAAM,GAAU,MAAM,GAAU,SAAS,CAAA;AAU/C,oBAAA,CARY,MAAK,IACf,GAAI,KAAK,GAAgB,KACvB,GAAI,KAAK,GAAgB,KACzB,GAAI,KAAK,GAAgB,EAAA,IAKnB,IAzfE,OAyfZ;AAMA,sBAAM,KAAkB,GAAQ,IAC1B,KAAM,GAAA,KAAA,OAAA;AACZ,qBAAA,KAAA,IAAS,IAAK,IAAY,EAAA;AAC1B,sBAAM,KAAW,GAAA,KAAA,IAAS,IAAK,EAAA;AAI/B,yBAAO,KAAK,MAAM,KAAK,IAAI,EAAA,IAAY,EAAA;gBAAA;cAAA,CAAA,GApfvC,GAAK,kBAAkB,GAAA,GAEnB,GAAK;AACP,sBAAM,IAAI,MACR,0EAAA;AAIJ,kBAAM,KAAW,GAAK,YAAA,GAEhB,KAAS,GAAA,YAAA;AAGf,sBAFA,GAAS,gBAAgB,EAAA,GAEjB,GAAK;qBACN,GAAA;AACH,qBAAO,sBAAA,IAAsB;AAC7B;qBACG,GAAA;AACH,qBAAO,sBAAA,KAAsB;AAC7B;;AAEA,wBAAM,IAAI,MAAJ,+BAAA,OAAyC,GAAK,IAAA,CAAA;;AAGxD,kBAAA,KAAgC,GAAK,eAAe,aAA5C,KAAR,GAAQ,aAAa,KAArB,GAAqB;AA3BW,qBA6BhC,GAAO,yBAAA,CACJ,GAAY,IAAA,CACZ,GAAY,IAAA,CACZ,GAAY,EAAA,GAEf,GAAO,cAAc,EAAA,GACrB,GAAO,oBAAA,IAAoB,GAE3B,GAAK,YAAA,GArC2B;YAAA;AAAA,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,cAAA,OAAA,MAAA,GAAA,GAAA,EAAA,KAqDlC,YACE,IAAA;AADF,kBAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAAA,0BAEE,KAFF,GAAA,SAAA,KAAA,AAAA,GAAA,OAAA,UAAA,GAAA,IAIQ,KAAmB,GAAA,UAAgB,GAAiB,GAAG,QAAA,GAJ/D;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,4BAOU,IAAI,MAAJ,wBAAA,OACoB,GAAiB,UADrC,iBAAA,CAAA;yBAPV;AAAA,6BAYQ,KAAsB,GAAiB,SAAS,qBAZxD,GAAA,OAAA,GAcQ,KAAK,yBAAyB,IAAkB,EAAA;yBAdxD;AAgBE,2BAAK,uBAAuB,IAEtB,KAAsB,CAAA,GACtB,KAAe,CAAA,GAGZ,KAAI;yBAtBf;AAAA,0BAAA,CAsBkB,MAAI,GAAiB,SAtBvC;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,6BAAA,KAuBkD,GAAiB,KAAvD,KAvBZ,GAuBY,UAAU,KAvBtB,GAuBsB,eAAe,KAvBrC,GAuBqC,UAvBrC,GAAA,OAAA,IAwB8B,GAAkB,GAAiB,GAAA;yBAxBjE;AAwBU,2BAxBV,GAAA,MA+BU,KAAM,MAAY,IACxB,GAAa,KAAK,EAAE,KAAA,IAAK,aAAA,IAAa,eAAA,GAAA,CAAA,GAAA,AAGpC,OAHoC,UAInC,GAAoB,SAAS,EAAA,KAE9B,GAAoB,KAAK,EAAA;yBAtC/B;AAsB+C,4BAtB/C,GAAA,OAAA;AAAA;yBAAA;AA0CM,yBAAoB,SAAS,KAC/B,QAAQ,KACN,mJAAA,GAIJ,KAAK,iBAAiB,EAAA,GAElB,MACF,KAAK,OAAA;yBAnDT;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,IAAA,IAAA;YAAA,CAAA,CAAA,GAAA,SAAA,IAAA;AAAA,qBAAA,GAAA,MAAA,MAAA,SAAA;YAAA,GAAA,GAAA,EAAA,KAAA,cAAA,OAAA,MAAA,GAAA,GAAA,EAAA,KA8DA,YACE,IAAA;AADF,kBAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAAA,6BAEE,KAFF,GAAA,SAAA,KAAA,AAAA,GAAA,OAAA,UAAA,GAAA,IAIQ,KAAe,CAAA,GAJvB,GAAA,OAAA,GAMQ,KAAK,yBACT,IACA,KAAK,oBAAA;yBART;AAYW,2BAAI;yBAZf;AAAA,0BAAA,CAYkB,MAAI,GAAiB,SAZvC;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,6BAAA,KAa+C,GAAiB,KAApD,KAbZ,GAaY,UAAU,KAbtB,GAasB,YAAY,KAblC,GAakC,UAblC,GAAA,OAAA,GAc8B,GAAkB,GAAiB,GAAA;yBAdjE;AAcU,2BAdV,GAAA,MAAA,AAgBQ,OAhBR,SAiBM,GAAY,cAAA,KAAc,GAQtB,KAAM,MAAY,IACxB,GAAa,KAAK,EAAE,KAAA,IAAK,aAAA,GAAA,CAAA;yBA1B7B;AAY+C,4BAZ/C,GAAA,OAAA;AAAA;yBAAA;AA6BE,2BAAK,UAAU,EAAA,GAEX,MACF,KAAK,OAAA;yBAhCT;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,IAAA,IAAA;YAAA,CAAA,CAAA,GAAA,SAAA,IAAA;AAAA,qBAAA,GAAA,MAAA,MAAA,SAAA;YAAA,GAAA,GAAA,EAAA,KAAA,sBAAA,OA4CA,SAA0B,IAAA;AAAmD,kBAAzB,KAAyB,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA;AAC3E,mBAAK,aAAa,EAAA,GAEd,MACF,KAAK,OAAA;YAAA,EAAA,GAAA,EAAA,KAAA,4BAAA,OAAA,MAAA,GAAA,GAAA,EAAA,KAIT,YACE,IACA,IAAA;AAFF,kBAAA,IAAA,IAAA,IAAA;AAAA,qBAAA,GAAA,EAAA,KAAA,SAAA,IAAA;AAAA;AAAA,0BAAA,GAAA,OAAA,GAAA;yBAAA;AAIQ,2BAAa,GAAiB,QAG3B,KAAI;yBAPf;AAAA,0BAAA,CAOkB,MAAI,KAPtB;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,6BAQU,KAAc,GAAiB,KARzC,GAAA,OAAA,GAU8B,GAAW,GAAY,QAAA;yBAVrD;AAAA,0BAUU,KAVV,GAAA,MAAA;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,4BAaY,IAAI,MAAJ,wBAAA,OACoB,GAAY,UADhC,iBAAA,CAAA;yBAbZ;AAAA,0BAkBQ,OAAwB,GAAY,SAAS,qBAlBrD;AAAA,2BAAA,OAAA;AAAA;sBAAA;AAAA,4BAmBY,IAAI,MAAJ,mCAAA,OAC+B,KAAK,IADpC,uEAAA,CAAA;yBAnBZ;AAOkC,4BAPlC,GAAA,OAAA;AAAA;yBAAA;AAAA,6BAAA,GAAA,OAAA,UAAA,IAyBS;yBAzBT;yBAAA;AAAA,6BAAA,GAAA,KAAA;;cAAA,GAAA,IAAA,IAAA;YAAA,CAAA,CAAA,GAAA,SAAA,IAAA,IAAA;AAAA,qBAAA,GAAA,MAAA,MAAA,SAAA;YAAA,GAAA,GAAA,EAAA,KAAA,yBAAA,OAkCA,SAA6B,IAAA;AAI3B,qBAHoB,KAAK,gBAAA,EAAkB,YACb,UAAA,EAAY,aAAA,EAEzB,wBAAwB,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,aAAA,OAM3C,WAAA;AAGE,qBAFiB,KAAK,YAAA,EACE,yBAAA;YAAA,EAAA,GAAA,EAAA,KAAA,QAAA,OAQ1B,SAAY,IAAA;AACV,iBAAA,GAAA,GAAA,SAAA,GAAA,QAAA,IAAA,EAAA,KAAA,MAAW,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OASb,WAAA;AAA8D,kBAA3C,KAA2C,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,UAAA,UAAA;AAC5D,qBAAA,GAAA,GAAA,GAAA,SAAA,GAAA,eAAA,IAAA,EAAA,KAAA,MAAyB,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,oBAAA,OAY3B,SAAwB,IAAA;AACtB,mBAAK,UAAU,EACb,eAAA,GAAA,CAAA;YAAA,EAAA,GAAA,EAAA,KAAA,oBAAA,OASJ,WAAA;AAEE,qBAD0B,KAAK,UAAA,EAAvB;YAAA,EAAA,GAAA,EAAA,KAAA,gBAAA,OAWV,WAAA;AACE,kBAAM,KAAQ,KAAK,gBAAA;AAEnB,kBAAK,IAAL;AAIA,oBAAQ,KAAgB,GAAhB,aACF,KAAe,GAAY,UAAA,EAAY,aAAA;AAC7C,uBAAO,EACL,YAAY,GAAa,cAAA,GACzB,SAAS,GAAa,WAAA,GACtB,QAAQ,GAAa,UAAA,GACrB,WAAW,GAAa,aAAA,GACxB,YAAY,GAAa,aAAA,EAAe,WAAA,EAAa,QAAA,GACrD,WAAW,GAAY,UAAA,EAAY,aAAA,GACnC,UAAA,QACA,SAAA,OAAS;cAAA;YAAA,EAAA,GAAA,EAAA,KAAA,oBAAA,OAyBb,SAAyB,IAAA;AACvB,kBAAM,KAAW,KAAK,YAAA;AAEtB,mBAAK,UAAU,EAAA;AAGf,kBAAI,KAAgB;AACpB,kBAAI,KAAK,SAAS,GAAA,cAA2B;AAC3C,mBAAmB,QAAQ,SAAC,IAAA;AACtB,qBAAG,iBAAiB,GAAG,gBAAgB,MACzC,MAAgB,GAAG;gBAAA,CAAA,GAIvB,KAAK,YAAA;AAEL,oBAAM,KAAe,GAAS,gBAAA;AAQ9B,mBAAa,iBAAiB,EAAA,GAC9B,GAAa,oBAAA,IAAoB;cAAA;AAGjC,mBAAS,YAAA,GAEY,GAAS,gBAAA,EAEjB,oBAAA,IAAoB;YAAA,EAAA,CAAA,GAAA,CAAA,EAAA,KAAA,8BAAA,KA7SrC,WAAA;AACE,qBAAA;YAAO,EAAA,CAAA,CAAA,GAAA;UAAA,EA7CkB,EAAA,GA+f7B,KAAA,IC5hBM,KAAY,CAAA;AASX,sBACL,IAAA;AAEM,gBACF,IAFJ,KACM,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KADK;AAKX,iBAAK,KAAI,GAAG,KAAI,GAAU,UAAA,CACpB,IAAU,IAAG,YAAY,KADG;AAAA;AAOlC,eAAU,OAAO,IAAG,GAAG,EACrB,UAAA,IACA,UAAA,GAAA,CAAA;UAAA;AAWG,sBACL,IAAA;AAEA,qBAAS,KAAI,GAAG,KAAI,GAAU,QAAQ;AACpC,kBAAI,GAAU,IAAG,aAAa,IAAU;AACtC,mBAAU,OAAO,IAAG,CAAA;AAEpB;cAAA;UAAA;AAUC,wBAAS;AACd,mBAAO,GAAU,SAAS;AACxB,iBAAU,IAAA;UAAA;AAcd,sBAAqB,IAAc,IAAA;AAEjC,qBAAS,KAAI,GAAG,KAAI,GAAU,QAAQ,MAAK;AACzC,kBAAM,KAAS,GAAU,IAAG,SAAS,IAAM,EAAA;AAE3C,kBAAA,AAAI,OAAJ;AACE,uBAAO;YAAA;UAAA;AC3DE,sBACb,IAAA;AAIA,qBAFM,KAAO,GAAoB,QAAA,GAExB,KAAQ,GAAG,KAAQ,IAAM,MAAS;AACzC,kBAAM,KAAa,CAAA;AAEnB,iBAAoB,aAAa,IAAO,EAAA,GAExC,GAAW,KAAK,IAAI,GAAW,IAC/B,GAAW,KAAK,IAAI,GAAW,IAC/B,GAAW,KAAK,IAAI,GAAW,IAE/B,GAAoB,aAAa,IAAO,EAAA;YAAA;UAAA;AC3B5C,sBACE,IACA,IAAA;AAKA,gBAAM,KAAc,KAAK,IAAI,KAAM,EAAA;AAGnC,mBAAO,EAAE,aAAA,IAAa,cAFD,KAAM,KAAc,EAAA;UAAA;AAW3C,sBACE,IACA,IAAA;AAQA,mBAAO,EAAE,OAHK,KAAe,KAAc,GAG3B,OAFF,KAAe,KAAc,EAAA;UAAA;ACvB9B,sBACb,IACA,IAAA;AAES,gBADT,KACS,UAAA,SAAA,KAAA,AAAA,UAAA,OAAA,SAAA,UAAA,KADG;AAEZ,gBAAI,GAAG,WAAW,GAAG;AACnB,qBAAA;AAGF,qBAAS,KAAI,GAAG,KAAI,GAAG,QAAQ;AAC7B,kBAAI,KAAK,IAAI,GAAG,MAAK,GAAG,GAAA,IAAM;AAC5B,uBAAA;AAIJ,mBAAA;UAAO;ACnBM,wBAAS;AACtB,mBAAI,OAAO,cACF,YAAY,IAAA,IAGd,KAAK,IAAA;UAAA;ACwDC,sBAAU,IAAqB,IAAsB,IAAA;AAClE,mBAAI,KA/BN,SAAiC,IAAA;AAE/B,kBACM,KADe,KAAK,IAAL,MAAA,MAAI,GAAQ,GAAO,GAAA,CAAA,EAAK,SAAS,CAAA,EAAG,SAC5B,GACvB,KAAW,GAAO,IAAI,MAAM,IAC5B,KAAW,GAAO,IAAI,GAAO,IAAI,SAAS,MAAM,IAChD,KAAiB,GAAO,mBAAmB,GAAO,IAAI,SAAS;AAErE,qBAAO,SAAU,IAAA;AACf,uBAAI,KAAmB,GAAO,mBACrB,KACE,MAAoB,KACtB,KAGF,GAAO,IAAI,KAAmB,GAAO,qBAAqB;cAAA;YAAA,EAiBlC,EAAA,IA9CnC,SAA8B,IAAqB,IAAA;AACjD,qBAAO,SAAU,IAAA;AACf,uBAAiE,MAAxD,OAAmB,MAAgB,KAAc;cAAA;YAAA,EA+ChC,IAAa,EAAA;UAAA;AC7CpC,cAAM,KAAb,WAAA;AAGE,0BAAA;AAAc,iBAAA,MAAA,EAAA,GAAA,GAAA,MAAA,KAAA,MAAA,GACZ,KAAK,MAAA;YAAA;AAJT,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,aAAA,OAOE,WAAA;AACE,qBAAO,KAAK;YAAA,EAAA,GARhB,EAAA,KAAA,SAAA,OAWE,WAAA;AACE,mBAAK,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;YAAA,EAAA,GAZ7B,EAAA,KAAA,SAAA,OAeE,WAAA;AACE,kBAAM,KAAY,IAAI;AAStB,qBAPA,GAAU,EAAE,KAAK,KAAK,EAAE,IACxB,GAAU,EAAE,KAAK,KAAK,EAAE,IACxB,GAAU,EAAE,KAAK,KAAK,EAAE,IACxB,GAAU,EAAE,KAAK,KAAK,EAAE,IACxB,GAAU,EAAE,KAAK,KAAK,EAAE,IACxB,GAAU,EAAE,KAAK,KAAK,EAAE,IAEjB;YAAA,EAAA,GAzBX,EAAA,KAAA,YAAA,OA4BE,SAAS,IAAA;AACP,kBAAM,KAAM,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,IACjD,KAAM,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,IAEjD,KAAM,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,IACjD,KAAM,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,IAEjD,KAAK,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,IAC5D,KAAK,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE,KAAK,GAAO,KAAK,KAAK,EAAE;AAElE,mBAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK;YAAA,EAAA,GA3ChB,EAAA,KAAA,UAAA,OA8CE,WAAA;AACE,kBAAM,KAAI,IAAK,MAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KACpD,KAAK,KAAK,EAAE,KAAK,IACjB,KAAA,CAAM,KAAK,EAAE,KAAK,IAClB,KAAA,CAAM,KAAK,EAAE,KAAK,IAClB,KAAK,KAAK,EAAE,KAAK,IACjB,KAAK,KAAK,MAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KACrD,KAAK,KAAK,MAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE;AAE3D,mBAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK;YAAA,EAAA,GA5DhB,EAAA,KAAA,UAAA,OA+DE,SAAO,IAAA;AACL,kBAAM,KAAI,KAAK,IAAI,EAAA,GACb,KAAI,KAAK,IAAI,EAAA,GACb,KAAM,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK,IAClC,KAAM,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK,IAClC,KAAM,KAAK,EAAE,KAAA,CAAM,KAAI,KAAK,EAAE,KAAK,IACnC,KAAM,KAAK,EAAE,KAAA,CAAM,KAAI,KAAK,EAAE,KAAK;AAEzC,mBAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK,IACZ,KAAK,EAAE,KAAK;YAAA,EAAA,GA1EhB,EAAA,KAAA,aAAA,OA6EE,SAAU,IAAW,IAAA;AACnB,mBAAK,EAAE,MAAM,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK,IACzC,KAAK,EAAE,MAAM,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK;YAAA,EAAA,GA/E7C,EAAA,KAAA,SAAA,OAkFE,SAAM,IAAY,IAAA;AAChB,mBAAK,EAAE,MAAM,IACb,KAAK,EAAE,MAAM,IACb,KAAK,EAAE,MAAM,IACb,KAAK,EAAE,MAAM;YAAA,EAAA,GAtFjB,EAAA,KAAA,kBAAA,OAyFE,SAAe,IAAA;AACb,kBAAM,KAAI,GAAM,IACV,KAAI,GAAM;AAEhB,qBAAO,CACL,KAAI,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IACvC,KAAI,KAAK,EAAE,KAAK,KAAI,KAAK,EAAE,KAAK,KAAK,EAAE,EAAA;YAAA,EAAA,CAAA,CAAA,GA/F7C;UAAA,EAAA;ACde,sBACb,IACA,IAAA;AAEA,gBAAM,KAAY,IAAI;AAEtB,gBAAA,CAAK,GAAe,SAAS;AAC3B,qBAAO;AAIT,eAAU,UACR,GAAe,OAAO,QAAQ,GAC9B,GAAe,OAAO,SAAS,CAAA;AAIjC,gBAAM,KAAQ,GAAe,SAAS;AAExB,YAAV,OAAU,KACZ,GAAU,OAAQ,KAAQ,KAAK,KAAM,GAAA;AAIvC,gBAAI,KAAa,GAAe,SAAS,OACrC,KAAc,GAAe,SAAS,OAEpC,KACJ,GAAe,SAAS,cAAc,KAAK,IAC1C,IAAe,SAAS,cAAc,KAAK,IAAI,IAC5C,KACJ,GAAe,SAAS,cAAc,KAAK,IAC1C,IAAe,SAAS,cAAc,KAAK,IAAI;AAElD,gBAAmE,AAA/D,GAAe,SAAS,cAAc,yBAAyB;AAE/D,iBAAe,MAAM,kBACrB,GAAe,MAAM,qBAErB,MACE,GAAe,MAAM,qBACrB,GAAe,MAAM,kBAEvB,GAAe,MAAM,qBACrB,GAAe,MAAM,mBAErB,OACE,GAAe,MAAM,kBACrB,GAAe,MAAM;qBAIzB,KAAa,GAAe,SAAS,cAAc,oBACnD,KAAc,GAAe,SAAS,cAAc,iBAIlD,AADA,GAAe,SAAS,cAAc,yBACtC,gBACA;AAEA,kBAAM,KACJ,GAAe,OAAO,SAAU,MAAS,KACrC,KACJ,GAAe,OAAO,QAAS,MAAQ;AAGzC,mBAAa,KAAc,KAAK,IAAI,IAAiB,EAAA,GAGnD,GAAe,SAAS,cAAc,kBACtC,GAAe,SAAS,cAAc,qBAEtC,MACE,GAAe,SAAS,cAAc,qBACtC,GAAe,SAAS,cAAc,kBAExC,GAAe,SAAS,cAAc,qBACtC,GAAe,SAAS,cAAc,mBAEtC,OACE,GAAe,SAAS,cAAc,kBACtC,GAAe,SAAS,cAAc;YAAA;AAwC9C,mBAnCA,GAAU,MAAM,IAAY,EAAA,GAGd,AAAV,OAAU,KACZ,GAAU,OAAA,CAAS,KAAQ,KAAK,KAAM,GAAA,GAIxC,GAAU,UACR,GAAe,SAAS,YAAY,GACpC,GAAe,SAAS,YAAY,CAAA,GAIxB,AAAV,OAAU,KACZ,GAAU,OAAQ,KAAQ,KAAK,KAAM,GAAA,GAAA,AAGnC,OAHmC,UAKrC,GAAU,MAAM,IAAO,EAAA,GAIrB,GAAe,SAAS,SAC1B,GAAU,MAAA,IAAU,CAAA,GAGlB,GAAe,SAAS,SAC1B,GAAU,MAAM,GAAA,EAAI,GAItB,GAAU,UAAA,CAAW,KAAQ,GAAA,CAAI,KAAS,CAAA,GAEnC;UAAA;AC3HM,sBACb,IACA,IACA,IAAA;AAEA,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MACR,4EAAA;AAGJ,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MACR,qEAAA;AAIJ,gBACM,KADY,GAAmB,IAAgB,EAAA,EACjC,UAAA;AAEpB,eAAQ,aAAa,GAAE,IAAI,GAAE,IAAI,GAAE,IAAI,GAAE,IAAI,GAAE,IAAI,GAAE,EAAA;UAAA;AClBxC,sBACb,IACA,IAAA;AAEA,gBAAM,KAAsB,GAAe,eAAe,qBACpD,KACJ,GAAe,eAAe;AAEhC,mBACE,GAAM,YAAY,MAAA,CACjB,MACD,GAAqB,iBACnB,GAAe,SAAS,IAAI,gBAC9B,GAAqB,gBACnB,GAAe,SAAS,IAAI,eAC9B,GAAqB,WAAW,GAAe,SAAS,UACxD,GAAqB,aAAa,GAAe,SAAS,YAC1D,GAAqB,UAAU,GAAe,SAAS,SACvD,GAAqB,UAAU,GAAe,SAAS,SACvD,GAAqB,gBAAgB,GAAe,SAAS,eAC7D,GAAqB,WAAW,GAAe,SAAS,UACxD,GAAqB,aAAa,GAAe,SAAS;UAAA;ACvB/C,sBACb,IACA,IAAA;AAEA,gBAAM,KAAe,GAAe,eAAe;AAGnD,eAAa,QAAQ,GAAM,OAC3B,GAAa,SAAS,GAAM;AAE5B,gBAAM,KAAgB,GAAa,WAAW,IAAA;AAI9C,eAAc,YAAY,SAC1B,GAAc,SAAS,GAAG,GAAG,GAAa,OAAO,GAAa,MAAA;AAE9D,gBAAM,KAAmB,GAAc,aACrC,GACA,GACA,GAAM,OACN,GAAM,MAAA;AAGR,eAAe,eAAe,sBAAsB,IACpD,GAAe,eAAe,mBAAmB;UAAA;ACtBpC,sBACb,IAAA;AAEA,gBAAM,KAAU,GAAe,MAAM,SAC/B,KAAW,GAAe,UAC1B,KAAU,GAAe,MAAM;AAgBrC,mBAdA,GAAe,eAAe,sBAAsB,IACpD,GAAe,eAAe,sBAAsB,IACpD,GAAe,eAAe,uBAAuB,EACnD,cAAc,GAAS,IAAI,cAC3B,aAAa,GAAS,IAAI,aAC1B,QAAQ,GAAS,QACjB,UAAU,GAAS,UACnB,OAAO,GAAS,OAChB,OAAO,GAAS,OAChB,aAAa,GAAS,aACtB,QAAQ,GAAS,QACjB,UAAU,GAAS,SAAA,GAGd,GAAe;UAAA;ACwBxB,sBACE,IACA,IACA,IAAA;AAEA,gBAAM,KAAA,AACJ,GAAe,eAAe,wBAD1B;AAGD,eAAe,eAAe,gBAAiB,MAClD,IAAe,eAAe,eAC5B,SAAS,cAAc,QAAA;AAG3B,gBAAM,KAAe,GAAe,eAAe;AAInD,gBAC8C,AAA5C,GAAe,SAAS,IAAI,gBAAgB,OACC,AAA7C,GAAe,SAAS,IAAI,iBAAiB,OAAjB,AAC5B,GAAe,SAAS,WADI,SAE5B,GAAM,aACN,GAAM,UAAA;AAEN,qBAAO,GAAM,UAAA;AAIf,gBAAA,AACE,GAA0B,IAAgB,EAAA,MAD5C,SAC4C,AAC1C,OAD0C;AAG1C,qBAAO;AAOP,eAAa,UAAU,GAAM,SAC7B,GAAa,WAAW,GAAM,UAE9B,GAAuB,IAAgB,EAAA;AAIzC,gBAAI,KAAQ,GAAA,GACN,KAlFR,SAAgB,IAAe,IAAA;AAE7B,qBAAA,AACE,GAAM,cADR,UAEE,GAAM,UAAU,iBAAiB,GAAS,IAAI,gBAC9C,GAAM,UAAU,gBAAgB,GAAS,IAAI,eAC7C,GAAM,UAAU,WAAW,GAAS,UCdzB,UACb,IACA,IACA,IACA,IACA,IAAA;AAEA,oBAAM,KAAgB,GAAM,eACtB,KAAgB,GAAM,eACtB,KAAS,KAAK,IAAI,IAAe,CAAA;AAEvC,oBAAA,AAAI,GAAM,cAAV,QAAmC;AACjC,sBAAM,KAAS,KAAgB,KAAS;AAExC,qBAAM,YAAY,CAAA,GAClB,GAAM,UAAU,WAAW,IAAI,kBAAkB,EAAA;gBAAA;AAGnD,oBAAM,KAAM,GAAM,UAAU,UACtB,KAAS,GACb,MAAM,QAAQ,EAAA,IAAe,GAAY,KAAK,IAC9C,MAAM,QAAQ,EAAA,IAAgB,GAAa,KAAK,IAAA,MDDlD;ACKA,oBAAA,AAAI,OAAJ;AACE,2BACM,KAAc,IAClB,MAAe,IACf;AAEA,uBAAI,KAAA,CAAe,MAAU,MAAM,GAAO,EAAA;;AAG5C,2BACM,KAAc,IAClB,MAAe,IACf;AAEA,uBAAI,KAAA,CAAe,MAAU,GAAO,EAAA;cAAA,EDlBtC,IACA,GAAS,IAAI,aACb,GAAS,IAAI,cACb,GAAS,MAAA,GAEX,GAAM,UAAU,cAAc,GAAS,IAAI,aAC3C,GAAM,UAAU,eAAe,GAAS,IAAI,cAC5C,GAAM,UAAU,SAAS,GAAS,SAZzB,GAAM,UAAU;YAAA,EA0ED,IAAO,GAAe,QAAA;AAE9C,eAAM,QAAQ,GAAM,SAAS,CAAA,GAC7B,GAAM,MAAM,sBAAsB,GAAA,IAAQ;AAE1C,gBAAM,KAAmB,GAAe,eAAe,kBACjD,KAAsB,GAAe,eAAe;AAsB1D,mBAlBI,GAAM,OEtGG,SACb,IACA,IACA,IAAA;AAEA,kBAAI,KAAQ,GAAA,GACN,KAAY,GAAM,aAAA;AAExB,iBAAM,MAAM,uBAAuB,GAAA,IAAQ;AAE3C,kBAAM,KAAgB,GAAM,eACxB,KAAuB,GACvB,KAAuB,GACrB,KAAY,GAAU;AAK5B,kBADA,KAAQ,GAAA,GACJ,KAAgB;AAClB,uBAAO,KAAuB;AAC5B,qBAAoB,QAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,GAAoB,QAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,GAAoB,QAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,GAAoB,QAClB,GAAU;;AAGd,uBAAO,KAAuB;AAC5B,qBAAoB,QAClB,GAAI,GAAU,QAChB,GAAoB,QAClB,GAAI,GAAU,QAChB,GAAoB,QAClB,GAAI,GAAU,QAChB,GAAoB,QAClB,GAAU;AAGhB,iBAAM,MAAM,2CAA2C,GAAA,IAAQ;YAAA,EF+D3D,IACA,IACA,GAAiB,IAAA,IGxGR,SACb,IACA,IACA,IAAA;AAEA,kBAAI,KAAQ,GAAA,GACN,KAAY,GAAM,aAAA;AAExB,iBAAM,MAAM,uBAAuB,GAAA,IAAQ;AAE3C,kBAAM,KAAgB,GAAM,eACxB,KAAuB,GACvB,KAAuB,GACrB,KAAY,GAAU;AAK5B,kBADA,KAAQ,GAAA,GACJ,KAAgB;AAClB,uBAAO,KAAuB;AAC5B,qBAAoB,QAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,GAAoB,QAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,GAAoB,MAClB,GAAI,GAAU,MAAA,CAAyB,KACzC,MAAwB,GACxB,MAAwB;;AAG1B,uBAAO,KAAuB;AAC5B,qBAAoB,QAClB,GAAI,GAAU,QAChB,GAAoB,QAClB,GAAI,GAAU,QAChB,GAAoB,MAClB,GAAI,GAAU,MAChB,MAAwB,GACxB,MAAwB;AAG5B,iBAAM,MAAM,2CAA2C,GAAA,IAAQ;YAAA,EHmE3D,IACA,IACA,GAAiB,IAAA,GAIrB,KAAQ,GAAA,GACR,GAAoB,aAAa,IAAkB,GAAG,CAAA,GACtD,GAAM,MAAM,uBAAuB,GAAA,IAAQ,IAEpC;UAAA;AAWF,sBACL,IACA,IAAA;AAEA,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MACR,kEAAA;AAIJ,gBAAM,KAAQ,GAAe;AAE7B,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MACR,+DAAA;AAKJ,gBAAM,KAAU,GAAe,OAAO,WAAW,IAAA;AAEjD,eAAQ,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAGpC,GAAQ,YAAY,SACpB,GAAQ,SACN,GACA,GACA,GAAe,OAAO,OACtB,GAAe,OAAO,MAAA,GAIxB,GAAQ,wBAAA,CAAyB,GAAe,SAAS,kBAGzD,GAA2B,IAAgB,EAAA;AAE3C,gBAAM,KAAe,GAAgB,IAAgB,IAAO,EAAA,GAEtD,KAAK,GAAe,SAAS,cAAc,KAAK,IAAI,GACpD,KAAK,GAAe,SAAS,cAAc,KAAK,IAAI,GACpD,KAAQ,GAAe,SAAS,cAAc,KAAK,IAAI,IACvD,KAAS,GAAe,SAAS,cAAc,KAAK,IAAI;AAE9D,eAAQ,UAAU,IAAc,IAAI,IAAI,IAAO,IAAQ,GAAG,GAAG,IAAO,EAAA,GAEpE,GAAe,iBAAiB,GAAiB,EAAA;UAAA;AI3KpC,sBACb,IACA,IACA,IAAA;AAEA,gBAAI,KAAQ,GAAA,GACN,KAAY,GAAM,aAAA;AAExB,eAAM,MAAM,uBAAuB,GAAA,IAAQ;AAE3C,gBAAM,KAAY,GAAU,QACtB,KAAgB,GAAM,eACxB,KAAuB,GACvB,KAAuB;AAO3B,gBADA,KAAQ,GAAA,GACJ,cAAqB;AACvB,kBAAI,KAAgB;AAClB,uBAAO,KAAuB;AAC5B,qBAAoB,MAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,MAAwB;;AAG1B,uBAAO,KAAuB;AAC5B,qBAAoB,MAClB,GAAI,GAAU,QAChB,MAAwB;qBAGnB,cAAqB;AAC9B,qBAAO,KAAuB;AAC5B,mBAAoB,MAClB,GAAI,GAAU,QAChB,MAAwB;qBAEjB,KAAgB;AACzB,qBAAO,KAAuB;AAC5B,mBAAoB,MAClB,GAAI,GAAU,QAAA,CAA2B,KAC3C,MAAwB;;AAG1B,qBAAO,KAAuB;AAC5B,mBAAoB,MAClB,GAAI,GAAU,QAChB,MAAwB;AAI5B,eAAM,MAAM,2CAA2C,GAAA,IAAQ;UAAA;ACtDlD,sBACb,IACA,IACA,IAAA;AAEA,gBAAI,KAAQ,GAAA,GACN,KAAY,GAAM,aAAA;AAExB,eAAM,MAAM,uBAAuB,GAAA,IAAQ;AAE3C,gBAAM,KAAY,GAAU,QAExB,KAAuB,GACvB,KAAuB;AAQ3B,iBAFA,KAAQ,GAAA,GAED,KAAuB;AAC5B,iBAAoB,MAAwB,GAC1C,GAAU,KAAA,GAEZ,MAAwB;AAG1B,eAAM,MAAM,2CAA2C,GAAA,IAAQ;UAAA;AClClD,sBACb,IACA,IACA,IAAA;AAEA,gBAAI,KAAQ,GAAA,GACN,KAAY,GAAM,aAAA;AAExB,eAAM,MAAM,uBAAuB,GAAA,IAAQ;AAE3C,gBAII,IAJE,KAAY,GAAU,QACtB,KAAgB,GAAM,eACxB,KAAuB,GACvB,KAAuB;AAQ3B,gBADA,KAAQ,GAAA,GACJ,cAAqB;AACvB,kBAAI,KAAgB;AAClB,uBAAO,KAAuB;AAC5B,uBAAa,GAAI,GAAU,QAAA,CAA2B,KACtD,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B;;AAGhD,uBAAO,KAAuB;AAC5B,uBAAa,GAAI,GAAU,QAC3B,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B;qBAGzC,cAAqB;AAC9B,qBAAO,KAAuB;AAC5B,qBAAa,GAAI,GAAU,QAC3B,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B;qBAEvC,KAAgB;AACzB,qBAAO,KAAuB;AAC5B,qBAAa,GAAI,GAAU,QAAA,CAA2B,KACtD,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B;;AAGhD,qBAAO,KAAuB;AAC5B,qBAAa,GAAI,GAAU,QAC3B,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B,IAC9C,GAAoB,QAA0B;AAIlD,eAAM,MAAM,2CAA2C,GAAA,IAAQ;UAAA;ACvElD,sBAAU,IAAQ,IAAA;AAE/B,mBAAA,CAAK,MAAA,CAAM,MAAA,CAAA,EAIN,MAAA,CAAM,OAKJ,GAAE,OAAO,GAAE;UAAA;ACJL,sBACb,IACA,IACA,IAAA;AAGA,mBAAA,AACE,GAAM,cADR,UAEE,GAAM,UAAU,iBAAiB,GAAS,IAAI,gBAC9C,GAAM,UAAU,gBAAgB,GAAS,IAAI,eAC7C,GAAW,GAAM,UAAU,aAAa,GAAS,WAAA,KACjD,GAAW,GAAM,UAAU,QAAQ,GAAS,MAAA,KAC5C,GAAM,UAAU,WAAW,GAAS,UAAA,AACpC,OADoC,QCnBzB,UACb,IACA,IAAA;AAEA,kBAAA,CAyBF,SAAgB,IAAA;AAId,uBAFE,GAAS,UAAU,GAAS,OAAO,OAAO,GAAS,OAAO,IAAI,SAAS,KAAA,AAItE,GAAS,IAAI,gBAJyD,UAIzD,AACZ,GAAS,IAAI,iBADD;cACC,EAhCN,EAAA,GAAX;AAIA,oBAAM,KAAS,GAAM,gBAAgB,GAAM,QAAQ,GAAM,WACnD,KAAS,GAAM,gBAAgB,GAAM,QAAQ,GAAM,WACnD,KAAK,KAAS,IACd,KAAM,MAAS,MAAU;AAAA,gBAE3B,GAAS,QAFkB,SAG7B,GAAS,MAAM,EACb,aAAa,IACb,cAAc,GAAA,IAGhB,IAAS,IAAI,cAAc,IAC3B,GAAS,IAAI,eAAe;cAAA;YAAA,EDKf,IAAU,EAAA,GEhBZ,SACb,IACA,IACA,IACA,IACA,IACA,IAAA;AAEA,kBAAM,KAAgB,GAAM,eACtB,KAAgB,GAAM,eACtB,KAAS,KAAK,IAAI,IAAe,CAAA;AAEvC,kBAAA,AAAI,GAAM,cAAV,QAAmC;AACjC,oBAAM,KAAS,KAAgB,KAAS;AAExC,mBAAM,YAAY,CAAA,GAClB,GAAM,UAAU,WAAW,IAAI,kBAAkB,EAAA;cAAA;AAGnD,kBAAM,KAAM,GAAM,UAAU,UAEtB,KCMO,SACb,IACA,IACA,IAAA;AAEA,uBAAI,KA/BN,SAAsC,IAAA;AACpC,sBAAM,KAAW,GAAY,IAAI,IAC3B,KAAW,GAAY,IAAI,GAAY,IAAI,SAAS,IACpD,KAAiB,GAAY,mBAAmB,GAAY,IAAI;AAEtE,yBAAO,SAAC,IAAA;AACN,2BAAI,KAAmB,GAAY,mBAC1B,KACE,MAAoB,KACtB,KAGF,GAAY,IAAI;kBAAA;gBAAA,EAoBa,EAAA,IApCxC,SAAmC,IAAO,IAAA;AACxC,yBAAO,SAAC,IAAA;AAAD,2BAAsB,KAAmB,KAAQ;kBAAA;gBAAA,EAsCvB,IAAO,EAAA;cAAA,EDfV,GAAM,OAAO,GAAM,WAAW,EAAA,GACtD,KAAS,GAAU,IAAa,IAAc,EAAA;AAEpD,kBAAA,AAAI,OAAJ;AACE,yBACM,KAAc,IAClB,MAAe,IACf;AAEA,qBAAI,KAAA,CAAe,MAAU,MAAM,GAAO,GAAO,EAAA,CAAA;;AAGnD,yBACM,KAAc,IAClB,MAAe,IACf;AAEA,qBAAI,KAAA,CAAe,MAAU,GAAO,GAAO,EAAA,CAAA;YAAA,EFlB7C,IACA,GAAS,IAAI,aACb,GAAS,IAAI,cACb,GAAS,QACT,GAAS,aACT,GAAS,MAAA,GAGX,GAAM,UAAU,cAAc,GAAS,IAAI,aAC3C,GAAM,UAAU,eAAe,GAAS,IAAI,cAC5C,GAAM,UAAU,SAAS,GAAS,QAClC,GAAM,UAAU,SAAS,GAAS,QAClC,GAAM,UAAU,cAAc,GAAS,cAnB9B,GAAM,UAAU;UAAA;AIyFpB,sBACL,IACA,IAAA;AAEA,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MACR,2DAAA;AAIJ,gBAAM,KAAQ,GAAe;AAE7B,gBAAA,AAAI,OAAJ;AACE,oBAAM,IAAI,MAAM,wDAAA;AAIlB,gBAAM,KAAU,GAAe,OAAO,WAAW,IAAA;AAEjD,eAAQ,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAGpC,GAAQ,YAAY,SACpB,GAAQ,SACN,GACA,GACA,GAAe,OAAO,OACtB,GAAe,OAAO,MAAA,GAIxB,GAAQ,wBAAA,CAAyB,GAAe,SAAS,kBAGzD,GAA2B,IAAgB,EAAA;AAE3C,gBAAM,KArIR,SACE,IACA,IACA,IAAA;AAEmB,kBADnB,KAAA,CACmB,WAAA,SAAA,KAAA,AAAA,UAAA,OAAA,WAAA,UAAA,IACb,KAAA,AACJ,GAAe,eAAe,wBAD1B;AAGD,iBAAe,eAAe,gBAAA,CAAgB,MACjD,IAAe,eAAe,eAC5B,SAAS,cAAc,QAAA,GACzB,GAAuB,IAAgB,EAAA;AAGzC,kBAAM,KAAe,GAAe,eAAe;AAEnD,kBAAA,AACE,GAA0B,IAAgB,EAAA,MAD5C,SAC4C,AAC1C,OAD0C;AAG1C,uBAAO;AAOP,iBAAa,UAAU,GAAM,SAC7B,GAAa,WAAW,GAAM,UAE9B,GAAuB,IAAgB,EAAA,GAGzC,GAAM,QAAQ,GAAM,SAAS,CAAA;AAE7B,kBAAM,KAAmB,GAAe,eAAe,kBACjD,KAAsB,GAAe,eAAe,qBAEtD,KAAQ,GAAA;AACZ,iBAAM,MAAM,sBAAsB,GAAA,IAAQ;AAE1C,kBAAQ,KAAa,GAAb;AAMR,kBAA0B,AAAtB,GAAS,aAAa,MAAM;AAC9B,oBAAA,KAAsC,GAAS,KAAvC,KAAR,GAAQ,aAAa,KAArB,GAAqB,cACf,KAAU,KAAe,KAAc,GAGvC,KAA2B,MAFjB,MAAe,KAAc,IACrB;AAcxB,mBACE,IAVE,GAAS,SACS,SAAC,IAAA;AAAD,yBAClB,MAAO,MAAQ,MAAW;gBAAA,IAGR,SAAC,IAAA;AAAD,yBACjB,MAAQ,MAAW;gBAAA,GAMtB,GAAiB,IAAA;cAAA,OAEd;AAEL,oBAAM,KAAM,GAAO,IAAO,IAAU,EAAA;AAEhC,qBACF,GAAiC,IAAO,IAAK,GAAiB,IAAA,IAE9D,GAAqC,IAAO,IAAK,GAAiB,IAAA;cAAA;AAQtE,qBAJA,KAAQ,GAAA,GACR,GAAoB,aAAa,IAAkB,GAAG,CAAA,GACtD,GAAM,MAAM,uBAAuB,GAAA,IAAQ,IAEpC;YAAA,EA+C8B,IAAgB,IAAO,EAAA,GAEtD,KAAK,GAAe,SAAS,cAAc,KAAK,IAAI,GACpD,KAAK,GAAe,SAAS,cAAc,KAAK,IAAI,GACpD,KAAQ,GAAe,SAAS,cAAc,KAAK,IAAI,IACvD,KAAS,GAAe,SAAS,cAAc,KAAK,IAAI;AAE9D,eAAQ,UAAU,IAAc,IAAI,IAAI,IAAO,IAAQ,GAAG,GAAG,IAAO,EAAA,GAEpE,GAAe,iBAAiB,GAAiB,EAAA;UAAA;ACpJnD,sBAAkB,IAAK,IAAK,IAAA;AAC1B,gBAAI,KAAM;AACR,oBAAM,IAAI,MAAM,0BAAA;AAGlB,gBAAM,KAAM,CAAA;AAEZ,gBAAY,AAAR,OAAQ;AAKV,qBAJA,GAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK,IAEF;AAGT,gBAAM,KAAU,KAAK,MAAY,IAAN,EAAA,GACrB,KAAO,IAAI,KAAM,IACjB,KAAK,KAAO,KAAI,KAChB,KAAK,KAAO,KAAI,KAAM,KACtB,KAAK,KAAO,KAAI,KAAO,KAAI;AAEjC,oBAAQ;mBAED;mBACA;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;AACT;mBAGG;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;AACT;mBAGG;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;AACT;mBAGG;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;AACT;mBAGG;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;AACT;mBAGG;AACH,mBAAI,KAAK,IACT,GAAI,KAAK,IACT,GAAI,KAAK;;AAIb,mBAAO;UAAA;AAAA,cA+BH,KAAA,WAAA;AAmBJ,0BAAA;AAAc,iBAAA,MAAA,EAAA,GAAA,GAAA,MAAA,kBAAA,MAAA,GAAA,GAAA,MAAA,QAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,YAAA,MAAA,GAAA,GAAA,MAAA,mBAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,YAAA,MAAA,GAAA,GAAA,MAAA,mBAAA,MAAA,GAAA,GAAA,MAAA,sBAAA,MAAA,GAAA,GAAA,MAAA,mBAAA,MAAA,GAAA,GAAA,MAAA,sBAAA,MAAA,GAAA,GAAA,MAAA,cAAA,MAAA,GAAA,GAAA,MAAA,SAAA,MAAA,GACZ,KAAK,iBAAiB,KACtB,KAAK,OAAO,UACZ,KAAK,aAAa,CAAC,GAAG,GAAA,GACtB,KAAK,WAAW,CAAC,GAAG,OAAA,GACpB,KAAK,kBAAkB,CAAC,GAAG,CAAA,GAC3B,KAAK,aAAa,CAAC,GAAG,CAAA,GACtB,KAAK,aAAa,CAAC,GAAG,CAAA,GACtB,KAAK,WAAW,CAAC,KAAK,GAAG,GAAG,GAAA,GAC5B,KAAK,kBAAkB,CAAC,GAAG,GAAG,GAAG,GAAA,GACjC,KAAK,qBAAA,MACL,KAAK,kBAAkB,CAAC,KAAK,KAAK,KAAK,GAAA,GACvC,KAAK,qBAAA,MACL,KAAK,aAAa,CAAC,GAAG,GAAA,GACtB,KAAK,QAAQ,CAAA;YAAA;AAAA,mBAAA,GAAA,IAAA,CAAA,EAAA,KAAA,0BAAA,OASf,SAA8B,IAAA;AAC5B,mBAAK,iBAAiB;YAAA,EAAA,GAAA,EAAA,KAAA,WAAA,OASxB,SAAe,IAAA;AACb,mBAAK,OAAO;YAAA,EAAA,GAAA,EAAA,KAAA,iBAAA,OAYd,SAAqB,IAAO,IAAA;AAC1B,mBAAK,WAAW,KAAK,IACrB,KAAK,WAAW,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,eAAA,OAUvB,SAAmB,IAAO,IAAA;AACxB,mBAAK,SAAS,KAAK,IACnB,KAAK,SAAS,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAUrB,SAA0B,IAAO,IAAA;AAC/B,mBAAK,gBAAgB,KAAK,IAC1B,KAAK,gBAAgB,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,iBAAA,OAU5B,SAAqB,IAAO,IAAA;AAE1B,mBAAK,WAAW,KAAK,IACrB,KAAK,WAAW,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OAUvB,SAAgB,IAAO,IAAA;AACrB,mBAAK,WAAW,KAAK,IACrB,KAAK,WAAW,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,iBAAA,OAUvB,SAAqB,IAAO,IAAA;AAE1B,mBAAK,WAAW,KAAK,IACrB,KAAK,WAAW,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OAUvB,SAAgB,IAAA;AACd,qBAAO,KAAK,SAAS,EAAA;YAAA,EAAA,GAAA,EAAA,KAAA,SAAA,OAUvB,SAAa,IAAA;AACX,kBAAA,CAAI,MAAK,MAAM,SAAS,MAAM,IAA9B;AAKA,qBAAK,QAAQ,CAAA;AAEb,oBAEI,IAAM,IAAM,IAAM,IAFhB,KAAW,KAAK,iBAAiB;AAInC,qBACF,MAAQ,MAAK,SAAS,KAAK,KAAK,SAAS,MAAM,IAC/C,KAAQ,MAAK,gBAAgB,KAAK,KAAK,gBAAgB,MAAM,IAC7D,KAAQ,MAAK,WAAW,KAAK,KAAK,WAAW,MAAM,IACnD,KAAQ,MAAK,WAAW,KAAK,KAAK,WAAW,MAAM,MAEnD,KAAO,KAAO,KAAO,KAAO;AAG9B,yBAAS,KAAI,GAAG,MAAK,IAAU,MAAK;AAClC,sBAAM,KAAM,KAAK,SAAS,KAAK,KAAI,IAC7B,KAAM,KAAK,gBAAgB,KAAK,KAAI,IACpC,KAAM,KAAK,WAAW,KAAK,KAAI,IAC/B,KAAQ,KAAK,WAAW,KAAK,KAAI,IAEjC,KAAM,GAAS,IAAK,IAAK,EAAA,GACzB,KAAiB,CAAC,GAAG,GAAG,GAAG,CAAA;AAEjC,0BAAQ,KAAK;yBACN;AACH,yBAAO,KAAK,KAAK,MACf,QAAS,KAAM,KAAK,IAAK,KAAM,GAAI,MAAM,KAAK,EAAA,EAAA,GAEhD,GAAO,KAAK,KAAK,MACf,QAAS,KAAM,KAAK,IAAK,KAAM,GAAI,MAAM,KAAK,EAAA,EAAA,GAEhD,GAAO,KAAK,KAAK,MACf,QAAS,KAAM,KAAK,IAAK,KAAM,GAAI,MAAM,KAAK,EAAA,EAAA,GAEhD,GAAO,KAAK,KAAK,MAAc,MAAR,EAAA;AACvB;yBACG;AACH,yBAAO,KAAK,KAAK,MAAe,MAAT,GAAI,KAAW,GAAA,GACtC,GAAO,KAAK,KAAK,MAAe,MAAT,GAAI,KAAW,GAAA,GACtC,GAAO,KAAK,KAAK,MAAe,MAAT,GAAI,KAAW,GAAA,GACtC,GAAO,KAAK,KAAK,MAAc,MAAR,KAAc,GAAA;AACrC;yBACG;AACH,yBAAO,KAAK,KAAK,MAA0B,MAApB,KAAK,KAAK,GAAI,EAAA,IAAY,GAAA,GACjD,GAAO,KAAK,KAAK,MAA0B,MAApB,KAAK,KAAK,GAAI,EAAA,IAAY,GAAA,GACjD,GAAO,KAAK,KAAK,MAA0B,MAApB,KAAK,KAAK,GAAI,EAAA,IAAY,GAAA,GACjD,GAAO,KAAK,KAAK,MAAyB,MAAnB,KAAK,KAAK,EAAA,IAAe,GAAA;AAChD;;AAEA,4BAAM,IAAI,MAAJ,uBAAA,OAAiC,KAAK,MAAtC,GAAA,CAAA;;AAGV,uBAAK,MAAM,KAAK,EAAA;gBAAA;AAGlB,qBAAK,mBAAA;cAAA;YAAA,EAAA,GAAA,EAAA,KAAA,sBAAA,OAQP,WAAA;AACE,kBAAM,KAAiB,KAAK,gBACtB,KAAuB,KA1UD,GA2UtB,KAAuB,KA1UD,GA2UtB,KAAgB,KA1UF;AA6UhB,mBAAK,sBAAyC,AAAnB,OAAmB,IAChD,KAAK,MAAM,MAAwB,KAAK,kBAGxC,KAAK,MAAM,MAAwB,KAAK,MAAM,IAI5C,KAAK,sBAAyC,AAAnB,OAAmB,IAChD,KAAK,MAAM,MAAwB,KAAK,kBAGxC,KAAK,MAAM,MAAwB,KAAK,MAAM,KAAiB,IAIjE,KAAK,MAAM,MAAiB,KAAK;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OAUnC,SAAiB,IAAA;AACf,kBAAM,KAAQ,KAAK,SAAS,EAAA;AAE5B,kBAAI,KAAQ;AACV,uBAAO,KAAK;AACP,kBAAc,AAAV,OAAU,GAAV;AACT,oBAAI,KAAK,sBAAsB,KAAI,KAAK,WAAW;AACjD,yBAAO,KAAK;cAAA,WAEL,OAAU,KAAK,iBAAiB,KACrC,KAAK,sBAAsB,KAAI,KAAK,WAAW;AACjD,uBAAO,KAAK;AAIhB,qBAAO,KAAK,MAAM;YAAA,EAAA,GAAA,EAAA,KAAA,YAAA,OASpB,SAAiB,IAAA;AACf,kBAAM,KAAI,EACR,OAAO,CAAA,GACP,UAAU,KAAK,iBAAiB,GAChC,OAAA,CAAQ,KAAK,WAAW,IACxB,OAAO,EAAA;AAaT,kBAVI,KAAK,WAAW,MAAM,KAAK,WAAW,KACxC,GAAE,QAAQ,OAAO,YAEjB,GAAE,QAAQ,GAAE,WAAY,MAAK,WAAW,KAAK,KAAK,WAAW,KAG/D,GAAE,MAAM,KAAK,KAAK,WAAW,IAC7B,GAAE,MAAM,KAAK,KAAK,WAAW,IAGzB,MAAM,EAAA;AAER,uBAAA;AAIF,kBAAI,KAjUR,SAA+B,IAAG,IAAA;AAChC,oBAAI;AAWJ,uBAPE,KADE,KAAI,GAAE,MAAM,KACL,GAAE,WA7FiB,IA6FoB,MACvC,KAAI,GAAE,MAAM,KACZ,GAAE,WA9FiB,IA8FoB,MAEtC,MAAI,GAAE,SAAS,GAAE,OAGtB,KAAK,MAAM,EAAA;cAAA,EAqTkB,IAAG,EAAA;AAUrC,qBANI,OAAU,KAAK,iBA7ZS,IA8Z1B,KAAQ,IACC,OAAU,KAAK,iBA9ZE,KA+Z1B,MAAQ,KAAK,iBAAiB,IAGzB;YAAA,EAAA,GAAA,EAAA,KAAA,iBAAA,OAWT,SAAqB,IAAO,IAAA;AAO1B,kBALyB,AAArB,UAAU,WAAW,KACvB,MAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAA,IAI3C,KAAQ;AACV,sBAAM,IAAI,MAAJ,iDAAA,OAC6C,IAD7C,GAAA,CAAA;AAKJ,oBAAS,KAAK,kBAChB,IAAI,MAAJ,SAAA,OACW,IADX,wCAAA,EAAA,OACyD,KAAK,cAAA,CAAA,GAIhE,KAAK,MAAM,MAAS,IAEN,AAAV,OAAU,KAAK,OAAU,KAAK,iBAAiB,KAOjD,KAAK,mBAAA;YAAA,EAAA,CAAA,CAAA,GAAA;UAAA,EA9VL,GAmWN,KAAA,IC4iCA,KAr/CgD,EAC9C,SAAS,EACP,MAAM,YACN,aAAa,KACb,QAAQ,CACN,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,IAAI,GAAG,GAAG,GAAA,GACX,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,CAAA,EAAA,GAGpB,KAAK,EACH,MAAM,OACN,WAAW,KACX,QAAQ,CACN,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,IAAI,GAAG,GAAA,GACX,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,IAAI,IAAI,GAAA,GACZ,CAAC,GAAG,KAAK,IAAI,GAAA,GACb,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,GAAG,KAAK,KAAK,GAAA,GACd,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,KAAK,KAAK,GAAA,GACf,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,CAAA,EAAA,GAGpB,cAAc,EACZ,MAAM,kBACN,WAAW,KACX,QAAQ,CACN,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,IAAI,GAAA,GACX,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,GAAG,GAAG,KAAK,GAAA,GACZ,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,IAAI,GAAG,KAAK,GAAA,GACb,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,GAAG,KAAK,GAAA,GACd,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,KAAK,GAAA,GACf,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,IAAI,GAAA,GACd,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,CAAA,EAAA,GAGpB,WAAW,EACT,MAAM,eACN,WAAW,KACX,QAAQ,CACN,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,GAAG,GAAG,GAAG,GAAA,GACV,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,GAAG,IAAI,GAAA,GACZ,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,IAAI,IAAI,KAAK,GAAA,GACd,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,KAAK,KAAK,KAAK,GAAA,GAChB,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,IAAI,IAAI,GAAA,GACb,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,IAAI,KAAK,IAAI,GAAA,GACd,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,IAAI,GAAA,GACf,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,KAAK,GAAG,GAAA,GACd,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,IAAI,GAAG,GAAA,GACb,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GAAG,GAAG,GAAA,GACZ,CAAC,KAAK,GA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",
  "names": []
}
